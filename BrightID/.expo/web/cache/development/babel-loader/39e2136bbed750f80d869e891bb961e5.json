{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useState, useEffect, memo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  containerWithEmoji: {\n    marginTop: 0\n  },\n  containerWithoutEmoji: {\n    marginTop: 5\n  },\n  flagWithSomethingContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  something: {\n    fontSize: 16\n  }\n});\n\nvar FlagText = function FlagText(props) {\n  return React.createElement(CountryText, _extends({}, props, {\n    style: styles.something\n  }));\n};\n\nvar FlagWithSomething = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n      withEmoji = _ref.withEmoji,\n      withCountryNameButton = _ref.withCountryNameButton,\n      withCurrencyButton = _ref.withCurrencyButton,\n      withCallingCodeButton = _ref.withCallingCodeButton,\n      withFlagButton = _ref.withFlagButton,\n      flagSize = _ref.flagSize,\n      placeholder = _ref.placeholder;\n\n  var _useContext = useContext(),\n      translation = _useContext.translation,\n      getCountryInfoAsync = _useContext.getCountryInfoAsync;\n\n  var _useState = useState({\n    countryName: '',\n    currency: '',\n    callingCode: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var countryName = state.countryName,\n      currency = state.currency,\n      callingCode = state.callingCode;\n  useEffect(function () {\n    if (countryCode) {\n      getCountryInfoAsync({\n        countryCode: countryCode,\n        translation: translation\n      }).then(setState).catch(console.warn);\n    }\n  }, [countryCode, withCountryNameButton, withCurrencyButton, withCallingCodeButton]);\n  return React.createElement(View, {\n    style: styles.flagWithSomethingContainer\n  }, countryCode ? React.createElement(Flag, _extends({}, {\n    withEmoji: withEmoji,\n    countryCode: countryCode,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize\n  })) : React.createElement(FlagText, null, placeholder), withCountryNameButton && countryName ? React.createElement(FlagText, null, countryName + ' ') : null, withCurrencyButton && currency ? React.createElement(FlagText, null, \"(\" + currency + \") \") : null, withCallingCodeButton && callingCode ? React.createElement(FlagText, null, \"+\" + callingCode) : null);\n});\nexport var FlagButton = function FlagButton(_ref2) {\n  var withEmoji = _ref2.withEmoji,\n      withCountryNameButton = _ref2.withCountryNameButton,\n      withCallingCodeButton = _ref2.withCallingCodeButton,\n      withCurrencyButton = _ref2.withCurrencyButton,\n      withFlagButton = _ref2.withFlagButton,\n      countryCode = _ref2.countryCode,\n      containerButtonStyle = _ref2.containerButtonStyle,\n      onOpen = _ref2.onOpen,\n      placeholder = _ref2.placeholder;\n\n  var _useTheme = useTheme(),\n      flagSize = _useTheme.flagSizeButton;\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onOpen\n  }, React.createElement(View, {\n    style: [styles.container, withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji, containerButtonStyle]\n  }, React.createElement(FlagWithSomething, _extends({}, {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize,\n    placeholder: placeholder\n  }))));\n};\nFlagButton.defaultProps = {\n  withEmoji: true,\n  withCountryNameButton: false,\n  withCallingCodeButton: false,\n  withCurrencyButton: false,\n  withFlagButton: true\n};","map":{"version":3,"sources":["../src/FlagButton.tsx"],"names":["styles","StyleSheet","container","alignItems","justifyContent","containerWithEmoji","marginTop","containerWithoutEmoji","flagWithSomethingContainer","flexDirection","flexWrap","something","fontSize","FlagText","React","style","FlagWithSomething","memo","countryCode","withEmoji","withCountryNameButton","withCurrencyButton","withCallingCodeButton","withFlagButton","flagSize","placeholder","translation","getCountryInfoAsync","useContext","state","setState","useState","countryName","currency","callingCode","useEffect","console","FlagButton","containerButtonStyle","onOpen","useTheme","activeOpacity","onPress"],"mappings":";;AAAA,OAAA,KAAA,IAAA,QAAA,EAAA,SAAA,EAAA,IAAA,QAAA,OAAA;;;;AAUA,SAAA,IAAA;AACA,SAAA,UAAA;AACA,SAAA,WAAA;AACA,SAAA,QAAA;AAEA,IAAMA,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,UAAU,EADD,YAAA;IAETC,cAAc,EAHe;EACpB,CADoB;EAK/BC,kBAAkB,EAAE;IAClBC,SAAS,EANoB;EAKX,CALW;EAQ/BC,qBAAqB,EAAE;IACrBD,SAAS,EAToB;EAQR,CARQ;EAW/BE,0BAA0B,EAAE;IAC1BC,aAAa,EADa,KAAA;IAE1BC,QAAQ,EAFkB,MAAA;IAG1BP,UAAU,EAdmB;EAWH,CAXG;EAgB/BQ,SAAS,EAAE;IAAEC,QAAQ,EAhBvB;EAgBa;AAhBoB,CAAlBX,CAAf;;AA8BA,IAAMY,QAAQ,GAARA,SAAAA,QAAAA,CAAW,KAAXA,EAAW;EAAA,OACfC,KAAAA,CAAAA,aAAAA,CAAAA,WAAAA,EAAY,QAAA,CAAA,EAAA,EAAA,KAAA,EAAU;IAAEC,KAAK,EAAEf,MAAM,CADtB;EACO,CAAV,CAAZc,CADe;AAAjB,CAAA;;AAIA,IAAME,iBAAiB,GAAGC,IAAI,CAC5B,UAAA,IAAA,EAS4B;EAR1BC,IAAAA,WAQ0B,GAAA,IAAA,CAR1BA,WAAAA;EAAAA,IACAC,SAO0B,GAAA,IAAA,CAP1BA,SADAD;EAAAA,IAEAE,qBAM0B,GAAA,IAAA,CAN1BA,qBAFAF;EAAAA,IAGAG,kBAK0B,GAAA,IAAA,CAL1BA,kBAHAH;EAAAA,IAIAI,qBAI0B,GAAA,IAAA,CAJ1BA,qBAJAJ;EAAAA,IAKAK,cAG0B,GAAA,IAAA,CAH1BA,cALAL;EAAAA,IAMAM,QAE0B,GAAA,IAAA,CAF1BA,QANAN;EAAAA,IAOAO,WAC0B,GAAA,IAAA,CAD1BA,WAPAP;;EASA,IAAA,WAAA,GAA6CU,UAA7C,EAAA;EAAA,IAAQF,WAAR,GAAA,WAAA,CAAA,WAAA;EAAA,IAAqBC,mBAArB,GAAA,WAAA,CAAA,mBAAA;;EACA,IAAA,SAAA,GAA0BI,QAAQ,CAAC;IACjCC,WAAW,EADsB,EAAA;IAEjCC,QAAQ,EAFyB,EAAA;IAGjCC,WAAW,EAHb;EAAmC,CAAD,CAAlC;EAAA,IAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;EAAA,IAAOL,KAAP,GAAA,UAAA,CAAA,CAAA,CAAA;EAAA,IAAcC,QAAd,GAAA,UAAA,CAAA,CAAA,CAAA;;EAKA,IAAQE,WAAR,GAA+CH,KAA/C,CAAA,WAAA;EAAA,IAAqBI,QAArB,GAA+CJ,KAA/C,CAAA,QAAA;EAAA,IAA+BK,WAA/B,GAA+CL,KAA/C,CAAA,WAAA;EACAM,SAAS,CAAC,YAAK;IACb,IAAA,WAAA,EAAiB;MACfR,mBAAmB,CAAC;QAAET,WAAW,EAAb,WAAA;QAAeQ,WAAW,EAA9CC;MAAoB,CAAD,CAAnBA,CAAAA,IAAAA,CAAAA,QAAAA,EAAAA,KAAAA,CAESS,OAAO,CAFhBT,IAAAA;IAIH;EANQ,CAAA,EAMN,CAAA,WAAA,EAAA,qBAAA,EAAA,kBAAA,EANHQ,qBAMG,CANM,CAATA;EAaA,OACErB,KAAAA,CAAAA,aAAAA,CAAAA,IAAAA,EAAK;IAACC,KAAK,EAAEf,MAAM,CAAnBc;EAAK,CAALA,EACGI,WAAW,GACVJ,KAAAA,CAAAA,aAAAA,CAAAA,IAAAA,EAAK,QAAA,CAAA,EAAA,EACC;IAAEK,SAAS,EAAX,SAAA;IAAaD,WAAW,EAAxB,WAAA;IAA0BK,cAAc,EAAxC,cAAA;IAA0CC,QAAQ,EAF9C;EAEJ,CADD,CAALV,CADU,GAKVA,KAAAA,CAAAA,aAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EANJA,WAMIA,CANJA,EASGM,qBAAqB,IAArBA,WAAAA,GACCN,KAAAA,CAAAA,aAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAWkB,WAAW,GADvBZ,GACCN,CADDM,GATHN,IAAAA,EAYGO,kBAAkB,IAAlBA,QAAAA,GACCP,KAAAA,CAAAA,aAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,MAAAA,QAAAA,GADDO,IACCP,CADDO,GAZHP,IAAAA,EAeGQ,qBAAqB,IAArBA,WAAAA,GACCR,KAAAA,CAAAA,aAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,MADDQ,WACCR,CADDQ,GAhBL,IACER,CADF;AA/BJ,CAA8B,CAA9B;AAmEA,OAAO,IAAMuB,UAAU,GAAVA,SAAAA,UAAAA,CAAa,KAAbA,EAUS;EATpBlB,IAAAA,SASoB,GAAA,KAAA,CATpBA,SAAAA;EAAAA,IACAC,qBAQoB,GAAA,KAAA,CARpBA,qBADAD;EAAAA,IAEAG,qBAOoB,GAAA,KAAA,CAPpBA,qBAFAH;EAAAA,IAGAE,kBAMoB,GAAA,KAAA,CANpBA,kBAHAF;EAAAA,IAIAI,cAKoB,GAAA,KAAA,CALpBA,cAJAJ;EAAAA,IAKAD,WAIoB,GAAA,KAAA,CAJpBA,WALAC;EAAAA,IAMAmB,oBAGoB,GAAA,KAAA,CAHpBA,oBANAnB;EAAAA,IAOAoB,MAEoB,GAAA,KAAA,CAFpBA,MAPApB;EAAAA,IAQAM,WACoB,GAAA,KAAA,CADpBA,WARAN;;EAUA,IAAA,SAAA,GAAqCqB,QAArC,EAAA;EAAA,IAAwBhB,QAAxB,GAAA,SAAA,CAAA,cAAA;;EACA,OACEV,KAAAA,CAAAA,aAAAA,CAAAA,gBAAAA,EAAiB;IAAC2B,aAAa,EAAd,GAAA;IAAqBC,OAAO,EAA7C5B;EAAiB,CAAjBA,EACEA,KAAAA,CAAAA,aAAAA,CAAAA,IAAAA,EAAK;IACHC,KAAK,EAAE,CACLf,MAAM,CADD,SAAA,EAELmB,SAAS,GAAGnB,MAAM,CAAT,kBAAA,GAA+BA,MAAM,CAFzC,qBAAA,EADTc,oBACS;EADJ,CAALA,EAOEA,KAAAA,CAAAA,aAAAA,CAAAA,iBAAAA,EAAkB,QAAA,CAAA,EAAA,EACZ;IACFI,WAAW,EADT,WAAA;IAEFC,SAAS,EAFP,SAAA;IAGFC,qBAAqB,EAHnB,qBAAA;IAIFE,qBAAqB,EAJnB,qBAAA;IAKFD,kBAAkB,EALhB,kBAAA;IAMFE,cAAc,EANZ,cAAA;IAOFC,QAAQ,EAPN,QAAA;IAQFC,WAAW,EAlBrB;EAUY,CADY,CAAlBX,CAPFA,CADFA,CADF;AAZK,CAAA;AAsCPuB,UAAU,CAAVA,YAAAA,GAA0B;EACxBlB,SAAS,EADe,IAAA;EAExBC,qBAAqB,EAFG,KAAA;EAGxBE,qBAAqB,EAHG,KAAA;EAIxBD,kBAAkB,EAJM,KAAA;EAKxBE,cAAc,EALhBc;AAA0B,CAA1BA","sourceRoot":"","sourcesContent":["import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";import React,{useState,useEffect,memo}from'react';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{Flag}from\"./Flag\";import{useContext}from\"./CountryContext\";import{CountryText}from\"./CountryText\";import{useTheme}from\"./CountryTheme\";var styles=StyleSheet.create({container:{alignItems:'flex-start',justifyContent:'flex-start'},containerWithEmoji:{marginTop:0},containerWithoutEmoji:{marginTop:5},flagWithSomethingContainer:{flexDirection:'row',flexWrap:'wrap',alignItems:'center'},something:{fontSize:16}});var FlagText=function FlagText(props){return React.createElement(CountryText,_extends({},props,{style:styles.something}));};var FlagWithSomething=memo(function(_ref){var countryCode=_ref.countryCode,withEmoji=_ref.withEmoji,withCountryNameButton=_ref.withCountryNameButton,withCurrencyButton=_ref.withCurrencyButton,withCallingCodeButton=_ref.withCallingCodeButton,withFlagButton=_ref.withFlagButton,flagSize=_ref.flagSize,placeholder=_ref.placeholder;var _useContext=useContext(),translation=_useContext.translation,getCountryInfoAsync=_useContext.getCountryInfoAsync;var _useState=useState({countryName:'',currency:'',callingCode:''}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var countryName=state.countryName,currency=state.currency,callingCode=state.callingCode;useEffect(function(){if(countryCode){getCountryInfoAsync({countryCode:countryCode,translation:translation}).then(setState).catch(console.warn);}},[countryCode,withCountryNameButton,withCurrencyButton,withCallingCodeButton]);return React.createElement(View,{style:styles.flagWithSomethingContainer},countryCode?React.createElement(Flag,_extends({},{withEmoji:withEmoji,countryCode:countryCode,withFlagButton:withFlagButton,flagSize:flagSize})):React.createElement(FlagText,null,placeholder),withCountryNameButton&&countryName?React.createElement(FlagText,null,countryName+' '):null,withCurrencyButton&&currency?React.createElement(FlagText,null,\"(\"+currency+\") \"):null,withCallingCodeButton&&callingCode?React.createElement(FlagText,null,\"+\"+callingCode):null);});export var FlagButton=function FlagButton(_ref2){var withEmoji=_ref2.withEmoji,withCountryNameButton=_ref2.withCountryNameButton,withCallingCodeButton=_ref2.withCallingCodeButton,withCurrencyButton=_ref2.withCurrencyButton,withFlagButton=_ref2.withFlagButton,countryCode=_ref2.countryCode,containerButtonStyle=_ref2.containerButtonStyle,onOpen=_ref2.onOpen,placeholder=_ref2.placeholder;var _useTheme=useTheme(),flagSize=_useTheme.flagSizeButton;return React.createElement(TouchableOpacity,{activeOpacity:0.7,onPress:onOpen},React.createElement(View,{style:[styles.container,withEmoji?styles.containerWithEmoji:styles.containerWithoutEmoji,containerButtonStyle]},React.createElement(FlagWithSomething,_extends({},{countryCode:countryCode,withEmoji:withEmoji,withCountryNameButton:withCountryNameButton,withCallingCodeButton:withCallingCodeButton,withCurrencyButton:withCurrencyButton,withFlagButton:withFlagButton,flagSize:flagSize,placeholder:placeholder}))));};FlagButton.defaultProps={withEmoji:true,withCountryNameButton:false,withCallingCodeButton:false,withCurrencyButton:false,withFlagButton:true};"]},"metadata":{},"sourceType":"module"}