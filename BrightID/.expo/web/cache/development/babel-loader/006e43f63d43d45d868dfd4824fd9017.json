{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _constants = require(\"./constants\");\n\nvar _normalizeValueWithProperty = _interopRequireDefault(require(\"./normalizeValueWithProperty\"));\n\nvar emptyObject = {};\nvar supportsCSS3TextDecoration = !_ExecutionEnvironment.canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n  var value = transform[type];\n\n  if (type === 'matrix' || type === 'matrix3d') {\n    return type + \"(\" + value.join(',') + \")\";\n  } else {\n    var normalizedValue = (0, _normalizeValueWithProperty.default)(value, type);\n    return type + \"(\" + normalizedValue + \")\";\n  }\n};\n\nvar resolveTransform = function resolveTransform(resolvedStyle, style) {\n  var transform = style.transform;\n\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n\n  resolvedStyle.transform = transform;\n};\n\nvar createReactDOMStyle = function createReactDOMStyle(style) {\n  if (!style) {\n    return emptyObject;\n  }\n\n  var resolvedStyle = {};\n  Object.keys(style).sort().forEach(function (prop) {\n    var value = (0, _normalizeValueWithProperty.default)(style[prop], prop);\n\n    if (value == null) {\n      return;\n    }\n\n    switch (prop) {\n      case 'elevation':\n      case 'overlayColor':\n      case 'resizeMode':\n      case 'tintColor':\n        {\n          break;\n        }\n\n      case 'aspectRatio':\n        {\n          resolvedStyle[prop] = value.toString();\n          break;\n        }\n\n      case 'backgroundClip':\n        {\n          if (value === 'text') {\n            resolvedStyle.backgroundClip = value;\n            resolvedStyle.WebkitBackgroundClip = value;\n          }\n\n          break;\n        }\n\n      case 'flex':\n        {\n          if (value === -1) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = 'auto';\n          } else {\n            resolvedStyle.flex = value;\n          }\n\n          break;\n        }\n\n      case 'font':\n        {\n          resolvedStyle[prop] = value.replace('System', _constants.SYSTEM_FONT_STACK);\n          break;\n        }\n\n      case 'fontFamily':\n        {\n          if (value.indexOf('System') > -1) {\n            var stack = value.split(/,\\s*/);\n            stack[stack.indexOf('System')] = _constants.SYSTEM_FONT_STACK;\n            resolvedStyle[prop] = stack.join(',');\n          } else if (value === 'monospace') {\n            resolvedStyle[prop] = _constants.MONOSPACE_FONT_STACK;\n          } else {\n            resolvedStyle[prop] = value;\n          }\n\n          break;\n        }\n\n      case 'fontVariant':\n        {\n          if (Array.isArray(value) && value.length > 0) {\n            resolvedStyle.fontVariant = value.join(' ');\n          }\n\n          break;\n        }\n\n      case 'textAlignVertical':\n        {\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n          break;\n        }\n\n      case 'textDecorationLine':\n        {\n          if (!supportsCSS3TextDecoration) {\n            resolvedStyle.textDecoration = value;\n          } else {\n            resolvedStyle.textDecorationLine = value;\n          }\n\n          break;\n        }\n\n      case 'transform':\n      case 'transformMatrix':\n        {\n          resolveTransform(resolvedStyle, style);\n          break;\n        }\n\n      case 'writingDirection':\n        {\n          resolvedStyle.direction = value;\n          break;\n        }\n\n      default:\n        {\n          var longFormProperties = _constants.STYLE_SHORT_FORM_EXPANSIONS[prop];\n\n          if (longFormProperties) {\n            longFormProperties.forEach(function (longForm, i) {\n              if (typeof style[longForm] === 'undefined') {\n                resolvedStyle[longForm] = value;\n              }\n            });\n          } else {\n            resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n          }\n        }\n    }\n  });\n  return resolvedStyle;\n};\n\nvar _default = createReactDOMStyle;\nexports.default = _default;","map":{"version":3,"names":["emptyObject","supportsCSS3TextDecoration","canUseDOM","window","CSS","supports","mapTransform","transform","type","Object","keys","value","join","normalizedValue","normalizeValueWithProperty","resolveTransform","resolvedStyle","style","Array","isArray","map","createReactDOMStyle","sort","forEach","prop","toString","backgroundClip","WebkitBackgroundClip","flexGrow","flexShrink","flexBasis","flex","replace","SYSTEM_FONT_STACK","indexOf","stack","split","MONOSPACE_FONT_STACK","length","fontVariant","verticalAlign","textDecoration","textDecorationLine","direction","longFormProperties","STYLE_SHORT_FORM_EXPANSIONS","longForm","i"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/exports/StyleSheet/createReactDOMStyle.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { MONOSPACE_FONT_STACK, SYSTEM_FONT_STACK, STYLE_SHORT_FORM_EXPANSIONS } from './constants';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nconst emptyObject = {};\n\nconst supportsCSS3TextDecoration =\n  !canUseDOM ||\n  (window.CSS != null &&\n    window.CSS.supports != null &&\n    (window.CSS.supports('text-decoration-line', 'none') ||\n      window.CSS.supports('-webkit-text-decoration-line', 'none')));\n\n/**\n * Transform\n */\n\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\nconst mapTransform = (transform) => {\n  const type = Object.keys(transform)[0];\n  const value = transform[type];\n  if (type === 'matrix' || type === 'matrix3d') {\n    return `${type}(${value.join(',')})`;\n  } else {\n    const normalizedValue = normalizeValueWithProperty(value, type);\n    return `${type}(${normalizedValue})`;\n  }\n};\n\nconst resolveTransform = (resolvedStyle, style) => {\n  let transform = style.transform;\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n  resolvedStyle.transform = transform;\n};\n\n/**\n * Reducer\n */\n\nconst createReactDOMStyle = (style) => {\n  if (!style) {\n    return emptyObject;\n  }\n\n  const resolvedStyle = {};\n\n  Object.keys(style)\n    .sort()\n    .forEach((prop) => {\n      const value = normalizeValueWithProperty(style[prop], prop);\n\n      // Ignore everything else with a null value\n      if (value == null) {\n        return;\n      }\n\n      switch (prop) {\n        // Ignore some React Native styles\n        case 'elevation':\n        case 'overlayColor':\n        case 'resizeMode':\n        case 'tintColor': {\n          break;\n        }\n\n        case 'aspectRatio': {\n          resolvedStyle[prop] = value.toString();\n          break;\n        }\n\n        // TODO: remove once this issue is fixed\n        // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n        case 'backgroundClip': {\n          if (value === 'text') {\n            resolvedStyle.backgroundClip = value;\n            resolvedStyle.WebkitBackgroundClip = value;\n          }\n          break;\n        }\n\n        // The 'flex' property value in React Native must be a positive integer,\n        // 0, or -1.\n        case 'flex': {\n          if (value === -1) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = 'auto';\n          } else {\n            resolvedStyle.flex = value;\n          }\n          break;\n        }\n\n        case 'font': {\n          resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n          break;\n        }\n\n        case 'fontFamily': {\n          if (value.indexOf('System') > -1) {\n            const stack = value.split(/,\\s*/);\n            stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n            resolvedStyle[prop] = stack.join(',');\n          } else if (value === 'monospace') {\n            resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n          } else {\n            resolvedStyle[prop] = value;\n          }\n          break;\n        }\n\n        case 'fontVariant': {\n          if (Array.isArray(value) && value.length > 0) {\n            resolvedStyle.fontVariant = value.join(' ');\n          }\n          break;\n        }\n\n        case 'textAlignVertical': {\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n          break;\n        }\n\n        case 'textDecorationLine': {\n          // use 'text-decoration' for browsers that only support CSS2\n          // text-decoration (e.g., IE, Edge)\n          if (!supportsCSS3TextDecoration) {\n            resolvedStyle.textDecoration = value;\n          } else {\n            resolvedStyle.textDecorationLine = value;\n          }\n          break;\n        }\n\n        case 'transform':\n        case 'transformMatrix': {\n          resolveTransform(resolvedStyle, style);\n          break;\n        }\n\n        case 'writingDirection': {\n          resolvedStyle.direction = value;\n          break;\n        }\n\n        default: {\n          const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n          if (longFormProperties) {\n            longFormProperties.forEach((longForm, i) => {\n              // The value of any longform property in the original styles takes\n              // precedence over the shortform's value.\n              if (typeof style[longForm] === 'undefined') {\n                resolvedStyle[longForm] = value;\n              }\n            });\n          } else {\n            resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n          }\n        }\n      }\n    });\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}