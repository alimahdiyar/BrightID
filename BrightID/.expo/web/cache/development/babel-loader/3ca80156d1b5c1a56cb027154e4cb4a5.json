{"ast":null,"code":"import * as React from 'react';\nexport default function useKeyedChildListeners() {\n  var _React$useRef = React.useRef({\n    getState: {},\n    beforeRemove: {}\n  }),\n      keyedListeners = _React$useRef.current;\n\n  var addKeyedListener = React.useCallback(function (type, key, listener) {\n    keyedListeners[type][key] = listener;\n    return function () {\n      keyedListeners[type][key] = undefined;\n    };\n  }, [keyedListeners]);\n  return {\n    keyedListeners: keyedListeners,\n    addKeyedListener: addKeyedListener\n  };\n}","map":{"version":3,"sources":["useKeyedChildListeners.tsx"],"names":["keyedListeners","React","getState","beforeRemove","addKeyedListener"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAOA,eAAe,SAAA,sBAAA,GAAkC;EAC/C,IAAA,aAAA,GAAoCC,KAAK,CAALA,MAAAA,CAOlC;IACAC,QAAQ,EADR,EAAA;IAEAC,YAAY,EATd;EAOE,CAPkCF,CAApC;EAAA,IAAiBD,cAAjB,GAAA,aAAA,CAAA,OAAA;;EAYA,IAAMI,gBAAgB,GAAGH,KAAK,CAALA,WAAAA,CACvB,UAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAIK;IAEHD,cAAc,CAAdA,IAAc,CAAdA,CAAAA,GAAAA,IAAAA,QAAAA;IAEA,OAAO,YAAM;MAEXA,cAAc,CAAdA,IAAc,CAAdA,CAAAA,GAAAA,IAFF,SAEEA;IAXmBC,CASrB;EATqBA,CAAAA,EAcvB,CAdF,cAcE,CAduBA,CAAzB;EAiBA,OAAO;IACLD,cADK,EAAA,cAAA;IAELI,gBAAAA,EAFF;EAAO,CAAP;AAID","sourcesContent":["import * as React from 'react';\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<\n    {\n      [K in keyof KeyedListenerMap]: Record<\n        string,\n        KeyedListenerMap[K] | undefined\n      >;\n    }\n  >({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}