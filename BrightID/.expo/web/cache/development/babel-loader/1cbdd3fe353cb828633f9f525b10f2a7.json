{"ast":null,"code":"import { Direction } from \"./web/constants\";\nimport FlingGestureHandler from \"./web/FlingGestureHandler\";\nimport LongPressGestureHandler from \"./web/LongPressGestureHandler\";\nimport NativeViewGestureHandler from \"./web/NativeViewGestureHandler\";\nimport * as NodeManager from \"./web/NodeManager\";\nimport PanGestureHandler from \"./web/PanGestureHandler\";\nimport PinchGestureHandler from \"./web/PinchGestureHandler\";\nimport RotationGestureHandler from \"./web/RotationGestureHandler\";\nimport TapGestureHandler from \"./web/TapGestureHandler\";\nexport var Gestures = {\n  PanGestureHandler: PanGestureHandler,\n  RotationGestureHandler: RotationGestureHandler,\n  PinchGestureHandler: PinchGestureHandler,\n  TapGestureHandler: TapGestureHandler,\n  NativeViewGestureHandler: NativeViewGestureHandler,\n  LongPressGestureHandler: LongPressGestureHandler,\n  FlingGestureHandler: FlingGestureHandler\n};\nexport default {\n  Direction: Direction,\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures)) throw new Error(\"react-native-gesture-handler: \".concat(handlerName, \" is not supported on web.\"));\n    var GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, propsRef) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  }\n};","map":{"version":3,"sources":["RNGestureHandlerModule.web.ts"],"names":["Gestures","PanGestureHandler","RotationGestureHandler","PinchGestureHandler","TapGestureHandler","NativeViewGestureHandler","LongPressGestureHandler","FlingGestureHandler","Direction","handleSetJSResponder","console","handleClearJSResponder","createGestureHandler","handlerName","GestureClass","NodeManager","attachGestureHandler","updateGestureHandler","getGestureHandlerNode","dropGestureHandler"],"mappings":"AAAA,SAAA,SAAA;AACA,OAAA,mBAAA;AACA,OAAA,uBAAA;AACA,OAAA,wBAAA;AACA,OAAO,KAAP,WAAA;AACA,OAAA,iBAAA;AACA,OAAA,mBAAA;AACA,OAAA,sBAAA;AACA,OAAA,iBAAA;AAEA,OAAO,IAAMA,QAAQ,GAAG;EACtBC,iBADsB,EAAA,iBAAA;EAEtBC,sBAFsB,EAAA,sBAAA;EAGtBC,mBAHsB,EAAA,mBAAA;EAItBC,iBAJsB,EAAA,iBAAA;EAKtBC,wBALsB,EAAA,wBAAA;EAMtBC,uBANsB,EAAA,uBAAA;EAOtBC,mBAPsB,EAAjB;AAAiB,CAAjB;AAWP,eAAe;EACbC,SADa,EAAA,SAAA;EAEbC,oBAFa,EAAA,SAAA,oBAAA,CAAA,GAAA,EAAA,oBAAA,EAEoD;IAC/DC,OAAO,CAAPA,IAAAA,CAAAA,wBAAAA,EAAAA,GAAAA,EAHW,oBAGXA;EAHW,CAAA;EAKbC,sBALa,EAAA,SAAA,sBAAA,GAKY;IACvBD,OAAO,CAAPA,IAAAA,CANW,0BAMXA;EANW,CAAA;EAQbE,oBARa,EAAA,SAAA,oBAAA,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAYX;IAEA,IAAI,EAAEC,WAAW,IAAjB,QAAI,CAAJ,EACE,MAAM,IAAA,KAAA,CAAA,iCAAA,MAAA,CAAA,WAAA,EAAN,2BAAM,CAAA,CAAN;IAGF,IAAMC,YAAY,GAAGd,QAAQ,CAA7B,WAA6B,CAA7B;IACAe,WAAW,CAAXA,oBAAAA,CAAAA,UAAAA,EAA6C,IAA7CA,YAA6C,EAA7CA;IACA,KAAA,oBAAA,CAAA,UAAA,EApBW,MAoBX;EApBW,CAAA;EAsBbC,oBAtBa,EAAA,SAAA,oBAAA,CAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EA0BX;IACAD,WAAW,CAAXA,UAAAA,CAAAA,UAAAA,EAAAA,OAAAA,CAAAA,OAAAA,EA3BW,QA2BXA;EA3BW,CAAA;EA6BbE,oBA7Ba,EAAA,SAAA,oBAAA,CAAA,UAAA,EAAA,SAAA,EA6B4C;IACvDF,WAAW,CAAXA,UAAAA,CAAAA,UAAAA,EAAAA,mBAAAA,CA9BW,SA8BXA;EA9BW,CAAA;EAgCbG,qBAhCa,EAAA,SAAA,qBAAA,CAAA,UAAA,EAgC6B;IACxC,OAAOH,WAAW,CAAXA,UAAAA,CAjCI,UAiCJA,CAAP;EAjCW,CAAA;EAmCbI,kBAnCa,EAAA,SAAA,kBAAA,CAAA,UAAA,EAmC0B;IACrCJ,WAAW,CAAXA,kBAAAA,CAAAA,UAAAA;EApCJ;AAAe,CAAf","sourcesContent":["import { Direction } from './web/constants';\nimport FlingGestureHandler from './web/FlingGestureHandler';\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\nimport * as NodeManager from './web/NodeManager';\nimport PanGestureHandler from './web/PanGestureHandler';\nimport PinchGestureHandler from './web/PinchGestureHandler';\nimport RotationGestureHandler from './web/RotationGestureHandler';\nimport TapGestureHandler from './web/TapGestureHandler';\n\nexport const Gestures = {\n  PanGestureHandler,\n  RotationGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n  NativeViewGestureHandler,\n  LongPressGestureHandler,\n  FlingGestureHandler,\n  // ForceTouchGestureHandler,\n};\n\nexport default {\n  Direction,\n  handleSetJSResponder(tag: number, blockNativeResponder: boolean) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler<T>(\n    handlerName: keyof typeof Gestures,\n    handlerTag: number,\n    config: T\n  ) {\n    //TODO(TS) extends config\n    if (!(handlerName in Gestures))\n      throw new Error(\n        `react-native-gesture-handler: ${handlerName} is not supported on web.`\n      );\n    const GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler(\n    handlerTag: number,\n    newView: number,\n    propsRef: React.RefObject<unknown>\n  ) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n  updateGestureHandler(handlerTag: number, newConfig: any) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode(handlerTag: number) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler(handlerTag: number) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}