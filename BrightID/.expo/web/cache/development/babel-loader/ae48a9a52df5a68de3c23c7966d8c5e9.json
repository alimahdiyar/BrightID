{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  input: _objectSpread({\n    height: 48,\n    width: '70%'\n  }, Platform.select({\n    web: {\n      outlineWidth: 0,\n      outlineColor: 'transparent',\n      outlineOffset: 0\n    }\n  }))\n});\nexport var CountryFilter = function CountryFilter(props) {\n  var _useTheme = useTheme(),\n      filterPlaceholderTextColor = _useTheme.filterPlaceholderTextColor,\n      fontFamily = _useTheme.fontFamily,\n      fontSize = _useTheme.fontSize,\n      onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n\n  return React.createElement(TextInput, _extends({\n    testID: \"text-input-country-filter\",\n    autoCorrect: false,\n    placeholderTextColor: filterPlaceholderTextColor,\n    style: [styles.input, {\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      color: onBackgroundTextColor\n    }]\n  }, props));\n};\nCountryFilter.defaultProps = {\n  autoFocus: false,\n  placeholder: 'Enter country name'\n};","map":{"version":3,"sources":["../src/CountryFilter.tsx"],"names":["styles","StyleSheet","input","height","width","Platform","web","outlineWidth","outlineColor","outlineOffset","CountryFilter","filterPlaceholderTextColor","fontFamily","fontSize","onBackgroundTextColor","useTheme","React","testID","autoCorrect","placeholderTextColor","style","color","autoFocus","placeholder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,KAAA,MAAA,OAAA;;;;AAEA,SAAA,QAAA;AAEA,IAAMA,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,KAAK,EAAA,aAAA,CAAA;IACHC,MAAM,EADH,EAAA;IAEHC,KAAK,EAFF;EAAA,CAAA,EAGAC,QAAQ,CAARA,MAAAA,CAAgB;IACjBC,GAAG,EAAE;MACHC,YAAY,EADT,CAAA;MAEHC,YAAY,EAFT,aAAA;MAGHC,aAAa,EARrB;IAKW;EADY,CAAhBJ,CAHA;AAD0B,CAAlBJ,CAAf;AAgBA,OAAO,IAAMS,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,KAAhBA,EAA8C;EACzD,IAAA,SAAA,GAKIK,QALJ,EAAA;EAAA,IACEJ,0BADF,GAAA,SAAA,CAAA,0BAAA;EAAA,IAEEC,UAFF,GAAA,SAAA,CAAA,UAAA;EAAA,IAGEC,QAHF,GAAA,SAAA,CAAA,QAAA;EAAA,IAIEC,qBAJF,GAAA,SAAA,CAAA,qBAAA;;EAMA,OACEE,KAAAA,CAAAA,aAAAA,CAAAA,SAAAA,EAAU,QAAA,CAAA;IACRC,MAAM,EADE,2BAAA;IAERC,WAAW,EAFH,KAAA;IAGRC,oBAAoB,EAHZ,0BAAA;IAIRC,KAAK,EAAE,CACLpB,MAAM,CADD,KAAA,EAEL;MAAEY,UAAU,EAAZ,UAAA;MAAcC,QAAQ,EAAtB,QAAA;MAAwBQ,KAAK,EANvB;IAMN,CAFK;EAJC,CAAA,EADZ,KACY,CAAVL,CADF;AAPK,CAAA;AAqBPN,aAAa,CAAbA,YAAAA,GAA6B;EAC3BY,SAAS,EADkB,KAAA;EAE3BC,WAAW,EAFbb;AAA6B,CAA7BA","sourceRoot":"","sourcesContent":["import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{useTheme}from\"./CountryTheme\";var styles=StyleSheet.create({input:_objectSpread({height:48,width:'70%'},Platform.select({web:{outlineWidth:0,outlineColor:'transparent',outlineOffset:0}}))});export var CountryFilter=function CountryFilter(props){var _useTheme=useTheme(),filterPlaceholderTextColor=_useTheme.filterPlaceholderTextColor,fontFamily=_useTheme.fontFamily,fontSize=_useTheme.fontSize,onBackgroundTextColor=_useTheme.onBackgroundTextColor;return React.createElement(TextInput,_extends({testID:\"text-input-country-filter\",autoCorrect:false,placeholderTextColor:filterPlaceholderTextColor,style:[styles.input,{fontFamily:fontFamily,fontSize:fontSize,color:onBackgroundTextColor}]},props));};CountryFilter.defaultProps={autoFocus:false,placeholder:'Enter country name'};"]},"metadata":{},"sourceType":"module"}