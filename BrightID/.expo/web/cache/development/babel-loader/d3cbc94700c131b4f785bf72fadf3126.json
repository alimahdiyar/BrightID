{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useDescriptors;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _SceneView = _interopRequireDefault(require(\"./SceneView\"));\n\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\n\nvar _useNavigationCache = _interopRequireDefault(require(\"./useNavigationCache\"));\n\nvar _useRouteCache = _interopRequireDefault(require(\"./useRouteCache\"));\n\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\n\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction useDescriptors(_ref) {\n  var state = _ref.state,\n      screens = _ref.screens,\n      navigation = _ref.navigation,\n      screenOptions = _ref.screenOptions,\n      defaultScreenOptions = _ref.defaultScreenOptions,\n      onAction = _ref.onAction,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      addListener = _ref.addListener,\n      addKeyedListener = _ref.addKeyedListener,\n      onRouteFocus = _ref.onRouteFocus,\n      router = _ref.router,\n      emitter = _ref.emitter;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      options = _React$useState2[0],\n      setOptions = _React$useState2[1];\n\n  var _React$useContext = React.useContext(_NavigationBuilderContext.default),\n      onDispatchAction = _React$useContext.onDispatchAction,\n      onOptionsChange = _React$useContext.onOptionsChange;\n\n  var context = React.useMemo(function () {\n    return {\n      navigation: navigation,\n      onAction: onAction,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onRouteFocus: onRouteFocus,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange\n    };\n  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange]);\n  var navigations = (0, _useNavigationCache.default)({\n    state: state,\n    getState: getState,\n    navigation: navigation,\n    setOptions: setOptions,\n    router: router,\n    emitter: emitter\n  });\n  var routes = (0, _useRouteCache.default)(state.routes);\n  return routes.reduce(function (acc, route, i) {\n    var screen = screens[route.name];\n    var navigation = navigations[route.key];\n    var routeOptions = (0, _extends2.default)({}, typeof screenOptions === 'object' || screenOptions == null ? screenOptions : screenOptions({\n      route: route,\n      navigation: navigation\n    }), typeof screen.options === 'object' || screen.options == null ? screen.options : screen.options({\n      route: route,\n      navigation: navigation\n    }), options[route.key]);\n    var mergedOptions = (0, _extends2.default)({}, typeof defaultScreenOptions === 'function' ? defaultScreenOptions({\n      route: route,\n      navigation: navigation,\n      options: routeOptions\n    }) : defaultScreenOptions, routeOptions);\n\n    var clearOptions = function clearOptions() {\n      return setOptions(function (o) {\n        if (route.key in o) {\n          var _route$key = route.key,\n              _ = o[_route$key],\n              rest = (0, _objectWithoutProperties2.default)(o, [_route$key].map(_toPropertyKey));\n          return rest;\n        }\n\n        return o;\n      });\n    };\n\n    acc[route.key] = {\n      navigation: navigation,\n      render: function render() {\n        return React.createElement(_NavigationBuilderContext.default.Provider, {\n          key: route.key,\n          value: context\n        }, React.createElement(_NavigationContext.default.Provider, {\n          value: navigation\n        }, React.createElement(_NavigationRouteContext.default.Provider, {\n          value: route\n        }, React.createElement(_SceneView.default, {\n          navigation: navigation,\n          route: route,\n          screen: screen,\n          routeState: state.routes[i].state,\n          getState: getState,\n          setState: setState,\n          options: mergedOptions,\n          clearOptions: clearOptions\n        }))));\n      },\n      options: mergedOptions\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"sources":["useDescriptors.tsx"],"names":["emitter","React","onOptionsChange","context","navigation","onAction","addListener","addKeyedListener","onRouteFocus","onDispatchAction","navigations","useNavigationCache","state","getState","setOptions","router","routes","useRouteCache","screen","screens","route","routeOptions","screenOptions","options","mergedOptions","defaultScreenOptions","clearOptions","o","rest","acc","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport SceneView from './SceneView';\nimport NavigationBuilderContext, {\n  AddListener,\n  AddKeyedListener,\n} from './NavigationBuilderContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  RouteConfig,\n  RouteProp,\n  EventMapBase,\n} from './types';\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenOptions);\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<any>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  defaultScreenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<string, Descriptor<ParamListBase, string, State, ScreenOptions>>\n  >((acc, route, i) => {\n    const screen = screens[route.name];\n    const navigation = navigations[route.key];\n\n    const routeOptions = {\n      // The default `screenOptions` passed to the navigator\n      ...(typeof screenOptions === 'object' || screenOptions == null\n        ? screenOptions\n        : // @ts-expect-error: this is a function, but typescript doesn't think so\n          screenOptions({\n            route,\n            navigation,\n          })),\n      // The `options` prop passed to `Screen` elements\n      ...(typeof screen.options === 'object' || screen.options == null\n        ? screen.options\n        : // @ts-expect-error: this is a function, but typescript doesn't think so\n          screen.options({\n            route,\n            navigation,\n          })),\n      // The options set via `navigation.setOptions`\n      ...options[route.key],\n    };\n\n    const mergedOptions = {\n      ...(typeof defaultScreenOptions === 'function'\n        ? // @ts-expect-error: ts gives incorrect error here\n          defaultScreenOptions({\n            route,\n            navigation,\n            options: routeOptions,\n          })\n        : defaultScreenOptions),\n      ...routeOptions,\n    };\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    acc[route.key] = {\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={mergedOptions}\n                  clearOptions={clearOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: mergedOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n"]},"metadata":{},"sourceType":"script"}