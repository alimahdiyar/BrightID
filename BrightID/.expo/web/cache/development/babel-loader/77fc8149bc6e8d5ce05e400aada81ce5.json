{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _actions = require(\"../actions\");\n\nvar _constants = require(\"../utils/constants\");\n\nvar initialState = {\n  activeNotification: null,\n  backupPending: false,\n  recoveryConnectionsPending: false,\n  deviceToken: null,\n  notificationToken: null,\n  sessionNotifications: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _actions.SET_BACKUP_PENDING:\n      {\n        return (0, _extends2.default)({}, state, {\n          backupPending: action.backupPending\n        });\n      }\n\n    case _actions.SET_RECOVERY_CONNECTIONS_PENDING:\n      {\n        return (0, _extends2.default)({}, state, {\n          recoveryConnectionsPending: action.recoveryConnectionsPending\n        });\n      }\n\n    case _actions.SET_DEVICE_TOKEN:\n      {\n        return (0, _extends2.default)({}, state, {\n          deviceToken: action.deviceToken\n        });\n      }\n\n    case _actions.SET_NOTIFICATION_TOKEN:\n      {\n        return (0, _extends2.default)({}, state, {\n          notificationToken: action.notificationToken\n        });\n      }\n\n    case _actions.SET_ACTIVE_NOTIFICATION:\n      {\n        var _state$activeNotifica, _state$activeNotifica2;\n\n        var notification = action.notification;\n\n        if (!notification) {\n          return (0, _extends2.default)({}, state, {\n            activeNotification: null\n          });\n        }\n\n        if (notification.oncePerSession) {\n          if (state.sessionNotifications.includes(notification.title)) {\n            return state;\n          }\n        }\n\n        if (((_state$activeNotifica = state.activeNotification) == null ? void 0 : _state$activeNotifica.type) === _constants.CONNECTIONS_TYPE && (notification == null ? void 0 : notification.type) !== _constants.CONNECTIONS_TYPE) return state;\n        if (((_state$activeNotifica2 = state.activeNotification) == null ? void 0 : _state$activeNotifica2.type) === _constants.GROUPS_TYPE && (notification == null ? void 0 : notification.type) === _constants.MISC_TYPE) return state;\n        var sessionNotifications = (0, _toConsumableArray2.default)(state.sessionNotifications);\n\n        if (notification != null && notification.oncePerSession) {\n          sessionNotifications.push(notification.title);\n        }\n\n        return (0, _extends2.default)({}, state, {\n          activeNotification: notification,\n          sessionNotifications: sessionNotifications\n        });\n      }\n\n    case _actions.REMOVE_ACTIVE_NOTIFICATION:\n      {\n        return (0, _extends2.default)({}, state, {\n          activeNotification: {}\n        });\n      }\n\n    case _actions.RESET_STORE:\n      {\n        return (0, _extends2.default)({}, initialState);\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexports.reducer = reducer;\nvar _default = reducer;\nexports.default = _default;","map":{"version":3,"names":["initialState","activeNotification","backupPending","recoveryConnectionsPending","deviceToken","notificationToken","sessionNotifications","reducer","state","action","type","SET_BACKUP_PENDING","SET_RECOVERY_CONNECTIONS_PENDING","SET_DEVICE_TOKEN","SET_NOTIFICATION_TOKEN","SET_ACTIVE_NOTIFICATION","notification","oncePerSession","includes","title","CONNECTIONS_TYPE","GROUPS_TYPE","MISC_TYPE","push","REMOVE_ACTIVE_NOTIFICATION","RESET_STORE"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/reducer/notifications.ts"],"sourcesContent":["import {\n  SET_BACKUP_PENDING,\n  SET_RECOVERY_CONNECTIONS_PENDING,\n  SET_DEVICE_TOKEN,\n  SET_ACTIVE_NOTIFICATION,\n  SET_NOTIFICATION_TOKEN,\n  REMOVE_ACTIVE_NOTIFICATION,\n  RESET_STORE,\n} from '@/actions';\nimport { CONNECTIONS_TYPE, GROUPS_TYPE, MISC_TYPE } from '@/utils/constants';\n\nconst initialState = {\n  activeNotification: null,\n  backupPending: false,\n  recoveryConnectionsPending: false,\n  deviceToken: null,\n  notificationToken: null,\n  sessionNotifications: [],\n};\n\n// not sure if this is the best way...\n\nexport const reducer = (\n  state: NotificationsState = initialState,\n  action: action,\n) => {\n  switch (action.type) {\n    case SET_BACKUP_PENDING: {\n      return { ...state, backupPending: action.backupPending };\n    }\n    case SET_RECOVERY_CONNECTIONS_PENDING: {\n      return {\n        ...state,\n        recoveryConnectionsPending: action.recoveryConnectionsPending,\n      };\n    }\n    case SET_DEVICE_TOKEN: {\n      return { ...state, deviceToken: action.deviceToken };\n    }\n    case SET_NOTIFICATION_TOKEN: {\n      return { ...state, notificationToken: action.notificationToken };\n    }\n    case SET_ACTIVE_NOTIFICATION: {\n      const { notification } = action;\n      // set null activeNotifications\n      if (!notification) {\n        return { ...state, activeNotification: null };\n      }\n\n      // handle once-per-session notifications\n      if (notification.oncePerSession) {\n        if (state.sessionNotifications.includes(notification.title)) {\n          // Ignore if already notified before\n          return state;\n        }\n      }\n\n      // do not update the notification banner if the active is set as a new connection\n      if (\n        state.activeNotification?.type === CONNECTIONS_TYPE &&\n        notification?.type !== CONNECTIONS_TYPE\n      )\n        return state;\n\n      // do not update the notification banner if the alert is for backups,\n      // and a notification is already displayed\n      if (\n        state.activeNotification?.type === GROUPS_TYPE &&\n        notification?.type === MISC_TYPE\n      )\n        return state;\n\n      const sessionNotifications = [...state.sessionNotifications];\n      if (notification?.oncePerSession) {\n        sessionNotifications.push(notification.title);\n      }\n\n      return {\n        ...state,\n        activeNotification: notification,\n        sessionNotifications,\n      };\n    }\n    case REMOVE_ACTIVE_NOTIFICATION: {\n      return { ...state, activeNotification: {} };\n    }\n    case RESET_STORE: {\n      return { ...initialState };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n"],"mappings":";;;;;;;;;;;AAAA;;AASA;;AAEA,IAAMA,YAAY,GAAG;EACnBC,kBAAkB,EAAE,IADD;EAEnBC,aAAa,EAAE,KAFI;EAGnBC,0BAA0B,EAAE,KAHT;EAInBC,WAAW,EAAE,IAJM;EAKnBC,iBAAiB,EAAE,IALA;EAMnBC,oBAAoB,EAAE;AANH,CAArB;;AAWO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAGlB;EAAA,IAFHC,KAEG,uEAFyBR,YAEzB;EAAA,IADHS,MACG;;EACH,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKC,2BAAL;MAAyB;QACvB,kCAAYH,KAAZ;UAAmBN,aAAa,EAAEO,MAAM,CAACP;QAAzC;MACD;;IACD,KAAKU,yCAAL;MAAuC;QACrC,kCACKJ,KADL;UAEEL,0BAA0B,EAAEM,MAAM,CAACN;QAFrC;MAID;;IACD,KAAKU,yBAAL;MAAuB;QACrB,kCAAYL,KAAZ;UAAmBJ,WAAW,EAAEK,MAAM,CAACL;QAAvC;MACD;;IACD,KAAKU,+BAAL;MAA6B;QAC3B,kCAAYN,KAAZ;UAAmBH,iBAAiB,EAAEI,MAAM,CAACJ;QAA7C;MACD;;IACD,KAAKU,gCAAL;MAA8B;QAAA;;QAC5B,IAAQC,YAAR,GAAyBP,MAAzB,CAAQO,YAAR;;QAEA,IAAI,CAACA,YAAL,EAAmB;UACjB,kCAAYR,KAAZ;YAAmBP,kBAAkB,EAAE;UAAvC;QACD;;QAGD,IAAIe,YAAY,CAACC,cAAjB,EAAiC;UAC/B,IAAIT,KAAK,CAACF,oBAAN,CAA2BY,QAA3B,CAAoCF,YAAY,CAACG,KAAjD,CAAJ,EAA6D;YAE3D,OAAOX,KAAP;UACD;QACF;;QAGD,IACE,0BAAAA,KAAK,CAACP,kBAAN,2CAA0BS,IAA1B,MAAmCU,2BAAnC,IACA,CAAAJ,YAAY,QAAZ,YAAAA,YAAY,CAAEN,IAAd,MAAuBU,2BAFzB,EAIE,OAAOZ,KAAP;QAIF,IACE,2BAAAA,KAAK,CAACP,kBAAN,4CAA0BS,IAA1B,MAAmCW,sBAAnC,IACA,CAAAL,YAAY,QAAZ,YAAAA,YAAY,CAAEN,IAAd,MAAuBY,oBAFzB,EAIE,OAAOd,KAAP;QAEF,IAAMF,oBAAoB,oCAAOE,KAAK,CAACF,oBAAb,CAA1B;;QACA,IAAIU,YAAJ,YAAIA,YAAY,CAAEC,cAAlB,EAAkC;UAChCX,oBAAoB,CAACiB,IAArB,CAA0BP,YAAY,CAACG,KAAvC;QACD;;QAED,kCACKX,KADL;UAEEP,kBAAkB,EAAEe,YAFtB;UAGEV,oBAAoB,EAApBA;QAHF;MAKD;;IACD,KAAKkB,mCAAL;MAAiC;QAC/B,kCAAYhB,KAAZ;UAAmBP,kBAAkB,EAAE;QAAvC;MACD;;IACD,KAAKwB,oBAAL;MAAkB;QAChB,kCAAYzB,YAAZ;MACD;;IACD;MAAS;QACP,OAAOQ,KAAP;MACD;EAjEH;AAmED,CAvEM;;;eAyEQD,O"},"metadata":{},"sourceType":"script"}