{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty2(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { PanGestureHandler, TapGestureHandler } from \"../handlers/gestureHandlers\";\nimport { State } from \"../State\";\nvar DRAG_TOSS = 0.05;\n\nvar Swipeable = function (_Component) {\n  _inherits(Swipeable, _Component);\n\n  var _super = _createSuper(Swipeable);\n\n  function Swipeable(_props) {\n    var _this;\n\n    _classCallCheck(this, Swipeable);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onGestureEvent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"transX\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"showLeftAction\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"leftActionTranslate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"showRightAction\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rightActionTranslate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAnimatedEvent\", function (props, state) {\n      var friction = props.friction,\n          overshootFriction = props.overshootFriction;\n      var dragX = state.dragX,\n          rowTranslation = state.rowTranslation,\n          _state$leftWidth = state.leftWidth,\n          leftWidth = _state$leftWidth === void 0 ? 0 : _state$leftWidth,\n          _state$rowWidth = state.rowWidth,\n          rowWidth = _state$rowWidth === void 0 ? 0 : _state$rowWidth;\n      var _state$rightOffset = state.rightOffset,\n          rightOffset = _state$rightOffset === void 0 ? rowWidth : _state$rightOffset;\n      var rightWidth = Math.max(0, rowWidth - rightOffset);\n      var _props$overshootLeft = props.overshootLeft,\n          overshootLeft = _props$overshootLeft === void 0 ? leftWidth > 0 : _props$overshootLeft,\n          _props$overshootRight = props.overshootRight,\n          overshootRight = _props$overshootRight === void 0 ? rightWidth > 0 : _props$overshootRight;\n      var transX = Animated.add(rowTranslation, dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1]\n      })).interpolate({\n        inputRange: [-rightWidth - (overshootRight ? 1 : overshootFriction), -rightWidth, leftWidth, leftWidth + (overshootLeft ? 1 : overshootFriction)],\n        outputRange: [-rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0), -rightWidth, leftWidth, leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0)]\n      });\n      _this.transX = transX;\n      _this.showLeftAction = leftWidth > 0 ? transX.interpolate({\n        inputRange: [-1, 0, leftWidth],\n        outputRange: [0, 0, 1]\n      }) : new Animated.Value(0);\n      _this.leftActionTranslate = _this.showLeftAction.interpolate({\n        inputRange: [0, Number.MIN_VALUE],\n        outputRange: [-10000, 0],\n        extrapolate: 'clamp'\n      });\n      _this.showRightAction = rightWidth > 0 ? transX.interpolate({\n        inputRange: [-rightWidth, 0, 1],\n        outputRange: [1, 0, 0]\n      }) : new Animated.Value(0);\n      _this.rightActionTranslate = _this.showRightAction.interpolate({\n        inputRange: [0, Number.MIN_VALUE],\n        outputRange: [-10000, 0],\n        extrapolate: 'clamp'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTapHandlerStateChange\", function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n\n      if (nativeEvent.oldState === State.ACTIVE) {\n        _this.close();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandlerStateChange\", function (ev) {\n      if (ev.nativeEvent.oldState === State.ACTIVE) {\n        _this.handleRelease(ev);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRelease\", function (ev) {\n      var _ev$nativeEvent = ev.nativeEvent,\n          velocityX = _ev$nativeEvent.velocityX,\n          dragX = _ev$nativeEvent.translationX;\n      var _this$state = _this.state,\n          _this$state$leftWidth = _this$state.leftWidth,\n          leftWidth = _this$state$leftWidth === void 0 ? 0 : _this$state$leftWidth,\n          _this$state$rowWidth = _this$state.rowWidth,\n          rowWidth = _this$state$rowWidth === void 0 ? 0 : _this$state$rowWidth,\n          rowState = _this$state.rowState;\n      var _this$state$rightOffs = _this.state.rightOffset,\n          rightOffset = _this$state$rightOffs === void 0 ? rowWidth : _this$state$rightOffs;\n      var rightWidth = rowWidth - rightOffset;\n      var _this$props5 = _this.props,\n          friction = _this$props5.friction,\n          _this$props5$leftThre = _this$props5.leftThreshold,\n          leftThreshold = _this$props5$leftThre === void 0 ? leftWidth / 2 : _this$props5$leftThre,\n          _this$props5$rightThr = _this$props5.rightThreshold,\n          rightThreshold = _this$props5$rightThr === void 0 ? rightWidth / 2 : _this$props5$rightThr;\n      var startOffsetX = _this.currentOffset() + dragX / friction;\n      var translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n      var toValue = 0;\n\n      if (rowState === 0) {\n        if (translationX > leftThreshold) {\n          toValue = leftWidth;\n        } else if (translationX < -rightThreshold) {\n          toValue = -rightWidth;\n        }\n      } else if (rowState === 1) {\n        if (translationX > -leftThreshold) {\n          toValue = leftWidth;\n        }\n      } else {\n        if (translationX < rightThreshold) {\n          toValue = -rightWidth;\n        }\n      }\n\n      _this.animateRow(startOffsetX, toValue, velocityX / friction);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animateRow\", function (fromValue, toValue, velocityX) {\n      var _this$state2 = _this.state,\n          dragX = _this$state2.dragX,\n          rowTranslation = _this$state2.rowTranslation;\n      dragX.setValue(0);\n      rowTranslation.setValue(fromValue);\n\n      _this.setState({\n        rowState: Math.sign(toValue)\n      });\n\n      Animated.spring(rowTranslation, _objectSpread({\n        restSpeedThreshold: 1.7,\n        restDisplacementThreshold: 0.4,\n        velocity: velocityX,\n        bounciness: 0,\n        toValue: toValue,\n        useNativeDriver: _this.props.useNativeAnimations\n      }, _this.props.animationOptions)).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          if (toValue > 0 && _this.props.onSwipeableLeftOpen) {\n            _this.props.onSwipeableLeftOpen();\n          } else if (toValue < 0 && _this.props.onSwipeableRightOpen) {\n            _this.props.onSwipeableRightOpen();\n          }\n\n          if (toValue === 0) {\n            var _this$props$onSwipeab, _this$props;\n\n            (_this$props$onSwipeab = (_this$props = _this.props).onSwipeableClose) === null || _this$props$onSwipeab === void 0 ? void 0 : _this$props$onSwipeab.call(_this$props);\n          } else {\n            var _this$props$onSwipeab2, _this$props2;\n\n            (_this$props$onSwipeab2 = (_this$props2 = _this.props).onSwipeableOpen) === null || _this$props$onSwipeab2 === void 0 ? void 0 : _this$props$onSwipeab2.call(_this$props2);\n          }\n        }\n      });\n\n      if (toValue > 0 && _this.props.onSwipeableLeftWillOpen) {\n        _this.props.onSwipeableLeftWillOpen();\n      } else if (toValue < 0 && _this.props.onSwipeableRightWillOpen) {\n        _this.props.onSwipeableRightWillOpen();\n      }\n\n      if (toValue === 0) {\n        var _this$props$onSwipeab3, _this$props3;\n\n        (_this$props$onSwipeab3 = (_this$props3 = _this.props).onSwipeableWillClose) === null || _this$props$onSwipeab3 === void 0 ? void 0 : _this$props$onSwipeab3.call(_this$props3);\n      } else {\n        var _this$props$onSwipeab4, _this$props4;\n\n        (_this$props$onSwipeab4 = (_this$props4 = _this.props).onSwipeableWillOpen) === null || _this$props$onSwipeab4 === void 0 ? void 0 : _this$props$onSwipeab4.call(_this$props4);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRowLayout\", function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      _this.setState({\n        rowWidth: nativeEvent.layout.width\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"currentOffset\", function () {\n      var _this$state3 = _this.state,\n          _this$state3$leftWidt = _this$state3.leftWidth,\n          leftWidth = _this$state3$leftWidt === void 0 ? 0 : _this$state3$leftWidt,\n          _this$state3$rowWidth = _this$state3.rowWidth,\n          rowWidth = _this$state3$rowWidth === void 0 ? 0 : _this$state3$rowWidth,\n          rowState = _this$state3.rowState;\n      var _this$state$rightOffs2 = _this.state.rightOffset,\n          rightOffset = _this$state$rightOffs2 === void 0 ? rowWidth : _this$state$rightOffs2;\n      var rightWidth = rowWidth - rightOffset;\n\n      if (rowState === 1) {\n        return leftWidth;\n      } else if (rowState === -1) {\n        return -rightWidth;\n      }\n\n      return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function () {\n      _this.animateRow(_this.currentOffset(), 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openLeft\", function () {\n      var _this$state$leftWidth2 = _this.state.leftWidth,\n          leftWidth = _this$state$leftWidth2 === void 0 ? 0 : _this$state$leftWidth2;\n\n      _this.animateRow(_this.currentOffset(), leftWidth);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openRight\", function () {\n      var _this$state$rowWidth2 = _this.state.rowWidth,\n          rowWidth = _this$state$rowWidth2 === void 0 ? 0 : _this$state$rowWidth2;\n      var _this$state$rightOffs3 = _this.state.rightOffset,\n          rightOffset = _this$state$rightOffs3 === void 0 ? rowWidth : _this$state$rightOffs3;\n      var rightWidth = rowWidth - rightOffset;\n\n      _this.animateRow(_this.currentOffset(), -rightWidth);\n    });\n\n    var _dragX = new Animated.Value(0);\n\n    _this.state = {\n      dragX: _dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined\n    };\n\n    _this.updateAnimatedEvent(_props, _this.state);\n\n    _this.onGestureEvent = Animated.event([{\n      nativeEvent: {\n        translationX: _dragX\n      }\n    }], {\n      useNativeDriver: _props.useNativeAnimations\n    });\n    return _this;\n  }\n\n  _createClass(Swipeable, [{\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(props, state) {\n      if (this.props.friction !== props.friction || this.props.overshootLeft !== props.overshootLeft || this.props.overshootRight !== props.overshootRight || this.props.overshootFriction !== props.overshootFriction || this.state.leftWidth !== state.leftWidth || this.state.rightOffset !== state.rightOffset || this.state.rowWidth !== state.rowWidth) {\n        this.updateAnimatedEvent(props, state);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var rowState = this.state.rowState;\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          renderLeftActions = _this$props6.renderLeftActions,\n          renderRightActions = _this$props6.renderRightActions;\n      var left = renderLeftActions && React.createElement(Animated.View, {\n        style: [styles.leftActions, {\n          transform: [{\n            translateX: this.leftActionTranslate\n          }]\n        }]\n      }, renderLeftActions(this.showLeftAction, this.transX), React.createElement(View, {\n        onLayout: function onLayout(_ref4) {\n          var nativeEvent = _ref4.nativeEvent;\n          return _this2.setState({\n            leftWidth: nativeEvent.layout.x\n          });\n        }\n      }));\n      var right = renderRightActions && React.createElement(Animated.View, {\n        style: [styles.rightActions, {\n          transform: [{\n            translateX: this.rightActionTranslate\n          }]\n        }]\n      }, renderRightActions(this.showRightAction, this.transX), React.createElement(View, {\n        onLayout: function onLayout(_ref5) {\n          var nativeEvent = _ref5.nativeEvent;\n          return _this2.setState({\n            rightOffset: nativeEvent.layout.x\n          });\n        }\n      }));\n      return React.createElement(PanGestureHandler, _extends({\n        activeOffsetX: [-10, 10]\n      }, this.props, {\n        onGestureEvent: this.onGestureEvent,\n        onHandlerStateChange: this.onHandlerStateChange\n      }), React.createElement(Animated.View, {\n        onLayout: this.onRowLayout,\n        style: [styles.container, this.props.containerStyle]\n      }, left, right, React.createElement(TapGestureHandler, {\n        enabled: rowState !== 0,\n        onHandlerStateChange: this.onTapHandlerStateChange\n      }, React.createElement(Animated.View, {\n        pointerEvents: rowState === 0 ? 'auto' : 'box-only',\n        style: [{\n          transform: [{\n            translateX: this.transX\n          }]\n        }, this.props.childrenContainerStyle]\n      }, children))));\n    }\n  }]);\n\n  return Swipeable;\n}(Component);\n\nexport { Swipeable as default };\n\n_defineProperty(Swipeable, \"defaultProps\", {\n  friction: 1,\n  overshootFriction: 1,\n  useNativeAnimations: true\n});\n\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  leftActions: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row'\n  }),\n  rightActions: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse'\n  })\n});","map":{"version":3,"sources":["Swipeable.tsx"],"names":["DRAG_TOSS","Swipeable","Component","friction","overshootFriction","useNativeAnimations","constructor","dragX","Animated","rowTranslation","rowState","leftWidth","rightOffset","rowWidth","nativeEvent","translationX","useNativeDriver","props","UNSAFE_componentWillUpdate","state","rightWidth","Math","overshootLeft","overshootRight","transX","inputRange","outputRange","Number","extrapolate","State","ev","velocityX","leftThreshold","rightThreshold","startOffsetX","toValue","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","finished","render","children","renderLeftActions","renderRightActions","left","React","style","styles","transform","translateX","onLayout","right","activeOffsetX","onGestureEvent","onHandlerStateChange","enabled","pointerEvents","StyleSheet","container","overflow","leftActions","flexDirection","I18nManager","rightActions"],"mappings":"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","sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  PanGestureHandler,\n  TapGestureHandler,\n  PanGestureHandlerProps,\n  GestureEvent,\n  PanGestureHandlerEventPayload,\n  HandlerStateChangeEvent,\n  TapGestureHandlerEventPayload,\n} from '../handlers/gestureHandlers';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\ninterface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  enableTrackpadTwoFingerGesture?: boolean;\n  friction?: number;\n  leftThreshold?: number;\n  rightThreshold?: number;\n  overshootLeft?: boolean;\n  overshootRight?: boolean;\n  overshootFriction?: number;\n  onSwipeableLeftOpen?: () => void;\n  onSwipeableRightOpen?: () => void;\n  onSwipeableOpen?: () => void;\n  onSwipeableClose?: () => void;\n  onSwipeableLeftWillOpen?: () => void;\n  onSwipeableRightWillOpen?: () => void;\n  onSwipeableWillOpen?: () => void;\n  onSwipeableWillClose?: () => void;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1]\n   * dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1]\n   * dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n  useNativeAnimations?: boolean;\n  animationOptions?: Record<string, unknown>;\n  containerStyle?: StyleProp<ViewStyle>;\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: Animated.AnimatedInterpolation;\n  private showLeftAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: Animated.AnimatedInterpolation;\n  private showRightAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: Animated.AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction!),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction!),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction! > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction! > 1 ? 1 : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose?.();\n        } else {\n          this.props.onSwipeableOpen?.();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose?.();\n    } else {\n      this.props.onSwipeableWillOpen?.();\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // all those and below parameters can have ! since they are all asigned in constructor in `updateAnimatedEvent` but TS cannot spot it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}