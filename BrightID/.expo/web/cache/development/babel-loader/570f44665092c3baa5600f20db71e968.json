{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Icons/AddPerson.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar AddPerson = function AddPerson(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? _colors.BLACK : _ref$color,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 24 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 24 : _ref$height;\n  return _react.default.createElement(_reactNativeSvg.default, {\n    width: width,\n    height: height,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_reactNativeSvg.Path, {\n    d: \"M15 12C17.21 12 19 10.21 19 8C19 5.79 17.21 4 15 4C12.79 4 11 5.79 11 8C11 10.21 12.79 12 15 12ZM6 10V7H4V10H1V12H4V15H6V12H9V10H6ZM15 14C12.33 14 7 15.34 7 18V20H23V18C23 15.34 17.67 14 15 14Z\",\n    fill: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = AddPerson;\nexports.default = _default;","map":{"version":3,"names":["AddPerson","color","BLACK","width","height"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Icons/AddPerson.tsx"],"sourcesContent":["import React from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { BLACK } from '@/theme/colors';\n\ntype Props = {\n  color?: string;\n  width?: number;\n  height?: number;\n};\n\nconst AddPerson = ({ color = BLACK, width = 24, height = 24 }: Props) => (\n  <Svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\">\n    <Path\n      d=\"M15 12C17.21 12 19 10.21 19 8C19 5.79 17.21 4 15 4C12.79 4 11 5.79 11 8C11 10.21 12.79 12 15 12ZM6 10V7H4V10H1V12H4V15H6V12H9V10H6ZM15 14C12.33 14 7 15.34 7 18V20H23V18C23 15.34 17.67 14 15 14Z\"\n      fill={color}\n    />\n  </Svg>\n);\n\nexport default AddPerson;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;AAQA,IAAMA,SAAS,GAAG,SAAZA,SAAY;EAAA,sBAAGC,KAAH;EAAA,IAAGA,KAAH,2BAAWC,aAAX;EAAA,sBAAkBC,KAAlB;EAAA,IAAkBA,KAAlB,2BAA0B,EAA1B;EAAA,uBAA8BC,MAA9B;EAAA,IAA8BA,MAA9B,4BAAuC,EAAvC;EAAA,OAChB,6BAAC,uBAAD;IAAK,KAAK,EAAED,KAAZ;IAAmB,MAAM,EAAEC,MAA3B;IAAmC,OAAO,EAAC,WAA3C;IAAuD,IAAI,EAAC,MAA5D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,oBAAD;IACE,CAAC,EAAC,mMADJ;IAEE,IAAI,EAAEH,KAFR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADgB;AAAA,CAAlB;;eASeD,S"},"metadata":{},"sourceType":"script"}