{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RecoveringConnectionScreen from \"../components/Onboarding/RecoveryFlow/RecoveringConnectionScreen\";\nimport SearchConnections from \"../components/Helpers/SearchConnections\";\nimport i18next from 'i18next';\nimport { headerOptions, AnimatedHeaderTitle } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar recoveringScreenOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerRight: function headerRight() {\n    return _jsx(SearchConnections, {});\n  },\n  headerTitle: function headerTitle() {\n    return _jsx(AnimatedHeaderTitle, {\n      text: i18next.t('restore.header.accountRecovery')\n    });\n  }\n});\n\nvar RecoveringConnection = function RecoveringConnection() {\n  return _jsx(_Fragment, {\n    children: _jsx(Stack.Screen, {\n      name: \"RecoveringConnection\",\n      component: RecoveringConnectionScreen,\n      options: recoveringScreenOptions\n    })\n  });\n};\n\nexport default RecoveringConnection;","map":{"version":3,"names":["React","createStackNavigator","RecoveringConnectionScreen","SearchConnections","i18next","headerOptions","AnimatedHeaderTitle","Stack","recoveringScreenOptions","headerRight","headerTitle","t","RecoveringConnection"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/RecoveringConnection.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport RecoveringConnectionScreen from '@/components/Onboarding/RecoveryFlow/RecoveringConnectionScreen';\nimport SearchConnections from '@/components/Helpers/SearchConnections';\nimport i18next from 'i18next';\nimport { headerOptions, AnimatedHeaderTitle } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst recoveringScreenOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerRight: () => <SearchConnections />,\n  headerTitle: () => (\n    <AnimatedHeaderTitle text={i18next.t('restore.header.accountRecovery')} />\n  ),\n};\n\nconst RecoveringConnection = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"RecoveringConnection\"\n        component={RecoveringConnectionScreen}\n        options={recoveringScreenOptions}\n      />\n    </>\n  );\n};\n\nexport default RecoveringConnection;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,QAGO,yBAHP;AAIA,OAAOC,0BAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,aAAT,EAAwBC,mBAAxB;;;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;AAEA,IAAMO,uBAA+C,mCAChDH,aADgD;EAEnDI,WAAW,EAAE;IAAA,OAAM,KAAC,iBAAD,KAAN;EAAA,CAFsC;EAGnDC,WAAW,EAAE;IAAA,OACX,KAAC,mBAAD;MAAqB,IAAI,EAAEN,OAAO,CAACO,CAAR,CAAU,gCAAV;IAA3B,EADW;EAAA;AAHsC,EAArD;;AAQA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;EACjC,OACE;IAAA,UACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,sBADP;MAEE,SAAS,EAAEV,0BAFb;MAGE,OAAO,EAAEM;IAHX;EADF,EADF;AASD,CAVD;;AAYA,eAAeI,oBAAf"},"metadata":{},"sourceType":"module"}