{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.knownMemberIDs = exports.ids2connections = exports.groupCirclePhotos = exports.groupByIdSelector = exports.getGroupName = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _store = _interopRequireDefault(require(\"../store\"));\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _connectionsSlice = require(\"../reducer/connectionsSlice\");\n\nvar threeKnownMembers = function threeKnownMembers(group) {\n  var _store$getState = _store.default.getState(),\n      _store$getState$user = _store$getState.user,\n      id = _store$getState$user.id,\n      photo = _store$getState$user.photo,\n      name = _store$getState$user.name;\n\n  var connections = (0, _connectionsSlice.selectAllConnections)(_store.default.getState());\n  var members = group.members;\n  var connsWithMe = [].concat((0, _toConsumableArray2.default)(connections), [{\n    photo: photo,\n    name: name,\n    id: id\n  }]);\n  return members.map(function (u) {\n    return connsWithMe.find(function (conn) {\n      return conn.id === u;\n    });\n  }).filter(function (u) {\n    return u;\n  }).sort(function (u1) {\n    return group.admins.includes(u1.id) ? -1 : 1;\n  }).slice(0, 3);\n};\n\nvar groupCirclePhotos = function groupCirclePhotos(group) {\n  return threeKnownMembers(group).map(function (member) {\n    return {\n      photo: member.photo\n    };\n  });\n};\n\nexports.groupCirclePhotos = groupCirclePhotos;\n\nvar getGroupName = function getGroupName(group) {\n  return (group == null ? void 0 : group.name) || threeKnownMembers(group).map(function (member) {\n    return member.name.substr(0, 13);\n  }).join(', ');\n};\n\nexports.getGroupName = getGroupName;\n\nvar ids2connections = function ids2connections(ids) {\n  var _store$getState2 = _store.default.getState(),\n      _store$getState2$user = _store$getState2.user,\n      name = _store$getState2$user.name,\n      id = _store$getState2$user.id,\n      photo = _store$getState2$user.photo;\n\n  return ids.map(function (_id) {\n    if (_id === id) {\n      return {\n        id: id,\n        name: name,\n        photo: photo\n      };\n    }\n\n    var conn = (0, _connectionsSlice.selectConnectionById)(_store.default.getState(), _id);\n\n    if (conn) {\n      return conn;\n    } else {\n      return {\n        id: _id,\n        name: 'Stranger'\n      };\n    }\n  });\n};\n\nexports.ids2connections = ids2connections;\n\nvar knownMemberIDs = function knownMemberIDs(group) {\n  return group.members.filter(function (memberId) {\n    return (0, _connectionsSlice.selectConnectionById)(_store.default.getState(), memberId);\n  });\n};\n\nexports.knownMemberIDs = knownMemberIDs;\nvar groupByIdSelector = (0, _toolkit.createSelector)(function (state) {\n  return state.groups.groups;\n}, function (_, groupId) {\n  return groupId;\n}, function (groups, groupId) {\n  var group = groups.find(function (group) {\n    return group.id === groupId;\n  });\n  return {\n    group: group,\n    admins: group ? group.admins : [],\n    members: group ? group.members : []\n  };\n});\nexports.groupByIdSelector = groupByIdSelector;","map":{"version":3,"names":["threeKnownMembers","group","store","getState","user","id","photo","name","connections","selectAllConnections","members","connsWithMe","map","u","find","conn","filter","sort","u1","admins","includes","slice","groupCirclePhotos","member","getGroupName","substr","join","ids2connections","ids","_id","selectConnectionById","knownMemberIDs","memberId","groupByIdSelector","createSelector","state","groups","_","groupId"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/groups.ts"],"sourcesContent":["import store, {RootState} from '@/store';\nimport {createSelector} from '@reduxjs/toolkit';\nimport {selectAllConnections, selectConnectionById,} from '@/reducer/connectionsSlice';\n\nconst threeKnownMembers = (group: Group): Array<Connection> => {\n  const {\n    user: { id, photo, name },\n  } = store.getState();\n  const connections = selectAllConnections(store.getState());\n  const { members } = group;\n  const connsWithMe = [\n    ...connections,\n    {\n      photo,\n      name,\n      id,\n    },\n  ];\n  return members\n    .map((u) => connsWithMe.find((conn) => conn.id === u))\n    .filter((u) => u)\n    .sort((u1) => (group.admins.includes(u1.id) ? -1 : 1))\n    .slice(0, 3);\n};\n\nexport const groupCirclePhotos = (group: Group) => {\n  return threeKnownMembers(group).map((member) => {\n    return { photo: member.photo };\n  });\n};\n\nexport const getGroupName = (group: Group) => {\n  return (\n    group?.name ||\n    threeKnownMembers(group)\n      .map((member) => member.name.substr(0, 13))\n      .join(', ')\n  );\n};\n\nexport const ids2connections = (ids: Array<string>): Array<Connection> => {\n  const {\n    user: { name, id, photo },\n  } = store.getState();\n\n  return ids.map((_id) => {\n    if (_id === id) {\n      return { id, name, photo };\n    }\n    const conn = selectConnectionById(store.getState(), _id);\n    if (conn) {\n      return conn;\n    } else {\n      return { id: _id, name: 'Stranger' };\n    }\n  });\n};\n\nexport const knownMemberIDs = (group: Group) => {\n  // only members that are in my connections are known\n  return group.members.filter((memberId) =>\n    selectConnectionById(store.getState(), memberId),\n  );\n};\n\nexport const groupByIdSelector = createSelector(\n  (state: RootState) => state.groups.groups,\n  (_, groupId: string) => groupId,\n  (groups: Group[], groupId: string) => {\n    const group = groups.find((group) => group.id === groupId);\n    return {\n      group,\n      admins: group ? group.admins : [],\n      members: group ? group.members : [],\n    };\n  },\n);\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAqC;EAC7D,sBAEIC,cAAA,CAAMC,QAAN,EAFJ;EAAA,2CACEC,IADF;EAAA,IACUC,EADV,wBACUA,EADV;EAAA,IACcC,KADd,wBACcA,KADd;EAAA,IACqBC,IADrB,wBACqBA,IADrB;;EAGA,IAAMC,WAAW,GAAG,IAAAC,sCAAA,EAAqBP,cAAA,CAAMC,QAAN,EAArB,CAApB;EACA,IAAQO,OAAR,GAAoBT,KAApB,CAAQS,OAAR;EACA,IAAMC,WAAW,8CACZH,WADY,IAEf;IACEF,KAAK,EAALA,KADF;IAEEC,IAAI,EAAJA,IAFF;IAGEF,EAAE,EAAFA;EAHF,CAFe,EAAjB;EAQA,OAAOK,OAAO,CACXE,GADI,CACA,UAACC,CAAD;IAAA,OAAOF,WAAW,CAACG,IAAZ,CAAiB,UAACC,IAAD;MAAA,OAAUA,IAAI,CAACV,EAAL,KAAYQ,CAAtB;IAAA,CAAjB,CAAP;EAAA,CADA,EAEJG,MAFI,CAEG,UAACH,CAAD;IAAA,OAAOA,CAAP;EAAA,CAFH,EAGJI,IAHI,CAGC,UAACC,EAAD;IAAA,OAASjB,KAAK,CAACkB,MAAN,CAAaC,QAAb,CAAsBF,EAAE,CAACb,EAAzB,IAA+B,CAAC,CAAhC,GAAoC,CAA7C;EAAA,CAHD,EAIJgB,KAJI,CAIE,CAJF,EAIK,CAJL,CAAP;AAKD,CAnBD;;AAqBO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACrB,KAAD,EAAkB;EACjD,OAAOD,iBAAiB,CAACC,KAAD,CAAjB,CAAyBW,GAAzB,CAA6B,UAACW,MAAD,EAAY;IAC9C,OAAO;MAAEjB,KAAK,EAAEiB,MAAM,CAACjB;IAAhB,CAAP;EACD,CAFM,CAAP;AAGD,CAJM;;;;AAMA,IAAMkB,YAAY,GAAG,SAAfA,YAAe,CAACvB,KAAD,EAAkB;EAC5C,OACE,CAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEM,IAAP,KACAP,iBAAiB,CAACC,KAAD,CAAjB,CACGW,GADH,CACO,UAACW,MAAD;IAAA,OAAYA,MAAM,CAAChB,IAAP,CAAYkB,MAAZ,CAAmB,CAAnB,EAAsB,EAAtB,CAAZ;EAAA,CADP,EAEGC,IAFH,CAEQ,IAFR,CAFF;AAMD,CAPM;;;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAA2C;EACxE,uBAEI1B,cAAA,CAAMC,QAAN,EAFJ;EAAA,6CACEC,IADF;EAAA,IACUG,IADV,yBACUA,IADV;EAAA,IACgBF,EADhB,yBACgBA,EADhB;EAAA,IACoBC,KADpB,yBACoBA,KADpB;;EAIA,OAAOsB,GAAG,CAAChB,GAAJ,CAAQ,UAACiB,GAAD,EAAS;IACtB,IAAIA,GAAG,KAAKxB,EAAZ,EAAgB;MACd,OAAO;QAAEA,EAAE,EAAFA,EAAF;QAAME,IAAI,EAAJA,IAAN;QAAYD,KAAK,EAALA;MAAZ,CAAP;IACD;;IACD,IAAMS,IAAI,GAAG,IAAAe,sCAAA,EAAqB5B,cAAA,CAAMC,QAAN,EAArB,EAAuC0B,GAAvC,CAAb;;IACA,IAAId,IAAJ,EAAU;MACR,OAAOA,IAAP;IACD,CAFD,MAEO;MACL,OAAO;QAAEV,EAAE,EAAEwB,GAAN;QAAWtB,IAAI,EAAE;MAAjB,CAAP;IACD;EACF,CAVM,CAAP;AAWD,CAhBM;;;;AAkBA,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAAC9B,KAAD,EAAkB;EAE9C,OAAOA,KAAK,CAACS,OAAN,CAAcM,MAAd,CAAqB,UAACgB,QAAD;IAAA,OAC1B,IAAAF,sCAAA,EAAqB5B,cAAA,CAAMC,QAAN,EAArB,EAAuC6B,QAAvC,CAD0B;EAAA,CAArB,CAAP;AAGD,CALM;;;AAOA,IAAMC,iBAAiB,GAAG,IAAAC,uBAAA,EAC/B,UAACC,KAAD;EAAA,OAAsBA,KAAK,CAACC,MAAN,CAAaA,MAAnC;AAAA,CAD+B,EAE/B,UAACC,CAAD,EAAIC,OAAJ;EAAA,OAAwBA,OAAxB;AAAA,CAF+B,EAG/B,UAACF,MAAD,EAAkBE,OAAlB,EAAsC;EACpC,IAAMrC,KAAK,GAAGmC,MAAM,CAACtB,IAAP,CAAY,UAACb,KAAD;IAAA,OAAWA,KAAK,CAACI,EAAN,KAAaiC,OAAxB;EAAA,CAAZ,CAAd;EACA,OAAO;IACLrC,KAAK,EAALA,KADK;IAELkB,MAAM,EAAElB,KAAK,GAAGA,KAAK,CAACkB,MAAT,GAAkB,EAF1B;IAGLT,OAAO,EAAET,KAAK,GAAGA,KAAK,CAACS,OAAT,GAAmB;EAH5B,CAAP;AAKD,CAV8B,CAA1B"},"metadata":{},"sourceType":"script"}