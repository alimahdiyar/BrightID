{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { connectionLevelColors, connectionLevelStrings } from \"../../utils/connectionLevelStrings\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { GREY, RED } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { connection_levels } from \"../../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ConnectionStatus = function ConnectionStatus(_ref) {\n  var index = _ref.index,\n      status = _ref.status,\n      reportReason = _ref.reportReason,\n      connectionDate = _ref.connectionDate,\n      infoText = _ref.infoText,\n      level = _ref.level;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var ConnectionDate = connectionDate ? _jsx(Text, {\n    style: styles.connectionTime,\n    testID: \"connection_time-\" + index,\n    children: t('common.tag.connectionDate', {\n      date: moment(connectionDate).fromNow()\n    })\n  }) : null;\n  var InfoText = infoText ? _jsx(Text, {\n    style: styles.infoText,\n    testID: \"info_text-\" + index,\n    children: infoText\n  }) : null;\n\n  if (status === 'initiated') {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: _jsx(Text, {\n        style: styles.waitingMessage,\n        children: t('connections.tag.waiting')\n      })\n    });\n  } else if (status === 'stale') {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: _jsx(Text, {\n        style: styles.waitingMessage,\n        children: t('connections.tag.failed')\n      })\n    });\n  } else if (level === connection_levels.REPORTED) {\n    return _jsxs(View, {\n      style: styles.statusContainer,\n      children: [_jsx(Text, {\n        style: [styles.deletedMessage, {\n          marginTop: 1\n        }],\n        children: reportReason && reportReason !== 'other' ? t('connections.tag.reportedAs', {\n          flag: reportReason\n        }) : t('connections.tag.reported')\n      }), ConnectionDate, InfoText]\n    });\n  } else if (status === 'deleted') {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: _jsx(Text, {\n        style: styles.deletedMessage,\n        children: t('connections.tag.deleted')\n      })\n    });\n  } else {\n    return _jsxs(View, {\n      style: styles.statusContainer,\n      testID: \"connection-\" + index,\n      children: [_jsx(Text, {\n        testID: \"connection_level-\" + index,\n        style: [styles.connectionLevel, {\n          color: connectionLevelColors[level]\n        }],\n        children: connectionLevelStrings[level]\n      }), ConnectionDate, InfoText]\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: '#fff',\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 16 : 14\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 12 : 11,\n    marginTop: DEVICE_LARGE ? 3 : 1\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: '#B64B32'\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: RED\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 13 : 11,\n    color: '#e39f2f',\n    marginTop: DEVICE_LARGE ? 2 : 0\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 14 : 12,\n    color: '#FF0800',\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize'\n  },\n  verificationSticker: {\n    marginLeft: DEVICE_LARGE ? 5 : 3.5\n  },\n  removeButton: {\n    width: DEVICE_LARGE ? 36 : 32,\n    position: 'absolute',\n    right: 0\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic'\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/ConnectionStatus.tsx"],"names":["ConnectionStatus","index","status","reportReason","connectionDate","infoText","level","t","useTranslation","ConnectionDate","styles","date","moment","InfoText","connection_levels","marginTop","flag","color","connectionLevelColors","connectionLevelStrings","StyleSheet","container","flexDirection","height","DEVICE_LARGE","alignItems","justifyContent","backgroundColor","card","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderBottomLeftRadius","photo","borderRadius","marginLeft","info","flex","nameContainer","name","fontFamily","fontSize","statusContainer","connectionLevel","connectionTime","moreIcon","marginRight","waitingMessage","deletedMessage","textTransform","verificationSticker","removeButton","position","right","connectedText","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport {\n  connectionLevelColors,\n  connectionLevelStrings,\n} from '@/utils/connectionLevelStrings';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { GREY, RED } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { connection_levels } from '@/utils/constants';\n\ntype Props = {\n  index: number;\n  status: string;\n  reportReason: string;\n  connectionDate?: number;\n  infoText?: string;\n  level: ConnectionLevel;\n};\n\nexport const ConnectionStatus = ({\n  index,\n  status,\n  reportReason,\n  connectionDate,\n  infoText,\n  level,\n}: Props) => {\n  const { t } = useTranslation();\n\n  const ConnectionDate = connectionDate ? (\n    <Text style={styles.connectionTime} testID={`connection_time-${index}`}>\n      {t('common.tag.connectionDate', {\n        date: moment(connectionDate).fromNow(),\n      })}\n    </Text>\n  ) : null;\n\n  const InfoText = infoText ? (\n    <Text style={styles.infoText} testID={`info_text-${index}`}>\n      {infoText}\n    </Text>\n  ) : null;\n\n  if (status === 'initiated') {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={styles.waitingMessage}>\n          {t('connections.tag.waiting')}\n        </Text>\n      </View>\n    );\n  } else if (status === 'stale') {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={styles.waitingMessage}>{t('connections.tag.failed')}</Text>\n      </View>\n    );\n  } else if (level === connection_levels.REPORTED) {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={[styles.deletedMessage, { marginTop: 1 }]}>\n          {reportReason && reportReason !== 'other'\n            ? t('connections.tag.reportedAs', {\n                flag: reportReason,\n              })\n            : t('connections.tag.reported')}\n        </Text>\n        {ConnectionDate}\n        {InfoText}\n      </View>\n    );\n  } else if (status === 'deleted') {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={styles.deletedMessage}>\n          {t('connections.tag.deleted')}\n        </Text>\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.statusContainer} testID={`connection-${index}`}>\n        <Text\n          testID={`connection_level-${index}`}\n          style={[\n            styles.connectionLevel,\n            { color: connectionLevelColors[level] },\n          ]}\n        >\n          {connectionLevelStrings[level]}\n        </Text>\n        {ConnectionDate}\n        {InfoText}\n      </View>\n    );\n  }\n};\n\n// TODO: missing connectedText\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: '#fff',\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10,\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30,\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 16 : 14,\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 12 : 11,\n    marginTop: DEVICE_LARGE ? 3 : 1,\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: '#B64B32',\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: RED,\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23,\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 13 : 11,\n    color: '#e39f2f',\n    marginTop: DEVICE_LARGE ? 2 : 0,\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 14 : 12,\n    color: '#FF0800',\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize',\n  },\n  verificationSticker: {\n    marginLeft: DEVICE_LARGE ? 5 : 3.5,\n  },\n  removeButton: {\n    width: DEVICE_LARGE ? 36 : 32,\n    position: 'absolute',\n    right: 0,\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}