{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createSelector, createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nimport { RESET_STORE } from \"../actions/resetStore\";\nvar linkedContextsAdapter = createEntityAdapter({\n  selectId: function selectId(linkedContext) {\n    return linkedContext.contextId;\n  }\n});\nvar sigsAdapter = createEntityAdapter({\n  selectId: function selectId(sig) {\n    return \"\" + sig.uid;\n  }\n});\nvar initialState = {\n  apps: [],\n  linkedContexts: linkedContextsAdapter.getInitialState(),\n  sigs: sigsAdapter.getInitialState()\n};\nvar appsSlice = createSlice({\n  name: 'apps',\n  initialState: initialState,\n  reducers: {\n    setApps: function setApps(state, action) {\n      state.apps = action.payload;\n    },\n    addLinkedContext: function addLinkedContext(state, action) {\n      state.linkedContexts = linkedContextsAdapter.addOne(state.linkedContexts, action);\n    },\n    removeLinkedContext: function removeLinkedContext(state, action) {\n      state.linkedContexts = linkedContextsAdapter.removeOne(state.linkedContexts, action);\n    },\n    updateLinkedContext: function updateLinkedContext(state, action) {\n      var update = {\n        id: action.payload.contextId,\n        changes: action.payload\n      };\n      state.linkedContexts = linkedContextsAdapter.updateOne(state.linkedContexts, update);\n    },\n    upsertSig: function upsertSig(state, action) {\n      state.sigs = sigsAdapter.upsertOne(state.sigs, action);\n    },\n    removeSig: function removeSig(state, action) {\n      state.sigs = sigsAdapter.removeOne(state.sigs, action);\n    },\n    removeAllSigs: function removeAllSigs(state) {\n      state.sigs = sigsAdapter.removeAll(state.sigs);\n    },\n    updateSig: function updateSig(state, action) {\n      state.sigs = sigsAdapter.updateOne(state.sigs, action.payload);\n    }\n  },\n  extraReducers: _defineProperty({}, RESET_STORE, function () {\n    return initialState;\n  })\n});\nvar _appsSlice$actions = appsSlice.actions,\n    setApps = _appsSlice$actions.setApps,\n    addLinkedContext = _appsSlice$actions.addLinkedContext,\n    removeLinkedContext = _appsSlice$actions.removeLinkedContext,\n    updateLinkedContext = _appsSlice$actions.updateLinkedContext,\n    upsertSig = _appsSlice$actions.upsertSig,\n    removeSig = _appsSlice$actions.removeSig,\n    removeAllSigs = _appsSlice$actions.removeAllSigs,\n    updateSig = _appsSlice$actions.updateSig;\nexport { setApps, addLinkedContext, removeLinkedContext, updateLinkedContext, upsertSig, removeSig, removeAllSigs, updateSig };\n\nvar _linkedContextsAdapte = linkedContextsAdapter.getSelectors(function (state) {\n  return state.apps.linkedContexts;\n}),\n    selectLinkedContextById = _linkedContextsAdapte.selectById,\n    selectAllLinkedContexts = _linkedContextsAdapte.selectAll;\n\nexport { selectLinkedContextById, selectAllLinkedContexts };\n\nvar _sigsAdapter$getSelec = sigsAdapter.getSelectors(function (state) {\n  return state.apps.sigs;\n}),\n    selectAllSigs = _sigsAdapter$getSelec.selectAll;\n\nexport { selectAllSigs };\nexport var linkedContextTotal = createSelector(selectAllLinkedContexts, function (contexts) {\n  return contexts.reduce(function (acc, link) {\n    return link.state === 'applied' ? acc + 1 : acc;\n  }, 0);\n});\nexport var selectLinkedContext = createSelector(selectAllLinkedContexts, function (_, context) {\n  return context;\n}, function (contexts, context) {\n  return contexts.find(function (link) {\n    return link.context === context;\n  });\n});\nexport var selectPendingLinkedContext = createSelector(selectAllLinkedContexts, function (contexts) {\n  return contexts.find(function (link) {\n    return link.state === 'pending';\n  });\n});\nexport var selectAllApps = function selectAllApps(state) {\n  return state.apps.apps;\n};\nexport var selectAllLinkedSigs = createSelector(selectAllSigs, function (sigs) {\n  return sigs.filter(function (sig) {\n    return sig.linked;\n  });\n});\nexport var createSelectLinkedSigsForApp = function createSelectLinkedSigsForApp(appId) {\n  return createSelector(selectAllLinkedSigs, function (linkedSigs) {\n    return linkedSigs.filter(function (sig) {\n      return sig.app === appId;\n    });\n  });\n};\nexport var selectBlindSigApps = function selectBlindSigApps(state) {\n  return state.apps.apps.filter(function (app) {\n    return app.usingBlindSig;\n  });\n};\nexport var selectExpireableBlindSigApps = createSelector(selectBlindSigApps, function (apps) {\n  return apps.filter(function (app) {\n    return app.verificationExpirationLength;\n  });\n});\nexport default appsSlice.reducer;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/reducer/appsSlice.ts"],"names":["linkedContextsAdapter","createEntityAdapter","selectId","linkedContext","sigsAdapter","sig","initialState","apps","linkedContexts","sigs","appsSlice","createSlice","name","reducers","setApps","state","action","addLinkedContext","removeLinkedContext","updateLinkedContext","update","id","changes","upsertSig","removeSig","removeAllSigs","updateSig","extraReducers","selectLinkedContextById","selectAllLinkedContexts","selectAllSigs","linkedContextTotal","createSelector","contexts","link","acc","selectLinkedContext","selectPendingLinkedContext","selectAllApps","selectAllLinkedSigs","createSelectLinkedSigsForApp","linkedSigs","selectBlindSigApps","app","selectExpireableBlindSigApps"],"mappings":"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","sourcesContent":["import {\n  createSelector,\n  createSlice,\n  createEntityAdapter,\n  PayloadAction,\n  Update,\n} from '@reduxjs/toolkit';\nimport { RESET_STORE } from '@/actions/resetStore';\n\n/* ******** INITIAL STATE ************** */\n\nconst linkedContextsAdapter = createEntityAdapter<ContextInfo>({\n  selectId: (linkedContext) => linkedContext.contextId,\n});\n\nconst sigsAdapter = createEntityAdapter<SigInfo>({\n  selectId: (sig) => `${sig.uid}`,\n});\n\nconst initialState: AppsState = {\n  apps: [],\n  linkedContexts: linkedContextsAdapter.getInitialState(),\n  sigs: sigsAdapter.getInitialState(),\n};\n\nconst appsSlice = createSlice({\n  name: 'apps',\n  initialState,\n  reducers: {\n    setApps(state, action: PayloadAction<AppInfo[]>) {\n      state.apps = action.payload;\n    },\n    addLinkedContext(state, action: PayloadAction<ContextInfo>) {\n      state.linkedContexts = linkedContextsAdapter.addOne(\n        state.linkedContexts,\n        action,\n      );\n    },\n    removeLinkedContext(state, action: PayloadAction<string>) {\n      state.linkedContexts = linkedContextsAdapter.removeOne(\n        state.linkedContexts,\n        action,\n      );\n    },\n    updateLinkedContext(state, action: PayloadAction<Partial<ContextInfo>>) {\n      const update: Update<ContextInfo> = {\n        id: action.payload.contextId,\n        changes: action.payload,\n      };\n      state.linkedContexts = linkedContextsAdapter.updateOne(\n        state.linkedContexts,\n        update,\n      );\n    },\n    upsertSig(state, action: PayloadAction<SigInfo>) {\n      state.sigs = sigsAdapter.upsertOne(state.sigs, action);\n    },\n    removeSig(state, action: PayloadAction<string>) {\n      state.sigs = sigsAdapter.removeOne(state.sigs, action);\n    },\n    removeAllSigs(state) {\n      state.sigs = sigsAdapter.removeAll(state.sigs);\n    },\n    updateSig(state, action: PayloadAction<Update<SigInfo>>) {\n      state.sigs = sigsAdapter.updateOne(state.sigs, action.payload);\n    },\n  },\n  extraReducers: {\n    [RESET_STORE]: () => {\n      return initialState;\n    },\n  },\n});\n\n// Export app actions\nexport const {\n  setApps,\n  addLinkedContext,\n  removeLinkedContext,\n  updateLinkedContext,\n  upsertSig,\n  removeSig,\n  removeAllSigs,\n  updateSig,\n} = appsSlice.actions;\n\nexport const {\n  selectById: selectLinkedContextById,\n  selectAll: selectAllLinkedContexts,\n} = linkedContextsAdapter.getSelectors(\n  (state: State) => state.apps.linkedContexts,\n);\n\nexport const { selectAll: selectAllSigs } = sigsAdapter.getSelectors(\n  (state: State) => state.apps.sigs,\n);\n\nexport const linkedContextTotal = createSelector(\n  selectAllLinkedContexts,\n  (contexts) =>\n    contexts.reduce(\n      (acc, link) => (link.state === 'applied' ? acc + 1 : acc),\n      0,\n    ),\n);\n\nexport const selectLinkedContext = createSelector(\n  selectAllLinkedContexts,\n  (_: State, context: string) => context,\n  (contexts, context) => contexts.find((link) => link.context === context),\n);\n\nexport const selectPendingLinkedContext = createSelector(\n  selectAllLinkedContexts,\n  (contexts) => contexts.find((link) => link.state === 'pending'),\n);\n\nexport const selectAllApps = (state: State) => state.apps.apps;\n\nexport const selectAllLinkedSigs = createSelector(selectAllSigs, (sigs) =>\n  sigs.filter((sig) => sig.linked),\n);\n\nexport const createSelectLinkedSigsForApp = (appId) =>\n  createSelector(selectAllLinkedSigs, (linkedSigs) => {\n    // return all linked sigs that belong to provided app\n    return linkedSigs.filter((sig) => sig.app === appId);\n  });\n\nexport const selectBlindSigApps = (state: State) =>\n  state.apps.apps.filter((app) => app.usingBlindSig);\n\nexport const selectExpireableBlindSigApps = createSelector(\n  selectBlindSigApps,\n  (apps) => apps.filter((app) => app.verificationExpirationLength),\n);\n\n// Export reducer\nexport default appsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}