{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    justifyContent: 'center'\n  }, StyleSheet.absoluteFillObject),\n  finder: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  topLeftEdge: {\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  topRightEdge: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  bottomLeftEdge: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  bottomRightEdge: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0\n  },\n  maskOuter: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  maskInner: {\n    backgroundColor: 'transparent'\n  },\n  maskRow: {\n    width: '100%'\n  },\n  maskCenter: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  animatedLine: {\n    position: 'absolute',\n    elevation: 4,\n    zIndex: 0\n  }\n});\n\nvar BarcodeMask = function (_React$Component) {\n  _inherits(BarcodeMask, _React$Component);\n\n  var _super = _createSuper(BarcodeMask);\n\n  function BarcodeMask(props) {\n    var _this;\n\n    _classCallCheck(this, BarcodeMask);\n\n    _this = _super.call(this, props);\n\n    _this._startLineAnimation = function () {\n      var intervalId = setInterval(function () {\n        var _this$state = _this.state,\n            finderLayout = _this$state.finderLayout,\n            intervalId = _this$state.intervalId;\n\n        if (finderLayout && finderLayout.height > 0) {\n          _this._animateLoop();\n\n          clearInterval(intervalId);\n        }\n      }, 500);\n\n      _this.setState({\n        intervalId: intervalId\n      });\n    };\n\n    _this._animateLoop = function () {\n      var _this$props = _this.props,\n          animatedLineOrientation = _this$props.animatedLineOrientation,\n          lineAnimationDuration = _this$props.lineAnimationDuration,\n          useNativeDriver = _this$props.useNativeDriver;\n      var lineTravelWindowDistance = _this.state.lineTravelWindowDistance;\n      var isHorizontal = animatedLineOrientation !== 'vertical';\n      var propertyToChange = isHorizontal ? 'top' : 'left';\n      var startValue = -lineTravelWindowDistance;\n      var endValue = lineTravelWindowDistance;\n      _this.animation = Animated.loop(Animated.sequence([Animated.timing(_this.state[propertyToChange], {\n        toValue: endValue,\n        duration: lineAnimationDuration,\n        useNativeDriver: useNativeDriver\n      }), Animated.timing(_this.state[propertyToChange], {\n        toValue: startValue,\n        duration: lineAnimationDuration,\n        useNativeDriver: useNativeDriver\n      })]));\n\n      _this.animation.start();\n    };\n\n    _this._applyMaskFrameStyle = function () {\n      var _this$props2 = _this.props,\n          backgroundColor = _this$props2.backgroundColor,\n          outerMaskOpacity = _this$props2.outerMaskOpacity;\n      return {\n        backgroundColor: backgroundColor,\n        opacity: outerMaskOpacity,\n        flex: 1\n      };\n    };\n\n    _this._renderEdge = function (edgePosition) {\n      var _this$props3 = _this.props,\n          edgeWidth = _this$props3.edgeWidth,\n          edgeHeight = _this$props3.edgeHeight,\n          edgeColor = _this$props3.edgeColor,\n          edgeBorderWidth = _this$props3.edgeBorderWidth,\n          edgeRadius = _this$props3.edgeRadius;\n      var edgeRadiusOffset = _this.state.edgeRadiusOffset;\n      var defaultStyle = {\n        width: edgeWidth,\n        height: edgeHeight,\n        borderColor: edgeColor\n      };\n      var edgeBorderStyle = {\n        topRight: {\n          borderRightWidth: edgeBorderWidth,\n          borderTopWidth: edgeBorderWidth,\n          borderTopRightRadius: edgeRadius,\n          top: edgeRadiusOffset,\n          right: edgeRadiusOffset\n        },\n        topLeft: {\n          borderLeftWidth: edgeBorderWidth,\n          borderTopWidth: edgeBorderWidth,\n          borderTopLeftRadius: edgeRadius,\n          top: edgeRadiusOffset,\n          left: edgeRadiusOffset\n        },\n        bottomRight: {\n          borderRightWidth: edgeBorderWidth,\n          borderBottomWidth: edgeBorderWidth,\n          borderBottomRightRadius: edgeRadius,\n          bottom: edgeRadiusOffset,\n          right: edgeRadiusOffset\n        },\n        bottomLeft: {\n          borderLeftWidth: edgeBorderWidth,\n          borderBottomWidth: edgeBorderWidth,\n          borderBottomLeftRadius: edgeRadius,\n          bottom: edgeRadiusOffset,\n          left: edgeRadiusOffset\n        }\n      };\n      return _jsx(View, {\n        style: [defaultStyle, styles[edgePosition + 'Edge'], edgeBorderStyle[edgePosition]]\n      });\n    };\n\n    _this._onFinderLayoutMeasured = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var _this$props4 = _this.props,\n          animatedLineOrientation = _this$props4.animatedLineOrientation,\n          onLayoutMeasured = _this$props4.onLayoutMeasured;\n      var layout = nativeEvent.layout;\n      var isHorizontal = animatedLineOrientation !== 'vertical';\n\n      var travelDistance = _this._calculateLineTravelWindowDistance({\n        layout: layout,\n        isHorizontalOrientation: isHorizontal\n      });\n\n      _this.setState({\n        top: new Animated.Value(-travelDistance),\n        left: new Animated.Value(-travelDistance),\n        lineTravelWindowDistance: travelDistance,\n        finderLayout: layout\n      });\n\n      if (onLayoutMeasured) {\n        onLayoutMeasured({\n          nativeEvent: nativeEvent\n        });\n      }\n    };\n\n    _this.state = {\n      edgeRadiusOffset: props.edgeRadius ? -Math.abs(props.edgeRadius / 3) : 0\n    };\n    return _this;\n  }\n\n  _createClass(BarcodeMask, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._startLineAnimation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.animation) {\n        this.animation.stop();\n      }\n    }\n  }, {\n    key: \"_calculateLineTravelWindowDistance\",\n    value: function _calculateLineTravelWindowDistance(_ref2) {\n      var layout = _ref2.layout,\n          isHorizontalOrientation = _ref2.isHorizontalOrientation;\n      return ((isHorizontalOrientation ? layout.height : layout.width) - 10) / 2;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          width = _this$props5.width,\n          height = _this$props5.height,\n          showAnimatedLine = _this$props5.showAnimatedLine,\n          animatedLineColor = _this$props5.animatedLineColor,\n          animatedLineWidth = _this$props5.animatedLineWidth,\n          animatedLineHeight = _this$props5.animatedLineHeight,\n          animatedLineOrientation = _this$props5.animatedLineOrientation,\n          edgeBorderWidth = _this$props5.edgeBorderWidth;\n      var animatedLineStyle = {\n        backgroundColor: animatedLineColor,\n        height: animatedLineHeight,\n        maxHeight: height,\n        width: animatedLineWidth,\n        maxWidth: width,\n        margin: edgeBorderWidth\n      };\n      var _this$state2 = this.state,\n          finderLayout = _this$state2.finderLayout,\n          top = _this$state2.top,\n          left = _this$state2.left;\n\n      if (finderLayout && animatedLineOrientation !== 'vertical') {\n        animatedLineStyle.transform = [{\n          translateY: top\n        }];\n      } else if (finderLayout) {\n        animatedLineStyle.transform = [{\n          translateX: left\n        }];\n      }\n\n      return _jsxs(View, {\n        style: [styles.container],\n        children: [_jsxs(View, {\n          style: [styles.finder, {\n            width: width,\n            height: height\n          }],\n          onLayout: this._onFinderLayoutMeasured,\n          children: [this._renderEdge('topLeft'), this._renderEdge('topRight'), this._renderEdge('bottomLeft'), this._renderEdge('bottomRight'), showAnimatedLine && _jsx(Animated.View, {\n            style: [styles.animatedLine, animatedLineStyle]\n          })]\n        }), _jsxs(View, {\n          style: styles.maskOuter,\n          children: [_jsx(View, {\n            style: [styles.maskRow, this._applyMaskFrameStyle()]\n          }), _jsxs(View, {\n            style: [{\n              height: height\n            }, styles.maskCenter],\n            children: [_jsx(View, {\n              style: [this._applyMaskFrameStyle()]\n            }), _jsx(View, {\n              style: [styles.maskInner, {\n                width: width,\n                height: height\n              }]\n            }), _jsx(View, {\n              style: [this._applyMaskFrameStyle()]\n            })]\n          }), _jsx(View, {\n            style: [styles.maskRow, this._applyMaskFrameStyle()]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return BarcodeMask;\n}(React.Component);\n\nvar propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeColor: PropTypes.string,\n  edgeBorderWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeRadius: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  outerMaskOpacity: PropTypes.number,\n  showAnimatedLine: PropTypes.bool,\n  animatedLineColor: PropTypes.string,\n  animatedLineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lineAnimationDuration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineOrientation: PropTypes.string,\n  useNativeDriver: PropTypes.bool,\n  onLayoutMeasured: PropTypes.func\n};\nvar defaultProps = {\n  width: 280,\n  height: 230,\n  edgeWidth: 20,\n  edgeHeight: 20,\n  edgeColor: '#FFF',\n  edgeBorderWidth: 4,\n  backgroundColor: 'rgb(0, 0, 0)',\n  outerMaskOpacity: 0.6,\n  showAnimatedLine: true,\n  animatedLineColor: '#FFF',\n  animatedLineHeight: 2,\n  animatedLineWidth: '85%',\n  lineAnimationDuration: 5000,\n  animatedLineOrientation: 'horizontal',\n  useNativeDriver: true\n};\nBarcodeMask.propTypes = propTypes;\nBarcodeMask.defaultProps = defaultProps;\nexport default BarcodeMask;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-barcode-mask/index.js"],"names":["styles","StyleSheet","container","alignItems","justifyContent","finder","topLeftEdge","position","top","left","topRightEdge","right","bottomLeftEdge","bottom","bottomRightEdge","maskOuter","width","height","maskInner","backgroundColor","maskRow","maskCenter","display","flexDirection","animatedLine","elevation","zIndex","BarcodeMask","React","Component","edgeRadiusOffset","props","Math","intervalId","setInterval","finderLayout","clearInterval","animatedLineOrientation","lineAnimationDuration","useNativeDriver","lineTravelWindowDistance","isHorizontal","propertyToChange","startValue","endValue","Animated","toValue","duration","outerMaskOpacity","opacity","flex","edgeWidth","edgeHeight","edgeColor","edgeBorderWidth","edgeRadius","defaultStyle","borderColor","edgeBorderStyle","topRight","borderRightWidth","borderTopWidth","borderTopRightRadius","topLeft","borderLeftWidth","borderTopLeftRadius","bottomRight","borderBottomWidth","borderBottomRightRadius","bottomLeft","borderBottomLeftRadius","edgePosition","layout","isHorizontalOrientation","nativeEvent","onLayoutMeasured","travelDistance","showAnimatedLine","animatedLineColor","animatedLineWidth","animatedLineHeight","animatedLineStyle","maxHeight","maxWidth","margin","translateY","translateX","propTypes","PropTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...StyleSheet.absoluteFillObject,\n  },\n  finder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  topLeftEdge: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  topRightEdge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  bottomLeftEdge: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  },\n  bottomRightEdge: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n  },\n  maskOuter: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  maskInner: {\n    backgroundColor: 'transparent',\n  },\n  maskRow: {\n    width: '100%',\n  },\n  maskCenter: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  animatedLine: {\n    position: 'absolute',\n    elevation: 4,\n    zIndex: 0,\n  },\n});\nclass BarcodeMask extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        edgeRadiusOffset: props.edgeRadius ? -Math.abs(props.edgeRadius / 3) : 0\n    };\n  }\n\n  componentDidMount() {\n    this._startLineAnimation();\n  }\n\n  componentWillUnmount() {\n    if (this.animation) {\n      this.animation.stop();\n    }\n  }\n\n  _startLineAnimation = () => {\n    const intervalId = setInterval(() => {\n      const { finderLayout, intervalId } = this.state;\n      if (finderLayout && finderLayout.height > 0) {\n        this._animateLoop();\n        clearInterval(intervalId);\n      }\n    }, 500);\n    this.setState({\n      intervalId,\n    });\n  };\n\n  _animateLoop = () => {\n    const { \n      animatedLineOrientation,\n      lineAnimationDuration,\n      useNativeDriver\n    } = this.props;\n    const { lineTravelWindowDistance } = this.state;\n    const isHorizontal = animatedLineOrientation !== 'vertical';\n    const propertyToChange = isHorizontal ? 'top' : 'left';\n    const startValue = -lineTravelWindowDistance;\n    const endValue = lineTravelWindowDistance;\n    this.animation = Animated.loop(\n      Animated.sequence([\n        Animated.timing(this.state[propertyToChange], {\n          toValue: endValue,\n          duration: lineAnimationDuration,\n          useNativeDriver\n        }),\n        Animated.timing(this.state[propertyToChange], {\n          toValue: startValue,\n          duration: lineAnimationDuration,\n          useNativeDriver\n        })\n      ])\n    );\n    this.animation.start();\n  }\n\n  _applyMaskFrameStyle = () => {\n    const { backgroundColor, outerMaskOpacity } = this.props;\n    return { backgroundColor, opacity: outerMaskOpacity, flex: 1 };\n  };\n\n  _renderEdge = (edgePosition) => {\n    const { edgeWidth, edgeHeight, edgeColor, edgeBorderWidth, edgeRadius } = this.props;\n    const { edgeRadiusOffset } = this.state;\n    const defaultStyle = {\n        width: edgeWidth,\n        height: edgeHeight,\n        borderColor: edgeColor\n    };\n    const edgeBorderStyle = {\n      topRight: {\n        borderRightWidth: edgeBorderWidth,\n        borderTopWidth: edgeBorderWidth,\n        borderTopRightRadius: edgeRadius,\n        top: edgeRadiusOffset,\n        right: edgeRadiusOffset,\n      },\n      topLeft: {\n        borderLeftWidth: edgeBorderWidth,\n        borderTopWidth: edgeBorderWidth,\n        borderTopLeftRadius: edgeRadius,\n        top: edgeRadiusOffset,\n        left: edgeRadiusOffset\n      },\n      bottomRight: {\n        borderRightWidth: edgeBorderWidth,\n        borderBottomWidth: edgeBorderWidth,\n        borderBottomRightRadius: edgeRadius,\n        bottom: edgeRadiusOffset,\n        right: edgeRadiusOffset\n      },\n      bottomLeft: {\n        borderLeftWidth: edgeBorderWidth,\n        borderBottomWidth: edgeBorderWidth,\n        borderBottomLeftRadius: edgeRadius,\n        bottom: edgeRadiusOffset,\n        left: edgeRadiusOffset,\n      },\n    };\n    return <View style={[defaultStyle, styles[edgePosition + 'Edge'], edgeBorderStyle[edgePosition]]} />;\n  };\n\n  _calculateLineTravelWindowDistance({ layout, isHorizontalOrientation }) {\n    return (((isHorizontalOrientation ? layout.height : layout.width) - 10)/2);\n  }\n\n  _onFinderLayoutMeasured = ({ nativeEvent }) => {\n    const { animatedLineOrientation, onLayoutMeasured } = this.props;\n    const { layout } = nativeEvent;\n    const isHorizontal = animatedLineOrientation !== 'vertical';\n    const travelDistance = this._calculateLineTravelWindowDistance({ \n        layout, \n        isHorizontalOrientation: isHorizontal,\n    });\n    this.setState({\n        top: new Animated.Value(-travelDistance),\n        left: new Animated.Value(-travelDistance),\n        lineTravelWindowDistance: travelDistance, \n        finderLayout: layout,\n    })\n    if (onLayoutMeasured) {\n        onLayoutMeasured({ nativeEvent });\n    }\n  }\n\n  render() {\n    const { \n      width,\n      height,\n      showAnimatedLine,\n      animatedLineColor,\n      animatedLineWidth,\n      animatedLineHeight,\n      animatedLineOrientation,\n      edgeBorderWidth\n    } = this.props;\n    const animatedLineStyle = {\n      backgroundColor: animatedLineColor,\n      height: animatedLineHeight,\n      maxHeight: height,\n      width: animatedLineWidth,\n      maxWidth: width,\n      margin: edgeBorderWidth\n    };\n    const { finderLayout, top, left } = this.state;\n    if (finderLayout && animatedLineOrientation !== 'vertical') {\n        animatedLineStyle.transform = [{ \n            translateY: top\n        }]\n    } else if (finderLayout) {\n        animatedLineStyle.transform = [{ \n            translateX: left\n        }]\n    }\n\n    return (\n      <View style={[styles.container]}>\n        <View\n          style={[ styles.finder, { width, height } ]}\n          onLayout={this._onFinderLayoutMeasured}\n        >\n          {this._renderEdge('topLeft')}\n          {this._renderEdge('topRight')}\n          {this._renderEdge('bottomLeft')}\n          {this._renderEdge('bottomRight')}\n          {showAnimatedLine && (\n            <Animated.View\n              style={[ styles.animatedLine, animatedLineStyle ]}\n            />\n          )}\n        </View>\n        <View style={styles.maskOuter}>\n          <View style={[styles.maskRow, this._applyMaskFrameStyle()]} />\n          <View style={[{ height }, styles.maskCenter]} >\n            <View style={[this._applyMaskFrameStyle()]} />\n            <View style={[ styles.maskInner, { width, height } ]} />\n            <View style={[this._applyMaskFrameStyle()]} />\n          </View>\n          <View style={[styles.maskRow, this._applyMaskFrameStyle()]} />\n        </View>\n      </View>\n    );\n  }\n\n}\n\nconst propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeColor: PropTypes.string,\n  edgeBorderWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  edgeRadius: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  outerMaskOpacity: PropTypes.number,\n  showAnimatedLine: PropTypes.bool,\n  animatedLineColor: PropTypes.string,\n  animatedLineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lineAnimationDuration: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animatedLineOrientation: PropTypes.string,\n  useNativeDriver: PropTypes.bool,\n  onLayoutMeasured: PropTypes.func\n};\n\nconst defaultProps = {\n  width: 280,\n  height: 230,\n  edgeWidth: 20,\n  edgeHeight: 20,\n  edgeColor: '#FFF',\n  edgeBorderWidth: 4,\n  backgroundColor: 'rgb(0, 0, 0)',\n  outerMaskOpacity: 0.6,\n  showAnimatedLine: true,\n  animatedLineColor: '#FFF',\n  animatedLineHeight: 2,\n  animatedLineWidth: '85%',\n  lineAnimationDuration: 5000,\n  animatedLineOrientation: 'horizontal',\n  useNativeDriver: true\n};\n\nBarcodeMask.propTypes = propTypes;\nBarcodeMask.defaultProps = defaultProps;\n\nexport default BarcodeMask;\n"]},"metadata":{},"sourceType":"module"}