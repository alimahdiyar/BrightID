{"ast":null,"code":"import { EventEmitter } from \"../EventEmitter\";\nimport Platform from \"../Platform\";\nimport NativeErrorManager from \"./NativeErrorManager\";\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  var onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  var eventEmitter = new EventEmitter(NativeErrorManager);\n  eventEmitter.addListener(onNewException, function (_ref) {\n    var message = _ref.message;\n    console.error(message);\n  });\n}","map":{"version":3,"sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":["__DEV__","Platform","onNewException","eventEmitter","message","console"],"mappings":"AAAA,SAAA,YAAA;AACA,OAAA,QAAA;AACA,OAAA,kBAAA;;AAEA,IAAIA,OAAO,IAAIC,QAAQ,CAARA,EAAAA,KAAXD,SAAAA,IAAJ,kBAAA,EAAgE;EAC9D,IAAME,cAAc,GAApB,4CAAA;EACA,IAAMC,YAAY,GAAG,IAAA,YAAA,CAArB,kBAAqB,CAArB;EAEAA,YAAY,CAAZA,WAAAA,CAAAA,cAAAA,EAAyC,UAAA,IAAA,EAAqC;IAAlCC,IAAAA,OAAkC,GAAA,IAAA,CAAlCA,OAAAA;IAC1CC,OAAO,CAAPA,KAAAA,CAAAA,OAAAA;EADFF,CAAAA;AAGD","sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}