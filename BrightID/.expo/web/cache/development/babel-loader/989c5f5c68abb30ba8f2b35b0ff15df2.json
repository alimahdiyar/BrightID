{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _base = require(\"../base\");\n\nvar internalTiming = (0, _base.proc)(function (clock, time, frameTime, position, finished, toValue, duration, nextProgress, progress, newFrameTime) {\n  var state = {\n    time: time,\n    finished: finished,\n    frameTime: frameTime,\n    position: position\n  };\n  var config = {\n    duration: duration,\n    toValue: toValue\n  };\n  var distanceLeft = (0, _base.sub)(config.toValue, state.position);\n  var fullDistance = (0, _base.divide)(distanceLeft, (0, _base.sub)(1, progress));\n  var startPosition = (0, _base.sub)(config.toValue, fullDistance);\n  var nextPosition = (0, _base.add)(startPosition, (0, _base.multiply)(fullDistance, nextProgress));\n  return (0, _base.block)([(0, _base.cond)((0, _base.greaterOrEq)(newFrameTime, config.duration), [(0, _base.set)(state.position, config.toValue), (0, _base.set)(state.finished, 1)], (0, _base.set)(state.position, nextPosition)), (0, _base.set)(state.frameTime, newFrameTime), (0, _base.set)(state.time, clock)]);\n});\n\nfunction _default(clock, state, config) {\n  if (config.duration === 0) {\n    return (0, _base.block)([(0, _base.set)(state.position, config.toValue), (0, _base.set)(state.finished, 1)]);\n  }\n\n  var lastTime = (0, _base.cond)(state.time, state.time, clock);\n  var newFrameTime = (0, _base.add)(state.frameTime, (0, _base.sub)(clock, lastTime));\n  var nextProgress = config.easing((0, _base.divide)(newFrameTime, config.duration));\n  var progress = config.easing((0, _base.divide)(state.frameTime, config.duration));\n  return internalTiming(clock, state.time, state.frameTime, state.position, state.finished, config.toValue, config.duration, nextProgress, progress, newFrameTime);\n}","map":{"version":3,"sources":["timing.js"],"names":["internalTiming","proc","state","time","finished","frameTime","position","config","duration","toValue","distanceLeft","sub","fullDistance","divide","startPosition","nextPosition","add","multiply","block","cond","greaterOrEq","set","lastTime","newFrameTime","nextProgress","progress"],"mappings":"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","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  greaterOrEq,\n  proc,\n} from '../base';\n\nconst internalTiming = proc(function(\n  clock,\n  time,\n  frameTime,\n  position,\n  finished,\n  toValue,\n  duration,\n  nextProgress,\n  progress,\n  newFrameTime\n) {\n  const state = {\n    time,\n    finished,\n    frameTime,\n    position,\n  };\n\n  const config = {\n    duration,\n    toValue,\n  };\n\n  const distanceLeft = sub(config.toValue, state.position);\n  const fullDistance = divide(distanceLeft, sub(1, progress));\n  const startPosition = sub(config.toValue, fullDistance);\n  const nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\n\n  return block([\n    cond(\n      greaterOrEq(newFrameTime, config.duration),\n      [set(state.position, config.toValue), set(state.finished, 1)],\n      set(state.position, nextPosition)\n    ),\n    set(state.frameTime, newFrameTime),\n    set(state.time, clock),\n  ]);\n});\n\nexport default function(clock, state, config) {\n  if (config.duration === 0) {\n    // when duration is zero we end the timing immediately\n    return block([set(state.position, config.toValue), set(state.finished, 1)]);\n  }\n  const lastTime = cond(state.time, state.time, clock);\n  const newFrameTime = add(state.frameTime, sub(clock, lastTime));\n  const nextProgress = config.easing(divide(newFrameTime, config.duration));\n  const progress = config.easing(divide(state.frameTime, config.duration));\n  return internalTiming(\n    clock,\n    state.time,\n    state.frameTime,\n    state.position,\n    state.finished,\n    config.toValue,\n    config.duration,\n    nextProgress,\n    progress,\n    newFrameTime\n  );\n}\n"]},"metadata":{},"sourceType":"script"}