{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Spinner from 'react-native-spinkit';\nimport { useSelector } from \"../../../store\";\nimport { useTranslation } from 'react-i18next';\nimport EmptyList from \"../../Helpers/EmptyList\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { connectionsSelector } from \"../../../utils/connectionsSelector\";\nimport { ORANGE, WHITE } from \"../../../theme/colors\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport RecoveringConnectionCard from \"./RecoveringConnectionCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ITEM_HEIGHT = DEVICE_LARGE ? 102 : 92;\n\nvar getItemLayout = function getItemLayout(data, index) {\n  return {\n    length: ITEM_HEIGHT,\n    offset: ITEM_HEIGHT * index,\n    index: index\n  };\n};\n\nvar RecoveringConnectionScreen = function RecoveringConnectionScreen() {\n  var connections = useSelector(function (state) {\n    return connectionsSelector(state, undefined);\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uploadingData = _useState2[0],\n      setUploadingData = _useState2[1];\n\n  var renderConnection = function renderConnection(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    item.index = index;\n    return _jsx(RecoveringConnectionCard, _objectSpread(_objectSpread({}, item), {}, {\n      setUploadingData: setUploadingData\n    }));\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsx(View, {\n      style: styles.container,\n      children: !uploadingData ? _jsxs(View, {\n        style: styles.mainContainer,\n        children: [_jsx(View, {\n          style: styles.titleContainer,\n          children: _jsx(Text, {\n            style: styles.infoText,\n            children: t('restore.text.chooseConnectionToHelp')\n          })\n        }), _jsx(View, {\n          style: styles.mainContainer,\n          children: _jsx(FlatList, {\n            style: styles.connectionsContainer,\n            contentContainerStyle: {\n              paddingBottom: 50,\n              flexGrow: 1\n            },\n            data: connections,\n            keyExtractor: function keyExtractor(_ref2, index) {\n              var id = _ref2.id;\n              return id + index;\n            },\n            renderItem: renderConnection,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false,\n            ListEmptyComponent: _jsx(EmptyList, {\n              title: t('restore.emptyList.text.nobodyHasChosen')\n            }),\n            getItemLayout: getItemLayout\n          })\n        })]\n      }) : _jsxs(View, {\n        style: styles.mainContainer,\n        children: [_jsx(View, {\n          style: styles.titleContainer,\n          children: _jsx(Text, {\n            style: styles.infoText,\n            children: \"Uploading Shared Data\"\n          })\n        }), _jsx(Spinner, {\n          size: DEVICE_LARGE ? 48 : 42,\n          type: \"Wave\",\n          color: ORANGE\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    marginTop: 8,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '100%'\n  },\n  moreIcon: {\n    marginRight: 16\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    backgroundColor: WHITE,\n    width: '100%',\n    marginBottom: 11\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[15],\n    textAlign: 'center',\n    width: '80%'\n  }\n});\nexport default RecoveringConnectionScreen;","map":{"version":3,"names":["React","useState","Spinner","useSelector","useTranslation","EmptyList","DEVICE_LARGE","connectionsSelector","ORANGE","WHITE","fontSize","RecoveringConnectionCard","ITEM_HEIGHT","getItemLayout","data","index","length","offset","RecoveringConnectionScreen","connections","state","undefined","t","uploadingData","setUploadingData","renderConnection","item","styles","orangeTop","container","mainContainer","titleContainer","infoText","connectionsContainer","paddingBottom","flexGrow","id","StyleSheet","create","backgroundColor","height","width","zIndex","flex","borderTopLeftRadius","marginTop","overflow","justifyContent","alignItems","moreIcon","marginRight","marginBottom","fontFamily","textAlign"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RecoveringConnectionScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, FlatList } from 'react-native';\nimport Spinner from 'react-native-spinkit';\nimport { useSelector } from '@/store';\nimport { useTranslation } from 'react-i18next';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { connectionsSelector } from '@/utils/connectionsSelector';\nimport { ORANGE, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport RecoveringConnectionCard from './RecoveringConnectionCard';\n\nconst ITEM_HEIGHT = DEVICE_LARGE ? 102 : 92;\n\nconst getItemLayout = (data, index) => ({\n  length: ITEM_HEIGHT,\n  offset: ITEM_HEIGHT * index,\n  index,\n});\n\nconst RecoveringConnectionScreen = () => {\n  const connections = useSelector((state) =>\n    connectionsSelector(state, undefined),\n  );\n  const { t } = useTranslation();\n  const [uploadingData, setUploadingData] = useState(false);\n\n  const renderConnection = ({ item, index }) => {\n    item.index = index;\n    return (\n      <RecoveringConnectionCard {...item} setUploadingData={setUploadingData} />\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <View style={styles.container}>\n        {!uploadingData ? (\n          <View style={styles.mainContainer}>\n            <View style={styles.titleContainer}>\n              <Text style={styles.infoText}>\n                {t('restore.text.chooseConnectionToHelp')}\n              </Text>\n            </View>\n            <View style={styles.mainContainer}>\n              <FlatList\n                style={styles.connectionsContainer}\n                contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n                data={connections}\n                keyExtractor={({ id }, index) => id + index}\n                renderItem={renderConnection}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n                ListEmptyComponent={\n                  <EmptyList\n                    title={t('restore.emptyList.text.nobodyHasChosen')}\n                  />\n                }\n                getItemLayout={getItemLayout}\n              />\n            </View>\n          </View>\n        ) : (\n          <View style={styles.mainContainer}>\n            <View style={styles.titleContainer}>\n              <Text style={styles.infoText}>Uploading Shared Data</Text>\n            </View>\n            <Spinner size={DEVICE_LARGE ? 48 : 42} type=\"Wave\" color={ORANGE} />\n          </View>\n        )}\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  mainContainer: {\n    marginTop: 8,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    backgroundColor: WHITE,\n    width: '100%',\n    marginBottom: 11,\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[15],\n    textAlign: 'center',\n    width: '80%',\n  },\n});\n\nexport default RecoveringConnectionScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}