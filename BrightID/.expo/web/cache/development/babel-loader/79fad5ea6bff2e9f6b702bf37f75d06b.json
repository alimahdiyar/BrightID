{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.InitialLoadingScreen = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _bootstrap = require(\"../../bootstrap\");\n\nvar _NotificationService = require(\"../../NotificationService\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/InitialLoadingScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar InitialLoadingScreen = function InitialLoadingScreen(_ref) {\n  var app = _ref.app;\n  (0, _react.useEffect)(function () {\n    return function () {\n      if (app) {\n        console.log('BOOSTRAPING APP');\n        (0, _bootstrap.bootstrap)();\n        console.log('SUBSCRIBING TO NOTIFICATIONS');\n        (0, _NotificationService.notificationSubscription)();\n      }\n    };\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeSpinkit.default, {\n    isVisible: true,\n    size: 47,\n    type: \"FadingCircleAlt\",\n    color: _colors.ORANGE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n\nexports.InitialLoadingScreen = InitialLoadingScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar _default = InitialLoadingScreen;\nexports.default = _default;","map":{"version":3,"names":["InitialLoadingScreen","app","useEffect","console","log","bootstrap","notificationSubscription","styles","container","ORANGE","StyleSheet","create","flex","justifyContent","alignItems"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/InitialLoadingScreen.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Spinner from 'react-native-spinkit';\nimport { bootstrap } from '@/bootstrap';\nimport { notificationSubscription } from '@/NotificationService';\nimport { ORANGE } from '@/theme/colors';\n\nexport const InitialLoadingScreen = ({ app }: { app: boolean }) => {\n  useEffect(() => {\n    return () => {\n      if (app) {\n        console.log('BOOSTRAPING APP');\n        bootstrap();\n        console.log('SUBSCRIBING TO NOTIFICATIONS');\n\n        notificationSubscription();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <View style={styles.container}>\n      <Spinner\n        isVisible={true}\n        size={47}\n        type=\"FadingCircleAlt\"\n        color={ORANGE}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default InitialLoadingScreen;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA+B;EAAA,IAA5BC,GAA4B,QAA5BA,GAA4B;EACjE,IAAAC,gBAAA,EAAU,YAAM;IACd,OAAO,YAAM;MACX,IAAID,GAAJ,EAAS;QACPE,OAAO,CAACC,GAAR,CAAY,iBAAZ;QACA,IAAAC,oBAAA;QACAF,OAAO,CAACC,GAAR,CAAY,8BAAZ;QAEA,IAAAE,6CAAA;MACD;IACF,CARD;EAUD,CAXD,EAWG,EAXH;EAYA,OACE,6BAAC,iBAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,2BAAD;IACE,SAAS,EAAE,IADb;IAEE,IAAI,EAAE,EAFR;IAGE,IAAI,EAAC,iBAHP;IAIE,KAAK,EAAEC,cAJT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAUD,CAvBM;;;;AAyBP,IAAMF,MAAM,GAAGG,uBAAA,CAAWC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,cAAc,EAAE,QAFP;IAGTC,UAAU,EAAE;EAHH;AADoB,CAAlB,CAAf;;eAQed,oB"},"metadata":{},"sourceType":"script"}