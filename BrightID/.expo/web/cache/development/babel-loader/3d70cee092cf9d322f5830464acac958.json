{"ast":null,"code":"var _reactNative = _interopRequireWildcard(require(\"react-native\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Alert = _reactNative.default.Alert;\n\nif (_reactNative.Platform.OS === \"android\") {\n  var CodePushDialog = _reactNative.default.NativeModules.CodePushDialog;\n  Alert = {\n    alert: function alert(title, message, buttons) {\n      if (buttons.length > 2) {\n        throw \"Can only show 2 buttons for Android dialog.\";\n      }\n\n      var button1Text = buttons[0] ? buttons[0].text : null,\n          button2Text = buttons[1] ? buttons[1].text : null;\n      CodePushDialog.showDialog(title, message, button1Text, button2Text, function (buttonId) {\n        buttons[buttonId].onPress && buttons[buttonId].onPress();\n      }, function (error) {\n        throw error;\n      });\n    }\n  };\n}\n\nmodule.exports = {\n  Alert: Alert\n};","map":{"version":3,"names":["Alert","React","Platform","OS","CodePushDialog","NativeModules","alert","title","message","buttons","length","button1Text","text","button2Text","showDialog","buttonId","onPress","error","module","exports"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-code-push/AlertAdapter.js"],"sourcesContent":["import React, { Platform } from \"react-native\";\nlet { Alert } = React;\n\nif (Platform.OS === \"android\") {\n  const { NativeModules: { CodePushDialog } } = React;\n    \n  Alert = {\n    alert(title, message, buttons) {\n      if (buttons.length > 2) {\n        throw \"Can only show 2 buttons for Android dialog.\";\n      }\n      \n      const button1Text = buttons[0] ? buttons[0].text : null,\n            button2Text = buttons[1] ? buttons[1].text : null;\n      \n      CodePushDialog.showDialog(\n        title, message, button1Text, button2Text,\n        (buttonId) => { buttons[buttonId].onPress && buttons[buttonId].onPress(); }, \n        (error) => { throw error; });\n    }\n  };\n}\n\nmodule.exports = { Alert };"],"mappings":"AAAA;;;;;;AACA,IAAMA,KAAN,GAAgBC,oBAAhB,CAAMD,KAAN;;AAEA,IAAIE,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;EAC7B,IAAyBC,cAAzB,GAA8CH,oBAA9C,CAAQI,aAAR,CAAyBD,cAAzB;EAEAJ,KAAK,GAAG;IACNM,KADM,iBACAC,KADA,EACOC,OADP,EACgBC,OADhB,EACyB;MAC7B,IAAIA,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;QACtB,MAAM,6CAAN;MACD;;MAED,IAAMC,WAAW,GAAGF,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAxB,GAA+B,IAAnD;MAAA,IACMC,WAAW,GAAGJ,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAxB,GAA+B,IADnD;MAGAR,cAAc,CAACU,UAAf,CACEP,KADF,EACSC,OADT,EACkBG,WADlB,EAC+BE,WAD/B,EAEE,UAACE,QAAD,EAAc;QAAEN,OAAO,CAACM,QAAD,CAAP,CAAkBC,OAAlB,IAA6BP,OAAO,CAACM,QAAD,CAAP,CAAkBC,OAAlB,EAA7B;MAA2D,CAF7E,EAGE,UAACC,KAAD,EAAW;QAAE,MAAMA,KAAN;MAAc,CAH7B;IAID;EAbK,CAAR;AAeD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EAAEnB,KAAK,EAALA;AAAF,CAAjB"},"metadata":{},"sourceType":"script"}