{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useTranslation } from 'react-i18next';\nimport { useContext, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport FloatingActionButton from \"../Helpers/FloatingActionButton\";\nimport { WHITE, ORANGE, BLACK } from \"../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport { allGroupsSelector, filteredGroupsSelector, updateGroup, updateMemberships } from \"../../actions\";\nimport { useDispatch, useSelector } from \"../../store\";\nimport { GroupCard } from \"./GroupCard\";\nimport { NoGroups } from \"./NoGroups\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ITEM_HEIGHT = DEVICE_LARGE ? 94 : 80;\nvar ITEM_MARGIN = DEVICE_LARGE ? 11.8 : 6;\n\nvar getItemLayout = function getItemLayout(data, index) {\n  return {\n    length: ITEM_HEIGHT + ITEM_MARGIN,\n    offset: (ITEM_HEIGHT + ITEM_MARGIN) * index,\n    index: index\n  };\n};\n\nexport var GroupsScreen = function GroupsScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var api = useContext(NodeApiContext);\n  var allGroups = useSelector(allGroupsSelector);\n  var filteredGroups = useSelector(filteredGroupsSelector);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      id = _useSelector.id;\n\n  var renderGroup = function renderGroup(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _jsx(TouchableOpacity, {\n      testID: \"groupItem-\" + index,\n      onPress: function onPress() {\n        return navigation.navigate('Members', {\n          group: item\n        });\n      },\n      children: _jsx(GroupCard, {\n        group: item,\n        index: index\n      })\n    });\n  };\n\n  var onRefresh = function _callee() {\n    var memberships, _iterator, _step, group, groupInfo;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setRefreshing(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(api.getMemberships(id));\n\n          case 4:\n            memberships = _context.sent;\n            dispatch(updateMemberships(memberships));\n            _iterator = _createForOfIteratorHelperLoose(allGroups);\n\n          case 7:\n            if ((_step = _iterator()).done) {\n              _context.next = 16;\n              break;\n            }\n\n            group = _step.value;\n            console.log(\"Refreshing group \" + group.id);\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(api.getGroup(group.id));\n\n          case 12:\n            groupInfo = _context.sent;\n            dispatch(updateGroup(groupInfo));\n\n          case 14:\n            _context.next = 7;\n            break;\n\n          case 16:\n            setRefreshing(false);\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n            setRefreshing(false);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 19]], Promise);\n  };\n\n  var hasGroups = allGroups.length;\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: ORANGE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(View, {\n      style: styles.container,\n      testID: \"groupsScreen\",\n      children: [_jsx(View, {\n        style: styles.mainContainer,\n        children: _jsx(View, {\n          style: styles.mainContainer,\n          children: _jsx(FlatList, {\n            style: styles.groupsContainer,\n            contentContainerStyle: {\n              flexGrow: 1,\n              paddingBottom: 50\n            },\n            testID: \"groupsFlatList\",\n            data: filteredGroups,\n            keyExtractor: function keyExtractor(_ref2, index) {\n              var id = _ref2.id;\n              return id + index;\n            },\n            renderItem: renderGroup,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false,\n            getItemLayout: getItemLayout,\n            refreshControl: _jsx(RefreshControl, {\n              refreshing: refreshing,\n              onRefresh: onRefresh\n            }),\n            ListEmptyComponent: hasGroups ? _jsx(Text, {\n              testID: \"noMatchText\",\n              style: styles.emptyText,\n              children: t('groups.text.noGroupsMatchSearch')\n            }) : _jsx(NoGroups, {})\n          })\n        })\n      }), allGroups.length > 0 && _jsx(FloatingActionButton, {\n        testID: \"addGroupBtn\",\n        onPress: function onPress() {\n          return navigation.navigate('GroupInfo');\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginTop: 8\n  },\n  groupsContainer: {\n    flex: 1\n  },\n  moreIcon: {\n    marginRight: 16\n  },\n  emptyText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20],\n    color: BLACK\n  }\n});","map":{"version":3,"names":["React","useTranslation","useContext","useState","useNavigation","FloatingActionButton","WHITE","ORANGE","BLACK","DEVICE_LARGE","fontSize","NodeApiContext","allGroupsSelector","filteredGroupsSelector","updateGroup","updateMemberships","useDispatch","useSelector","GroupCard","NoGroups","ITEM_HEIGHT","ITEM_MARGIN","getItemLayout","data","index","length","offset","GroupsScreen","refreshing","setRefreshing","navigation","dispatch","t","api","allGroups","filteredGroups","state","user","id","renderGroup","item","navigate","group","onRefresh","getMemberships","memberships","console","log","getGroup","groupInfo","message","hasGroups","styles","orangeTop","container","mainContainer","groupsContainer","flexGrow","paddingBottom","emptyText","StyleSheet","create","backgroundColor","height","width","zIndex","flex","borderTopLeftRadius","marginTop","overflow","alignItems","flexDirection","justifyContent","moreIcon","marginRight","fontFamily","color"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/GroupsScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  FlatList,\n  View,\n  TouchableOpacity,\n  RefreshControl,\n  Text,\n  StatusBar,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useContext, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport FloatingActionButton from '@/components/Helpers/FloatingActionButton';\nimport { WHITE, ORANGE, BLACK } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport {\n  allGroupsSelector,\n  filteredGroupsSelector,\n  updateGroup,\n  updateMemberships,\n} from '@/actions';\nimport { useDispatch, useSelector } from '@/store';\nimport { GroupCard } from './GroupCard';\nimport { NoGroups } from './NoGroups';\n\n/**\n * Group screen of BrightID\n * Displays a search input and list of Group Cards\n */\n\nconst ITEM_HEIGHT = DEVICE_LARGE ? 94 : 80;\nconst ITEM_MARGIN = DEVICE_LARGE ? 11.8 : 6;\n\nconst getItemLayout = (data, index) => ({\n  length: ITEM_HEIGHT + ITEM_MARGIN,\n  offset: (ITEM_HEIGHT + ITEM_MARGIN) * index,\n  index,\n});\n\nexport const GroupsScreen = () => {\n  const [refreshing, setRefreshing] = useState(false);\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const api = useContext(NodeApiContext);\n  const allGroups = useSelector(allGroupsSelector);\n  const filteredGroups = useSelector(filteredGroupsSelector);\n  const { id } = useSelector((state) => state.user);\n\n  const renderGroup = ({ item, index }) => {\n    return (\n      <TouchableOpacity\n        testID={`groupItem-${index}`}\n        onPress={() => navigation.navigate('Members', { group: item })}\n      >\n        <GroupCard group={item} index={index} />\n      </TouchableOpacity>\n    );\n  };\n\n  const onRefresh = async () => {\n    try {\n      setRefreshing(true);\n      const memberships = await api.getMemberships(id);\n      dispatch(updateMemberships(memberships));\n      for (const group of allGroups) {\n        console.log(`Refreshing group ${group.id}`);\n        const groupInfo = await api.getGroup(group.id);\n        dispatch(updateGroup(groupInfo));\n      }\n      setRefreshing(false);\n    } catch (err) {\n      console.log(err.message);\n      setRefreshing(false);\n    }\n  };\n\n  const hasGroups = allGroups.length;\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor={ORANGE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"groupsScreen\">\n        <View style={styles.mainContainer}>\n          <View style={styles.mainContainer}>\n            <FlatList\n              style={styles.groupsContainer}\n              contentContainerStyle={{ flexGrow: 1, paddingBottom: 50 }}\n              testID=\"groupsFlatList\"\n              data={filteredGroups}\n              keyExtractor={({ id }, index) => id + index}\n              renderItem={renderGroup}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n              getItemLayout={getItemLayout}\n              refreshControl={\n                <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n              }\n              ListEmptyComponent={\n                hasGroups ? (\n                  <Text testID=\"noMatchText\" style={styles.emptyText}>\n                    {t('groups.text.noGroupsMatchSearch')}\n                  </Text>\n                ) : (\n                  <NoGroups />\n                )\n              }\n            />\n          </View>\n        </View>\n        {allGroups.length > 0 && (\n          <FloatingActionButton\n            testID=\"addGroupBtn\"\n            onPress={() => navigation.navigate('GroupInfo')}\n          />\n        )}\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginTop: 8,\n  },\n  groupsContainer: {\n    flex: 1,\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n  emptyText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20],\n    color: BLACK,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}