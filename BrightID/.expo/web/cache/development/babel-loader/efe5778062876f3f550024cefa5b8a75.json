{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ORANGE, WHITE } from \"../../theme/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FloatActionButton = function (_Component) {\n  _inherits(FloatActionButton, _Component);\n\n  var _super = _createSuper(FloatActionButton);\n\n  function FloatActionButton(props) {\n    var _this;\n\n    _classCallCheck(this, FloatActionButton);\n\n    _this = _super.call(this, props);\n\n    _this._onPress = function () {\n      _this.props.onPress && _this.props.onPress();\n    };\n\n    _this.visible = true;\n    _this.state = {\n      offset: new Animated.Value(0)\n    };\n    _this.hideAnim = Animated.timing(_this.state.offset, {\n      toValue: 150,\n      duration: 300,\n      useNativeDriver: true\n    });\n    _this.showAnim = Animated.timing(_this.state.offset, {\n      toValue: 0,\n      easing: Easing.back(),\n      duration: 300,\n      useNativeDriver: true\n    });\n    _this._onPress = _this._onPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FloatActionButton, [{\n    key: \"show\",\n    value: function show() {\n      if (this.visible) return;\n      this.visible = true;\n      this.hideAnim.stop();\n      this.showAnim.start();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.visible) return;\n      this.visible = false;\n      this.showAnim.stop();\n      this.hideAnim.start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(Animated.View, {\n        style: [styles.container, {\n          transform: [{\n            translateY: this.state.offset\n          }]\n        }],\n        children: _jsx(TouchableOpacity, {\n          testID: this.props.testID,\n          onPress: this._onPress,\n          children: _jsx(View, {\n            style: styles.circleButton,\n            children: _jsx(Material, {\n              name: \"plus\",\n              size: 36,\n              color: WHITE,\n              style: {\n                width: 36,\n                height: 36\n              }\n            })\n          })\n        })\n      });\n    }\n  }]);\n\n  return FloatActionButton;\n}(Component);\n\nexport { FloatActionButton as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    zIndex: 100,\n    right: 25,\n    bottom: 25\n  },\n  circleButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: ORANGE,\n    width: 54,\n    height: 54,\n    borderRadius: 27,\n    shadowColor: 'rgba(0,0,0,0.5)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    elevation: 4\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/FloatingActionButton.tsx"],"names":["FloatActionButton","Component","offset","Animated","toValue","duration","useNativeDriver","easing","Easing","styles","transform","translateY","width","height","StyleSheet","container","alignItems","justifyContent","position","zIndex","right","bottom","circleButton","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  Easing,\n  Animated,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { ORANGE, WHITE } from '@/theme/colors';\n\ntype Props = { testID?: string; onPress: () => void };\ntype State = {\n  offset: Animated.Value;\n};\nexport default class FloatActionButton extends Component<Props, State> {\n  hideAnim: Animated.CompositeAnimation;\n\n  showAnim: Animated.CompositeAnimation;\n\n  visible: boolean;\n\n  constructor(props) {\n    super(props);\n    this.visible = true;\n    this.state = {\n      offset: new Animated.Value(0),\n    };\n    this.hideAnim = Animated.timing(this.state.offset, {\n      toValue: 150,\n      duration: 300,\n      useNativeDriver: true,\n    });\n    this.showAnim = Animated.timing(this.state.offset, {\n      toValue: 0,\n      // @ts-ignore\n      easing: Easing.back(),\n      duration: 300,\n      useNativeDriver: true,\n    });\n    this._onPress = this._onPress.bind(this);\n  }\n\n  show() {\n    if (this.visible) return;\n    this.visible = true;\n    this.hideAnim.stop();\n    this.showAnim.start();\n  }\n\n  hide() {\n    if (!this.visible) return;\n    this.visible = false;\n    this.showAnim.stop();\n    this.hideAnim.start();\n  }\n\n  _onPress = () => {\n    this.props.onPress && this.props.onPress();\n  };\n\n  render() {\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          {\n            transform: [\n              {\n                translateY: this.state.offset,\n              },\n            ],\n          },\n        ]}\n      >\n        <TouchableOpacity testID={this.props.testID} onPress={this._onPress}>\n          <View style={styles.circleButton}>\n            <Material\n              name=\"plus\"\n              size={36}\n              color={WHITE}\n              style={{ width: 36, height: 36 }}\n            />\n          </View>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    zIndex: 100,\n    right: 25,\n    bottom: 25,\n  },\n  circleButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: ORANGE,\n    width: 54,\n    height: 54,\n    borderRadius: 27,\n    shadowColor: 'rgba(0,0,0,0.5)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    elevation: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}