{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from \"./createCSSStyleSheet\";\nimport createCompileableStyle from \"./createCompileableStyle\";\nimport createOrderedCSSStyleSheet from \"./createOrderedCSSStyleSheet\";\nimport flattenArray from \"../../modules/flattenArray\";\nimport flattenStyle from \"./flattenStyle\";\nimport I18nManager from \"../I18nManager\";\nimport i18nStyle from \"./i18nStyle\";\nimport { atomic, classic, inline, stringifyValueWithProperty } from \"./compile\";\nimport initialRules from \"./initialRules\";\nimport modality from \"./modality\";\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from \"./constants\";\nexport default function createStyleResolver() {\n  var inserted, sheet, cache;\n  var resolved = {\n    css: {},\n    ltr: {},\n    rtl: {},\n    rtlNoSwap: {}\n  };\n\n  var init = function init() {\n    inserted = {\n      css: {},\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    cache = {};\n    modality(function (rule) {\n      return sheet.insert(rule, STYLE_GROUPS.modality);\n    });\n    initialRules.forEach(function (rule) {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToCache(className, prop, value) {\n    if (!cache[prop]) {\n      cache[prop] = {};\n    }\n\n    cache[prop][value] = className;\n  }\n\n  function getClassName(prop, value) {\n    var val = stringifyValueWithProperty(value, prop);\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    var _I18nManager$getConst = I18nManager.getConstants(),\n        doLeftAndRightSwapInRTL = _I18nManager$getConst.doLeftAndRightSwapInRTL,\n        isRTL = _I18nManager$getConst.isRTL;\n\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (!inserted[dir][id]) {\n      var style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      var results = atomic(style);\n      Object.keys(results).forEach(function (key) {\n        var _results$key = results[key],\n            identifier = _results$key.identifier,\n            property = _results$key.property,\n            rules = _results$key.rules,\n            value = _results$key.value;\n        addToCache(identifier, property, value);\n        rules.forEach(function (rule) {\n          var group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n\n  function resolve(style, classList) {\n    var nextClassList = [];\n    var props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach(function (identifier) {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            var item = resolved.css[identifier];\n            item.rules.forEach(function (rule) {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      _injectRegisteredStyle(style);\n\n      var key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      props = _resolveStyle(style);\n    } else {\n      var flatArray = flattenArray(style);\n      var isArrayOfNumbers = true;\n      var cacheKey = '';\n\n      for (var i = 0; i < flatArray.length; i++) {\n        var id = flatArray[i];\n\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n\n          _injectRegisteredStyle(id);\n        }\n      }\n\n      var _key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n\n      props = _resolveStyle(flatArray, _key);\n    }\n\n    nextClassList.push.apply(nextClassList, _toConsumableArray(props.classList));\n    var finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n\n  function _resolveStyle(style, key) {\n    var _I18nManager$getConst2 = I18nManager.getConstants(),\n        doLeftAndRightSwapInRTL = _I18nManager$getConst2.doLeftAndRightSwapInRTL,\n        isRTL = _I18nManager$getConst2.isRTL;\n\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    var flatStyle = flattenStyle(style);\n    var localizedStyle = createCompileableStyle(i18nStyle(flatStyle));\n    var props = Object.keys(localizedStyle).sort().reduce(function (props, styleProp) {\n      var value = localizedStyle[styleProp];\n\n      if (value != null) {\n        var className = getClassName(styleProp, value);\n\n        if (className) {\n          props.classList.push(className);\n        } else {\n          if (styleProp === 'animationKeyframes' || styleProp === 'placeholderTextColor' || styleProp === 'pointerEvents' || styleProp === 'scrollbarWidth') {\n            var a = atomic(_defineProperty({}, styleProp, value));\n            Object.keys(a).forEach(function (key) {\n              var _a$key = a[key],\n                  identifier = _a$key.identifier,\n                  rules = _a$key.rules;\n              props.classList.push(identifier);\n              rules.forEach(function (rule) {\n                sheet.insert(rule, STYLE_GROUPS.atomic);\n              });\n            });\n          } else {\n            if (!props.style) {\n              props.style = {};\n            }\n\n            props.style[styleProp] = value;\n          }\n        }\n      }\n\n      return props;\n    }, {\n      classList: []\n    });\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet: function getStyleSheet() {\n      var textContent = sheet.getTextContent();\n\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent: textContent\n      };\n    },\n    createCSS: function createCSS(rules, group) {\n      var result = {};\n      Object.keys(rules).forEach(function (name) {\n        var style = rules[name];\n        var compiled = classic(style, name);\n        Object.keys(compiled).forEach(function (key) {\n          var _compiled$key = compiled[key],\n              identifier = _compiled$key.identifier,\n              rules = _compiled$key.rules;\n          resolved.css[identifier] = {\n            group: group || STYLE_GROUPS.classic,\n            rules: rules\n          };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve: resolve,\n\n    get sheet() {\n      return sheet;\n    }\n\n  };\n}\n\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + \"-\" + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/exports/StyleSheet/createStyleResolver.js"],"names":["resolved","css","ltr","rtl","rtlNoSwap","init","inserted","sheet","createOrderedCSSStyleSheet","createCSSStyleSheet","cache","modality","STYLE_GROUPS","initialRules","val","stringifyValueWithProperty","doLeftAndRightSwapInRTL","isRTL","I18nManager","dir","style","createCompileableStyle","i18nStyle","flattenStyle","results","atomic","Object","identifier","property","rules","value","addToCache","group","nextClassList","props","Array","flattenArray","item","_injectRegisteredStyle","key","createCacheKey","_resolveStyle","flatArray","isArrayOfNumbers","cacheKey","i","id","finalProps","className","classListToString","classList","flatStyle","localizedStyle","getClassName","styleProp","a","inline","getStyleSheet","textContent","createCSS","result","compiled","classic","resolve","prefix","list"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\n/**\n * WARNING: changes to this file in particular can cause significant changes to\n * the results of render performance benchmarks.\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createCompileableStyle from './createCompileableStyle';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nimport flattenArray from '../../modules/flattenArray';\nimport flattenStyle from './flattenStyle';\nimport I18nManager from '../I18nManager';\nimport i18nStyle from './i18nStyle';\nimport { atomic, classic, inline, stringifyValueWithProperty } from './compile';\nimport initialRules from './initialRules';\nimport modality from './modality';\nimport { STYLE_ELEMENT_ID, STYLE_GROUPS } from './constants';\n\nexport default function createStyleResolver() {\n  let inserted, sheet, cache;\n  const resolved = { css: {}, ltr: {}, rtl: {}, rtlNoSwap: {} };\n\n  const init = () => {\n    inserted = { css: {}, ltr: {}, rtl: {}, rtlNoSwap: {} };\n    sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(STYLE_ELEMENT_ID));\n    cache = {};\n    modality((rule) => sheet.insert(rule, STYLE_GROUPS.modality));\n    initialRules.forEach((rule) => {\n      sheet.insert(rule, STYLE_GROUPS.reset);\n    });\n  };\n\n  init();\n\n  function addToCache(className, prop, value) {\n    if (!cache[prop]) {\n      cache[prop] = {};\n    }\n    cache[prop][value] = className;\n  }\n\n  function getClassName(prop, value) {\n    const val = stringifyValueWithProperty(value, prop);\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  }\n\n  function _injectRegisteredStyle(id) {\n    const { doLeftAndRightSwapInRTL, isRTL } = I18nManager.getConstants();\n    const dir = isRTL ? (doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap') : 'ltr';\n    if (!inserted[dir][id]) {\n      const style = createCompileableStyle(i18nStyle(flattenStyle(id)));\n      const results = atomic(style);\n      Object.keys(results).forEach((key) => {\n        const { identifier, property, rules, value } = results[key];\n        addToCache(identifier, property, value);\n        rules.forEach((rule) => {\n          const group = STYLE_GROUPS.custom[property] || STYLE_GROUPS.atomic;\n          sheet.insert(rule, group);\n        });\n      });\n      inserted[dir][id] = true;\n    }\n  }\n\n  /**\n   * Resolves a React Native style object to DOM attributes\n   */\n  function resolve(style, classList) {\n    const nextClassList = [];\n    let props = {};\n\n    if (!style && !classList) {\n      return props;\n    }\n\n    if (Array.isArray(classList)) {\n      flattenArray(classList).forEach((identifier) => {\n        if (identifier) {\n          if (inserted.css[identifier] == null && resolved.css[identifier] != null) {\n            const item = resolved.css[identifier];\n            item.rules.forEach((rule) => {\n              sheet.insert(rule, item.group);\n            });\n            inserted.css[identifier] = true;\n          }\n\n          nextClassList.push(identifier);\n        }\n      });\n    }\n\n    if (typeof style === 'number') {\n      // fast and cachable\n      _injectRegisteredStyle(style);\n      const key = createCacheKey(style);\n      props = _resolveStyle(style, key);\n    } else if (!Array.isArray(style)) {\n      // resolve a plain RN style object\n      props = _resolveStyle(style);\n    } else {\n      // flatten the style array\n      // cache resolved props when all styles are registered\n      // otherwise fallback to resolving\n      const flatArray = flattenArray(style);\n      let isArrayOfNumbers = true;\n      let cacheKey = '';\n      for (let i = 0; i < flatArray.length; i++) {\n        const id = flatArray[i];\n        if (typeof id !== 'number') {\n          isArrayOfNumbers = false;\n        } else {\n          if (isArrayOfNumbers) {\n            cacheKey += id + '-';\n          }\n          _injectRegisteredStyle(id);\n        }\n      }\n      const key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n      props = _resolveStyle(flatArray, key);\n    }\n\n    nextClassList.push(...props.classList);\n\n    const finalProps = {\n      className: classListToString(nextClassList),\n      classList: nextClassList\n    };\n    if (props.style) {\n      finalProps.style = props.style;\n    }\n\n    return finalProps;\n  }\n\n  /**\n   * Resolves a React Native style object\n   */\n  function _resolveStyle(style, key) {\n    const { doLeftAndRightSwapInRTL, isRTL } = I18nManager.getConstants();\n    const dir = isRTL ? (doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap') : 'ltr';\n\n    // faster: memoized\n    if (key != null && resolved[dir][key] != null) {\n      return resolved[dir][key];\n    }\n\n    const flatStyle = flattenStyle(style);\n    const localizedStyle = createCompileableStyle(i18nStyle(flatStyle));\n\n    // slower: convert style object to props and cache\n    const props = Object.keys(localizedStyle)\n      .sort()\n      .reduce(\n        (props, styleProp) => {\n          const value = localizedStyle[styleProp];\n          if (value != null) {\n            const className = getClassName(styleProp, value);\n            if (className) {\n              props.classList.push(className);\n            } else {\n              // Certain properties and values are not transformed by 'createReactDOMStyle' as they\n              // require more complex transforms into multiple CSS rules. Here we assume that StyleManager\n              // can bind these styles to a className, and prevent them becoming invalid inline-styles.\n              if (\n                styleProp === 'animationKeyframes' ||\n                styleProp === 'placeholderTextColor' ||\n                styleProp === 'pointerEvents' ||\n                styleProp === 'scrollbarWidth'\n              ) {\n                const a = atomic({ [styleProp]: value });\n                Object.keys(a).forEach((key) => {\n                  const { identifier, rules } = a[key];\n                  props.classList.push(identifier);\n                  rules.forEach((rule) => {\n                    sheet.insert(rule, STYLE_GROUPS.atomic);\n                  });\n                });\n              } else {\n                if (!props.style) {\n                  props.style = {};\n                }\n                // 4x slower render\n                props.style[styleProp] = value;\n              }\n            }\n          }\n          return props;\n        },\n        { classList: [] }\n      );\n\n    if (props.style) {\n      props.style = inline(props.style);\n    }\n\n    if (key != null) {\n      resolved[dir][key] = props;\n    }\n\n    return props;\n  }\n\n  return {\n    getStyleSheet() {\n      const textContent = sheet.getTextContent();\n      // Reset state on the server so critical css is always the result\n      if (!canUseDOM) {\n        init();\n      }\n\n      return {\n        id: STYLE_ELEMENT_ID,\n        textContent\n      };\n    },\n    createCSS(rules, group) {\n      const result = {};\n      Object.keys(rules).forEach((name) => {\n        const style = rules[name];\n        const compiled = classic(style, name);\n\n        Object.keys(compiled).forEach((key) => {\n          const { identifier, rules } = compiled[key];\n          resolved.css[identifier] = { group: group || STYLE_GROUPS.classic, rules };\n          result[name] = identifier;\n        });\n      });\n      return result;\n    },\n    resolve,\n    get sheet() {\n      return sheet;\n    }\n  };\n}\n\n/**\n * Misc helpers\n */\nconst createCacheKey = (id) => {\n  const prefix = 'rn';\n  return `${prefix}-${id}`;\n};\n\nconst classListToString = (list) => list.join(' ').trim();\n"]},"metadata":{},"sourceType":"module"}