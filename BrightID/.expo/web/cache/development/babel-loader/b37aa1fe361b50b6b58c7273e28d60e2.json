{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _MyCodeScreen = _interopRequireDefault(require(\"../components/PendingConnections/MyCodeScreen\"));\n\nvar _ScanCodeScreen = _interopRequireDefault(require(\"../components/PendingConnections/ScanCodeScreen\"));\n\nvar _PendingConnectionsScreen = _interopRequireDefault(require(\"../components/PendingConnections/PendingConnectionsScreen\"));\n\nvar _GroupConnectionScreen = _interopRequireDefault(require(\"../components/PendingConnections/GroupConnectionScreen\"));\n\nvar _helpers = require(\"./helpers\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/PendingConnections.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Stack = (0, _stack.createStackNavigator)();\nvar newConnectionOptions = (0, _extends2.default)({}, _helpers.headerOptions, {\n  headerLeft: function headerLeft() {\n    return React.createElement(_helpers.NavHome, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    });\n  },\n  headerBackTitleVisible: false,\n  title: ''\n});\nvar groupConnectionOptions = (0, _extends2.default)({}, _helpers.headerOptions, {\n  title: 'Group Connection'\n});\nvar connectionPreviewOptions = {\n  headerShown: false,\n  cardStyleInterpolator: _stack.CardStyleInterpolators.forVerticalIOS\n};\n\nvar PendingConnections = function PendingConnections() {\n  return React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"MyCode\",\n    component: _MyCodeScreen.default,\n    options: newConnectionOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ScanCode\",\n    component: _ScanCodeScreen.default,\n    options: newConnectionOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PendingConnections\",\n    component: _PendingConnectionsScreen.default,\n    options: connectionPreviewOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"GroupConnection\",\n    component: _GroupConnectionScreen.default,\n    options: groupConnectionOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = PendingConnections;\nexports.default = _default;","map":{"version":3,"names":["Stack","createStackNavigator","newConnectionOptions","headerOptions","headerLeft","headerBackTitleVisible","title","groupConnectionOptions","connectionPreviewOptions","headerShown","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","PendingConnections","MyCodeScreen","ScanCodeScreen","PendingConnectionsScreen","GroupConnectionScreen"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/PendingConnections.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  createStackNavigator,\n  CardStyleInterpolators,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport MyCodeScreen from '@/components/PendingConnections/MyCodeScreen';\nimport ScanCodeScreen from '@/components/PendingConnections/ScanCodeScreen';\nimport PendingConnectionsScreen from '@/components/PendingConnections/PendingConnectionsScreen';\nimport GroupConnectionScreen from '@/components/PendingConnections/GroupConnectionScreen';\nimport { NavHome, headerOptions } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst newConnectionOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n  headerBackTitleVisible: false,\n  title: '',\n};\n\nconst groupConnectionOptions: StackNavigationOptions = {\n  ...headerOptions,\n  title: 'Group Connection',\n};\n\nconst connectionPreviewOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n};\n\nconst PendingConnections = () => (\n  <>\n    <Stack.Screen\n      name=\"MyCode\"\n      component={MyCodeScreen}\n      options={newConnectionOptions}\n    />\n    <Stack.Screen\n      name=\"ScanCode\"\n      component={ScanCodeScreen}\n      options={newConnectionOptions}\n    />\n    <Stack.Screen\n      name=\"PendingConnections\"\n      component={PendingConnectionsScreen}\n      options={connectionPreviewOptions}\n    />\n    <Stack.Screen\n      name=\"GroupConnection\"\n      component={GroupConnectionScreen}\n      options={groupConnectionOptions}\n    />\n  </>\n);\n\nexport default PendingConnections;\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,IAAAC,2BAAA,GAAd;AAEA,IAAMC,oBAA4C,8BAC7CC,sBAD6C;EAEhDC,UAAU,EAAE;IAAA,OAAM,oBAAC,gBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAN;EAAA,CAFoC;EAGhDC,sBAAsB,EAAE,KAHwB;EAIhDC,KAAK,EAAE;AAJyC,EAAlD;AAOA,IAAMC,sBAA8C,8BAC/CJ,sBAD+C;EAElDG,KAAK,EAAE;AAF2C,EAApD;AAKA,IAAME,wBAAgD,GAAG;EACvDC,WAAW,EAAE,KAD0C;EAEvDC,qBAAqB,EAAEC,6BAAA,CAAuBC;AAFS,CAAzD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OACzB,0CACE,oBAAC,KAAD,CAAO,MAAP;IACE,IAAI,EAAC,QADP;IAEE,SAAS,EAAEC,qBAFb;IAGE,OAAO,EAAEZ,oBAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAME,oBAAC,KAAD,CAAO,MAAP;IACE,IAAI,EAAC,UADP;IAEE,SAAS,EAAEa,uBAFb;IAGE,OAAO,EAAEb,oBAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANF,EAWE,oBAAC,KAAD,CAAO,MAAP;IACE,IAAI,EAAC,oBADP;IAEE,SAAS,EAAEc,iCAFb;IAGE,OAAO,EAAER,wBAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXF,EAgBE,oBAAC,KAAD,CAAO,MAAP;IACE,IAAI,EAAC,iBADP;IAEE,SAAS,EAAES,8BAFb;IAGE,OAAO,EAAEV,sBAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAhBF,CADyB;AAAA,CAA3B;;eAyBeM,kB"},"metadata":{},"sourceType":"script"}