{"ast":null,"code":"import * as React from 'react';\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/modules/mergeRefs/index.js"],"names":["_len","arguments","args","_key","ref","console","String"],"mappings":"AAQA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,eAAe,SAAA,SAAA,GAAqB;EAClC,KAAK,IAAIA,IAAI,GAAGC,SAAS,CAApB,MAAA,EAA6BC,IAAI,GAAG,IAAA,KAAA,CAApC,IAAoC,CAApC,EAAqDC,IAAI,GAA9D,CAAA,EAAoEA,IAAI,GAAxE,IAAA,EAAiFA,IAAjF,EAAA,EAAyF;IACvFD,IAAI,CAAJA,IAAI,CAAJA,GAAaD,SAAS,CAAtBC,IAAsB,CAAtBA;EAGF;;EAAA,OAAO,SAAA,UAAA,CAAA,IAAA,EAA0B;IAC/BA,IAAI,CAAJA,OAAAA,CAAa,UAAA,GAAA,EAAe;MAC1B,IAAIE,GAAG,IAAP,IAAA,EAAiB;QACf;MAGF;;MAAA,IAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;QAC7BA,GAAG,CAAHA,IAAG,CAAHA;QACA;MAGF;;MAAA,IAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;QAC3BA,GAAG,CAAHA,OAAAA,GAAAA,IAAAA;QACA;MAGFC;;MAAAA,OAAO,CAAPA,KAAAA,CAAc,kFAAkFC,MAAM,CAAtGD,GAAsG,CAAtGA;IAfFH,CAAAA;EADF,CAAA;AAmBD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}