{"ast":null,"code":"import { useTranslation } from 'react-i18next';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var ConnectionStats = function ConnectionStats(_ref) {\n  var connectionsNum = _ref.connectionsNum,\n      groupsNum = _ref.groupsNum,\n      mutualConnectionsNum = _ref.mutualConnectionsNum;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.countsNumberText,\n        children: connectionsNum\n      }), _jsx(Text, {\n        style: styles.countsDescriptionText,\n        children: t('pendingConnections.label.connections')\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.countsNumberText,\n        children: groupsNum\n      }), _jsx(Text, {\n        style: styles.countsDescriptionText,\n        children: t('pendingConnections.label.groups')\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.countsNumberText,\n        children: mutualConnectionsNum\n      }), _jsx(Text, {\n        style: styles.countsDescriptionText,\n        children: t('pendingConnections.label.mutualConnections')\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  countsDescriptionText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[13]\n  },\n  countsNumberText: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[16]\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/ConnectionStats.tsx"],"names":["ConnectionStats","connectionsNum","groupsNum","mutualConnectionsNum","t","useTranslation","styles","StyleSheet","countsDescriptionText","fontFamily","textAlign","fontSize","countsNumberText"],"mappings":"AACA,SAAA,cAAA,QAAA,eAAA;;;;AAEA,SAAA,QAAA;;;;AAQA,OAAO,IAAMA,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,IAAlBA,EAIe;EAH1BC,IAAAA,cAG0B,GAAA,IAAA,CAH1BA,cAAAA;EAAAA,IACAC,SAE0B,GAAA,IAAA,CAF1BA,SADAD;EAAAA,IAEAE,oBAC0B,GAAA,IAAA,CAD1BA,oBAFAF;;EAIA,IAAA,eAAA,GAAcI,cAAd,EAAA;EAAA,IAAQD,CAAR,GAAA,eAAA,CAAA,CAAA;;EACA,OACE,KAAA,CAAA,SAAA,EAAA;IAAA,QAAA,EAAA,CACE,KAAA,CAAA,IAAA,EAAA;MAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEE,MAAM,CAAnB,gBAAA;QAAA,QAAA,EADF;MACE,CAAA,CADF,EAEE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEA,MAAM,CAAnB,qBAAA;QAAA,QAAA,EACGF,CAAC,CAJR,sCAIQ;MADJ,CAAA,CAFF;IAAA,CAAA,CADF,EAOE,KAAA,CAAA,IAAA,EAAA;MAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEE,MAAM,CAAnB,gBAAA;QAAA,QAAA,EADF;MACE,CAAA,CADF,EAEE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEA,MAAM,CAAnB,qBAAA;QAAA,QAAA,EACGF,CAAC,CAVR,iCAUQ;MADJ,CAAA,CAFF;IAAA,CAAA,CAPF,EAaE,KAAA,CAAA,IAAA,EAAA;MAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEE,MAAM,CAAnB,gBAAA;QAAA,QAAA,EADF;MACE,CAAA,CADF,EAEE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEA,MAAM,CAAnB,qBAAA;QAAA,QAAA,EACGF,CAAC,CAjBV,4CAiBU;MADJ,CAAA,CAFF;IAAA,CAAA,CAbF;EAAA,CAAA,CADF;AANK,CAAA;AA8BP,IAAME,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,qBAAqB,EAAE;IACrBC,UAAU,EADW,gBAAA;IAErBC,SAAS,EAFY,QAAA;IAGrBC,QAAQ,EAAEA,QAAQ,CAJW,EAIX;EAHG,CADQ;EAM/BC,gBAAgB,EAAE;IAChBH,UAAU,EADM,cAAA;IAEhBC,SAAS,EAFO,QAAA;IAGhBC,QAAQ,EAAEA,QAAQ,CATtB,EASsB;EAHF;AANa,CAAlBJ,CAAf","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { fontSize } from '@/theme/fonts';\n\ninterface ConnectionStatsProps {\n  connectionsNum: number;\n  groupsNum: number;\n  mutualConnectionsNum: number;\n}\n\nexport const ConnectionStats = ({\n  connectionsNum,\n  groupsNum,\n  mutualConnectionsNum,\n}: ConnectionStatsProps) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <View>\n        <Text style={styles.countsNumberText}>{connectionsNum}</Text>\n        <Text style={styles.countsDescriptionText}>\n          {t('pendingConnections.label.connections')}\n        </Text>\n      </View>\n      <View>\n        <Text style={styles.countsNumberText}>{groupsNum}</Text>\n        <Text style={styles.countsDescriptionText}>\n          {t('pendingConnections.label.groups')}\n        </Text>\n      </View>\n      <View>\n        <Text style={styles.countsNumberText}>{mutualConnectionsNum}</Text>\n        <Text style={styles.countsDescriptionText}>\n          {t('pendingConnections.label.mutualConnections')}\n        </Text>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  countsDescriptionText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[13],\n  },\n  countsNumberText: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[16],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}