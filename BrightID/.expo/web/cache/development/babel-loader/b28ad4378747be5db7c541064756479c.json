{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport NewRecoveryConnectionsListScreen from '@/components/RecoveryConnections/NewRecoveryConnectionScreen';\nimport { headerOptions, AnimatedHeaderTitle, NavHome } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar connectionsScreenOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  },\n  headerTitle: function headerTitle() {\n    return _jsx(AnimatedHeaderTitle, {\n      text: \"Recovery Connections\"\n    });\n  }\n});\n\nvar Connections = function Connections() {\n  return _jsx(_Fragment, {\n    children: _jsx(Stack.Screen, {\n      name: \"RecoveryConnectionsList\",\n      component: NewRecoveryConnectionsListScreen,\n      options: connectionsScreenOptions\n    })\n  });\n};\n\nexport default Connections;","map":{"version":3,"names":["React","createStackNavigator","NewRecoveryConnectionsListScreen","headerOptions","AnimatedHeaderTitle","NavHome","Stack","connectionsScreenOptions","headerLeft","headerTitle","Connections"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/RecoveryConnections.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport NewRecoveryConnectionsListScreen from '@/components/RecoveryConnections/NewRecoveryConnectionScreen';\nimport i18next from 'i18next';\nimport { headerOptions, AnimatedHeaderTitle, NavHome } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst connectionsScreenOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n  headerTitle: () => <AnimatedHeaderTitle text=\"Recovery Connections\" />,\n};\n\nconst Connections = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"RecoveryConnectionsList\"\n        component={NewRecoveryConnectionsListScreen}\n        options={connectionsScreenOptions}\n      />\n    </>\n  );\n};\n\nexport default Connections;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,QAGO,yBAHP;AAIA,OAAOC,gCAAP,MAA6C,8DAA7C;AAEA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,OAA7C;;;AAEA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAEA,IAAMM,wBAAgD,mCACjDJ,aADiD;EAEpDK,UAAU,EAAE;IAAA,OAAM,KAAC,OAAD,KAAN;EAAA,CAFwC;EAGpDC,WAAW,EAAE;IAAA,OAAM,KAAC,mBAAD;MAAqB,IAAI,EAAC;IAA1B,EAAN;EAAA;AAHuC,EAAtD;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACxB,OACE;IAAA,UACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,yBADP;MAEE,SAAS,EAAER,gCAFb;MAGE,OAAO,EAAEK;IAHX;EADF,EADF;AASD,CAVD;;AAYA,eAAeG,WAAf"},"metadata":{},"sourceType":"module"}