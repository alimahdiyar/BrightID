{"ast":null,"code":"'use strict';\n\nvar ReactIs = require('react-is');\n\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require(\"./lib/ReactPropTypesSecret\");\n\nvar checkPropTypes = require(\"./checkPropTypes\");\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nvar printWarning = function printWarning() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function printWarning(text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function (isValidElement, throwOnDirectAccess) {\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  var ANONYMOUS = '<<anonymous>>';\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n\n  function is(x, y) {\n    if (x === y) {\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      return x !== x && y !== y;\n    }\n  }\n\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          var cacheKey = componentName + ':' + propName;\n\n          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {\n            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        var preciseType = getPreciseType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n\n        if (type === 'symbol') {\n          return String(value);\n        }\n\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n\n      if (typeof checker !== 'function') {\n        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          continue;\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      var allKeys = assign({}, props[propName], shapeTypes);\n\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    if (!propValue) {\n      return false;\n    }\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  }\n\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  }\n\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n\n      default:\n        return type;\n    }\n  }\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-country-picker-modal/node_modules/prop-types/factoryWithTypeCheckers.js"],"names":["ReactIs","require","assign","ReactPropTypesSecret","checkPropTypes","has","Function","Object","printWarning","process","message","console","module","ITERATOR_SYMBOL","Symbol","FAUX_ITERATOR_SYMBOL","iteratorFn","maybeIterable","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bool","func","number","object","string","symbol","any","createAnyTypeChecker","arrayOf","element","createElementTypeChecker","elementType","createElementTypeTypeChecker","instanceOf","node","createNodeChecker","objectOf","oneOf","oneOfType","shape","exact","x","y","PropTypeError","Error","manualPropTypeCallCache","manualPropTypeWarningCount","componentName","propFullName","secret","err","cacheKey","props","validate","chainedCheckType","checkType","propValue","propType","getPropType","preciseType","getPreciseType","createChainableTypeChecker","Array","i","error","typeChecker","isValidElement","expectedClassName","expectedClass","actualClassName","getClassName","arguments","expectedValues","is","valuesString","JSON","type","String","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","isNode","shapeTypes","allKeys","getIteratorFn","iterator","step","entry","isSymbol"],"mappings":"AAOA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAArB,UAAqB,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAApB,eAAoB,CAApB;;AAEA,IAAIE,oBAAoB,GAAGF,OAA3B,8BAAA;;AACA,IAAIG,cAAc,GAAGH,OAArB,oBAAA;;AAEA,IAAII,GAAG,GAAGC,QAAQ,CAARA,IAAAA,CAAAA,IAAAA,CAAmBC,MAAM,CAANA,SAAAA,CAA7B,cAAUD,CAAV;;AACA,IAAIE,YAAY,GAAG,SAAA,YAAA,GAAW,CAA9B,CAAA;;AAEA,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;EACzCD,YAAY,GAAG,SAAA,YAAA,CAAA,IAAA,EAAe;IAC5B,IAAIE,OAAO,GAAG,cAAd,IAAA;;IACA,IAAI,OAAA,OAAA,KAAJ,WAAA,EAAoC;MAClCC,OAAO,CAAPA,KAAAA,CAAAA,OAAAA;IAEF;;IAAA,IAAI;MAIF,MAAM,IAAA,KAAA,CAAN,OAAM,CAAN;IACA,CALF,CAKE,OAAA,CAAA,EAAU,CACb;EAXDH,CAAAA;AAcF;;AAAA,SAAA,4BAAA,GAAwC;EACtC,OAAA,IAAA;AAGFI;;AAAAA,MAAM,CAANA,OAAAA,GAAiB,UAAA,cAAA,EAAA,mBAAA,EAA8C;EAE7D,IAAIC,eAAe,GAAG,OAAA,MAAA,KAAA,UAAA,IAAgCC,MAAM,CAA5D,QAAA;EACA,IAAIC,oBAAoB,GAAxB,YAAA;;EAgBA,SAAA,aAAA,CAAA,aAAA,EAAsC;IACpC,IAAIC,UAAU,GAAGC,aAAa,KAAKJ,eAAe,IAAII,aAAa,CAAhCJ,eAAgC,CAAhCA,IAAqDI,aAAa,CAArG,oBAAqG,CAAvE,CAA9B;;IACA,IAAI,OAAA,UAAA,KAAJ,UAAA,EAAsC;MACpC,OAAA,UAAA;IAEH;EAiDD;;EAAA,IAAIC,SAAS,GAAb,eAAA;EAIA,IAAIC,cAAc,GAAG;IACnBC,KAAK,EAAEC,0BAA0B,CADd,OACc,CADd;IAEnBC,IAAI,EAAED,0BAA0B,CAFb,SAEa,CAFb;IAGnBE,IAAI,EAAEF,0BAA0B,CAHb,UAGa,CAHb;IAInBG,MAAM,EAAEH,0BAA0B,CAJf,QAIe,CAJf;IAKnBI,MAAM,EAAEJ,0BAA0B,CALf,QAKe,CALf;IAMnBK,MAAM,EAAEL,0BAA0B,CANf,QAMe,CANf;IAOnBM,MAAM,EAAEN,0BAA0B,CAPf,QAOe,CAPf;IASnBO,GAAG,EAAEC,oBATc,EAAA;IAUnBC,OAAO,EAVY,wBAAA;IAWnBC,OAAO,EAAEC,wBAXU,EAAA;IAYnBC,WAAW,EAAEC,4BAZM,EAAA;IAanBC,UAAU,EAbS,yBAAA;IAcnBC,IAAI,EAAEC,iBAda,EAAA;IAenBC,QAAQ,EAfW,yBAAA;IAgBnBC,KAAK,EAhBc,qBAAA;IAiBnBC,SAAS,EAjBU,sBAAA;IAkBnBC,KAAK,EAlBc,sBAAA;IAmBnBC,KAAK,EAnBP;EAAqB,CAArB;;EA2BA,SAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAkB;IAEhB,IAAIC,CAAC,KAAL,CAAA,EAAa;MAGX,OAAOA,CAAC,KAADA,CAAAA,IAAW,IAAA,CAAA,KAAU,IAA5B,CAAA;IAHF,CAAA,MAIO;MAEL,OAAOA,CAAC,KAADA,CAAAA,IAAWC,CAAC,KAAnB,CAAA;IAEH;EAUD;;EAAA,SAAA,aAAA,CAAA,OAAA,EAAgC;IAC9B,KAAA,OAAA,GAAA,OAAA;IACA,KAAA,KAAA,GAAA,EAAA;EAGFC;;EAAAA,aAAa,CAAbA,SAAAA,GAA0BC,KAAK,CAA/BD,SAAAA;;EAEA,SAAA,0BAAA,CAAA,QAAA,EAA8C;IAC5C,IAAIpC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;MACzC,IAAIsC,uBAAuB,GAA3B,EAAA;MACA,IAAIC,0BAA0B,GAA9B,CAAA;IAEF;;IAAA,SAAA,SAAA,CAAA,UAAA,EAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAA+F;MAC7FC,aAAa,GAAGA,aAAa,IAA7BA,SAAAA;MACAC,YAAY,GAAGA,YAAY,IAA3BA,QAAAA;;MAEA,IAAIC,MAAM,KAAV,oBAAA,EAAqC;QACnC,IAAA,mBAAA,EAAyB;UAEvB,IAAIC,GAAG,GAAG,IAAA,KAAA,CACR,yFAAA,iDAAA,GADF,gDAAU,CAAV;UAKAA,GAAG,CAAHA,IAAAA,GAAAA,qBAAAA;UACA,MAAA,GAAA;QARF,CAAA,MASO,IAAI3C,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,IAAyC,OAAA,OAAA,KAA7C,WAAA,EAA6E;UAElF,IAAI4C,QAAQ,GAAGJ,aAAa,GAAbA,GAAAA,GAAf,QAAA;;UACA,IACE,CAACF,uBAAuB,CAAxB,QAAwB,CAAxB,IAEAC,0BAA0B,GAH5B,CAAA,EAIE;YACAxC,YAAY,CACV,2DAAA,oBAAA,GAAA,YAAA,GAAA,aAAA,GAAA,aAAA,GAAA,wBAAA,GAAA,yDAAA,GAAA,gEAAA,GAAA,+DAAA,GADFA,cAAY,CAAZA;YAOAuC,uBAAuB,CAAvBA,QAAuB,CAAvBA,GAAAA,IAAAA;YACAC,0BAA0B;UAE7B;QACF;MACD;;MAAA,IAAIM,KAAK,CAALA,QAAK,CAALA,IAAJ,IAAA,EAA6B;QAC3B,IAAA,UAAA,EAAgB;UACd,IAAIA,KAAK,CAALA,QAAK,CAALA,KAAJ,IAAA,EAA8B;YAC5B,OAAO,IAAA,aAAA,CAAkB,SAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,0BAAA,IAAwE,SAAA,aAAA,GAAjG,6BAAyB,CAAlB,CAAP;UAEF;;UAAA,OAAO,IAAA,aAAA,CAAkB,SAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,6BAAA,IAA2E,MAAA,aAAA,GAApG,kCAAyB,CAAlB,CAAP;QAEF;;QAAA,OAAA,IAAA;MAPF,CAAA,MAQO;QACL,OAAOC,QAAQ,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAf,YAAe,CAAf;MAEH;IAED;;IAAA,IAAIC,gBAAgB,GAAGC,SAAS,CAATA,IAAAA,CAAAA,IAAAA,EAAvB,KAAuBA,CAAvB;IACAD,gBAAgB,CAAhBA,UAAAA,GAA8BC,SAAS,CAATA,IAAAA,CAAAA,IAAAA,EAA9BD,IAA8BC,CAA9BD;IAEA,OAAA,gBAAA;EAGF;;EAAA,SAAA,0BAAA,CAAA,YAAA,EAAkD;IAChD,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAkF;MAChF,IAAIE,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;MACA,IAAIK,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;;MACA,IAAID,QAAQ,KAAZ,YAAA,EAA+B;QAI7B,IAAIE,WAAW,GAAGC,cAAc,CAAhC,SAAgC,CAAhC;QAEA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,YAAA,IAA8D,MAAA,WAAA,GAAA,iBAAA,GAAA,aAAA,GAA9D,cAAA,KAAyI,MAAA,YAAA,GAAlK,IAAyB,CAAlB,CAAP;MAEF;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOC,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,oBAAA,GAAgC;IAC9B,OAAOA,0BAA0B,CAAjC,4BAAiC,CAAjC;EAGF;;EAAA,SAAA,wBAAA,CAAA,WAAA,EAA+C;IAC7C,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAI,OAAA,WAAA,KAAJ,UAAA,EAAuC;QACrC,OAAO,IAAA,aAAA,CAAkB,eAAA,YAAA,GAAA,kBAAA,GAAA,aAAA,GAAzB,iDAAO,CAAP;MAEF;;MAAA,IAAIL,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;;MACA,IAAI,CAACU,KAAK,CAALA,OAAAA,CAAL,SAAKA,CAAL,EAA+B;QAC7B,IAAIL,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;QACA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,YAAA,IAA8D,MAAA,QAAA,GAAA,iBAAA,GAAA,aAAA,GAAvF,uBAAyB,CAAlB,CAAP;MAEF;;MAAA,KAAK,IAAIK,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGP,SAAS,CAA7B,MAAA,EAAsCO,CAAtC,EAAA,EAA2C;QACzC,IAAIC,KAAK,GAAGC,WAAW,CAAA,SAAA,EAAA,CAAA,EAAA,aAAA,EAAA,QAAA,EAAwCjB,YAAY,GAAZA,GAAAA,GAAAA,CAAAA,GAAxC,GAAA,EAAvB,oBAAuB,CAAvB;;QACA,IAAIgB,KAAK,YAAT,KAAA,EAA4B;UAC1B,OAAA,KAAA;QAEH;MACD;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOH,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,wBAAA,GAAoC;IAClC,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAIL,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;;MACA,IAAI,CAACc,cAAc,CAAnB,SAAmB,CAAnB,EAAgC;QAC9B,IAAIT,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;QACA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,YAAA,IAA8D,MAAA,QAAA,GAAA,iBAAA,GAAA,aAAA,GAAvF,oCAAyB,CAAlB,CAAP;MAEF;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOG,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,4BAAA,GAAwC;IACtC,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAIL,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;;MACA,IAAI,CAACtD,OAAO,CAAPA,kBAAAA,CAAL,SAAKA,CAAL,EAA4C;QAC1C,IAAI2D,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;QACA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,YAAA,IAA8D,MAAA,QAAA,GAAA,iBAAA,GAAA,aAAA,GAAvF,yCAAyB,CAAlB,CAAP;MAEF;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOG,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,yBAAA,CAAA,aAAA,EAAkD;IAChD,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAI,EAAET,KAAK,CAALA,QAAK,CAALA,YAAN,aAAI,CAAJ,EAAiD;QAC/C,IAAIe,iBAAiB,GAAGC,aAAa,CAAbA,IAAAA,IAAxB,SAAA;QACA,IAAIC,eAAe,GAAGC,YAAY,CAAClB,KAAK,CAAxC,QAAwC,CAAN,CAAlC;QACA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,YAAA,IAA8D,MAAA,eAAA,GAAA,iBAAA,GAAA,aAAA,GAA9D,cAAA,KAA6I,kBAAA,iBAAA,GAAtK,IAAyB,CAAlB,CAAP;MAEF;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOS,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,qBAAA,CAAA,cAAA,EAA+C;IAC7C,IAAI,CAACC,KAAK,CAALA,OAAAA,CAAL,cAAKA,CAAL,EAAoC;MAClC,IAAIvD,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;QACzC,IAAIgE,SAAS,CAATA,MAAAA,GAAJ,CAAA,EAA0B;UACxBjE,YAAY,CACV,iEAAiEiE,SAAS,CAA1E,MAAA,GAAA,cAAA,GADFjE,0EAAY,CAAZA;QADF,CAAA,MAKO;UACLA,YAAY,CAAZA,wDAAY,CAAZA;QAEH;MACD;;MAAA,OAAA,4BAAA;IAGF;;IAAA,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAIkD,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;;MACA,KAAK,IAAIW,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGS,cAAc,CAAlC,MAAA,EAA2CT,CAA3C,EAAA,EAAgD;QAC9C,IAAIU,EAAE,CAAA,SAAA,EAAYD,cAAc,CAAhC,CAAgC,CAA1B,CAAN,EAAsC;UACpC,OAAA,IAAA;QAEH;MAED;;MAAA,IAAIE,YAAY,GAAGC,IAAI,CAAJA,SAAAA,CAAAA,cAAAA,EAA+B,SAAA,QAAA,CAAA,GAAA,EAAA,KAAA,EAA8B;QAC9E,IAAIC,IAAI,GAAGhB,cAAc,CAAzB,KAAyB,CAAzB;;QACA,IAAIgB,IAAI,KAAR,QAAA,EAAuB;UACrB,OAAOC,MAAM,CAAb,KAAa,CAAb;QAEF;;QAAA,OAAA,KAAA;MALF,CAAmBF,CAAnB;MAOA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,cAAA,GAA+DE,MAAM,CAArE,SAAqE,CAArE,GAAA,IAAA,IAA2F,kBAAA,aAAA,GAAA,qBAAA,GAAA,YAAA,GAApH,GAAyB,CAAlB,CAAP;IAEF;;IAAA,OAAOhB,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,yBAAA,CAAA,WAAA,EAAgD;IAC9C,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAI,OAAA,WAAA,KAAJ,UAAA,EAAuC;QACrC,OAAO,IAAA,aAAA,CAAkB,eAAA,YAAA,GAAA,kBAAA,GAAA,aAAA,GAAzB,kDAAO,CAAP;MAEF;;MAAA,IAAIL,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;MACA,IAAIK,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;;MACA,IAAID,QAAQ,KAAZ,QAAA,EAA2B;QACzB,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,YAAA,IAA8D,MAAA,QAAA,GAAA,iBAAA,GAAA,aAAA,GAAvF,wBAAyB,CAAlB,CAAP;MAEF;;MAAA,KAAK,IAAL,GAAA,IAAA,SAAA,EAA2B;QACzB,IAAItD,GAAG,CAAA,SAAA,EAAP,GAAO,CAAP,EAAyB;UACvB,IAAI6D,KAAK,GAAGC,WAAW,CAAA,SAAA,EAAA,GAAA,EAAA,aAAA,EAAA,QAAA,EAA0CjB,YAAY,GAAZA,GAAAA,GAA1C,GAAA,EAAvB,oBAAuB,CAAvB;;UACA,IAAIgB,KAAK,YAAT,KAAA,EAA4B;YAC1B,OAAA,KAAA;UAEH;QACF;MACD;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOH,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,sBAAA,CAAA,mBAAA,EAAqD;IACnD,IAAI,CAACC,KAAK,CAALA,OAAAA,CAAL,mBAAKA,CAAL,EAAyC;MACvCvD,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAwCD,YAAY,CAApDC,wEAAoD,CAApDA,GAAiI,KAAjIA,CAAAA;MACA,OAAA,4BAAA;IAGF;;IAAA,KAAK,IAAIwD,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGe,mBAAmB,CAAvC,MAAA,EAAgDf,CAAhD,EAAA,EAAqD;MACnD,IAAIgB,OAAO,GAAGD,mBAAmB,CAAjC,CAAiC,CAAjC;;MACA,IAAI,OAAA,OAAA,KAAJ,UAAA,EAAmC;QACjCxE,YAAY,CACV,uFAAA,WAAA,GACc0E,wBAAwB,CADtC,OACsC,CADtC,GAAA,YAAA,GAAA,CAAA,GADF1E,GAAY,CAAZA;QAIA,OAAA,4BAAA;MAEH;IAED;;IAAA,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,KAAK,IAAIyD,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGe,mBAAmB,CAAvC,MAAA,EAAgDf,CAAhD,EAAA,EAAqD;QACnD,IAAIgB,OAAO,GAAGD,mBAAmB,CAAjC,CAAiC,CAAjC;;QACA,IAAIC,OAAO,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAPA,oBAAO,CAAPA,IAAJ,IAAA,EAAmG;UACjG,OAAA,IAAA;QAEH;MAED;;MAAA,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,gBAAA,IAAkE,MAAA,aAAA,GAA3F,IAAyB,CAAlB,CAAP;IAEF;;IAAA,OAAOlB,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,iBAAA,GAA6B;IAC3B,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAI,CAACoB,MAAM,CAAC7B,KAAK,CAAjB,QAAiB,CAAN,CAAX,EAA8B;QAC5B,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,gBAAA,IAAkE,MAAA,aAAA,GAA3F,0BAAyB,CAAlB,CAAP;MAEF;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOS,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,sBAAA,CAAA,UAAA,EAA4C;IAC1C,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAIL,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;MACA,IAAIK,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;;MACA,IAAID,QAAQ,KAAZ,QAAA,EAA2B;QACzB,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,aAAA,GAAA,QAAA,GAAA,IAAA,IAAiF,kBAAA,aAAA,GAA1G,uBAAyB,CAAlB,CAAP;MAEF;;MAAA,KAAK,IAAL,GAAA,IAAA,UAAA,EAA4B;QAC1B,IAAIsB,OAAO,GAAGG,UAAU,CAAxB,GAAwB,CAAxB;;QACA,IAAI,CAAJ,OAAA,EAAc;UACZ;QAEF;;QAAA,IAAIlB,KAAK,GAAGe,OAAO,CAAA,SAAA,EAAA,GAAA,EAAA,aAAA,EAAA,QAAA,EAA0C/B,YAAY,GAAZA,GAAAA,GAA1C,GAAA,EAAnB,oBAAmB,CAAnB;;QACA,IAAA,KAAA,EAAW;UACT,OAAA,KAAA;QAEH;MACD;;MAAA,OAAA,IAAA;IAEF;;IAAA,OAAOa,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,4BAAA,CAAA,UAAA,EAAkD;IAChD,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA0E;MACxE,IAAIL,SAAS,GAAGJ,KAAK,CAArB,QAAqB,CAArB;MACA,IAAIK,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;;MACA,IAAID,QAAQ,KAAZ,QAAA,EAA2B;QACzB,OAAO,IAAA,aAAA,CAAkB,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,aAAA,GAAA,QAAA,GAAA,IAAA,IAAiF,kBAAA,aAAA,GAA1G,uBAAyB,CAAlB,CAAP;MAIF;;MAAA,IAAI0B,OAAO,GAAGnF,MAAM,CAAA,EAAA,EAAKoD,KAAK,CAAV,QAAU,CAAV,EAApB,UAAoB,CAApB;;MACA,KAAK,IAAL,GAAA,IAAA,OAAA,EAAyB;QACvB,IAAI2B,OAAO,GAAGG,UAAU,CAAxB,GAAwB,CAAxB;;QACA,IAAI,CAAJ,OAAA,EAAc;UACZ,OAAO,IAAA,aAAA,CACL,aAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,SAAA,GAAA,GAAA,GAAA,iBAAA,GAAA,aAAA,GAAA,IAAA,GAAA,gBAAA,GACmBP,IAAI,CAAJA,SAAAA,CAAevB,KAAK,CAApBuB,QAAoB,CAApBA,EAAAA,IAAAA,EADnB,IACmBA,CADnB,GAAA,gBAAA,GAEoBA,IAAI,CAAJA,SAAAA,CAAetE,MAAM,CAANA,IAAAA,CAAfsE,UAAetE,CAAfsE,EAAAA,IAAAA,EAHtB,IAGsBA,CAHf,CAAP;QAMF;;QAAA,IAAIX,KAAK,GAAGe,OAAO,CAAA,SAAA,EAAA,GAAA,EAAA,aAAA,EAAA,QAAA,EAA0C/B,YAAY,GAAZA,GAAAA,GAA1C,GAAA,EAAnB,oBAAmB,CAAnB;;QACA,IAAA,KAAA,EAAW;UACT,OAAA,KAAA;QAEH;MACD;;MAAA,OAAA,IAAA;IAGF;;IAAA,OAAOa,0BAA0B,CAAjC,QAAiC,CAAjC;EAGF;;EAAA,SAAA,MAAA,CAAA,SAAA,EAA2B;IACzB,QAAQ,OAAR,SAAA;MACE,KAAA,QAAA;MACA,KAAA,QAAA;MACA,KAAA,WAAA;QACE,OAAA,IAAA;;MACF,KAAA,SAAA;QACE,OAAO,CAAP,SAAA;;MACF,KAAA,QAAA;QACE,IAAIC,KAAK,CAALA,OAAAA,CAAJ,SAAIA,CAAJ,EAA8B;UAC5B,OAAON,SAAS,CAATA,KAAAA,CAAP,MAAOA,CAAP;QAEF;;QAAA,IAAIA,SAAS,KAATA,IAAAA,IAAsBU,cAAc,CAAxC,SAAwC,CAAxC,EAAqD;UACnD,OAAA,IAAA;QAGF;;QAAA,IAAIpD,UAAU,GAAGsE,aAAa,CAA9B,SAA8B,CAA9B;;QACA,IAAA,UAAA,EAAgB;UACd,IAAIC,QAAQ,GAAGvE,UAAU,CAAVA,IAAAA,CAAf,SAAeA,CAAf;UACA,IAAA,IAAA;;UACA,IAAIA,UAAU,KAAK0C,SAAS,CAA5B,OAAA,EAAsC;YACpC,OAAO,CAAC,CAAC8B,IAAI,GAAGD,QAAQ,CAAhB,IAAQA,EAAR,EAAR,IAAA,EAAuC;cACrC,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAhB,KAAW,CAAX,EAAyB;gBACvB,OAAA,KAAA;cAEH;YACF;UAND,CAAA,MAMO;YAEL,OAAO,CAAC,CAACA,IAAI,GAAGD,QAAQ,CAAhB,IAAQA,EAAR,EAAR,IAAA,EAAuC;cACrC,IAAIE,KAAK,GAAGD,IAAI,CAAhB,KAAA;;cACA,IAAA,KAAA,EAAW;gBACT,IAAI,CAACL,MAAM,CAACM,KAAK,CAAjB,CAAiB,CAAN,CAAX,EAAuB;kBACrB,OAAA,KAAA;gBAEH;cACF;YACF;UACF;QApBD,CAAA,MAoBO;UACL,OAAA,KAAA;QAGF;;QAAA,OAAA,IAAA;;MACF;QACE,OA1CJ,KA0CI;IA1CJ;EA8CF;;EAAA,SAAA,QAAA,CAAA,QAAA,EAAA,SAAA,EAAuC;IAErC,IAAI9B,QAAQ,KAAZ,QAAA,EAA2B;MACzB,OAAA,IAAA;IAIF;;IAAA,IAAI,CAAJ,SAAA,EAAgB;MACd,OAAA,KAAA;IAIF;;IAAA,IAAID,SAAS,CAATA,eAAS,CAATA,KAAJ,QAAA,EAA6C;MAC3C,OAAA,IAAA;IAIF;;IAAA,IAAI,OAAA,MAAA,KAAA,UAAA,IAAgCA,SAAS,YAA7C,MAAA,EAAiE;MAC/D,OAAA,IAAA;IAGF;;IAAA,OAAA,KAAA;EAIF;;EAAA,SAAA,WAAA,CAAA,SAAA,EAAgC;IAC9B,IAAIC,QAAQ,GAAG,OAAf,SAAA;;IACA,IAAIK,KAAK,CAALA,OAAAA,CAAJ,SAAIA,CAAJ,EAA8B;MAC5B,OAAA,OAAA;IAEF;;IAAA,IAAIN,SAAS,YAAb,MAAA,EAAiC;MAI/B,OAAA,QAAA;IAEF;;IAAA,IAAIgC,QAAQ,CAAA,QAAA,EAAZ,SAAY,CAAZ,EAAmC;MACjC,OAAA,QAAA;IAEF;;IAAA,OAAA,QAAA;EAKF;;EAAA,SAAA,cAAA,CAAA,SAAA,EAAmC;IACjC,IAAI,OAAA,SAAA,KAAA,WAAA,IAAoChC,SAAS,KAAjD,IAAA,EAA4D;MAC1D,OAAO,KAAP,SAAA;IAEF;;IAAA,IAAIC,QAAQ,GAAGC,WAAW,CAA1B,SAA0B,CAA1B;;IACA,IAAID,QAAQ,KAAZ,QAAA,EAA2B;MACzB,IAAID,SAAS,YAAb,IAAA,EAA+B;QAC7B,OAAA,MAAA;MADF,CAAA,MAEO,IAAIA,SAAS,YAAb,MAAA,EAAiC;QACtC,OAAA,QAAA;MAEH;IACD;;IAAA,OAAA,QAAA;EAKF;;EAAA,SAAA,wBAAA,CAAA,KAAA,EAAyC;IACvC,IAAIoB,IAAI,GAAGhB,cAAc,CAAzB,KAAyB,CAAzB;;IACA,QAAA,IAAA;MACE,KAAA,OAAA;MACA,KAAA,QAAA;QACE,OAAO,QAAP,IAAA;;MACF,KAAA,SAAA;MACA,KAAA,MAAA;MACA,KAAA,QAAA;QACE,OAAO,OAAP,IAAA;;MACF;QACE,OATJ,IASI;IATJ;EAcF;;EAAA,SAAA,YAAA,CAAA,SAAA,EAAiC;IAC/B,IAAI,CAACJ,SAAS,CAAV,WAAA,IAA0B,CAACA,SAAS,CAATA,WAAAA,CAA/B,IAAA,EAA2D;MACzD,OAAA,SAAA;IAEF;;IAAA,OAAOA,SAAS,CAATA,WAAAA,CAAP,IAAA;EAGFvC;;EAAAA,cAAc,CAAdA,cAAAA,GAAAA,cAAAA;EACAA,cAAc,CAAdA,iBAAAA,GAAmCf,cAAc,CAAjDe,iBAAAA;EACAA,cAAc,CAAdA,SAAAA,GAAAA,cAAAA;EAEA,OAAA,cAAA;AAxiBFP,CAAAA","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]},"metadata":{},"sourceType":"script"}