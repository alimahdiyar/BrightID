{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport Hammer from '@egjs/hammerjs';\nimport { DEG_RAD } from \"./constants\";\nimport IndiscreteGestureHandler from \"./IndiscreteGestureHandler\";\n\nvar RotationGestureHandler = function (_IndiscreteGestureHan) {\n  _inherits(RotationGestureHandler, _IndiscreteGestureHan);\n\n  var _super = _createSuper(RotationGestureHandler);\n\n  function RotationGestureHandler() {\n    _classCallCheck(this, RotationGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RotationGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'rotate';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Rotate;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var rotation = _ref.rotation,\n          velocity = _ref.velocity,\n          center = _ref.center;\n\n      var _this$initialRotation;\n\n      return {\n        rotation: (rotation - ((_this$initialRotation = this.initialRotation) !== null && _this$initialRotation !== void 0 ? _this$initialRotation : 0)) * DEG_RAD,\n        anchorX: center.x,\n        anchorY: center.y,\n        velocity: velocity\n      };\n    }\n  }]);\n\n  return RotationGestureHandler;\n}(IndiscreteGestureHandler);\n\nexport default RotationGestureHandler;","map":{"version":3,"sources":["RotationGestureHandler.ts"],"names":["RotationGestureHandler","IndiscreteGestureHandler","Hammer","transformNativeEvent","rotation","velocity","center","anchorX","anchorY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,MAAA,MAAA,gBAAA;AAEA,SAAA,OAAA;AAEA,OAAA,wBAAA;;AAEMA,IAAAA,sB;;;;;;;;;;;;;SACI,SAAA,GAAA,GAAG;MACT,OAAA,QAAA;;;;SAGoB,SAAA,GAAA,GAAG;MACvB,OAAOE,MAAM,CAAb,MAAA;;;;WAGFC,SAAAA,oBAAAA,CAAAA,IAAAA,EAAqE;MAA9CC,IAAAA,QAA8C,GAAA,IAAA,CAA9CA,QAAAA;MAAAA,IAAUC,QAAoC,GAAA,IAAA,CAApCA,QAAVD;MAAAA,IAAoBE,MAA0B,GAAA,IAAA,CAA1BA,MAApBF;;MAA8C,IAAA,qBAAA;;MACnE,OAAO;QACLA,QAAQ,EAAE,CAACA,QAAQ,IAAA,CAAA,qBAAA,GAAI,KAAJ,eAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAT,CAAS,CAAT,IADL,OAAA;QAELG,OAAO,EAAED,MAAM,CAFV,CAAA;QAGLE,OAAO,EAAEF,MAAM,CAHV,CAAA;QAILD,QAAAA,EAJF;MAAO,CAAP;;;;;EAViCJ,wB,CAA/BD;;AAkBN,eAAA,sBAAA","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { DEG_RAD } from './constants';\nimport { HammerInputExt } from './GestureHandler';\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass RotationGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'rotate';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Rotate;\n  }\n\n  transformNativeEvent({ rotation, velocity, center }: HammerInputExt) {\n    return {\n      rotation: (rotation - (this.initialRotation ?? 0)) * DEG_RAD,\n      anchorX: center.x,\n      anchorY: center.y,\n      velocity,\n    };\n  }\n}\nexport default RotationGestureHandler;\n"]},"metadata":{},"sourceType":"module"}