{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useCallback, useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation, useRoute, useFocusEffect } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Svg, { Line } from 'react-native-svg';\nimport { createSelector } from '@reduxjs/toolkit';\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useSelector } from \"../../store\";\nimport { ORANGE, WHITE } from \"../../theme/colors\";\nimport { DEVICE_LARGE, WIDTH, HEIGHT } from \"../../utils/deviceConstants\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { selectAllUnconfirmedConnections, selectPendingConnectionById } from \"./pendingConnectionSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GROUP_TIMEOUT = 35000;\nvar radius = WIDTH / 2 - 35;\n\nvar degreeToRadian = function degreeToRadian(a) {\n  return a * (Math.PI / 180);\n};\n\nvar isEven = function isEven(n) {\n  return n % 2 === 0;\n};\n\nvar calcX = function calcX(a) {\n  return WIDTH / 2 - 40 + radius * Math.cos(degreeToRadian(a));\n};\n\nvar calcY = function calcY(a) {\n  return HEIGHT / 2 - 120 + radius * Math.sin(degreeToRadian(a));\n};\n\nvar selectGroupConnections = createSelector(selectAllUnconfirmedConnections, function (_, channel) {\n  return channel;\n}, function (pendingConnections, channel) {\n  console.log('calcing pending connections');\n  return pendingConnections.filter(function (pc) {\n    return pc.channelId === (channel == null ? void 0 : channel.id) && pc.profileId !== (channel == null ? void 0 : channel.initiatorProfileId);\n  });\n});\nexport var GroupConnectionScreen = function GroupConnectionScreen() {\n  var _route$params;\n\n  var navigation = useNavigation();\n  var route = useRoute();\n  var circleArcOneOpacity = useRef(new Animated.Value(0)).current;\n  var circleArcTwoOpacity = useRef(new Animated.Value(0)).current;\n  var channel = (_route$params = route.params) == null ? void 0 : _route$params.channel;\n  var initiator = useSelector(function (state) {\n    return selectPendingConnectionById(state, channel == null ? void 0 : channel.initiatorProfileId);\n  });\n  var groupConnections = useSelector(function (state) {\n    return selectGroupConnections(state, channel);\n  });\n  useFocusEffect(useCallback(function () {\n    var timer = setTimeout(function () {\n      navigation.navigate('PendingConnections');\n    }, GROUP_TIMEOUT);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, [navigation]));\n  useEffect(function () {\n    console.log('in the animation effect');\n    var circleAnim = Animated.stagger(1500, [Animated.loop(Animated.timing(circleArcOneOpacity, {\n      toValue: 1,\n      duration: 3000,\n      useNativeDriver: true\n    })), Animated.loop(Animated.timing(circleArcTwoOpacity, {\n      toValue: 1,\n      duration: 3000,\n      useNativeDriver: true\n    }))]);\n\n    if (navigation.isFocused()) {\n      circleAnim.start();\n    }\n\n    return function () {\n      circleAnim.stop();\n    };\n  }, [circleArcOneOpacity, circleArcTwoOpacity, navigation]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      bubbleCoords = _useState2[0],\n      setBubbleCoords = _useState2[1];\n\n  useEffect(function () {\n    console.log('in the diff bubble coord effect');\n    if (!navigation.isFocused()) return;\n    var diff = groupConnections.length - bubbleCoords.length;\n\n    if (diff > 0) {\n      var nextCoords = {};\n\n      if (isEven(bubbleCoords.length)) {\n        nextCoords.left = calcX(90 + bubbleCoords.length * 42);\n        nextCoords.top = calcY(90 + bubbleCoords.length * 42);\n      } else {\n        nextCoords.left = calcX(270 + bubbleCoords.length * 42);\n        nextCoords.top = calcY(270 + bubbleCoords.length * 42);\n      }\n\n      setBubbleCoords(bubbleCoords.concat(nextCoords));\n    }\n\n    if (diff < 0) {\n      setBubbleCoords(bubbleCoords.slice(-1));\n    }\n  }, [groupConnections.length, bubbleCoords, navigation]);\n\n  var GroupConnectionBubbles = function GroupConnectionBubbles() {\n    return navigation.isFocused() ? groupConnections.map(function (pc, index) {\n      var _bubbleCoords$index, _bubbleCoords$index2, _bubbleCoords$index3, _bubbleCoords$index4;\n\n      return _jsxs(_Fragment, {\n        children: [bubbleCoords[index] && _jsx(Svg, {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          height: HEIGHT,\n          width: WIDTH,\n          children: _jsx(Line, {\n            x1: WIDTH / 2,\n            y1: HEIGHT / 2 - 100,\n            x2: ((_bubbleCoords$index = bubbleCoords[index]) == null ? void 0 : _bubbleCoords$index.left) + 40,\n            y2: ((_bubbleCoords$index2 = bubbleCoords[index]) == null ? void 0 : _bubbleCoords$index2.top) + 40,\n            stroke: ORANGE,\n            strokeWidth: \"2\"\n          })\n        }), _jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            navigation.navigate('FullScreenPhoto', {\n              photo: pc.pendingConnectionData.sharedProfile.photo,\n              base64: true\n            });\n          },\n          children: _jsx(Image, {\n            style: [styles.connectionBubble, {\n              left: (_bubbleCoords$index3 = bubbleCoords[index]) == null ? void 0 : _bubbleCoords$index3.left,\n              top: (_bubbleCoords$index4 = bubbleCoords[index]) == null ? void 0 : _bubbleCoords$index4.top\n            }],\n            source: {\n              uri: pc.pendingConnectionData.sharedProfile.photo\n            }\n          }, pc.profileId)\n        })]\n      });\n    }) : null;\n  };\n\n  console.log('rendering Group Connection Screen');\n  return navigation.isFocused() ? _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: ORANGE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(Animated.View, {\n        style: [styles.circleArcOne, {\n          opacity: circleArcOneOpacity.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [0, 0.9, 0]\n          }),\n          transform: [{\n            scale: circleArcOneOpacity.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 2]\n            })\n          }]\n        }]\n      }), _jsx(Animated.View, {\n        style: [styles.circleArcTwo, {\n          opacity: circleArcTwoOpacity.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [0, 0.9, 0]\n          }),\n          transform: [{\n            scale: circleArcTwoOpacity.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 2]\n            })\n          }]\n        }]\n      }), (initiator == null ? void 0 : initiator.pendingConnectionData.sharedProfile.photo) && _jsx(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          navigation.navigate('FullScreenPhoto', {\n            photo: initiator.pendingConnectionData.sharedProfile.photo,\n            base64: true\n          });\n        },\n        children: _jsx(Image, {\n          style: styles.groupFounder,\n          source: {\n            uri: initiator.pendingConnectionData.sharedProfile.photo\n          }\n        })\n      }), GroupConnectionBubbles(), _jsxs(TouchableOpacity, {\n        testID: \"GroupConnectionsToPendingConnectionsBtn\",\n        style: styles.confirmConnectionsButton,\n        onPress: function onPress() {\n          navigation.navigate('PendingConnections');\n        },\n        children: [_jsx(Material, {\n          name: \"account-multiple-plus-outline\",\n          size: DEVICE_LARGE ? 32 : 26,\n          color: ORANGE\n        }), _jsx(Text, {\n          style: styles.confirmConnectionsText,\n          children: \"Confirm Connections\"\n        })]\n      })]\n    })]\n  }) : null;\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    borderTopLeftRadius: 58,\n    borderTopRightRadius: 58,\n    zIndex: 10,\n    marginTop: -58\n  },\n  bubbleView: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: WIDTH,\n    height: HEIGHT\n  },\n  groupFounder: {\n    position: 'absolute',\n    left: WIDTH / 2 - 45,\n    top: HEIGHT / 2 - 140,\n    width: 90,\n    height: 90,\n    borderWidth: 2,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20\n  },\n  circleArcOne: {\n    position: 'absolute',\n    left: WIDTH / 2 - 45,\n    top: HEIGHT / 2 - 140,\n    width: 90,\n    height: 90,\n    backgroundColor: 'transparent',\n    borderWidth: 10,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  circleArcTwo: {\n    position: 'absolute',\n    left: WIDTH / 2 - 45,\n    top: HEIGHT / 2 - 140,\n    width: 90,\n    height: 90,\n    backgroundColor: 'transparent',\n    borderWidth: 10,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  connectionBubble: {\n    position: 'absolute',\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    borderColor: ORANGE,\n    borderWidth: 2\n  },\n  buttonText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    fontWeight: '500',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'left',\n    color: WHITE\n  },\n  rightArrow: {\n    position: 'absolute',\n    right: 0,\n    height: 80,\n    justifyContent: 'center',\n    width: 40\n  },\n  confirmConnectionsButton: {\n    position: 'absolute',\n    bottom: '8%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: DEVICE_LARGE ? 42 : 36,\n    backgroundColor: WHITE,\n    borderRadius: 60,\n    width: DEVICE_LARGE ? 260 : 210,\n    borderWidth: 2,\n    borderColor: ORANGE\n  },\n  confirmConnectionsText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[14],\n    color: ORANGE,\n    marginLeft: 10\n  }\n});\nexport default GroupConnectionScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/GroupConnectionScreen.tsx"],"names":["GROUP_TIMEOUT","radius","WIDTH","degreeToRadian","a","Math","isEven","n","calcX","calcY","HEIGHT","selectGroupConnections","createSelector","console","pendingConnections","pc","channel","GroupConnectionScreen","navigation","useNavigation","route","useRoute","circleArcOneOpacity","useRef","Animated","circleArcTwoOpacity","initiator","useSelector","selectPendingConnectionById","groupConnections","useFocusEffect","useCallback","timer","setTimeout","clearTimeout","useEffect","circleAnim","toValue","duration","useNativeDriver","bubbleCoords","setBubbleCoords","useState","diff","nextCoords","GroupConnectionBubbles","position","top","left","photo","base64","styles","uri","opacity","inputRange","outputRange","transform","scale","DEVICE_LARGE","StyleSheet","orangeTop","backgroundColor","height","width","zIndex","container","flex","alignItems","justifyContent","flexDirection","borderTopLeftRadius","borderTopRightRadius","marginTop","bubbleView","groupFounder","borderWidth","borderColor","borderRadius","circleArcOne","circleArcTwo","connectionBubble","buttonText","fontFamily","fontSize","fontWeight","fontStyle","letterSpacing","textAlign","color","rightArrow","right","confirmConnectionsButton","bottom","confirmConnectionsText","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Image,\n  StatusBar,\n  View,\n} from 'react-native';\nimport {\n  RouteProp,\n  useNavigation,\n  useRoute,\n  useFocusEffect,\n} from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Svg, { Line } from 'react-native-svg';\nimport { createSelector } from '@reduxjs/toolkit';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useSelector } from '@/store';\nimport { ORANGE, WHITE } from '@/theme/colors';\nimport { DEVICE_LARGE, WIDTH, HEIGHT } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport {\n  selectAllUnconfirmedConnections,\n  selectPendingConnectionById,\n} from '@/components/PendingConnections/pendingConnectionSlice';\n\n/** HELPERS */\n\nconst GROUP_TIMEOUT = 35000;\n\nconst radius = WIDTH / 2 - 35;\n\nconst degreeToRadian = (a: number) => a * (Math.PI / 180);\n\nconst isEven = (n: number) => n % 2 === 0;\n\nconst calcX = (a: number) =>\n  WIDTH / 2 - 40 + radius * Math.cos(degreeToRadian(a));\nconst calcY = (a: number) =>\n  HEIGHT / 2 - 120 + radius * Math.sin(degreeToRadian(a));\n\n/** SELECTORS */\n\nconst selectGroupConnections = createSelector(\n  selectAllUnconfirmedConnections,\n  (_: State, channel: Channel) => channel,\n  (pendingConnections, channel) => {\n    console.log('calcing pending connections');\n    return pendingConnections.filter(\n      (pc) =>\n        pc.channelId === channel?.id &&\n        pc.profileId !== channel?.initiatorProfileId,\n    );\n  },\n);\n\n/** MAIN */\ntype GroupScreenRoute = RouteProp<\n  { GroupScreen: { channel: Channel } },\n  'GroupScreen'\n>;\n\nexport const GroupConnectionScreen = () => {\n  const navigation = useNavigation();\n  const route = useRoute<GroupScreenRoute>();\n\n  const circleArcOneOpacity = useRef(new Animated.Value(0)).current;\n  const circleArcTwoOpacity = useRef(new Animated.Value(0)).current;\n\n  const channel = route.params?.channel;\n\n  const initiator = useSelector((state: State) =>\n    selectPendingConnectionById(state, channel?.initiatorProfileId),\n  );\n\n  const groupConnections = useSelector((state: State) =>\n    selectGroupConnections(state, channel),\n  );\n\n  // automatically nav to the next screen after timeout\n  useFocusEffect(\n    useCallback(() => {\n      const timer = setTimeout(() => {\n        navigation.navigate('PendingConnections');\n      }, GROUP_TIMEOUT);\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [navigation]),\n  );\n\n  useEffect(() => {\n    console.log('in the animation effect');\n    const circleAnim = Animated.stagger(1500, [\n      Animated.loop(\n        Animated.timing(circleArcOneOpacity, {\n          toValue: 1,\n          duration: 3000,\n          useNativeDriver: true,\n        }),\n      ),\n      Animated.loop(\n        Animated.timing(circleArcTwoOpacity, {\n          toValue: 1,\n          duration: 3000,\n          useNativeDriver: true,\n        }),\n      ),\n    ]);\n\n    if (navigation.isFocused()) {\n      circleAnim.start();\n    }\n\n    return () => {\n      circleAnim.stop();\n    };\n  }, [circleArcOneOpacity, circleArcTwoOpacity, navigation]);\n  // waiting rings animation\n\n  const [bubbleCoords, setBubbleCoords] = useState([]);\n\n  useEffect(() => {\n    console.log('in the diff bubble coord effect');\n    if (!navigation.isFocused()) return;\n    const diff = groupConnections.length - bubbleCoords.length;\n    if (diff > 0) {\n      const nextCoords: { left?: number; top?: number } = {};\n      if (isEven(bubbleCoords.length)) {\n        nextCoords.left = calcX(90 + bubbleCoords.length * 42);\n        nextCoords.top = calcY(90 + bubbleCoords.length * 42);\n      } else {\n        nextCoords.left = calcX(270 + bubbleCoords.length * 42);\n        nextCoords.top = calcY(270 + bubbleCoords.length * 42);\n      }\n      setBubbleCoords(bubbleCoords.concat(nextCoords));\n    }\n\n    if (diff < 0) {\n      setBubbleCoords(bubbleCoords.slice(-1));\n    }\n  }, [groupConnections.length, bubbleCoords, navigation]);\n\n  const GroupConnectionBubbles = () =>\n    navigation.isFocused()\n      ? groupConnections.map((pc, index) => (\n          <>\n            {bubbleCoords[index] && (\n              <Svg\n                style={{ position: 'absolute', top: 0, left: 0 }}\n                height={HEIGHT}\n                width={WIDTH}\n              >\n                <Line\n                  x1={WIDTH / 2}\n                  y1={HEIGHT / 2 - 100}\n                  x2={bubbleCoords[index]?.left + 40}\n                  y2={bubbleCoords[index]?.top + 40}\n                  stroke={ORANGE}\n                  strokeWidth=\"2\"\n                />\n              </Svg>\n            )}\n            <TouchableWithoutFeedback\n              onPress={() => {\n                navigation.navigate('FullScreenPhoto', {\n                  photo: pc.pendingConnectionData.sharedProfile.photo,\n                  base64: true,\n                });\n              }}\n            >\n              <Image\n                key={pc.profileId}\n                style={[\n                  styles.connectionBubble,\n                  {\n                    left: bubbleCoords[index]?.left,\n                    top: bubbleCoords[index]?.top,\n                  },\n                ]}\n                source={{ uri: pc.pendingConnectionData.sharedProfile.photo }}\n              />\n            </TouchableWithoutFeedback>\n          </>\n        ))\n      : null;\n\n  console.log('rendering Group Connection Screen');\n\n  return navigation.isFocused() ? (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor={ORANGE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <SafeAreaView style={styles.container}>\n        <Animated.View\n          style={[\n            styles.circleArcOne,\n            {\n              opacity: circleArcOneOpacity.interpolate({\n                inputRange: [0, 0.5, 1],\n                outputRange: [0, 0.9, 0],\n              }),\n              transform: [\n                {\n                  scale: circleArcOneOpacity.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [1, 2],\n                  }),\n                },\n              ],\n            },\n          ]}\n        />\n        <Animated.View\n          style={[\n            styles.circleArcTwo,\n            {\n              opacity: circleArcTwoOpacity.interpolate({\n                inputRange: [0, 0.5, 1],\n                outputRange: [0, 0.9, 0],\n              }),\n              transform: [\n                {\n                  scale: circleArcTwoOpacity.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [1, 2],\n                  }),\n                },\n              ],\n            },\n          ]}\n        />\n        {initiator?.pendingConnectionData.sharedProfile.photo && (\n          <TouchableWithoutFeedback // style={styles.cancelButton}\n            onPress={() => {\n              navigation.navigate('FullScreenPhoto', {\n                photo: initiator.pendingConnectionData.sharedProfile.photo,\n                base64: true,\n              });\n            }}\n          >\n            <Image\n              style={styles.groupFounder}\n              source={{\n                uri: initiator.pendingConnectionData.sharedProfile.photo,\n              }}\n            />\n          </TouchableWithoutFeedback>\n        )}\n\n        {GroupConnectionBubbles()}\n\n        <TouchableOpacity\n          testID=\"GroupConnectionsToPendingConnectionsBtn\"\n          style={styles.confirmConnectionsButton}\n          onPress={() => {\n            navigation.navigate('PendingConnections');\n          }}\n        >\n          <Material\n            name=\"account-multiple-plus-outline\"\n            size={DEVICE_LARGE ? 32 : 26}\n            color={ORANGE}\n          />\n          <Text style={styles.confirmConnectionsText}>Confirm Connections</Text>\n        </TouchableOpacity>\n      </SafeAreaView>\n    </>\n  ) : null;\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    borderTopLeftRadius: 58,\n    borderTopRightRadius: 58,\n    zIndex: 10,\n    marginTop: -58,\n  },\n\n  bubbleView: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: WIDTH,\n    height: HEIGHT,\n  },\n  groupFounder: {\n    position: 'absolute',\n    left: WIDTH / 2 - 45,\n    top: HEIGHT / 2 - 140,\n    width: 90,\n    height: 90,\n    borderWidth: 2,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n  },\n  circleArcOne: {\n    position: 'absolute',\n    left: WIDTH / 2 - 45,\n    top: HEIGHT / 2 - 140,\n    width: 90,\n    height: 90,\n    backgroundColor: 'transparent',\n    borderWidth: 10,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  circleArcTwo: {\n    position: 'absolute',\n    left: WIDTH / 2 - 45,\n    top: HEIGHT / 2 - 140,\n    width: 90,\n    height: 90,\n    backgroundColor: 'transparent',\n    borderWidth: 10,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  connectionBubble: {\n    position: 'absolute',\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    borderColor: ORANGE,\n    borderWidth: 2,\n  },\n  buttonText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    fontWeight: '500',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'left',\n    color: WHITE,\n  },\n  rightArrow: {\n    position: 'absolute',\n    right: 0,\n    height: 80,\n    justifyContent: 'center',\n    width: 40,\n  },\n  confirmConnectionsButton: {\n    position: 'absolute',\n    bottom: '8%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: DEVICE_LARGE ? 42 : 36,\n    backgroundColor: WHITE,\n    borderRadius: 60,\n    width: DEVICE_LARGE ? 260 : 210,\n    borderWidth: 2,\n    borderColor: ORANGE,\n  },\n  confirmConnectionsText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[14],\n    color: ORANGE,\n    marginLeft: 10,\n  },\n});\n\nexport default GroupConnectionScreen;\n"]},"metadata":{},"sourceType":"module"}