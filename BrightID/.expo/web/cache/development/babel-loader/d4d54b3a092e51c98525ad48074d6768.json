{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme } from '@react-navigation/native';\nimport MaskedView from \"../MaskedView\";\nimport TouchableItem from \"../TouchableItem\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      _ref$labelVisible = _ref.labelVisible,\n      labelVisible = _ref$labelVisible === void 0 ? Platform.OS === 'ios' : _ref$labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      customPressColorAndroid = _ref.pressColorAndroid,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? \"\".concat(label, \", back\") : 'Go back' : _ref$accessibilityLab,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(TouchableItem, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row'\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","Platform","onLabelLayout","onPress","pressColorAndroid","customPressColorAndroid","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","style","dark","colors","useTheme","initialLabelWidth","setInitialLabelWidth","React","ios","default","handleLabelLayout","e","shouldTruncateLabel","renderBackImage","styles","Boolean","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","minWidth","Animated","accessible","onLayout","color","numberOfLines","maskElement","handlePress","requestAnimationFrame","accessibilityRole","accessibilityComponentType","accessibilityTraits","testID","delayPressIn","pressColor","hitSlop","top","right","bottom","left","borderless","StyleSheet","container","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","labelWrapper","icon","height","width","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","margin","iconWithLabel","iconMaskContainer","flex","justifyContent","iconMaskFillerRect","backgroundColor","iconMask","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport type { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  style,\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}