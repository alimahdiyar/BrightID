{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.settingsSlice = exports.setSyncSocialMediaEnabled = exports.setPrimaryDevice = exports.setLastSyncTime = exports.setBaseUrl = exports.selectSyncSocialMediaEnabled = exports.selectLastSyncTime = exports.selectIsPrimaryDevice = exports.selectDefaultNodeUrls = exports.selectBaseUrl = exports.selectAllNodeUrls = exports.resetSettings = exports.resetNodeUrls = exports.removeNodeUrl = exports.removeCurrentNodeUrl = exports.default = exports.clearBaseUrl = exports.addNodeUrl = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _resetStore = require(\"../actions/resetStore\");\n\nvar ProdCandidates = ['http://node.brightid.org', 'http://brightid.idealmoney.io', 'http://brightid2.idealmoney.io', 'https://brightid.59836e71dd6e5898.dyndns.dappnode.io', 'http://bright.daosquare.io'];\nvar TestCandidates = ['http://test.brightid.org'];\nvar initialState = {\n  syncSocialMediaEnabled: false,\n  baseUrl: null,\n  nodeUrls: __DEV__ ? TestCandidates : ProdCandidates,\n  isPrimaryDevice: true,\n  lastSyncTime: 0\n};\nvar settingsSlice = (0, _toolkit.createSlice)({\n  name: 'settings',\n  initialState: initialState,\n  reducers: {\n    setSyncSocialMediaEnabled: function setSyncSocialMediaEnabled(state, action) {\n      state.syncSocialMediaEnabled = action.payload;\n    },\n    setBaseUrl: function setBaseUrl(state, action) {\n      state.baseUrl = action.payload;\n    },\n    clearBaseUrl: function clearBaseUrl(state) {\n      state.baseUrl = null;\n    },\n    resetSettings: function resetSettings(state) {\n      state = initialState;\n    },\n    addNodeUrl: function addNodeUrl(state, action) {\n      var newNodeUrl = action.payload.toLowerCase();\n      if (!state.nodeUrls.includes(newNodeUrl)) state.nodeUrls.push(action.payload);\n    },\n    removeNodeUrl: function removeNodeUrl(state, action) {\n      var removeUrl = action.payload.toLowerCase();\n      state.nodeUrls = state.nodeUrls.filter(function (url) {\n        return url.toLowerCase() !== removeUrl;\n      });\n\n      if (state.baseUrl.toLowerCase() === removeUrl) {\n        state.baseUrl = null;\n      }\n    },\n    removeCurrentNodeUrl: function removeCurrentNodeUrl(state) {\n      if (state.baseUrl) {\n        console.log(\"Removing active node \" + state.baseUrl);\n        state.nodeUrls = state.nodeUrls.filter(function (url) {\n          return url.toLowerCase() !== state.baseUrl;\n        });\n        state.baseUrl = null;\n      } else {\n        console.log(\"No active node to remove\");\n      }\n    },\n    resetNodeUrls: function resetNodeUrls(state) {\n      console.log(\"Resetting node urls\");\n      state.nodeUrls = initialState.nodeUrls;\n\n      if (state.baseUrl && !state.nodeUrls.includes(state.baseUrl)) {\n        console.log(\"current baseUrl removed from nodeList. Clearing baseUrl.\");\n        state.baseUrl = initialState.baseUrl;\n      }\n    },\n    setPrimaryDevice: function setPrimaryDevice(state, action) {\n      state.isPrimaryDevice = action.payload;\n    },\n    setLastSyncTime: function setLastSyncTime(state, action) {\n      state.lastSyncTime = action.payload;\n    }\n  },\n  extraReducers: (0, _defineProperty2.default)({}, _resetStore.RESET_STORE, function () {\n    return initialState;\n  })\n});\nexports.settingsSlice = settingsSlice;\nvar _settingsSlice$action = settingsSlice.actions,\n    setSyncSocialMediaEnabled = _settingsSlice$action.setSyncSocialMediaEnabled,\n    setBaseUrl = _settingsSlice$action.setBaseUrl,\n    clearBaseUrl = _settingsSlice$action.clearBaseUrl,\n    resetSettings = _settingsSlice$action.resetSettings,\n    addNodeUrl = _settingsSlice$action.addNodeUrl,\n    removeNodeUrl = _settingsSlice$action.removeNodeUrl,\n    removeCurrentNodeUrl = _settingsSlice$action.removeCurrentNodeUrl,\n    resetNodeUrls = _settingsSlice$action.resetNodeUrls,\n    setPrimaryDevice = _settingsSlice$action.setPrimaryDevice,\n    setLastSyncTime = _settingsSlice$action.setLastSyncTime;\nexports.setLastSyncTime = setLastSyncTime;\nexports.setPrimaryDevice = setPrimaryDevice;\nexports.resetNodeUrls = resetNodeUrls;\nexports.removeCurrentNodeUrl = removeCurrentNodeUrl;\nexports.removeNodeUrl = removeNodeUrl;\nexports.addNodeUrl = addNodeUrl;\nexports.resetSettings = resetSettings;\nexports.clearBaseUrl = clearBaseUrl;\nexports.setBaseUrl = setBaseUrl;\nexports.setSyncSocialMediaEnabled = setSyncSocialMediaEnabled;\n\nvar selectSyncSocialMediaEnabled = function selectSyncSocialMediaEnabled(state) {\n  return state.settings.syncSocialMediaEnabled;\n};\n\nexports.selectSyncSocialMediaEnabled = selectSyncSocialMediaEnabled;\n\nvar selectBaseUrl = function selectBaseUrl(state) {\n  return state.settings.baseUrl;\n};\n\nexports.selectBaseUrl = selectBaseUrl;\n\nvar selectAllNodeUrls = function selectAllNodeUrls(state) {\n  return state.settings.nodeUrls;\n};\n\nexports.selectAllNodeUrls = selectAllNodeUrls;\n\nvar selectDefaultNodeUrls = function selectDefaultNodeUrls(_) {\n  return initialState.nodeUrls;\n};\n\nexports.selectDefaultNodeUrls = selectDefaultNodeUrls;\n\nvar selectIsPrimaryDevice = function selectIsPrimaryDevice(state) {\n  return state.settings.isPrimaryDevice;\n};\n\nexports.selectIsPrimaryDevice = selectIsPrimaryDevice;\n\nvar selectLastSyncTime = function selectLastSyncTime(state) {\n  return state.settings.lastSyncTime;\n};\n\nexports.selectLastSyncTime = selectLastSyncTime;\nvar _default = settingsSlice.reducer;\nexports.default = _default;","map":{"version":3,"names":["ProdCandidates","TestCandidates","initialState","syncSocialMediaEnabled","baseUrl","nodeUrls","__DEV__","isPrimaryDevice","lastSyncTime","settingsSlice","createSlice","name","reducers","setSyncSocialMediaEnabled","state","action","payload","setBaseUrl","clearBaseUrl","resetSettings","addNodeUrl","newNodeUrl","toLowerCase","includes","push","removeNodeUrl","removeUrl","filter","url","removeCurrentNodeUrl","console","log","resetNodeUrls","setPrimaryDevice","setLastSyncTime","extraReducers","RESET_STORE","actions","selectSyncSocialMediaEnabled","settings","selectBaseUrl","selectAllNodeUrls","selectDefaultNodeUrls","_","selectIsPrimaryDevice","selectLastSyncTime","reducer"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/reducer/settingsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RESET_STORE } from '@/actions/resetStore';\n\nconst ProdCandidates = [\n  'http://node.brightid.org',\n  'http://brightid.idealmoney.io',\n  'http://brightid2.idealmoney.io',\n  'https://brightid.59836e71dd6e5898.dyndns.dappnode.io',\n  'http://bright.daosquare.io',\n  // Following nodes exist, but currently fail the NodeChooser tests\n  //  'http://brightid.onehive.org',\n  //  'http://node.topupgifter.com',\n  //  'http://node.lumos.services',\n];\nconst TestCandidates = ['http://test.brightid.org'];\n\ninterface SettingsSlice {\n  syncSocialMediaEnabled: boolean;\n  baseUrl: string | null;\n  nodeUrls: Array<string>;\n  isPrimaryDevice: boolean;\n  lastSyncTime: number;\n}\n\nconst initialState: SettingsSlice = {\n  syncSocialMediaEnabled: false,\n  baseUrl: null,\n  nodeUrls: __DEV__ ? TestCandidates : ProdCandidates,\n  isPrimaryDevice: true,\n  lastSyncTime: 0,\n};\n\nexport const settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    setSyncSocialMediaEnabled: (state, action: PayloadAction<boolean>) => {\n      state.syncSocialMediaEnabled = action.payload;\n    },\n    setBaseUrl: (state, action: PayloadAction<string>) => {\n      state.baseUrl = action.payload;\n    },\n    clearBaseUrl: (state) => {\n      state.baseUrl = null;\n    },\n    resetSettings: (state) => {\n      state = initialState;\n    },\n    addNodeUrl: (state, action: PayloadAction<string>) => {\n      const newNodeUrl = action.payload.toLowerCase();\n      if (!state.nodeUrls.includes(newNodeUrl))\n        state.nodeUrls.push(action.payload);\n    },\n    removeNodeUrl: (state, action: PayloadAction<string>) => {\n      const removeUrl = action.payload.toLowerCase();\n      state.nodeUrls = state.nodeUrls.filter(\n        (url) => url.toLowerCase() !== removeUrl,\n      );\n      if (state.baseUrl.toLowerCase() === removeUrl) {\n        state.baseUrl = null;\n      }\n    },\n    removeCurrentNodeUrl: (state) => {\n      if (state.baseUrl) {\n        console.log(`Removing active node ${state.baseUrl}`);\n        state.nodeUrls = state.nodeUrls.filter(\n          (url) => url.toLowerCase() !== state.baseUrl,\n        );\n        state.baseUrl = null;\n      } else {\n        console.log(`No active node to remove`);\n      }\n    },\n    resetNodeUrls: (state) => {\n      console.log(`Resetting node urls`);\n      state.nodeUrls = initialState.nodeUrls;\n      if (state.baseUrl && !state.nodeUrls.includes(state.baseUrl)) {\n        console.log(`current baseUrl removed from nodeList. Clearing baseUrl.`);\n        state.baseUrl = initialState.baseUrl;\n      }\n    },\n    setPrimaryDevice: (state, action: PayloadAction<boolean>) => {\n      state.isPrimaryDevice = action.payload;\n    },\n    setLastSyncTime: (state, action: PayloadAction<number>) => {\n      state.lastSyncTime = action.payload;\n    },\n  },\n  extraReducers: {\n    [RESET_STORE]: () => {\n      return initialState;\n    },\n  },\n});\n\nexport const {\n  setSyncSocialMediaEnabled,\n  setBaseUrl,\n  clearBaseUrl,\n  resetSettings,\n  addNodeUrl,\n  removeNodeUrl,\n  removeCurrentNodeUrl,\n  resetNodeUrls,\n  setPrimaryDevice,\n  setLastSyncTime,\n} = settingsSlice.actions;\n\nexport const selectSyncSocialMediaEnabled = (state: State) =>\n  state.settings.syncSocialMediaEnabled;\nexport const selectBaseUrl = (state: State) => state.settings.baseUrl;\nexport const selectAllNodeUrls = (state: State) => state.settings.nodeUrls;\nexport const selectDefaultNodeUrls = (_: State) => initialState.nodeUrls;\nexport const selectIsPrimaryDevice = (state: State) =>\n  state.settings.isPrimaryDevice;\nexport const selectLastSyncTime = (state: State) => state.settings.lastSyncTime;\n\nexport default settingsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}