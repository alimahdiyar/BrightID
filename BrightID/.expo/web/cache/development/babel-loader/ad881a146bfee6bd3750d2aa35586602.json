{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from \"../../../store\";\nimport { DEVICE_LARGE, WIDTH } from \"../../../utils/deviceConstants\";\nimport { photoDirectory } from \"../../../utils/filesystem\";\nimport { GREY, WHITE } from \"../../../theme/colors\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { ConnectionStatus } from \"../../Helpers/ConnectionStatus\";\nimport ChannelAPI from \"../../../api/channelService\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { uploadSig, uploadMutualInfo } from \"./thunks/channelUploadThunks\";\nimport { resetRecoveryData } from \"./recoveryDataSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RecoveringConnectionCard = function RecoveringConnectionCard(props) {\n  var status = props.status,\n      id = props.id,\n      photo = props.photo,\n      name = props.name,\n      connectionDate = props.connectionDate,\n      index = props.index,\n      level = props.level,\n      reportReason = props.reportReason,\n      setUploadingData = props.setUploadingData;\n  var nodeApi = useContext(NodeApiContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgErr = _useState2[0],\n      setImgErr = _useState2[1];\n\n  var aesKey = useSelector(function (state) {\n    return state.recoveryData.aesKey;\n  });\n  var channel = useSelector(function (state) {\n    return state.recoveryData.channel;\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var confirmConnectionSelection = function confirmConnectionSelection() {\n    Alert.alert(t('common.alert.title.pleaseConfirm'), t('restore.alert.text.restoreConfirm', {\n      name: name\n    }), [{\n      text: 'Yes',\n      onPress: handleConnectionSelect\n    }, {\n      text: 'No',\n      onPress: function onPress() {\n        return null;\n      }\n    }]);\n  };\n\n  var handleConnectionSelect = function _callee() {\n    var channelApi;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setUploadingData(true);\n            console.log(\"Uploading recovery data to channel at \" + channel.url.href);\n            channelApi = new ChannelAPI(channel.url.href);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(uploadMutualInfo({\n              conn: props,\n              aesKey: aesKey,\n              channelApi: channelApi,\n              nodeApi: nodeApi\n            }));\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(uploadSig({\n              id: id,\n              aesKey: aesKey,\n              channelApi: channelApi\n            })));\n\n          case 8:\n            setUploadingData(false);\n            Alert.alert(t('common.alert.info'), t('restore.alert.text.requestRecovering'), [{\n              text: t('common.alert.ok'),\n              onPress: function onPress() {\n                dispatch(resetRecoveryData());\n                navigation.navigate('Home');\n              }\n            }]);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            setUploadingData(false);\n            Alert.alert(t('common.alert.error'), _context.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var imageSource = photo != null && photo.filename && !imgErr ? {\n    uri: \"file://\" + photoDirectory() + \"/\" + (photo == null ? void 0 : photo.filename)\n  } : require(\"../../../static/default_profile.jpg\");\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('FullScreenPhoto', {\n            photo: photo\n          });\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewPhoto'),\n        accessibilityRole: \"imagebutton\",\n        children: _jsx(Image, {\n          source: imageSource,\n          style: styles.photo,\n          accessibilityLabel: t('connections.accessibilityLabel.connectionPhoto'),\n          onError: function onError() {\n            console.log('settingImgErr');\n            setImgErr(true);\n          }\n        })\n      }), _jsxs(TouchableOpacity, {\n        style: [styles.info, {\n          maxWidth: WIDTH * 0.56\n        }],\n        onPress: confirmConnectionSelection,\n        children: [_jsx(View, {\n          style: [styles.nameContainer],\n          testID: \"connection_name-\" + index,\n          children: _jsx(Text, {\n            numberOfLines: 1,\n            style: styles.name,\n            testID: \"connectionCardText-\" + index,\n            children: name\n          })\n        }), _jsx(ConnectionStatus, {\n          index: index,\n          status: status,\n          reportReason: reportReason,\n          connectionDate: connectionDate,\n          level: level\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  card: {\n    width: '93%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16]\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic'\n  },\n  moreIcon: {\n    marginRight: 16\n  }\n});\nexport default RecoveringConnectionCard;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RecoveringConnectionCard.tsx"],"names":["RecoveringConnectionCard","status","id","photo","name","connectionDate","index","level","reportReason","setUploadingData","props","nodeApi","useContext","imgErr","setImgErr","useState","aesKey","useSelector","state","channel","t","useTranslation","navigation","useNavigation","dispatch","useDispatch","confirmConnectionSelection","Alert","text","onPress","handleConnectionSelect","console","channelApi","uploadMutualInfo","conn","uploadSig","resetRecoveryData","imageSource","uri","photoDirectory","require","styles","maxWidth","WIDTH","StyleSheet","container","flexDirection","height","DEVICE_LARGE","alignItems","justifyContent","backgroundColor","card","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","marginLeft","marginTop","info","flex","nameContainer","fontFamily","fontSize","connectedText","color","fontStyle","moreIcon","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Alert,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from '@/store';\nimport { DEVICE_LARGE, WIDTH } from '@/utils/deviceConstants';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { GREY, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { ConnectionStatus } from '@/components/Helpers/ConnectionStatus';\nimport ChannelAPI from '@/api/channelService';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { uploadSig, uploadMutualInfo } from './thunks/channelUploadThunks';\nimport { resetRecoveryData } from './recoveryDataSlice';\n\nconst RecoveringConnectionCard = (props) => {\n  const {\n    status,\n    id,\n    photo,\n    name,\n    connectionDate,\n    index,\n    level,\n    reportReason,\n    setUploadingData,\n  } = props;\n\n  const nodeApi = useContext(NodeApiContext);\n  const [imgErr, setImgErr] = useState(false);\n  const aesKey = useSelector((state) => state.recoveryData.aesKey);\n  const channel = useSelector((state) => state.recoveryData.channel);\n  const { t } = useTranslation();\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const confirmConnectionSelection = () => {\n    Alert.alert(\n      t('common.alert.title.pleaseConfirm'),\n      t('restore.alert.text.restoreConfirm', { name }),\n      [\n        {\n          text: 'Yes',\n          onPress: handleConnectionSelect,\n        },\n        {\n          text: 'No',\n          onPress: () => null,\n        },\n      ],\n    );\n  };\n\n  const handleConnectionSelect = async () => {\n    try {\n      setUploadingData(true);\n\n      console.log(`Uploading recovery data to channel at ${channel.url.href}`);\n      const channelApi = new ChannelAPI(channel.url.href);\n\n      // it's important to upload mutal connections first so that we can guarantee the other user downloads them when they recieve the sig\n      await uploadMutualInfo({\n        conn: props,\n        aesKey,\n        channelApi,\n        nodeApi,\n      });\n\n      await dispatch(uploadSig({ id, aesKey, channelApi }));\n      setUploadingData(false);\n\n      Alert.alert(\n        t('common.alert.info'),\n        t('restore.alert.text.requestRecovering'),\n        [\n          {\n            text: t('common.alert.ok'),\n            onPress: () => {\n              dispatch(resetRecoveryData());\n              navigation.navigate('Home');\n            },\n          },\n        ],\n      );\n    } catch (err) {\n      setUploadingData(false);\n      Alert.alert(t('common.alert.error'), err.message);\n    }\n  };\n\n  const imageSource =\n    photo?.filename && !imgErr\n      ? {\n          uri: `file://${photoDirectory()}/${photo?.filename}`,\n        }\n      : require('@/static/default_profile.jpg');\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.card}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('FullScreenPhoto', { photo });\n          }}\n          accessibilityLabel={t('connections.accessibilityLabel.viewPhoto')}\n          accessibilityRole=\"imagebutton\"\n        >\n          <Image\n            source={imageSource}\n            style={styles.photo}\n            accessibilityLabel={t(\n              'connections.accessibilityLabel.connectionPhoto',\n            )}\n            onError={() => {\n              console.log('settingImgErr');\n              setImgErr(true);\n            }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.info, { maxWidth: WIDTH * 0.56 }]}\n          onPress={confirmConnectionSelection}\n        >\n          <View\n            style={[styles.nameContainer]}\n            testID={`connection_name-${index}`}\n          >\n            <Text\n              numberOfLines={1}\n              style={styles.name}\n              testID={`connectionCardText-${index}`}\n            >\n              {name}\n            </Text>\n          </View>\n          <ConnectionStatus\n            index={index}\n            status={status}\n            reportReason={reportReason}\n            connectionDate={connectionDate}\n            level={level}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n  },\n  card: {\n    width: '93%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10,\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30,\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic',\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n});\n\nexport default RecoveringConnectionCard;\n"]},"metadata":{},"sourceType":"module"}