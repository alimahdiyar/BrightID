{"ast":null,"code":"'use strict';\n\nvar pna = require('process-nextick-args');\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n\n    return this;\n  }\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/readable-stream/lib/internal/streams/destroy.js"],"names":["pna","require","_this","readableDestroyed","writableDestroyed","cb","err","self","module","destroy","undestroy"],"mappings":"AAAA;;AAIA,IAAIA,GAAG,GAAGC,OAAO,CAAjB,sBAAiB,CAAjB;;AAIA,SAAA,OAAA,CAAA,GAAA,EAAA,EAAA,EAA0B;EACxB,IAAIC,KAAK,GAAT,IAAA;;EAEA,IAAIC,iBAAiB,GAAG,KAAA,cAAA,IAAuB,KAAA,cAAA,CAA/C,SAAA;EACA,IAAIC,iBAAiB,GAAG,KAAA,cAAA,IAAuB,KAAA,cAAA,CAA/C,SAAA;;EAEA,IAAID,iBAAiB,IAArB,iBAAA,EAA4C;IAC1C,IAAA,EAAA,EAAQ;MACNE,EAAE,CAAFA,GAAE,CAAFA;IADF,CAAA,MAEO,IAAIC,GAAG,KAAK,CAAC,KAAD,cAAA,IAAwB,CAAC,KAAA,cAAA,CAArC,YAAO,CAAP,EAAwE;MAC7EN,GAAG,CAAHA,QAAAA,CAAAA,WAAAA,EAAAA,IAAAA,EAAAA,GAAAA;IAEF;;IAAA,OAAA,IAAA;EAMF;;EAAA,IAAI,KAAJ,cAAA,EAAyB;IACvB,KAAA,cAAA,CAAA,SAAA,GAAA,IAAA;EAIF;;EAAA,IAAI,KAAJ,cAAA,EAAyB;IACvB,KAAA,cAAA,CAAA,SAAA,GAAA,IAAA;EAGF;;EAAA,KAAA,QAAA,CAAcM,GAAG,IAAjB,IAAA,EAA2B,UAAA,GAAA,EAAe;IACxC,IAAI,CAAA,EAAA,IAAJ,GAAA,EAAgB;MACdN,GAAG,CAAHA,QAAAA,CAAAA,WAAAA,EAAAA,KAAAA,EAAAA,GAAAA;;MACA,IAAIE,KAAK,CAAT,cAAA,EAA0B;QACxBA,KAAK,CAALA,cAAAA,CAAAA,YAAAA,GAAAA,IAAAA;MAEH;IALD,CAAA,MAKO,IAAA,EAAA,EAAQ;MACbG,EAAE,CAAFA,GAAE,CAAFA;IAEH;EATD,CAAA;;EAWA,OAAA,IAAA;AAGF;;AAAA,SAAA,SAAA,GAAqB;EACnB,IAAI,KAAJ,cAAA,EAAyB;IACvB,KAAA,cAAA,CAAA,SAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,OAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,KAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,UAAA,GAAA,KAAA;EAGF;;EAAA,IAAI,KAAJ,cAAA,EAAyB;IACvB,KAAA,cAAA,CAAA,SAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,KAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,MAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,QAAA,GAAA,KAAA;IACA,KAAA,cAAA,CAAA,YAAA,GAAA,KAAA;EAEH;AAED;;AAAA,SAAA,WAAA,CAAA,IAAA,EAAA,GAAA,EAAgC;EAC9BE,IAAI,CAAJA,IAAAA,CAAAA,OAAAA,EAAAA,GAAAA;AAGFC;;AAAAA,MAAM,CAANA,OAAAA,GAAiB;EACfC,OAAO,EADQ,OAAA;EAEfC,SAAS,EAFXF;AAAiB,CAAjBA","sourcesContent":["'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};"]},"metadata":{},"sourceType":"script"}