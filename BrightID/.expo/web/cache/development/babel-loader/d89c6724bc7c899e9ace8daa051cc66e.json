{"ast":null,"code":"import processColor from \"react-native-web/dist/exports/processColor\";\nimport { round } from \"../base\";\nimport color from \"./color\";\nimport interpolate, { Extrapolate } from \"./interpolate\";\n\nfunction red(c) {\n  return c >> 16 & 255;\n}\n\nfunction green(c) {\n  return c >> 8 & 255;\n}\n\nfunction blue(c) {\n  return c & 255;\n}\n\nfunction opacity(c) {\n  return (c >> 24 & 255) / 255;\n}\n\nexport default function interpolateColors(animationValue, options) {\n  var inputRange = options.inputRange,\n      outputColorRange = options.outputColorRange;\n  var colors = outputColorRange.map(processColor);\n  var r = round(interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(red),\n    extrapolate: Extrapolate.CLAMP\n  }));\n  var g = round(interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(green),\n    extrapolate: Extrapolate.CLAMP\n  }));\n  var b = round(interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(blue),\n    extrapolate: Extrapolate.CLAMP\n  }));\n  var a = interpolate(animationValue, {\n    inputRange: inputRange,\n    outputRange: colors.map(opacity),\n    extrapolate: Extrapolate.CLAMP\n  });\n  return color(r, g, b, a);\n}","map":{"version":3,"sources":["interpolateColors.js"],"names":["c","inputRange","outputColorRange","options","colors","r","round","interpolate","outputRange","extrapolate","Extrapolate","g","b","a","color"],"mappings":";AACA,SAAA,KAAA;AACA,OAAA,KAAA;AACA,OAAA,WAAA,IAAA,WAAA;;AAEA,SAAA,GAAA,CAAA,CAAA,EAAgB;EACd,OAAQA,CAAC,IAADA,EAAAA,GAAR,GAAA;AAEF;;AAAA,SAAA,KAAA,CAAA,CAAA,EAAkB;EAChB,OAAQA,CAAC,IAADA,CAAAA,GAAR,GAAA;AAEF;;AAAA,SAAA,IAAA,CAAA,CAAA,EAAiB;EACf,OAAOA,CAAC,GAAR,GAAA;AAEF;;AAAA,SAAA,OAAA,CAAA,CAAA,EAAoB;EAClB,OAAO,CAAEA,CAAC,IAADA,EAAAA,GAAF,GAAA,IAAP,GAAA;AAcF;;AAAA,eAAe,SAAA,iBAAA,CAAA,cAAA,EAAA,OAAA,EAAoD;EACjE,IAAQC,UAAR,GAAyCE,OAAzC,CAAA,UAAA;EAAA,IAAoBD,gBAApB,GAAyCC,OAAzC,CAAA,gBAAA;EACA,IAAMC,MAAM,GAAGF,gBAAgB,CAAhBA,GAAAA,CAAf,YAAeA,CAAf;EAEA,IAAMG,CAAC,GAAGC,KAAK,CACbC,WAAW,CAAA,cAAA,EAAiB;IAC1BN,UAD0B,EAAA,UAAA;IAE1BO,WAAW,EAAEJ,MAAM,CAANA,GAAAA,CAFa,GAEbA,CAFa;IAG1BK,WAAW,EAAEC,WAAW,CAJ5B;EAC8B,CAAjB,CADE,CAAf;EAOA,IAAMC,CAAC,GAAGL,KAAK,CACbC,WAAW,CAAA,cAAA,EAAiB;IAC1BN,UAD0B,EAAA,UAAA;IAE1BO,WAAW,EAAEJ,MAAM,CAANA,GAAAA,CAFa,KAEbA,CAFa;IAG1BK,WAAW,EAAEC,WAAW,CAJ5B;EAC8B,CAAjB,CADE,CAAf;EAOA,IAAME,CAAC,GAAGN,KAAK,CACbC,WAAW,CAAA,cAAA,EAAiB;IAC1BN,UAD0B,EAAA,UAAA;IAE1BO,WAAW,EAAEJ,MAAM,CAANA,GAAAA,CAFa,IAEbA,CAFa;IAG1BK,WAAW,EAAEC,WAAW,CAJ5B;EAC8B,CAAjB,CADE,CAAf;EAOA,IAAMG,CAAC,GAAGN,WAAW,CAAA,cAAA,EAAiB;IACpCN,UADoC,EAAA,UAAA;IAEpCO,WAAW,EAAEJ,MAAM,CAANA,GAAAA,CAFuB,OAEvBA,CAFuB;IAGpCK,WAAW,EAAEC,WAAW,CAH1B;EAAsC,CAAjB,CAArB;EAMA,OAAOI,KAAK,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAZ,CAAY,CAAZ;AACD","sourcesContent":["import { processColor } from 'react-native';\nimport { round } from '../base';\nimport color from './color';\nimport interpolate, { Extrapolate } from './interpolate';\n\nfunction red(c) {\n  return (c >> 16) & 255;\n}\nfunction green(c) {\n  return (c >> 8) & 255;\n}\nfunction blue(c) {\n  return c & 255;\n}\nfunction opacity(c) {\n  return ((c >> 24) & 255) / 255;\n}\n\n/**\n * Use this if you want to interpolate an `Animated.Value` into color values.\n *\n * #### Why is this needed?\n *\n * Unfortunately, if you'll pass color values directly into the `outputRange` option\n * of `interpolate()` function, that won't really work (at least at the moment).\n * See https://github.com/software-mansion/react-native-reanimated/issues/181 .\n *\n * So, for now you can just use this helper instead.\n */\nexport default function interpolateColors(animationValue, options) {\n  const { inputRange, outputColorRange } = options;\n  const colors = outputColorRange.map(processColor);\n\n  const r = round(\n    interpolate(animationValue, {\n      inputRange,\n      outputRange: colors.map(red),\n      extrapolate: Extrapolate.CLAMP,\n    })\n  );\n  const g = round(\n    interpolate(animationValue, {\n      inputRange,\n      outputRange: colors.map(green),\n      extrapolate: Extrapolate.CLAMP,\n    })\n  );\n  const b = round(\n    interpolate(animationValue, {\n      inputRange,\n      outputRange: colors.map(blue),\n      extrapolate: Extrapolate.CLAMP,\n    })\n  );\n  const a = interpolate(animationValue, {\n    inputRange,\n    outputRange: colors.map(opacity),\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  return color(r, g, b, a);\n}\n"]},"metadata":{},"sourceType":"module"}