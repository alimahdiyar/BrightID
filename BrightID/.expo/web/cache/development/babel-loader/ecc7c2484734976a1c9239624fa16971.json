{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderSegment;\nexports.getDefaultHeaderHeight = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _TouchableItem = _interopRequireDefault(require(\"./TouchableItem\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar getDefaultHeaderHeight = function getDefaultHeaderHeight(layout, statusBarHeight) {\n  var isLandscape = layout.width > layout.height;\n  var headerHeight;\n\n  if (_reactNative.Platform.OS === 'ios') {\n    if (isLandscape && !_reactNative.Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (_reactNative.Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexports.getDefaultHeaderHeight = getDefaultHeaderHeight;\n\nfunction HeaderSegment(_ref) {\n  var scene = _ref.scene,\n      layout = _ref.layout;\n  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var _scene$descriptor$opt = scene.descriptor.options,\n      title = _scene$descriptor$opt.title,\n      headerTitle = _scene$descriptor$opt.headerTitle,\n      _scene$descriptor$opt2 = _scene$descriptor$opt.headerTitleAlign,\n      headerTitleAlign = _scene$descriptor$opt2 === void 0 ? _reactNative.Platform.select({\n    ios: 'center',\n    default: 'left'\n  }) : _scene$descriptor$opt2,\n      headerLeft = _scene$descriptor$opt.headerLeft,\n      headerLeftAccessibilityLabel = _scene$descriptor$opt.headerLeftAccessibilityLabel,\n      headerRight = _scene$descriptor$opt.headerRight,\n      headerTitleAllowFontScaling = _scene$descriptor$opt.headerTitleAllowFontScaling,\n      headerTitleStyle = _scene$descriptor$opt.headerTitleStyle,\n      headerTintColor = _scene$descriptor$opt.headerTintColor,\n      headerPressColorAndroid = _scene$descriptor$opt.headerPressColorAndroid,\n      headerStyle = _scene$descriptor$opt.headerStyle,\n      _scene$descriptor$opt3 = _scene$descriptor$opt.headerStatusBarHeight,\n      headerStatusBarHeight = _scene$descriptor$opt3 === void 0 ? insets.top : _scene$descriptor$opt3;\n  var currentTitle = typeof headerTitle !== 'function' && headerTitle !== undefined ? headerTitle : title !== undefined ? title : scene.route.name;\n  var defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n  var leftButton = headerLeft ? headerLeft({\n    tintColor: headerTintColor\n  }) : React.createElement(_TouchableItem.default, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: headerLeftAccessibilityLabel,\n    accessibilityTraits: \"button\",\n    delayPressIn: 0,\n    onPress: function onPress() {\n      return scene.descriptor.navigation.dispatch(_native.DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    pressColor: headerPressColorAndroid,\n    hitSlop: _reactNative.Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(_reactNative.Image, {\n    style: [styles.icon, headerTintColor ? {\n      tintColor: headerTintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n  var rightButton = headerRight ? headerRight({\n    tintColor: headerTintColor\n  }) : null;\n  return React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [{\n      height: defaultHeight,\n      backgroundColor: colors.card,\n      borderBottomColor: colors.border,\n      shadowColor: colors.border\n    }, styles.container, headerStyle]\n  }, React.createElement(_reactNative.View, {\n    pointerEvents: \"none\",\n    style: {\n      height: headerStatusBarHeight\n    }\n  }), React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: styles.content\n  }, leftButton ? React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.left, {\n      left: insets.left\n    }]\n  }, leftButton) : null, React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [headerTitleAlign === 'left' ? {\n      position: 'absolute',\n      left: (leftButton ? 72 : 16) + insets.left,\n      right: (rightButton ? 72 : 16) + insets.right\n    } : {\n      marginHorizontal: (leftButton ? 32 : 16) + Math.max(insets.left, insets.right)\n    }]\n  }, typeof headerTitle === 'function' ? headerTitle({\n    children: currentTitle,\n    allowFontScaling: headerTitleAllowFontScaling,\n    tintColor: headerTintColor,\n    style: headerTitleStyle\n  }) : React.createElement(_reactNative.Text, {\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1,\n    allowFontScaling: headerTitleAllowFontScaling,\n    style: [styles.title, {\n      color: headerTintColor !== null && headerTintColor !== void 0 ? headerTintColor : colors.text\n    }, styles.title, headerTitleStyle]\n  }, currentTitle)), rightButton ? React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.right, {\n      right: insets.right\n    }]\n  }, rightButton) : null));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: (0, _extends2.default)({}, _reactNative.Platform.select({\n    android: {\n      elevation: 4\n    },\n    ios: {\n      shadowOpacity: 0.85,\n      shadowRadius: 0,\n      shadowOffset: {\n        width: 0,\n        height: _reactNative.StyleSheet.hairlineWidth\n      }\n    },\n    default: {\n      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth\n    }\n  }), {\n    zIndex: 1\n  }),\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: _reactNative.Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  }\n});","map":{"version":3,"sources":["Header.tsx"],"names":["getDefaultHeaderHeight","isLandscape","layout","Platform","headerHeight","insets","colors","headerTitleAlign","ios","default","headerStatusBarHeight","top","scene","currentTitle","headerTitle","title","defaultHeight","leftButton","headerLeft","tintColor","headerTintColor","DrawerActions","styles","right","bottom","left","require","rightButton","headerRight","height","backgroundColor","borderBottomColor","shadowColor","border","content","position","marginHorizontal","Math","children","allowFontScaling","style","headerTitleStyle","color","text","container","android","elevation","shadowOpacity","shadowRadius","shadowOffset","width","StyleSheet","hairlineWidth","borderBottomWidth","zIndex","flex","flexDirection","alignItems","justifyContent","fontSize","fontWeight","fontFamily","icon","margin","resizeMode","touchable"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, Image, StyleSheet, Platform } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from './TouchableItem';\nimport type { Layout, DrawerHeaderProps } from '../types';\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport default function HeaderSegment({ scene, layout }: DrawerHeaderProps) {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n\n  const {\n    title,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftAccessibilityLabel,\n    headerRight,\n    headerTitleAllowFontScaling,\n    headerTitleStyle,\n    headerTintColor,\n    headerPressColorAndroid,\n    headerStyle,\n    headerStatusBarHeight = insets.top,\n  } = scene.descriptor.options;\n\n  const currentTitle =\n    typeof headerTitle !== 'function' && headerTitle !== undefined\n      ? headerTitle\n      : title !== undefined\n      ? title\n      : scene.route.name;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const leftButton = headerLeft ? (\n    headerLeft({ tintColor: headerTintColor })\n  ) : (\n    <TouchableItem\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={headerLeftAccessibilityLabel}\n      accessibilityTraits=\"button\"\n      delayPressIn={0}\n      onPress={() =>\n        scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer())\n      }\n      style={styles.touchable}\n      pressColor={headerPressColorAndroid}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <Image\n        style={[\n          styles.icon,\n          headerTintColor ? { tintColor: headerTintColor } : null,\n        ]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </TouchableItem>\n  );\n  const rightButton = headerRight\n    ? headerRight({ tintColor: headerTintColor })\n    : null;\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[\n        {\n          height: defaultHeight,\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        styles.container,\n        headerStyle,\n      ]}\n    >\n      <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n      <View pointerEvents=\"box-none\" style={styles.content}>\n        {leftButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.left, { left: insets.left }]}\n          >\n            {leftButton}\n          </View>\n        ) : null}\n        <View\n          pointerEvents=\"box-none\"\n          style={[\n            headerTitleAlign === 'left'\n              ? {\n                  position: 'absolute',\n                  left: (leftButton ? 72 : 16) + insets.left,\n                  right: (rightButton ? 72 : 16) + insets.right,\n                }\n              : {\n                  marginHorizontal:\n                    (leftButton ? 32 : 16) +\n                    Math.max(insets.left, insets.right),\n                },\n          ]}\n        >\n          {typeof headerTitle === 'function' ? (\n            headerTitle({\n              children: currentTitle,\n              allowFontScaling: headerTitleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: headerTitleStyle,\n            })\n          ) : (\n            <Text\n              accessibilityRole=\"header\"\n              aria-level=\"1\"\n              numberOfLines={1}\n              allowFontScaling={headerTitleAllowFontScaling}\n              style={[\n                styles.title,\n                { color: headerTintColor ?? colors.text },\n                styles.title,\n                headerTitleStyle,\n              ]}\n            >\n              {currentTitle}\n            </Text>\n          )}\n        </View>\n        {rightButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.right, { right: insets.right }]}\n          >\n            {rightButton}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n    zIndex: 1,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}