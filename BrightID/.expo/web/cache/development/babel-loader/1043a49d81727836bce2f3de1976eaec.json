{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useTranslation } from 'react-i18next';\nimport Spinner from 'react-native-spinkit';\nimport i18next from 'i18next';\nimport { useContext, useState } from 'react';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport store, { useSelector } from \"../../../store\";\nimport { BLUE, LIGHT_GREY, ORANGE, WHITE } from \"../../../theme/colors\";\nimport { DEVICE_LARGE, DEVICE_TYPE } from \"../../../utils/deviceConstants\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { createNewGroup } from \"../actions\";\nimport { NewGroupCard } from \"./NewGroupCard\";\nimport { connectionsSelector } from \"../../../utils/connectionsSelector\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ITEM_HEIGHT = DEVICE_LARGE ? 94 : 80;\nvar ITEM_MARGIN = DEVICE_LARGE ? 11.8 : 6;\n\nvar getItemLayout = function getItemLayout(data, index) {\n  return {\n    length: ITEM_HEIGHT + ITEM_MARGIN,\n    offset: (ITEM_HEIGHT + ITEM_MARGIN) * index,\n    index: index\n  };\n};\n\nvar creationStateStrings = {\n  uploadingGroupPhoto: i18next.t('groups.state.uploadingGroupPhoto', 'uploading group photo…'),\n  creatingGroup: i18next.t('groups.state.creatingGroup', 'creating the group…')\n};\nexport var NewGroupScreen = function NewGroupScreen() {\n  var api = useContext(NodeApiContext);\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      creating = _useState2[0],\n      setCreating = _useState2[1];\n\n  var _useState3 = useState('uploadingGroupPhoto'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      creationState = _useState4[0],\n      setCreationState = _useState4[1];\n\n  var connections = useSelector(function (state) {\n    return connectionsSelector(state, []);\n  });\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newGroupInvitees = _useState6[0],\n      setNewGroupInvitees = _useState6[1];\n\n  var createGroup = function _callee() {\n    var _route$params, photo, name, res;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setCreating(true);\n            _route$params = route.params, photo = _route$params.photo, name = _route$params.name;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(store.dispatch(createNewGroup(photo, name, api, newGroupInvitees, setCreationState)));\n\n          case 5:\n            res = _context.sent;\n\n            if (res) {\n              navigation.navigate('Groups');\n            } else {\n              setCreating(false);\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setCreating(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var cardIsSelected = function cardIsSelected(connection) {\n    return newGroupInvitees.includes(connection.id);\n  };\n\n  var toggleNewGroupInvitee = function toggleNewGroupInvitee(id) {\n    var invitees = _toConsumableArray(newGroupInvitees);\n\n    var index = invitees.indexOf(id);\n\n    if (index >= 0) {\n      invitees.splice(index, 1);\n    } else {\n      invitees.push(id);\n    }\n\n    setNewGroupInvitees(invitees);\n  };\n\n  var renderConnection = function renderConnection(_ref) {\n    var item = _ref.item;\n    return _jsx(NewGroupCard, {\n      id: item.id,\n      connectionDate: item.connectionDate,\n      name: item.name,\n      photo: item.photo,\n      selected: cardIsSelected(item),\n      toggleInvitee: toggleNewGroupInvitee\n    });\n  };\n\n  var renderButtonOrSpinner = function renderButtonOrSpinner() {\n    var skip = newGroupInvitees.length < 1;\n    return !creating ? _jsx(View, {\n      style: styles.createGroupButtonContainer,\n      children: _jsx(TouchableOpacity, {\n        testID: \"createNewGroupBtn\",\n        onPress: createGroup,\n        style: skip ? _objectSpread(_objectSpread({}, styles.createGroupButton), styles.skipButton) : styles.createGroupButton,\n        children: _jsx(Text, {\n          style: styles.buttonInnerText,\n          children: skip ? t('createGroup.button.skip') : t('createGroup.button.createGroup')\n        })\n      })\n    }) : _jsxs(View, {\n      style: styles.loader,\n      children: [_jsx(Text, {\n        style: styles.textInfo,\n        children: creationStateStrings[creationState]\n      }), _jsx(Spinner, {\n        isVisible: true,\n        size: 97,\n        type: \"Wave\",\n        color: BLUE\n      })]\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        testID: \"newGroupScreen\",\n        style: styles.mainContainer,\n        children: [_jsxs(View, {\n          style: styles.titleContainer,\n          children: [_jsx(Text, {\n            style: styles.titleText,\n            children: t('createGroup.label.invitees')\n          }), _jsx(Text, {\n            style: styles.infoText,\n            children: t('createGroup.text.invitees')\n          })]\n        }), _jsx(View, {\n          style: styles.mainContainer,\n          children: connections.length > 0 ? _jsx(FlatList, {\n            extraData: newGroupInvitees,\n            style: styles.connectionsContainer,\n            contentContainerStyle: {\n              paddingBottom: 50,\n              flexGrow: 1\n            },\n            data: connections,\n            keyExtractor: function keyExtractor(_ref2, index) {\n              var id = _ref2.id;\n              return id + index;\n            },\n            renderItem: renderConnection,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false,\n            getItemLayout: getItemLayout\n          }) : _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.emptyText,\n              children: t('createGroup.text.noConnections')\n            })\n          })\n        })]\n      }), renderButtonOrSpinner()]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    marginTop: 8,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '96.7%',\n    borderTopWidth: 1,\n    borderTopColor: LIGHT_GREY\n  },\n  emptyText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20]\n  },\n  moreIcon: {\n    marginRight: 16\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    backgroundColor: WHITE,\n    width: '96.7%',\n    marginBottom: DEVICE_TYPE === 'large' ? 11 : 0\n  },\n  titleText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'left',\n    textShadowColor: 'rgba(0, 0, 0, 0.09)',\n    textShadowOffset: {\n      width: 0,\n      height: 2\n    },\n    textShadowRadius: 4,\n    marginBottom: 6\n  },\n  infoText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[14],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'center'\n  },\n  createGroupButtonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  createGroupButton: {\n    backgroundColor: BLUE,\n    width: 300,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 13,\n    paddingBottom: 12,\n    marginBottom: DEVICE_TYPE === 'large' ? 30 : 25\n  },\n  skipButton: {\n    backgroundColor: BLUE\n  },\n  buttonInnerText: {\n    fontFamily: 'ApexNew-Medium',\n    color: WHITE,\n    fontWeight: '600',\n    fontSize: fontSize[18]\n  },\n  textInfo: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    margin: 18\n  },\n  loader: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  }\n});","map":{"version":3,"names":["React","useTranslation","Spinner","i18next","useContext","useState","useNavigation","useRoute","store","useSelector","BLUE","LIGHT_GREY","ORANGE","WHITE","DEVICE_LARGE","DEVICE_TYPE","fontSize","NodeApiContext","createNewGroup","NewGroupCard","connectionsSelector","ITEM_HEIGHT","ITEM_MARGIN","getItemLayout","data","index","length","offset","creationStateStrings","uploadingGroupPhoto","t","creatingGroup","NewGroupScreen","api","navigation","route","creating","setCreating","creationState","setCreationState","connections","state","newGroupInvitees","setNewGroupInvitees","createGroup","params","photo","name","dispatch","res","navigate","cardIsSelected","connection","includes","id","toggleNewGroupInvitee","invitees","indexOf","splice","push","renderConnection","item","connectionDate","renderButtonOrSpinner","skip","styles","createGroupButtonContainer","createGroupButton","skipButton","buttonInnerText","loader","textInfo","orangeTop","container","mainContainer","titleContainer","titleText","infoText","connectionsContainer","paddingBottom","flexGrow","emptyText","StyleSheet","create","backgroundColor","height","width","zIndex","flex","borderTopLeftRadius","marginTop","overflow","justifyContent","alignItems","borderTopWidth","borderTopColor","fontFamily","moreIcon","marginRight","marginBottom","fontWeight","fontStyle","letterSpacing","textAlign","textShadowColor","textShadowOffset","textShadowRadius","paddingTop","color","margin"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/NewGroups/NewGroupScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  FlatList,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport Spinner from 'react-native-spinkit';\nimport i18next from 'i18next';\nimport { useContext, useState } from 'react';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport store, { useSelector } from '@/store';\nimport { BLUE, LIGHT_GREY, ORANGE, WHITE } from '@/theme/colors';\nimport { DEVICE_LARGE, DEVICE_TYPE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { createNewGroup } from '../actions';\nimport { NewGroupCard } from './NewGroupCard';\nimport { connectionsSelector } from '@/utils/connectionsSelector';\n\nconst ITEM_HEIGHT = DEVICE_LARGE ? 94 : 80;\nconst ITEM_MARGIN = DEVICE_LARGE ? 11.8 : 6;\n\nconst getItemLayout = (data, index) => ({\n  length: ITEM_HEIGHT + ITEM_MARGIN,\n  offset: (ITEM_HEIGHT + ITEM_MARGIN) * index,\n  index,\n});\n\nconst creationStateStrings = {\n  uploadingGroupPhoto: i18next.t(\n    'groups.state.uploadingGroupPhoto',\n    'uploading group photo…',\n  ),\n  creatingGroup: i18next.t('groups.state.creatingGroup', 'creating the group…'),\n};\n\nexport const NewGroupScreen = () => {\n  const api = useContext(NodeApiContext);\n  const navigation = useNavigation();\n  const route = useRoute() as {\n    params?: { photo: string; name: string };\n  };\n  const { t } = useTranslation();\n  const [creating, setCreating] = useState(false);\n  const [creationState, setCreationState] = useState('uploadingGroupPhoto');\n  const connections = useSelector((state) => connectionsSelector(state, []));\n  const [newGroupInvitees, setNewGroupInvitees] = useState<Array<string>>([]);\n\n  const createGroup = async () => {\n    try {\n      setCreating(true);\n      const { photo, name } = route.params;\n      const res = await store.dispatch(\n        createNewGroup(photo, name, api, newGroupInvitees, setCreationState),\n      );\n      if (res) {\n        navigation.navigate('Groups');\n      } else {\n        setCreating(false);\n      }\n    } catch (err) {\n      setCreating(false);\n    }\n  };\n\n  const cardIsSelected = (connection: Connection) => {\n    return newGroupInvitees.includes(connection.id);\n  };\n\n  const toggleNewGroupInvitee = (id: string) => {\n    const invitees = [...newGroupInvitees];\n    const index = invitees.indexOf(id);\n    if (index >= 0) {\n      invitees.splice(index, 1);\n    } else {\n      invitees.push(id);\n    }\n    setNewGroupInvitees(invitees);\n  };\n\n  const renderConnection = ({ item }: { item: Connection }) => (\n    <NewGroupCard\n      id={item.id}\n      connectionDate={item.connectionDate}\n      name={item.name}\n      photo={item.photo}\n      selected={cardIsSelected(item)}\n      toggleInvitee={toggleNewGroupInvitee}\n    />\n  );\n\n  const renderButtonOrSpinner = () => {\n    const skip = newGroupInvitees.length < 1;\n    return !creating ? (\n      <View style={styles.createGroupButtonContainer}>\n        <TouchableOpacity\n          testID=\"createNewGroupBtn\"\n          onPress={createGroup}\n          style={\n            skip\n              ? { ...styles.createGroupButton, ...styles.skipButton }\n              : styles.createGroupButton\n          }\n        >\n          <Text style={styles.buttonInnerText}>\n            {skip\n              ? t('createGroup.button.skip')\n              : t('createGroup.button.createGroup')}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    ) : (\n      <View style={styles.loader}>\n        <Text style={styles.textInfo}>\n          {creationStateStrings[creationState]}\n        </Text>\n        <Spinner isVisible={true} size={97} type=\"Wave\" color={BLUE} />\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <View style={styles.container}>\n        <View testID=\"newGroupScreen\" style={styles.mainContainer}>\n          <View style={styles.titleContainer}>\n            <Text style={styles.titleText}>\n              {t('createGroup.label.invitees')}\n            </Text>\n            <Text style={styles.infoText}>\n              {t('createGroup.text.invitees')}\n            </Text>\n          </View>\n          <View style={styles.mainContainer}>\n            {connections.length > 0 ? (\n              <FlatList\n                extraData={newGroupInvitees}\n                style={styles.connectionsContainer}\n                contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n                data={connections}\n                keyExtractor={({ id }, index) => id + index}\n                renderItem={renderConnection}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n                getItemLayout={getItemLayout}\n              />\n            ) : (\n              <View>\n                <Text style={styles.emptyText}>\n                  {t('createGroup.text.noConnections')}\n                </Text>\n              </View>\n            )}\n          </View>\n        </View>\n        {renderButtonOrSpinner()}\n      </View>\n    </>\n  );\n};\n\n/*\nexport class NewGroupScreen_ extends React.Component {\n  // make api available through this.context\n  static contextType = NodeApiContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      creationState: 'uploadingGroupPhoto',\n    };\n  }\n\n  componentDidMount() {\n    const { navigation, dispatch } = this.props;\n    navigation.addListener('focus', () => {\n      emitter.on('creatingGroupChannel', this.updateCreationState);\n    });\n    navigation.addListener('blur', () => {\n      dispatch(clearNewGroupInvitees());\n      emitter.off('creatingGroupChannel', this.updateCreationState);\n    });\n  }\n\n  updateCreationState = (creationState) => {\n    this.setState({ creationState });\n  };\n\n  cardIsSelected = (card) => {\n    const { newGroupInvitees } = this.props;\n    return newGroupInvitees.includes(card.id);\n  };\n\n  createGroup = async () => {\n    try {\n      this.setState({ creating: true });\n      const api = this.context;\n      const { route, navigation } = this.props;\n      const { photo, name } = route.params;\n      const res = await store.dispatch(createNewGroup(photo, name, api));\n      if (res) {\n        navigation.navigate('Groups');\n      } else {\n        this.setState({ creating: false });\n      }\n    } catch (err) {\n      this.setState({ creating: false });\n    }\n  };\n\n  renderButtonOrSpinner = () => {\n    const { t } = this.props;\n    const skip = this.props.newGroupInvitees.length < 1;\n    return !this.state.creating ? (\n      <View style={styles.createGroupButtonContainer}>\n        <TouchableOpacity\n          testID=\"createNewGroupBtn\"\n          onPress={this.createGroup}\n          style={\n            skip\n              ? { ...styles.createGroupButton, ...styles.skipButton }\n              : styles.createGroupButton\n          }\n        >\n          <Text style={styles.buttonInnerText}>\n            {skip\n              ? t('createGroup.button.skip')\n              : t('createGroup.button.createGroup')}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    ) : (\n      <View style={styles.loader}>\n        <Text style={styles.textInfo}>\n          {creationStateStrings[this.state.creationState]}\n        </Text>\n        <Spinner isVisible={true} size={97} type=\"Wave\" color={BLUE} />\n      </View>\n    );\n  };\n\n  renderConnection = ({ item }) => (\n    <NewGroupCard\n      {...item}\n      selected={this.cardIsSelected(item)}\n      groups={true}\n      style={styles.connectionCard}\n    />\n  );\n\n  render() {\n    const { t, connections } = this.props;\n\n    return (\n      <>\n        <View style={styles.orangeTop} />\n        <View style={styles.container}>\n          <View testID=\"newGroupScreen\" style={styles.mainContainer}>\n            <View style={styles.titleContainer}>\n              <Text style={styles.titleText}>\n                {t('createGroup.label.invitees')}\n              </Text>\n              <Text style={styles.infoText}>\n                {t('createGroup.text.invitees')}\n              </Text>\n            </View>\n            <View style={styles.mainContainer}>\n              {connections.length > 0 ? (\n                <FlatList\n                  style={styles.connectionsContainer}\n                  contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n                  data={connections}\n                  keyExtractor={({ id }, index) => id + index}\n                  renderItem={this.renderConnection}\n                  showsHorizontalScrollIndicator={false}\n                  showsVerticalScrollIndicator={false}\n                  getItemLayout={getItemLayout}\n                />\n              ) : (\n                <View>\n                  <Text style={styles.emptyText}>\n                    {t('createGroup.text.noConnections')}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </View>\n          {this.renderButtonOrSpinner()}\n        </View>\n      </>\n    );\n  }\n}\n\n */\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  mainContainer: {\n    marginTop: 8,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '96.7%',\n    borderTopWidth: 1,\n    borderTopColor: LIGHT_GREY,\n  },\n  emptyText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20],\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    backgroundColor: WHITE,\n    width: '96.7%',\n\n    marginBottom: DEVICE_TYPE === 'large' ? 11 : 0,\n  },\n  titleText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'left',\n    textShadowColor: 'rgba(0, 0, 0, 0.09)',\n    textShadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    textShadowRadius: 4,\n    marginBottom: 6,\n  },\n  infoText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[14],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'center',\n  },\n  createGroupButtonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  createGroupButton: {\n    backgroundColor: BLUE,\n    width: 300,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 13,\n    paddingBottom: 12,\n    marginBottom: DEVICE_TYPE === 'large' ? 30 : 25,\n  },\n  skipButton: {\n    backgroundColor: BLUE,\n  },\n  buttonInnerText: {\n    fontFamily: 'ApexNew-Medium',\n    color: WHITE,\n    fontWeight: '600',\n    fontSize: fontSize[18],\n  },\n  textInfo: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    margin: 18,\n  },\n  loader: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}