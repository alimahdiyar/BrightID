{"ast":null,"code":"import { parsePhoneNumber as parsePhoneNumberLib } from 'libphonenumber-js';\n\nvar isPhoneNumberValid = function isPhoneNumberValid(phoneNumberString) {\n  try {\n    var phoneNumber = parsePhoneNumberLib(phoneNumberString);\n\n    if (phoneNumber) {\n      return phoneNumber.isValid();\n    }\n  } catch (_unused) {}\n\n  return false;\n};\n\nvar parsePhoneNumber = function parsePhoneNumber(phoneNumberString) {\n  try {\n    var phoneNumber = parsePhoneNumberLib(phoneNumberString);\n\n    if (phoneNumber && phoneNumber.isValid()) {\n      return {\n        country: phoneNumber.country,\n        number: phoneNumber.nationalNumber\n      };\n    }\n  } catch (_unused2) {}\n\n  return {\n    country: 'US',\n    number: ''\n  };\n};\n\nvar extractDigits = function extractDigits(phoneNumber) {\n  return parseInt(phoneNumber.match(/\\d/g).join(''), 10).toString();\n};\n\nexport { isPhoneNumberValid, parsePhoneNumber, extractDigits };","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/phoneUtils.ts"],"names":["parsePhoneNumber","isPhoneNumberValid","phoneNumber","parsePhoneNumberLib","country","number","extractDigits","parseInt"],"mappings":"AAAA,SAASA,gBAAgB,IAAzB,mBAAA,QAAA,mBAAA;;AAEA,IAAMC,kBAAkB,GAAlBA,SAAAA,kBAAAA,CAAqB,iBAArBA,EAAoD;EACxD,IAAI;IACF,IAAMC,WAAW,GAAGC,mBAAmB,CAAvC,iBAAuC,CAAvC;;IACA,IAAA,WAAA,EAAiB;MACf,OAAOD,WAAW,CAAlB,OAAOA,EAAP;IAEH;EAAC,CALF,CAKE,OAAA,OAAA,EAAM,CACR;;EAAA,OAAA,KAAA;AAPF,CAAA;;AAUA,IAAMF,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,iBAAnBA,EAAkD;EACtD,IAAI;IACF,IAAME,WAAW,GAAGC,mBAAmB,CAAvC,iBAAuC,CAAvC;;IACA,IAAID,WAAW,IAAIA,WAAW,CAA9B,OAAmBA,EAAnB,EAA0C;MACxC,OAAO;QACLE,OAAO,EAAEF,WAAW,CADf,OAAA;QAELG,MAAM,EAAEH,WAAW,CAFrB;MAAO,CAAP;IAKH;EAAC,CARF,CAQE,OAAA,QAAA,EAAM,CACR;;EAAA,OAAO;IACLE,OAAO,EADF,IAAA;IAELC,MAAM,EAFR;EAAO,CAAP;AAVF,CAAA;;AAgBA,IAAMC,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,WAAhBA,EAAgB;EAAA,OACpBC,QAAQ,CAACL,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,EAAAA,IAAAA,CAAD,EAACA,CAAD,EAARK,EAAQ,CAARA,CADoB,QACpBA,EADoB;AAAtB,CAAA;;AAGA,SAAA,kBAAA,EAAA,gBAAA,EAAA,aAAA","sourcesContent":["import { parsePhoneNumber as parsePhoneNumberLib } from 'libphonenumber-js';\n\nconst isPhoneNumberValid = (phoneNumberString: string) => {\n  try {\n    const phoneNumber = parsePhoneNumberLib(phoneNumberString);\n    if (phoneNumber) {\n      return phoneNumber.isValid();\n    }\n  } catch {}\n  return false;\n};\n\nconst parsePhoneNumber = (phoneNumberString: string) => {\n  try {\n    const phoneNumber = parsePhoneNumberLib(phoneNumberString);\n    if (phoneNumber && phoneNumber.isValid()) {\n      return {\n        country: phoneNumber.country,\n        number: phoneNumber.nationalNumber,\n      } as PhoneNumberObject;\n    }\n  } catch {}\n  return {\n    country: 'US',\n    number: '',\n  } as PhoneNumberObject;\n};\n\nconst extractDigits = (phoneNumber: string) =>\n  parseInt(phoneNumber.match(/\\d/g).join(''), 10).toString();\n\nexport { isPhoneNumberValid, parsePhoneNumber, extractDigits };\n"]},"metadata":{},"sourceType":"module"}