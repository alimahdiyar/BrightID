{"ast":null,"code":"import Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from \"../../store\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { WHITE, BLACK, GREEN, ORANGE } from \"../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { selectBaseUrl } from \"../../reducer/settingsSlice\";\nimport { createKeypair } from \"./SignUpFlow/thunks\";\nimport VerifiedBadge from \"../Icons/VerifiedBadge\";\nimport { qrCodeURL_types } from \"../../utils/constants\";\nimport { version as app_version } from \"../../../package.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var Onboard = function Onboard() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var baseUrl = useSelector(selectBaseUrl);\n\n  var handleCreateMyBrightID = function handleCreateMyBrightID() {\n    dispatch(createKeypair()).then(function () {\n      navigation.navigate('SignupName');\n    }).catch(function (err) {\n      Alert.alert(err.message);\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(SafeAreaView, {\n      style: styles.container,\n      testID: \"OnboardScreen\",\n      children: [_jsx(StatusBar, {\n        barStyle: \"dark-content\",\n        backgroundColor: WHITE,\n        animated: true\n      }), _jsx(View, {\n        style: styles.header,\n        children: _jsx(Image, {\n          source: require(\"../../static/brightid-final.png\"),\n          accessible: true,\n          accessibilityLabel: \"Home Header Logo\",\n          resizeMode: \"contain\",\n          style: styles.logo\n        })\n      }), _jsxs(View, {\n        style: styles.center,\n        children: [_jsx(Image, {\n          source: require(\"../../static/brightid-phone.png\"),\n          accessible: true,\n          accessibilityLabel: \"Home Header Logo\",\n          resizeMode: \"contain\",\n          style: styles.phone\n        }), _jsx(View, {\n          style: styles.verifiedBadge,\n          children: _jsx(VerifiedBadge, {\n            width: DEVICE_LARGE ? 65 : 60,\n            height: DEVICE_LARGE ? 65 : 60,\n            strokeWidth: 5.5,\n            color: GREEN\n          })\n        })]\n      }), _jsx(Text, {\n        style: styles.registerText,\n        children: t('onboarding.text.register')\n      }), _jsxs(View, {\n        style: styles.btnContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.createBtn,\n          onPress: handleCreateMyBrightID,\n          accessibilityLabel: t('onboarding.button.create'),\n          testID: \"createBrightID\",\n          children: _jsx(Text, {\n            style: styles.createBtnText,\n            children: t('onboarding.button.create')\n          })\n        }), _jsxs(View, {\n          style: styles.recoverImportContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.recoverBtn,\n            onPress: function onPress() {\n              navigation.navigate('Restore', {\n                screen: 'RecoveryCode',\n                params: {\n                  urlType: qrCodeURL_types.RECOVERY,\n                  action: 'recovery'\n                }\n              });\n            },\n            accessibilityLabel: t('onboarding.button.recover'),\n            testID: \"recoverBrightID\",\n            children: _jsx(Text, {\n              style: styles.recoverBtnText,\n              children: t('onboarding.button.recover')\n            })\n          }), _jsx(View, {\n            style: styles.space\n          }), _jsx(TouchableOpacity, {\n            style: styles.recoverBtn,\n            onPress: function onPress() {\n              navigation.navigate('Import', {\n                screen: 'ImportCode',\n                params: {\n                  urlType: qrCodeURL_types.IMPORT,\n                  action: 'import'\n                }\n              });\n            },\n            accessibilityLabel: t('onboarding.button.import'),\n            testID: \"importBrightID\",\n            children: _jsx(Text, {\n              style: styles.recoverBtnText,\n              children: t('onboarding.button.import')\n            })\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.versionInfoContainer,\n        children: _jsxs(Text, {\n          style: styles.versionInfo,\n          children: [baseUrl ? baseUrl.split('://')[1] : 'unknown', \" - v\", app_version]\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.orangeBottom\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    borderBottomLeftRadius: 58,\n    borderBottomRightRadius: 58,\n    marginBottom: DEVICE_LARGE ? 35 : 20,\n    zIndex: 2,\n    overflow: 'hidden'\n  },\n  orangeBottom: {\n    backgroundColor: ORANGE,\n    width: '100%',\n    height: 100,\n    zIndex: 1,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  header: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '15%'\n  },\n  logo: {\n    maxWidth: '40%',\n    maxHeight: 90\n  },\n  center: {},\n  phone: {\n    width: DEVICE_LARGE ? 140 : 130,\n    maxHeight: DEVICE_LARGE ? 180 : 165\n  },\n  verifiedBadge: {\n    position: 'absolute',\n    right: 10,\n    bottom: 5\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24,\n    marginTop: DEVICE_LARGE ? 20 : 18\n  },\n  btnContainer: {\n    width: '85%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  createBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  createBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE\n  },\n  space: {\n    width: 10\n  },\n  recoverBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: WHITE,\n    borderWidth: 1,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    marginTop: DEVICE_LARGE ? 14 : 12\n  },\n  recoverBtnText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: ORANGE\n  },\n  recoverImportContainer: {\n    flexDirection: 'row'\n  },\n  versionInfoContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 5\n  },\n  versionInfo: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: BLACK\n  }\n});\nexport default Onboard;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/OnboardScreen.tsx"],"names":["version","Onboard","dispatch","useDispatch","navigation","useNavigation","t","useTranslation","baseUrl","useSelector","handleCreateMyBrightID","createKeypair","Alert","err","styles","require","DEVICE_LARGE","screen","params","urlType","qrCodeURL_types","action","StyleSheet","container","flex","backgroundColor","alignItems","flexDirection","borderBottomLeftRadius","borderBottomRightRadius","marginBottom","zIndex","overflow","orangeBottom","width","height","position","bottom","left","right","header","justifyContent","marginTop","logo","maxWidth","maxHeight","center","phone","verifiedBadge","registerText","fontFamily","fontSize","textAlign","lineHeight","btnContainer","flexGrow","createBtn","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","createBtnText","color","space","recoverBtn","borderWidth","borderColor","recoverBtnText","recoverImportContainer","versionInfoContainer","display","versionInfo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Alert,\n  Image,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from '@/store';\nimport { fontSize } from '@/theme/fonts';\nimport { WHITE, BLACK, GREEN, ORANGE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { selectBaseUrl } from '@/reducer/settingsSlice';\nimport { createKeypair } from './SignUpFlow/thunks';\nimport VerifiedBadge from '../Icons/VerifiedBadge';\nimport { qrCodeURL_types } from '@/utils/constants';\nimport { version as app_version } from '../../../package.json';\n\n/* Description */\n\n/* ======================================== */\n\n/**\n * Initial Onboarding screen of BrightID\n * Creates Keypair after pressing `Create My BrightID`\n */\n\n/* Onboarding Screen */\n\n/* ======================================== */\nexport const Onboard = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const baseUrl = useSelector(selectBaseUrl);\n\n  const handleCreateMyBrightID = () => {\n    dispatch(createKeypair())\n      .then(() => {\n        navigation.navigate('SignupName');\n      })\n      .catch((err) => {\n        Alert.alert(err.message);\n      });\n  };\n\n  return (\n    <>\n      <SafeAreaView style={styles.container} testID=\"OnboardScreen\">\n        <StatusBar\n          barStyle=\"dark-content\"\n          backgroundColor={WHITE}\n          animated={true}\n        />\n\n        <View style={styles.header}>\n          <Image\n            source={require('@/static/brightid-final.png')}\n            accessible={true}\n            accessibilityLabel=\"Home Header Logo\"\n            resizeMode=\"contain\"\n            style={styles.logo}\n          />\n        </View>\n\n        <View style={styles.center}>\n          <Image\n            source={require('@/static/brightid-phone.png')}\n            accessible={true}\n            accessibilityLabel=\"Home Header Logo\"\n            resizeMode=\"contain\"\n            style={styles.phone}\n          />\n          <View style={styles.verifiedBadge}>\n            <VerifiedBadge\n              width={DEVICE_LARGE ? 65 : 60}\n              height={DEVICE_LARGE ? 65 : 60}\n              strokeWidth={5.5}\n              color={GREEN}\n            />\n          </View>\n        </View>\n        <Text style={styles.registerText}>{t('onboarding.text.register')}</Text>\n        <View style={styles.btnContainer}>\n          <TouchableOpacity\n            style={styles.createBtn}\n            onPress={handleCreateMyBrightID}\n            accessibilityLabel={t('onboarding.button.create')}\n            testID=\"createBrightID\"\n          >\n            <Text style={styles.createBtnText}>\n              {t('onboarding.button.create')}\n            </Text>\n          </TouchableOpacity>\n          <View style={styles.recoverImportContainer}>\n            <TouchableOpacity\n              style={styles.recoverBtn}\n              onPress={() => {\n                navigation.navigate('Restore', {\n                  screen: 'RecoveryCode',\n                  params: {\n                    urlType: qrCodeURL_types.RECOVERY,\n                    action: 'recovery',\n                  },\n                });\n              }}\n              accessibilityLabel={t('onboarding.button.recover')}\n              testID=\"recoverBrightID\"\n            >\n              <Text style={styles.recoverBtnText}>\n                {t('onboarding.button.recover')}\n              </Text>\n            </TouchableOpacity>\n            <View style={styles.space} />\n            <TouchableOpacity\n              style={styles.recoverBtn}\n              onPress={() => {\n                navigation.navigate('Import', {\n                  screen: 'ImportCode',\n                  params: { urlType: qrCodeURL_types.IMPORT, action: 'import' },\n                });\n              }}\n              accessibilityLabel={t('onboarding.button.import')}\n              testID=\"importBrightID\"\n            >\n              <Text style={styles.recoverBtnText}>\n                {t('onboarding.button.import')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View style={styles.versionInfoContainer}>\n          <Text style={styles.versionInfo}>\n            {baseUrl ? baseUrl.split('://')[1] : 'unknown'} - v{app_version}\n          </Text>\n        </View>\n      </SafeAreaView>\n      <View style={styles.orangeBottom} />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    borderBottomLeftRadius: 58,\n    borderBottomRightRadius: 58,\n    marginBottom: DEVICE_LARGE ? 35 : 20,\n    zIndex: 2,\n    overflow: 'hidden',\n  },\n  orangeBottom: {\n    backgroundColor: ORANGE,\n    width: '100%',\n    height: 100,\n    zIndex: 1,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  header: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '15%',\n    // borderWidth: 1,\n  },\n  logo: {\n    maxWidth: '40%',\n    maxHeight: 90,\n  },\n  center: {},\n  phone: {\n    width: DEVICE_LARGE ? 140 : 130,\n    maxHeight: DEVICE_LARGE ? 180 : 165,\n  },\n  verifiedBadge: {\n    position: 'absolute',\n    right: 10,\n    bottom: 5,\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24,\n    marginTop: DEVICE_LARGE ? 20 : 18,\n  },\n  btnContainer: {\n    width: '85%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n  },\n  createBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  createBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n  space: {\n    width: 10,\n  },\n  recoverBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: WHITE,\n    borderWidth: 1,\n    borderColor: ORANGE,\n    borderRadius: 100,\n    marginTop: DEVICE_LARGE ? 14 : 12,\n  },\n  recoverBtnText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: ORANGE,\n  },\n  recoverImportContainer: {\n    flexDirection: 'row',\n  },\n  versionInfoContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 5,\n  },\n  versionInfo: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: BLACK,\n  },\n});\n\nexport default Onboard;\n"]},"metadata":{},"sourceType":"module"}