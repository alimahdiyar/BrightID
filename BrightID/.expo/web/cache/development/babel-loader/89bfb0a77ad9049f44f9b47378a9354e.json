{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { createStackNavigator, CardStyleInterpolators } from '@react-navigation/stack';\nimport MyCodeScreen from '@/components/PendingConnections/MyCodeScreen';\nimport ScanCodeScreen from '@/components/PendingConnections/ScanCodeScreen';\nimport PendingConnectionsScreen from '@/components/PendingConnections/PendingConnectionsScreen';\nimport GroupConnectionScreen from '@/components/PendingConnections/GroupConnectionScreen';\nimport { NavHome, headerOptions } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar newConnectionOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  },\n  headerBackTitleVisible: false,\n  title: ''\n});\n\nvar groupConnectionOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  title: 'Group Connection'\n});\n\nvar connectionPreviewOptions = {\n  headerShown: false,\n  cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS\n};\n\nvar PendingConnections = function PendingConnections() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"MyCode\",\n      component: MyCodeScreen,\n      options: newConnectionOptions\n    }), _jsx(Stack.Screen, {\n      name: \"ScanCode\",\n      component: ScanCodeScreen,\n      options: newConnectionOptions\n    }), _jsx(Stack.Screen, {\n      name: \"PendingConnections\",\n      component: PendingConnectionsScreen,\n      options: connectionPreviewOptions\n    }), _jsx(Stack.Screen, {\n      name: \"GroupConnection\",\n      component: GroupConnectionScreen,\n      options: groupConnectionOptions\n    })]\n  });\n};\n\nexport default PendingConnections;","map":{"version":3,"names":["React","createStackNavigator","CardStyleInterpolators","MyCodeScreen","ScanCodeScreen","PendingConnectionsScreen","GroupConnectionScreen","NavHome","headerOptions","Stack","newConnectionOptions","headerLeft","headerBackTitleVisible","title","groupConnectionOptions","connectionPreviewOptions","headerShown","cardStyleInterpolator","forVerticalIOS","PendingConnections"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/PendingConnections.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  createStackNavigator,\n  CardStyleInterpolators,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport MyCodeScreen from '@/components/PendingConnections/MyCodeScreen';\nimport ScanCodeScreen from '@/components/PendingConnections/ScanCodeScreen';\nimport PendingConnectionsScreen from '@/components/PendingConnections/PendingConnectionsScreen';\nimport GroupConnectionScreen from '@/components/PendingConnections/GroupConnectionScreen';\nimport { NavHome, headerOptions } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst newConnectionOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n  headerBackTitleVisible: false,\n  title: '',\n};\n\nconst groupConnectionOptions: StackNavigationOptions = {\n  ...headerOptions,\n  title: 'Group Connection',\n};\n\nconst connectionPreviewOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n};\n\nconst PendingConnections = () => (\n  <>\n    <Stack.Screen\n      name=\"MyCode\"\n      component={MyCodeScreen}\n      options={newConnectionOptions}\n    />\n    <Stack.Screen\n      name=\"ScanCode\"\n      component={ScanCodeScreen}\n      options={newConnectionOptions}\n    />\n    <Stack.Screen\n      name=\"PendingConnections\"\n      component={PendingConnectionsScreen}\n      options={connectionPreviewOptions}\n    />\n    <Stack.Screen\n      name=\"GroupConnection\"\n      component={GroupConnectionScreen}\n      options={groupConnectionOptions}\n    />\n  </>\n);\n\nexport default PendingConnections;\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,oBADF,EAEEC,sBAFF,QAIO,yBAJP;AAKA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,wBAAP,MAAqC,0DAArC;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AACA,SAASC,OAAT,EAAkBC,aAAlB;;;;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;;AAEA,IAAMS,oBAA4C,mCAC7CF,aAD6C;EAEhDG,UAAU,EAAE;IAAA,OAAM,KAAC,OAAD,KAAN;EAAA,CAFoC;EAGhDC,sBAAsB,EAAE,KAHwB;EAIhDC,KAAK,EAAE;AAJyC,EAAlD;;AAOA,IAAMC,sBAA8C,mCAC/CN,aAD+C;EAElDK,KAAK,EAAE;AAF2C,EAApD;;AAKA,IAAME,wBAAgD,GAAG;EACvDC,WAAW,EAAE,KAD0C;EAEvDC,qBAAqB,EAAEf,sBAAsB,CAACgB;AAFS,CAAzD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OACzB;IAAA,WACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,QADP;MAEE,SAAS,EAAEhB,YAFb;MAGE,OAAO,EAAEO;IAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,UADP;MAEE,SAAS,EAAEN,cAFb;MAGE,OAAO,EAAEM;IAHX,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,oBADP;MAEE,SAAS,EAAEL,wBAFb;MAGE,OAAO,EAAEU;IAHX,EAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,iBADP;MAEE,SAAS,EAAET,qBAFb;MAGE,OAAO,EAAEQ;IAHX,EAhBF;EAAA,EADyB;AAAA,CAA3B;;AAyBA,eAAeK,kBAAf"},"metadata":{},"sourceType":"module"}