{"ast":null,"code":"import isWebColor from \"../isWebColor\";\nimport processColor from \"../../exports/processColor\";\n\nvar normalizeColor = function normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  var colorInt = processColor(color);\n\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n};\n\nexport default normalizeColor;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/modules/normalizeColor/index.js"],"names":["normalizeColor","opacity","color","isWebColor","colorInt","processColor","r","g","b","a","alpha"],"mappings":"AASA,OAAA,UAAA;AACA,OAAA,YAAA;;AAEA,IAAMA,cAAc,GAAdA,SAAAA,cAAAA,CAAiB,KAAjBA,EAAmF;EAAxCC,IAAAA,OAAwC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAArB,CAAnBA;EAC/C,IAAIC,KAAK,IAAT,IAAA,EAAmB;;EAEnB,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BC,UAAU,CAA3C,KAA2C,CAA3C,EAAoD;IAClD,OAAA,KAAA;EAGF;;EAAA,IAAMC,QAAQ,GAAGC,YAAY,CAA7B,KAA6B,CAA7B;;EACA,IAAID,QAAQ,IAAZ,IAAA,EAAsB;IACpB,IAAME,CAAC,GAAIF,QAAQ,IAAT,EAACA,GAAX,GAAA;IACA,IAAMG,CAAC,GAAIH,QAAQ,IAAT,CAACA,GAAX,GAAA;IACA,IAAMI,CAAC,GAAGJ,QAAQ,GAAlB,GAAA;IACA,IAAMK,CAAC,GAAG,CAAEL,QAAQ,IAAT,EAACA,GAAF,GAAA,IAAV,GAAA;IACA,IAAMM,KAAK,GAAG,CAACD,CAAC,GAAF,OAAA,EAAA,OAAA,CAAd,CAAc,CAAd;IACA,OAAA,UAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA;EAEH;AAhBD,CAAA;;AAkBA,eAAA,cAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport isWebColor from '../isWebColor';\nimport processColor from '../../exports/processColor';\n\nconst normalizeColor = (color?: number | string, opacity?: number = 1): void | string => {\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  const colorInt = processColor(color);\n  if (colorInt != null) {\n    const r = (colorInt >> 16) & 255;\n    const g = (colorInt >> 8) & 255;\n    const b = colorInt & 255;\n    const a = ((colorInt >> 24) & 255) / 255;\n    const alpha = (a * opacity).toFixed(2);\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n};\n\nexport default normalizeColor;\n"]},"metadata":{},"sourceType":"module"}