{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getStoredState } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { rootMigrate } from \"./migrations\";\n\nvar getRootState = function _callee(config) {\n  var restoredState, migratedState, nextState;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getStoredState(_objectSpread(_objectSpread({}, config), {}, {\n            key: 'root',\n            storage: AsyncStorage,\n            serialize: undefined,\n            deserialize: undefined\n          })));\n\n        case 3:\n          restoredState = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(rootMigrate(restoredState, config.version));\n\n        case 6:\n          migratedState = _context.sent;\n          nextState = migratedState && migratedState[config.key];\n\n          if (nextState) {\n            _context.next = 10;\n            break;\n          }\n\n          throw new Error('migrated state does not exist');\n\n        case 10:\n          return _context.abrupt(\"return\", nextState);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (_context.t0.message !== 'migrated state does not exist') {\n            console.error(\"failed restoring state for \" + config.key, _context.t0.message);\n          }\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n};\n\nexport default (function _callee2(config) {\n  var restoredState;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(getStoredState(config));\n\n        case 3:\n          restoredState = _context2.sent;\n\n          if (!config.migrate) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(config.migrate(restoredState, config.version));\n\n        case 7:\n          restoredState = _context2.sent;\n\n        case 8:\n          return _context2.abrupt(\"return\", Promise.resolve(restoredState));\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"attempting to restore old state for \" + config.key, _context2.t0.message);\n          return _context2.abrupt(\"return\", Promise.resolve(getRootState(config)));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n});","map":{"version":3,"names":["getStoredState","AsyncStorage","rootMigrate","getRootState","config","key","storage","serialize","undefined","deserialize","restoredState","version","migratedState","nextState","Error","message","console","error","migrate","Promise","resolve","log"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/store/getStoredState.js"],"sourcesContent":["import { getStoredState } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { rootMigrate } from './migrations';\n\nconst getRootState = async (config) => {\n  try {\n    const restoredState = await getStoredState({\n      ...config,\n      key: 'root',\n      storage: AsyncStorage,\n      serialize: undefined,\n      deserialize: undefined,\n    });\n\n    let migratedState = await rootMigrate(restoredState, config.version);\n\n    let nextState = migratedState && migratedState[config.key];\n\n    if (!nextState) {\n      throw new Error('migrated state does not exist');\n    }\n\n    return nextState;\n  } catch (error) {\n    if (error.message !== 'migrated state does not exist') {\n      console.error(`failed restoring state for ${config.key}`, error.message);\n    }\n  }\n};\n\nexport default async (config) => {\n  try {\n    let restoredState = await getStoredState(config);\n    if (config.migrate) {\n      restoredState = await config.migrate(restoredState, config.version);\n    }\n    return Promise.resolve(restoredState);\n  } catch (err) {\n    console.log(\n      `attempting to restore old state for ${config.key}`,\n      err.message,\n    );\n    return Promise.resolve(getRootState(config));\n  }\n};\n"],"mappings":";;;;;;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT;;AAEA,IAAMC,YAAY,GAAG,iBAAOC,MAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEWJ,cAAc,iCACrCI,MADqC;YAExCC,GAAG,EAAE,MAFmC;YAGxCC,OAAO,EAAEL,YAH+B;YAIxCM,SAAS,EAAEC,SAJ6B;YAKxCC,WAAW,EAAED;UAL2B,GAFzB;;QAAA;UAEXE,aAFW;UAAA;UAAA,iCAUSR,WAAW,CAACQ,aAAD,EAAgBN,MAAM,CAACO,OAAvB,CAVpB;;QAAA;UAUbC,aAVa;UAYbC,SAZa,GAYDD,aAAa,IAAIA,aAAa,CAACR,MAAM,CAACC,GAAR,CAZ7B;;UAAA,IAcZQ,SAdY;YAAA;YAAA;UAAA;;UAAA,MAeT,IAAIC,KAAJ,CAAU,+BAAV,CAfS;;QAAA;UAAA,iCAkBVD,SAlBU;;QAAA;UAAA;UAAA;;UAoBjB,IAAI,YAAME,OAAN,KAAkB,+BAAtB,EAAuD;YACrDC,OAAO,CAACC,KAAR,iCAA4Cb,MAAM,CAACC,GAAnD,EAA0D,YAAMU,OAAhE;UACD;;QAtBgB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAArB;;AA0BA,gBAAe,kBAAOX,MAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEeJ,cAAc,CAACI,MAAD,CAF7B;;QAAA;UAEPM,aAFO;;UAAA,KAGPN,MAAM,CAACc,OAHA;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAIad,MAAM,CAACc,OAAP,CAAeR,aAAf,EAA8BN,MAAM,CAACO,OAArC,CAJb;;QAAA;UAITD,aAJS;;QAAA;UAAA,kCAMJS,OAAO,CAACC,OAAR,CAAgBV,aAAhB,CANI;;QAAA;UAAA;UAAA;UAQXM,OAAO,CAACK,GAAR,0CACyCjB,MAAM,CAACC,GADhD,EAEE,aAAIU,OAFN;UARW,kCAYJI,OAAO,CAACC,OAAR,CAAgBjB,YAAY,CAACC,MAAD,CAA5B,CAZI;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAf"},"metadata":{},"sourceType":"module"}