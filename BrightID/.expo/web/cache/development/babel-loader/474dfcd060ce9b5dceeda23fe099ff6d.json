{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"colors\", \"end\", \"locations\", \"useAngle\", \"angleCenter\", \"angle\", \"start\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeLinearGradient from \"./common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar convertPoint = function convertPoint(name, point) {\n  if (Array.isArray(point)) {\n    console.warn(\"LinearGradient '\" + name + \"' property should be an object with fields 'x' and 'y', \" + 'Array type is deprecated.');\n  }\n\n  if (point !== null && typeof point === 'object') {\n    return [point.x, point.y];\n  }\n\n  return point;\n};\n\nvar validNumber = function validNumber(defaultValue) {\n  return function (value) {\n    return typeof value === 'number' ? value : defaultValue;\n  };\n};\n\nvar LinearGradient = function (_Component) {\n  _inherits(LinearGradient, _Component);\n\n  var _super = _createSuper(LinearGradient);\n\n  function LinearGradient() {\n    _classCallCheck(this, LinearGradient);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LinearGradient, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.gradientRef.setNativeProps(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          colors = _this$props.colors,\n          end = _this$props.end,\n          locations = _this$props.locations,\n          useAngle = _this$props.useAngle,\n          angleCenter = _this$props.angleCenter,\n          angle = _this$props.angle,\n          start = _this$props.start,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, _excluded);\n\n      if (colors && locations && colors.length !== locations.length) {\n        console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      }\n\n      var flatStyle = StyleSheet.flatten(style) || {};\n      var borderRadius = flatStyle.borderRadius || 0;\n      var validRadius = validNumber(borderRadius);\n      var borderRadiiPerCorner = [validRadius(flatStyle.borderTopLeftRadius), validRadius(flatStyle.borderTopLeftRadius), validRadius(flatStyle.borderTopRightRadius), validRadius(flatStyle.borderTopRightRadius), validRadius(flatStyle.borderBottomRightRadius), validRadius(flatStyle.borderBottomRightRadius), validRadius(flatStyle.borderBottomLeftRadius), validRadius(flatStyle.borderBottomLeftRadius)];\n      return _jsxs(View, _objectSpread(_objectSpread({\n        ref: function ref(component) {\n          _this.gradientRef = component;\n        }\n      }, otherProps), {}, {\n        style: style,\n        children: [_jsx(NativeLinearGradient, {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0\n          },\n          colors: colors.map(processColor),\n          startPoint: convertPoint('start', start),\n          endPoint: convertPoint('end', end),\n          locations: locations ? locations.slice(0, colors.length) : null,\n          useAngle: useAngle,\n          angleCenter: convertPoint('angleCenter', angleCenter),\n          angle: angle,\n          borderRadii: borderRadiiPerCorner\n        }), children]\n      }));\n    }\n  }]);\n\n  return LinearGradient;\n}(Component);\n\nLinearGradient.defaultProps = {\n  start: {\n    x: 0.5,\n    y: 0.0\n  },\n  end: {\n    x: 0.5,\n    y: 1.0\n  }\n};\nexport { LinearGradient as default };","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-linear-gradient/index.android.js"],"names":["convertPoint","Array","console","point","validNumber","LinearGradient","Component","defaultProps","start","x","y","end","children","colors","locations","useAngle","angleCenter","angle","style","otherProps","flatStyle","StyleSheet","borderRadius","validRadius","borderRadiiPerCorner","position","top","left","bottom","right"],"mappings":"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","sourcesContent":["/**\n * @providesModule LinearGradient\n * @flow\n */\nimport React, { Component } from 'react';\nimport { processColor, StyleSheet, View } from 'react-native';\n\nimport NativeLinearGradient, { type Props } from './common';\n\nconst convertPoint = (name, point) => {\n  if (Array.isArray(point)) {\n    console.warn(\n      `LinearGradient '${name}' property should be an object with fields 'x' and 'y', ` +\n      'Array type is deprecated.'\n    );\n  }\n  // TODO: Update Android native code to receive a {x, y} object, not an array\n  if (point !== null && typeof point === 'object') {\n    return [point.x, point.y];\n  }\n  return point;\n};\n\n/**\n * Checks if value is a valid number. Otherwise, defaults to defaultValue.\n *\n * @param {number} defaultValue\n */\nconst validNumber = (defaultValue) => (value) => {\n  return typeof value === 'number' ? value : defaultValue;\n};\n\nexport default class LinearGradient extends Component<Props> {\n  props: Props;\n  gradientRef: any;\n\n  static defaultProps = {\n    start: { x: 0.5, y: 0.0 },\n    end: { x: 0.5, y: 1.0 },\n  };\n\n  setNativeProps(props: Props) {\n    this.gradientRef.setNativeProps(props);\n  }\n\n  render() {\n    const {\n      children,\n      colors,\n      end,\n      locations,\n      useAngle,\n      angleCenter,\n      angle,\n      start,\n      style,\n      ...otherProps\n    } = this.props;\n\n    if ((colors && locations) && (colors.length !== locations.length)) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n    }\n\n    // inherit container borderRadius until this issue is resolved:\n    // https://github.com/facebook/react-native/issues/3198\n    const flatStyle = StyleSheet.flatten(style) || {};\n    const borderRadius = flatStyle.borderRadius || 0;\n    const validRadius = validNumber(borderRadius);\n\n    // this is the format taken by:\n    // http://developer.android.com/reference/android/graphics/Path.html#addRoundRect(android.graphics.RectF, float[], android.graphics.Path.Direction)\n    const borderRadiiPerCorner = [\n      validRadius(flatStyle.borderTopLeftRadius),\n      validRadius(flatStyle.borderTopLeftRadius),\n      validRadius(flatStyle.borderTopRightRadius),\n      validRadius(flatStyle.borderTopRightRadius),\n      validRadius(flatStyle.borderBottomRightRadius),\n      validRadius(flatStyle.borderBottomRightRadius),\n      validRadius(flatStyle.borderBottomLeftRadius),\n      validRadius(flatStyle.borderBottomLeftRadius)\n    ];\n\n    return (\n      <View ref={(component) => { this.gradientRef = component; }} {...otherProps} style={style}>\n        <NativeLinearGradient\n          style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0}}\n          colors={colors.map(processColor)}\n          startPoint={convertPoint('start', start)}\n          endPoint={convertPoint('end', end)}\n          locations={locations ? locations.slice(0, colors.length) : null}\n          useAngle={useAngle}\n          angleCenter={convertPoint('angleCenter', angleCenter)}\n          angle={angle}\n          borderRadii={borderRadiiPerCorner}\n        />\n        { children }\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}