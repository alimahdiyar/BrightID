{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { store, useSelector } from \"../../store\";\nimport { DEVICE_LARGE, DEVICE_IOS } from \"../../utils/deviceConstants\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { getBituReportedByText } from \"../../utils/verifications\";\nimport { GREY, BLUE, BLACK, RED } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { selectAllConnections } from \"../../reducer/connectionsSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var BituVerificationScreen = function BituVerificationScreen(_ref) {\n  var route = _ref.route;\n  var url = route.params.url;\n  var headerHeight = useHeaderHeight();\n\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var _store$getState = store.getState(),\n      verifications = _store$getState.user.verifications;\n\n  var connections = useSelector(selectAllConnections);\n  var bituVerification = verifications.find(function (v) {\n    return v.name === 'Bitu';\n  });\n  var directReports = bituVerification ? Object.keys(bituVerification.directReports) : [];\n  var reportedConnections = bituVerification ? Object.keys(bituVerification.reportedConnections) : [];\n\n  var _renderItem = function renderItem(item, index, section) {\n    var score, reportedBy;\n\n    if (section === 'reportedConnections') {\n      score = bituVerification.reportedConnections[item].length * -1;\n      reportedBy = getBituReportedByText(bituVerification, connections, item);\n    } else {\n      score = bituVerification.directReports[item];\n      reportedBy = '';\n    }\n\n    var testID = section + \"-\" + index;\n    console.log(\"Rendering Section \" + section + \" item \" + index + \" (\" + item.name + \") - testID \" + testID);\n    item = connections.find(function (c) {\n      return c.id === item;\n    }) || {};\n    return _jsxs(View, {\n      testID: testID,\n      style: styles.itemContainer,\n      children: [_jsx(View, {\n        style: styles.itemPhoto,\n        children: renderPhoto(item)\n      }), _jsxs(View, {\n        style: styles.itemLabel,\n        children: [_jsx(Text, {\n          style: styles.itemLabelText,\n          children: item.name || 'Unknown'\n        }), reportedBy.length > 0 && _jsx(Text, {\n          style: styles.itemReportedByText,\n          children: reportedBy\n        })]\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        }\n      }), _jsx(View, {\n        style: styles.negativeScoreContainer,\n        children: _jsx(Text, {\n          style: styles.scoreText,\n          children: score\n        })\n      })]\n    });\n  };\n\n  var renderPhoto = function renderPhoto(item) {\n    var _item$photo;\n\n    var imageSource = item != null && (_item$photo = item.photo) != null && _item$photo.filename ? {\n      uri: \"file://\" + photoDirectory() + \"/\" + item.photo.filename\n    } : require(\"../../static/default_profile.jpg\");\n    return _jsx(Image, {\n      source: imageSource,\n      style: styles.photo,\n      resizeMode: \"cover\",\n      onError: function onError(e) {\n        console.log(e);\n      },\n      accessible: true,\n      accessibilityLabel: \"photo\"\n    });\n  };\n\n  return _jsxs(ScrollView, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }],\n    testID: \"BituVerificationScreen\",\n    children: [_jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(View, {\n        style: bituVerification ? styles.imageContainer : styles.imageContainerDisabled,\n        children: _jsx(Image, {\n          source: require(\"../../static/verifications/bitu.png\"),\n          accessible: true,\n          accessibilityLabel: \"Bitu\",\n          resizeMode: \"cover\",\n          style: styles.logo\n        })\n      }), _jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(Text, {\n          style: styles.titleText,\n          children: \"Bitu Verification\"\n        }), _jsx(Text, {\n          style: styles.scoreTitle,\n          children: \"Score:\"\n        })]\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        }\n      }), _jsx(View, {\n        style: styles.scoreContainer,\n        children: _jsx(Text, {\n          style: styles.scoreText,\n          children: (bituVerification == null ? void 0 : bituVerification.score) || 0\n        })\n      })]\n    }), _jsxs(Text, {\n      style: styles.guideText,\n      children: [\"You can get verified and increase your score in \\\"Bitu\\\" by making \\\"already known\\\" connections to friends or family who are connected to BrightID graph and have \\\"Bitu\\\" verification. Never make \\\"already known\\\" connections to users you do not know, because you lose 5 scores if they report you and 1 score every time they are reported.\", _jsx(Text, {\n        style: {\n          color: 'blue'\n        },\n        onPress: function onPress() {\n          return Linking.openURL(url);\n        },\n        children: \"more ...\"\n      })]\n    }), directReports.length > 0 && _jsx(Text, {\n      style: styles.reportTitle,\n      children: \"Being reported by\"\n    }), _jsx(FlatList, {\n      data: directReports,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _renderItem(item, index, 'directReports');\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      }\n    }), reportedConnections.length > 0 && _jsx(Text, {\n      style: styles.reportTitle,\n      children: \"Reported friends/family\"\n    }), _jsx(FlatList, {\n      data: reportedConnections,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index;\n        return _renderItem(item, index, 'reportedConnections');\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n    paddingLeft: 18,\n    paddingRight: 18,\n    overflow: 'scroll'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingTop: 20\n  },\n  imageContainer: {\n    width: 64,\n    height: 64,\n    backgroundColor: BLUE,\n    borderRadius: 32,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageContainerDisabled: {\n    width: 64,\n    height: 64,\n    backgroundColor: GREY,\n    borderRadius: 32,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 48,\n    height: 48\n  },\n  textContainer: {\n    paddingLeft: 10\n  },\n  titleText: {\n    fontSize: fontSize[25],\n    fontFamily: 'Poppins-Bold'\n  },\n  scoreTitle: {\n    fontSize: fontSize[13]\n  },\n  scoreContainer: {\n    alignSelf: 'flex-end',\n    width: 60,\n    height: 60,\n    borderColor: BLUE,\n    borderWidth: 1,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scoreText: {\n    fontSize: fontSize[28]\n  },\n  guideText: {\n    fontSize: fontSize[16],\n    paddingTop: 30,\n    fontFamily: 'Poppins-Mediums',\n    lineHeight: 25\n  },\n  reportTitle: {\n    paddingTop: 20,\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18]\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  itemPhoto: {\n    margin: 10\n  },\n  itemLabel: {},\n  itemLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    color: BLACK\n  },\n  itemReportedByText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: RED\n  },\n  photo: {\n    borderRadius: 20,\n    width: 40,\n    height: 40\n  },\n  negativeScoreContainer: {\n    alignSelf: 'flex-end',\n    width: 48,\n    height: 48,\n    borderColor: RED,\n    borderWidth: 1,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default BituVerificationScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/BituVerificationScreen.tsx"],"names":["BituVerificationScreen","route","url","headerHeight","useHeaderHeight","DEVICE_IOS","verifications","store","connections","useSelector","bituVerification","v","directReports","Object","reportedConnections","renderItem","section","score","reportedBy","getBituReportedByText","testID","console","item","c","styles","renderPhoto","flex","imageSource","uri","photoDirectory","require","marginTop","color","Linking","index","StyleSheet","container","flexDirection","backgroundColor","borderTopLeftRadius","DEVICE_LARGE","paddingLeft","paddingRight","overflow","headerContainer","justifyContent","paddingTop","imageContainer","width","height","borderRadius","alignItems","imageContainerDisabled","logo","textContainer","titleText","fontSize","fontFamily","scoreTitle","scoreContainer","alignSelf","borderColor","borderWidth","scoreText","guideText","lineHeight","reportTitle","itemContainer","itemPhoto","margin","itemLabel","itemLabelText","itemReportedByText","photo","negativeScoreContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  Linking,\n  FlatList,\n  ScrollView,\n} from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { store, useSelector } from '@/store';\nimport { DEVICE_LARGE, DEVICE_IOS } from '@/utils/deviceConstants';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { getBituReportedByText } from '@/utils/verifications';\nimport { GREY, BLUE, BLACK, RED } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\n\nexport const BituVerificationScreen = function ({ route }) {\n  const { url } = route.params;\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const {\n    user: { verifications },\n  } = store.getState();\n  const connections = useSelector(selectAllConnections);\n  const bituVerification = verifications.find(\n    (v) => v.name === 'Bitu',\n  ) as BituVerification;\n  const directReports = bituVerification\n    ? Object.keys(bituVerification.directReports)\n    : [];\n  const reportedConnections = bituVerification\n    ? Object.keys(bituVerification.reportedConnections)\n    : [];\n\n  const renderItem = (item, index, section) => {\n    let score, reportedBy;\n    if (section === 'reportedConnections') {\n      score = bituVerification.reportedConnections[item].length * -1;\n      reportedBy = getBituReportedByText(bituVerification, connections, item);\n    } else {\n      score = bituVerification.directReports[item];\n      reportedBy = '';\n    }\n    const testID = `${section}-${index}`;\n    console.log(\n      `Rendering Section ${section} item ${index} (${item.name}) - testID ${testID}`,\n    );\n    item = connections.find((c) => c.id === item) || {};\n    return (\n      <View testID={testID} style={styles.itemContainer}>\n        <View style={styles.itemPhoto}>{renderPhoto(item)}</View>\n        <View style={styles.itemLabel}>\n          <Text style={styles.itemLabelText}>{item.name || 'Unknown'}</Text>\n          { reportedBy.length > 0 && <Text style={styles.itemReportedByText}>{reportedBy}</Text> }\n        </View>\n        <View style={{ flex: 1 }} />\n        <View style={styles.negativeScoreContainer}>\n          <Text style={styles.scoreText}>{score}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  const renderPhoto = (item) => {\n    const imageSource = item?.photo?.filename\n      ? { uri: `file://${photoDirectory()}/${item.photo.filename}` }\n      : require('@/static/default_profile.jpg');\n    return (\n      <Image\n        source={imageSource}\n        style={styles.photo}\n        resizeMode=\"cover\"\n        onError={(e) => {\n          console.log(e);\n        }}\n        accessible={true}\n        accessibilityLabel=\"photo\"\n      />\n    );\n  };\n\n  return (\n    <ScrollView\n      style={[styles.container, { marginTop: headerHeight }]}\n      testID=\"BituVerificationScreen\"\n    >\n      <View style={styles.headerContainer}>\n        <View\n          style={\n            bituVerification\n              ? styles.imageContainer\n              : styles.imageContainerDisabled\n          }\n        >\n          <Image\n            source={require('@/static/verifications/bitu.png')}\n            accessible={true}\n            accessibilityLabel=\"Bitu\"\n            resizeMode=\"cover\"\n            style={styles.logo}\n          />\n        </View>\n        <View style={styles.textContainer}>\n          <Text style={styles.titleText}>Bitu Verification</Text>\n          <Text style={styles.scoreTitle}>Score:</Text>\n        </View>\n        <View style={{ flex: 1 }} />\n        <View style={styles.scoreContainer}>\n          <Text style={styles.scoreText}>{bituVerification?.score || 0}</Text>\n        </View>\n      </View>\n      <Text style={styles.guideText}>\n        You can get verified and increase your score in \"Bitu\" by making\n        \"already known\" connections to friends or family who are connected to\n        BrightID graph and have \"Bitu\" verification. Never make \"already known\"\n        connections to users you do not know, because you lose 5 scores if they\n        report you and 1 score every time they are reported.\n        <Text style={{ color: 'blue' }} onPress={() => Linking.openURL(url)}>\n          more ...\n        </Text>\n      </Text>\n      {directReports.length > 0 && (\n        <Text style={styles.reportTitle}>Being reported by</Text>\n      )}\n      <FlatList\n        data={directReports}\n        renderItem={({ item, index }) => renderItem(item, index, 'directReports')}\n        keyExtractor={(item) => item}\n      />\n      {reportedConnections.length > 0 && (\n        <Text style={styles.reportTitle}>Reported friends/family</Text>\n      )}\n      <FlatList\n        data={reportedConnections}\n        renderItem={({ item, index }) => renderItem(item, index, 'reportedConnections')}\n        keyExtractor={(item) => item}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n    paddingLeft: 18,\n    paddingRight: 18,\n    overflow: 'scroll',\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingTop: 20,\n  },\n  imageContainer: {\n    width: 64,\n    height: 64,\n    backgroundColor: BLUE,\n    borderRadius: 32,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  imageContainerDisabled: {\n    width: 64,\n    height: 64,\n    backgroundColor: GREY,\n    borderRadius: 32,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: 48,\n    height: 48,\n  },\n  textContainer: {\n    paddingLeft: 10,\n  },\n  titleText: {\n    fontSize: fontSize[25],\n    fontFamily: 'Poppins-Bold',\n  },\n  scoreTitle: {\n    fontSize: fontSize[13],\n  },\n  scoreContainer: {\n    alignSelf: 'flex-end',\n    width: 60,\n    height: 60,\n    borderColor: BLUE,\n    borderWidth: 1,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  scoreText: {\n    fontSize: fontSize[28],\n  },\n  guideText: {\n    fontSize: fontSize[16],\n    paddingTop: 30,\n    fontFamily: 'Poppins-Mediums',\n    lineHeight: 25,\n  },\n  reportTitle: {\n    paddingTop: 20,\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  itemPhoto: {\n    margin: 10,\n  },\n  itemLabel: {},\n  itemLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  itemReportedByText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: RED,\n  },\n  photo: {\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n  },\n  negativeScoreContainer: {\n    alignSelf: 'flex-end',\n    width: 48,\n    height: 48,\n    borderColor: RED,\n    borderWidth: 1,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default BituVerificationScreen;\n"]},"metadata":{},"sourceType":"module"}