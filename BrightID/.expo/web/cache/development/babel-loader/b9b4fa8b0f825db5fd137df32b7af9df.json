{"ast":null,"code":"'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport InteractionManager from \"../../../../exports/InteractionManager\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n\nvar AnimatedValue = function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    var _this2 = this;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n        _this2._value = value;\n      });\n    }\n\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  };\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative);\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  };\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  };\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  };\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  };\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  };\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false);\n  };\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      _this3._updateValue(value, true);\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        InteractionManager.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  };\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  };\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    _AnimatedWithChildren.prototype.__callListeners.call(this, this.__getValue());\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(AnimatedWithChildren);\n\nexport default AnimatedValue;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValue.js"],"names":["subClass","Object","superClass","_setPrototypeOf","o","NativeAnimatedAPI","NativeAnimatedHelper","animatedStyles","node","findAnimatedStyles","animatedStyle","AnimatedValue","_inheritsLoose","_this","_AnimatedWithChildren","_proto","_this2","callback","_this3","handle","animation","InteractionManager","previousAnimation","value","_flush","type","offset"],"mappings":"AASA;;AAEA,SAAA,cAAA,CAAA,QAAA,EAAA,UAAA,EAA8C;EAAEA,QAAQ,CAARA,SAAAA,GAAqBC,MAAM,CAANA,MAAAA,CAAcC,UAAU,CAA7CF,SAAqBC,CAArBD;EAA0DA,QAAQ,CAARA,SAAAA,CAAAA,WAAAA,GAAAA,QAAAA;;EAA2CG,eAAe,CAAA,QAAA,EAAfA,UAAe,CAAfA;AAErJ;;AAAA,SAAA,eAAA,CAAA,CAAA,EAAA,CAAA,EAA+B;EAAEA,eAAe,GAAGF,MAAM,CAANA,cAAAA,IAAyB,SAAA,eAAA,CAAA,CAAA,EAAA,CAAA,EAA+B;IAAEG,CAAC,CAADA,SAAAA,GAAAA,CAAAA;IAAiB,OAAA,CAAA;EAA7FD,CAAAA;;EAA0G,OAAOA,eAAe,CAAA,CAAA,EAAtB,CAAsB,CAAtB;AAE3I;;AAAA,OAAA,qBAAA;AACA,OAAA,oBAAA;AACA,OAAA,kBAAA;AACA,OAAA,oBAAA;AACA,IAAIE,iBAAiB,GAAGC,oBAAoB,CAA5C,GAAA;;AAwBA,SAAA,MAAA,CAAA,QAAA,EAA0B;EACxB,IAAIC,cAAc,GAAG,IAArB,GAAqB,EAArB;;EAEA,SAAA,kBAAA,CAAA,IAAA,EAAkC;IAIhC,IAAI,OAAOC,IAAI,CAAX,MAAA,KAAJ,UAAA,EAAuC;MACrCD,cAAc,CAAdA,GAAAA,CAAAA,IAAAA;IADF,CAAA,MAEO;MACLC,IAAI,CAAJA,aAAAA,GAAAA,OAAAA,CAAAA,kBAAAA;IAEH;EAEDC;;EAAAA,kBAAkB,CAAlBA,QAAkB,CAAlBA;EAGAF,cAAc,CAAdA,OAAAA,CAAuB,UAAA,aAAA,EAAyB;IAC9C,OAAOG,aAAa,CAApB,MAAOA,EAAP;EADFH,CAAAA;AAcF;;AAAA,IAAII,aAAa,GAAgB,UAAA,qBAAA,EAAiC;EAChEC,cAAc,CAAA,aAAA,EAAdA,qBAAc,CAAdA;;EAEA,SAAA,aAAA,CAAA,KAAA,EAA8B;IAC5B,IAAA,KAAA;;IAEAC,KAAK,GAAGC,qBAAqB,CAArBA,IAAAA,CAAAA,IAAAA,KAARD,IAAAA;;IAEA,IAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;MAC7B,MAAM,IAAA,KAAA,CAAN,qDAAM,CAAN;IAGFA;;IAAAA,KAAK,CAALA,cAAAA,GAAuBA,KAAK,CAALA,MAAAA,GAAvBA,KAAAA;IACAA,KAAK,CAALA,OAAAA,GAAAA,CAAAA;IACAA,KAAK,CAALA,UAAAA,GAAAA,IAAAA;IACA,OAAA,KAAA;EAGF;;EAAA,IAAIE,MAAM,GAAGJ,aAAa,CAA1B,SAAA;;EAEAI,MAAM,CAANA,QAAAA,GAAkB,SAAA,QAAA,GAAoB;IACpC,IAAIC,MAAM,GAAV,IAAA;;IAEA,IAAI,KAAJ,UAAA,EAAqB;MACnBX,iBAAiB,CAAjBA,QAAAA,CAA2B,KAA3BA,cAA2B,EAA3BA,EAAkD,UAAA,KAAA,EAAiB;QACjEW,MAAM,CAANA,MAAAA,GAAAA,KAAAA;MADFX,CAAAA;IAKF;;IAAA,KAAA,aAAA;;IAEAS,qBAAqB,CAArBA,SAAAA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,IAAAA;EAXFC,CAAAA;;EAcAA,MAAM,CAANA,UAAAA,GAAoB,SAAA,UAAA,GAAsB;IACxC,OAAO,KAAA,MAAA,GAAc,KAArB,OAAA;EADFA,CAAAA;;EAWAA,MAAM,CAANA,QAAAA,GAAkB,SAAA,QAAA,CAAA,KAAA,EAAyB;IACzC,IAAI,KAAJ,UAAA,EAAqB;MACnB,KAAA,UAAA,CAAA,IAAA;;MAEA,KAAA,UAAA,GAAA,IAAA;IAGF;;IAAA,KAAA,YAAA,CAAA,KAAA,EAAyB,CAAC,KAA1B,UAAA;;IAIA,IAAI,KAAJ,UAAA,EAAqB;MACnBV,iBAAiB,CAAjBA,oBAAAA,CAAuC,KAAvCA,cAAuC,EAAvCA,EAAAA,KAAAA;IAEH;EAdDU,CAAAA;;EAwBAA,MAAM,CAANA,SAAAA,GAAmB,SAAA,SAAA,CAAA,MAAA,EAA2B;IAC5C,KAAA,OAAA,GAAA,MAAA;;IAEA,IAAI,KAAJ,UAAA,EAAqB;MACnBV,iBAAiB,CAAjBA,qBAAAA,CAAwC,KAAxCA,cAAwC,EAAxCA,EAAAA,MAAAA;IAEH;EANDU,CAAAA;;EAeAA,MAAM,CAANA,aAAAA,GAAuB,SAAA,aAAA,GAAyB;IAC9C,KAAA,MAAA,IAAe,KAAf,OAAA;IACA,KAAA,OAAA,GAAA,CAAA;;IAEA,IAAI,KAAJ,UAAA,EAAqB;MACnBV,iBAAiB,CAAjBA,yBAAAA,CAA4C,KAA5CA,cAA4C,EAA5CA;IAEH;EAPDU,CAAAA;;EAgBAA,MAAM,CAANA,aAAAA,GAAuB,SAAA,aAAA,GAAyB;IAC9C,KAAA,OAAA,IAAgB,KAAhB,MAAA;IACA,KAAA,MAAA,GAAA,CAAA;;IAEA,IAAI,KAAJ,UAAA,EAAqB;MACnBV,iBAAiB,CAAjBA,yBAAAA,CAA4C,KAA5CA,cAA4C,EAA5CA;IAEH;EAPDU,CAAAA;;EAiBAA,MAAM,CAANA,aAAAA,GAAuB,SAAA,aAAA,CAAA,QAAA,EAAiC;IACtD,KAAA,YAAA;IACA,KAAA,UAAA,IAAmB,KAAA,UAAA,CAAnB,IAAmB,EAAnB;IACA,KAAA,UAAA,GAAA,IAAA;IACAE,QAAQ,IAAIA,QAAQ,CAAC,KAArBA,UAAqB,EAAD,CAApBA;EAJFF,CAAAA;;EAaAA,MAAM,CAANA,cAAAA,GAAwB,SAAA,cAAA,CAAA,QAAA,EAAkC;IACxD,KAAA,aAAA,CAAA,QAAA;IACA,KAAA,MAAA,GAAc,KAAd,cAAA;EAFFA,CAAAA;;EAKAA,MAAM,CAANA,8BAAAA,GAAwC,SAAA,8BAAA,CAAA,KAAA,EAA+C;IACrF,KAAA,YAAA,CAAA,KAAA,EAAA,KAAA;EADFA,CAAAA;;EAWAA,MAAM,CAANA,WAAAA,GAAqB,SAAA,WAAA,CAAA,MAAA,EAA6B;IAChD,OAAO,IAAA,qBAAA,CAAA,IAAA,EAAP,MAAO,CAAP;EADFA,CAAAA;;EAWAA,MAAM,CAANA,OAAAA,GAAiB,SAAA,OAAA,CAAA,SAAA,EAAA,QAAA,EAAsC;IACrD,IAAIG,MAAM,GAAV,IAAA;;IAEA,IAAIC,MAAM,GAAV,IAAA;;IAEA,IAAIC,SAAS,CAAb,eAAA,EAA+B;MAC7BD,MAAM,GAAGE,kBAAkB,CAA3BF,uBAASE,EAATF;IAGF;;IAAA,IAAIG,iBAAiB,GAAG,KAAxB,UAAA;IACA,KAAA,UAAA,IAAmB,KAAA,UAAA,CAAnB,IAAmB,EAAnB;IACA,KAAA,UAAA,GAAA,SAAA;IACAF,SAAS,CAATA,KAAAA,CAAgB,KAAhBA,MAAAA,EAA6B,UAAA,KAAA,EAAiB;MAG5CF,MAAM,CAANA,YAAAA,CAAAA,KAAAA,EAAAA,IAAAA;IAHFE,CAAAA,EAMG,UAAA,MAAA,EAAkB;MACnBF,MAAM,CAANA,UAAAA,GAAAA,IAAAA;;MAEA,IAAIC,MAAM,KAAV,IAAA,EAAqB;QACnBE,kBAAkB,CAAlBA,sBAAAA,CAAAA,MAAAA;MAGFJ;;MAAAA,QAAQ,IAAIA,QAAQ,CAApBA,MAAoB,CAApBA;IAbFG,CAAAA,EAAAA,iBAAAA,EAAAA,IAAAA;EAZFL,CAAAA;;EAiCAA,MAAM,CAANA,YAAAA,GAAsB,SAAA,YAAA,GAAwB;IAC5C,KAAA,SAAA,IAAkB,KAAA,SAAA,CAAlB,QAAkB,EAAlB;IACA,KAAA,SAAA,GAAA,IAAA;EAFFA,CAAAA;;EASAA,MAAM,CAANA,KAAAA,GAAe,SAAA,KAAA,CAAA,QAAA,EAAyB;IACtC,KAAA,YAAA;IACA,KAAA,SAAA,GAAA,QAAA;EAFFA,CAAAA;;EAKAA,MAAM,CAANA,YAAAA,GAAsB,SAAA,YAAA,CAAA,KAAA,EAAA,KAAA,EAAoC;IACxD,IAAIQ,KAAK,KAAT,SAAA,EAAyB;MACvB,MAAM,IAAA,KAAA,CAAN,qDAAM,CAAN;IAGF;;IAAA,KAAA,MAAA,GAAA,KAAA;;IAEA,IAAA,KAAA,EAAW;MACTC,MAAM,CAANA,IAAM,CAANA;IAGFV;;IAAAA,qBAAqB,CAArBA,SAAAA,CAAAA,eAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAA2D,KAA3DA,UAA2D,EAA3DA;EAXFC,CAAAA;;EAcAA,MAAM,CAANA,iBAAAA,GAA2B,SAAA,iBAAA,GAA6B;IACtD,OAAO;MACLU,IAAI,EADC,OAAA;MAELF,KAAK,EAAE,KAFF,MAAA;MAGLG,MAAM,EAAE,KAHV;IAAO,CAAP;EADFX,CAAAA;;EAQA,OAAA,aAAA;AAlO+B,CAAA,CAAjC,oBAAiC,CAAjC;;AAqOA,eAAA,aAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport InteractionManager from '../../../../exports/InteractionManager';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.68 was deployed. To see the error delete this\n     * comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  /* $FlowFixMe */\n\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue.html\n */\n\n\nvar AnimatedValue = /*#__PURE__*/function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    var _this2 = this;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), function (value) {\n        _this2._value = value;\n      });\n    }\n\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  }\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setvalue\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative\n    /* don't perform a flush for natively driven values */\n    );\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#setoffset\n   */\n  ;\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#flattenoffset\n   */\n  ;\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#extractoffset\n   */\n  ;\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#stopanimation\n   */\n  ;\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#resetanimation\n   */\n  ;\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  };\n\n  _proto._onAnimatedValueUpdateReceived = function _onAnimatedValueUpdateReceived(value) {\n    this._updateValue(value, false\n    /*flush*/\n    );\n  }\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  ;\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#animate\n   */\n  ;\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      // Natively driven animations will never call into that callback, therefore we can always\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\n      _this3._updateValue(value, true\n      /* flush */\n      );\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        InteractionManager.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n  /**\n   * Typically only used internally.\n   */\n  ;\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    _AnimatedWithChildren.prototype.__callListeners.call(this, this.__getValue());\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(AnimatedWithChildren);\n\nexport default AnimatedValue;"]},"metadata":{},"sourceType":"module"}