{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { asyncCreateMigrate } from \"./asyncCreateMigrate\";\n\nvar findContextId = function findContextId(item) {\n  return item.contextId;\n};\n\nvar appsMigrations = {\n  10: function _(state) {\n    var filteredContexts, ids, entities;\n    return _regeneratorRuntime.async(function _$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (Array.isArray(state.linkedContexts)) {\n              filteredContexts = state.linkedContexts.filter(findContextId);\n              ids = filteredContexts.map(findContextId);\n              entities = {};\n              filteredContexts.forEach(function (context) {\n                entities[findContextId(context)] = context;\n              });\n              state.linkedContexts = {\n                ids: ids,\n                entities: entities\n              };\n            }\n\n            return _context.abrupt(\"return\", state);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\nexport var appsMigrate = asyncCreateMigrate(appsMigrations, {\n  debug: __DEV__\n});","map":{"version":3,"names":["asyncCreateMigrate","findContextId","item","contextId","appsMigrations","state","Array","isArray","linkedContexts","filteredContexts","filter","ids","map","entities","forEach","context","appsMigrate","debug","__DEV__"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/store/migrations/apps.ts"],"sourcesContent":["import { Dictionary } from '@reduxjs/toolkit';\nimport { PersistedState } from 'redux-persist';\nimport { asyncCreateMigrate, MigrationManifest } from './asyncCreateMigrate';\n\nconst findContextId = (item: ContextInfo) => item.contextId;\n\ntype V9State = {\n  apps: AppInfo[];\n  linkedContexts: ContextInfo[];\n} & PersistedState;\n\ntype V10State = AppsState & PersistedState;\n\nconst appsMigrations: MigrationManifest = {\n  10: async (state: V9State | V10State) => {\n    if (Array.isArray(state.linkedContexts)) {\n      const filteredContexts = state.linkedContexts.filter(findContextId);\n\n      const ids = filteredContexts.map(findContextId);\n\n      const entities: Dictionary<ContextInfo> = {};\n\n      filteredContexts.forEach((context) => {\n        entities[findContextId(context)] = context;\n      });\n\n      state.linkedContexts = { ids, entities };\n    }\n\n    return state as V10State;\n  },\n};\n\nexport const appsMigrate = asyncCreateMigrate(appsMigrations, {\n  debug: __DEV__,\n});\n"],"mappings":";AAEA,SAASA,kBAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;EAAA,OAAuBA,IAAI,CAACC,SAA5B;AAAA,CAAtB;;AASA,IAAMC,cAAiC,GAAG;EACxC,IAAI,WAAOC,KAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YACF,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACG,cAApB,CAAJ,EAAyC;cACjCC,gBADiC,GACdJ,KAAK,CAACG,cAAN,CAAqBE,MAArB,CAA4BT,aAA5B,CADc;cAGjCU,GAHiC,GAG3BF,gBAAgB,CAACG,GAAjB,CAAqBX,aAArB,CAH2B;cAKjCY,QALiC,GAKG,EALH;cAOvCJ,gBAAgB,CAACK,OAAjB,CAAyB,UAACC,OAAD,EAAa;gBACpCF,QAAQ,CAACZ,aAAa,CAACc,OAAD,CAAd,CAAR,GAAmCA,OAAnC;cACD,CAFD;cAIAV,KAAK,CAACG,cAAN,GAAuB;gBAAEG,GAAG,EAAHA,GAAF;gBAAOE,QAAQ,EAARA;cAAP,CAAvB;YACD;;YAbC,iCAeKR,KAfL;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AADoC,CAA1C;AAoBA,OAAO,IAAMW,WAAW,GAAGhB,kBAAkB,CAACI,cAAD,EAAiB;EAC5Da,KAAK,EAAEC;AADqD,CAAjB,CAAtC"},"metadata":{},"sourceType":"module"}