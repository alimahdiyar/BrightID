{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar VERSION = 11;\nexport function asyncCreateMigrate(migrations, config) {\n  var _ref = config || {},\n      debug = _ref.debug;\n\n  return function (state, currentVersion) {\n    var _state$_persist$versi, _state$_persist;\n\n    if (!state) {\n      if (debug) console.log('redux-persist: no inbound state, skipping migration');\n      return Promise.resolve(undefined);\n    }\n\n    var inboundVersion = (_state$_persist$versi = state == null ? void 0 : (_state$_persist = state._persist) == null ? void 0 : _state$_persist.version) != null ? _state$_persist$versi : VERSION - 1;\n\n    if (inboundVersion === currentVersion) {\n      if (debug) console.log('redux-persist: versions match, noop migration');\n      return Promise.resolve(state);\n    }\n\n    if (inboundVersion > currentVersion) {\n      if (debug) console.log('redux-persist: downgrading version is not supported');\n      return Promise.resolve(state);\n    }\n\n    var migrationKeys = Object.keys(migrations).map(function (ver) {\n      return parseInt(ver, 10);\n    }).filter(function (key) {\n      return currentVersion >= key && key > inboundVersion;\n    }).sort(function (a, b) {\n      return a - b;\n    });\n    if (debug) console.log('redux-persist: migrationKeys', migrationKeys);\n\n    try {\n      var migratedState = migrationKeys.reduce(function _callee(stateP, versionKey) {\n        var state;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (debug) console.log('redux-persist: running migration for versionKey', versionKey);\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(stateP);\n\n              case 3:\n                state = _context.sent;\n                return _context.abrupt(\"return\", migrations[versionKey](state));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }, Promise.resolve(state));\n      return Promise.resolve(migratedState);\n    } catch (err) {\n      console.error(err);\n      return Promise.reject(err);\n    }\n  };\n}","map":{"version":3,"names":["VERSION","asyncCreateMigrate","migrations","config","debug","state","currentVersion","console","log","Promise","resolve","undefined","inboundVersion","_persist","version","migrationKeys","Object","keys","map","ver","parseInt","filter","key","sort","a","b","migratedState","reduce","stateP","versionKey","err","error","reject"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/store/migrations/asyncCreateMigrate.ts"],"sourcesContent":["import { PersistedState } from 'redux-persist';\n\nexport type MigrationManifest = {\n  [key: string]: (state: PersistedState) => Promise<PersistedState>;\n};\n\nconst VERSION = 11;\n\nexport function asyncCreateMigrate(\n  migrations: MigrationManifest,\n  config?: { debug: boolean },\n) {\n  const { debug } = config || {};\n  return function (\n    state: PersistedState,\n    currentVersion: number,\n  ): Promise<PersistedState> {\n    if (!state) {\n      if (debug)\n        console.log('redux-persist: no inbound state, skipping migration');\n      return Promise.resolve(undefined);\n    }\n\n    const inboundVersion: number = state?._persist?.version ?? VERSION - 1;\n\n    if (inboundVersion === currentVersion) {\n      if (debug) console.log('redux-persist: versions match, noop migration');\n      return Promise.resolve(state);\n    }\n    if (inboundVersion > currentVersion) {\n      if (debug)\n        console.log('redux-persist: downgrading version is not supported');\n      return Promise.resolve(state);\n    }\n\n    const migrationKeys = Object.keys(migrations)\n      .map((ver) => parseInt(ver, 10))\n      .filter((key) => currentVersion >= key && key > inboundVersion)\n      .sort((a, b) => a - b);\n\n    if (debug) console.log('redux-persist: migrationKeys', migrationKeys);\n    try {\n      const migratedState = migrationKeys.reduce(async (stateP, versionKey) => {\n        if (debug)\n          console.log(\n            'redux-persist: running migration for versionKey',\n            versionKey,\n          );\n        const state = await stateP;\n        return migrations[versionKey](state);\n      }, Promise.resolve(state));\n      return Promise.resolve(migratedState);\n    } catch (err) {\n      console.error(err);\n      return Promise.reject(err);\n    }\n  };\n}\n"],"mappings":";AAMA,IAAMA,OAAO,GAAG,EAAhB;AAEA,OAAO,SAASC,kBAAT,CACLC,UADK,EAELC,MAFK,EAGL;EACA,WAAkBA,MAAM,IAAI,EAA5B;EAAA,IAAQC,KAAR,QAAQA,KAAR;;EACA,OAAO,UACLC,KADK,EAELC,cAFK,EAGoB;IAAA;;IACzB,IAAI,CAACD,KAAL,EAAY;MACV,IAAID,KAAJ,EACEG,OAAO,CAACC,GAAR,CAAY,qDAAZ;MACF,OAAOC,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAP;IACD;;IAED,IAAMC,cAAsB,4BAAGP,KAAH,uCAAGA,KAAK,CAAEQ,QAAV,qBAAG,gBAAiBC,OAApB,oCAA+Bd,OAAO,GAAG,CAArE;;IAEA,IAAIY,cAAc,KAAKN,cAAvB,EAAuC;MACrC,IAAIF,KAAJ,EAAWG,OAAO,CAACC,GAAR,CAAY,+CAAZ;MACX,OAAOC,OAAO,CAACC,OAAR,CAAgBL,KAAhB,CAAP;IACD;;IACD,IAAIO,cAAc,GAAGN,cAArB,EAAqC;MACnC,IAAIF,KAAJ,EACEG,OAAO,CAACC,GAAR,CAAY,qDAAZ;MACF,OAAOC,OAAO,CAACC,OAAR,CAAgBL,KAAhB,CAAP;IACD;;IAED,IAAMU,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYf,UAAZ,EACnBgB,GADmB,CACf,UAACC,GAAD;MAAA,OAASC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAjB;IAAA,CADe,EAEnBE,MAFmB,CAEZ,UAACC,GAAD;MAAA,OAAShB,cAAc,IAAIgB,GAAlB,IAAyBA,GAAG,GAAGV,cAAxC;IAAA,CAFY,EAGnBW,IAHmB,CAGd,UAACC,CAAD,EAAIC,CAAJ;MAAA,OAAUD,CAAC,GAAGC,CAAd;IAAA,CAHc,CAAtB;IAKA,IAAIrB,KAAJ,EAAWG,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CO,aAA5C;;IACX,IAAI;MACF,IAAMW,aAAa,GAAGX,aAAa,CAACY,MAAd,CAAqB,iBAAOC,MAAP,EAAeC,UAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBACzC,IAAIzB,KAAJ,EACEG,OAAO,CAACC,GAAR,CACE,iDADF,EAEEqB,UAFF;gBAFuC;gBAAA,iCAMrBD,MANqB;;cAAA;gBAMnCvB,KANmC;gBAAA,iCAOlCH,UAAU,CAAC2B,UAAD,CAAV,CAAuBxB,KAAvB,CAPkC;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAArB,EAQnBI,OAAO,CAACC,OAAR,CAAgBL,KAAhB,CARmB,CAAtB;MASA,OAAOI,OAAO,CAACC,OAAR,CAAgBgB,aAAhB,CAAP;IACD,CAXD,CAWE,OAAOI,GAAP,EAAY;MACZvB,OAAO,CAACwB,KAAR,CAAcD,GAAd;MACA,OAAOrB,OAAO,CAACuB,MAAR,CAAeF,GAAf,CAAP;IACD;EACF,CA3CD;AA4CD"},"metadata":{},"sourceType":"module"}