{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SvgXml } from 'react-native-svg';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport { useContext } from 'react';\nimport { useDispatch, useSelector } from \"../../store\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { DARK_ORANGE, GREEN, DARKER_GREY, LIGHT_GREY, WHITE } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { getGroupName } from \"../../utils/groups\";\nimport { acceptInvite, rejectInvite, joinGroup, selectConnectionById, addOperation } from \"../../actions\";\nimport { GroupPhoto } from \"../Groups/GroupPhoto\";\nimport { backupUser, backupPhoto } from \"../Onboarding/RecoveryFlow/thunks/backupThunks\";\nimport Check from \"../Icons/Check\";\nimport xGrey from \"../../static/x_grey.svg\";\nimport BrightidError from \"../../api/brightidError\";\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InviteCard = function InviteCard(props) {\n  var invite = props.invite;\n  var dispatch = useDispatch();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var inviter = useSelector(function (state) {\n    return selectConnectionById(state, invite.inviter);\n  });\n  var navigation = useNavigation();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      backupCompleted = _useSelector.backupCompleted;\n\n  var api = useContext(NodeApiContext);\n\n  var handleRejectInvite = function handleRejectInvite() {\n    Alert.alert(t('notifications.alert.title.rejectGroupInvite'), t('notifications.alert.text.rejectGroupInvite'), [{\n      text: t('common.alert.cancel'),\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: t('common.alert.sure'),\n      onPress: function onPress() {\n        return _regeneratorRuntime.async(function onPress$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(dispatch(rejectInvite(invite.id)));\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                Alert.alert(t('notifications.alert.title.failureRejectGroupInvite'), _context.t0.message);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      }\n    }], {\n      cancelable: true\n    });\n  };\n\n  var handleAcceptInvite = function _callee() {\n    var op;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(api.joinGroup(invite.group.id));\n\n          case 3:\n            op = _context2.sent;\n            dispatch(addOperation(op));\n            dispatch(acceptInvite(invite.id));\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(joinGroup(invite.group)));\n\n          case 8:\n            Alert.alert(t('common.alert.success'), t('notifications.alert.text.successGroupInvite', {\n              defaultValue: 'You joined {{groupName}}',\n              groupName: getGroupName(invite.group)\n            }));\n\n            if (!backupCompleted) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(dispatch(backupUser()));\n\n          case 12:\n            if (!(invite.group.photo && invite.group.photo.filename)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(invite.group.id, invite.group.photo.filename)));\n\n          case 15:\n            navigation.navigate('Members', {\n              group: invite.group\n            });\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](0);\n\n            if (_context2.t0 instanceof BrightidError) {\n              Alert.alert(t('notifications.alert.text.failureAcceptGroupInvite'), _context2.t0.errorNum + \" - \" + _context2.t0.message);\n            } else {\n              Alert.alert('Error', _context2.t0.message);\n            }\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.photoContainer,\n      children: _jsx(GroupPhoto, {\n        group: invite.group\n      })\n    }), _jsxs(View, {\n      style: styles.info,\n      children: [_jsx(Text, {\n        style: styles.name,\n        children: getGroupName(invite.group)\n      }), _jsx(Text, {\n        style: styles.invitationMsg,\n        children: t('notifications.item.text.pendingGroupInvite', {\n          name: inviter == null ? void 0 : inviter.name\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.approvalButtonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.greenCircle,\n        onPress: handleAcceptInvite,\n        children: _jsx(Check, {\n          color: GREEN,\n          width: DEVICE_LARGE ? 20 : 17,\n          height: DEVICE_LARGE ? 20 : 17\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.greyCircle,\n        onPress: handleRejectInvite,\n        children: _jsx(SvgXml, {\n          xml: xGrey,\n          width: DEVICE_LARGE ? 15 : 12,\n          height: DEVICE_LARGE ? 15 : 12\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: WHITE,\n    borderBottomColor: LIGHT_GREY,\n    borderBottomWidth: 1,\n    paddingBottom: 10,\n    paddingTop: 10,\n    height: DEVICE_LARGE ? 94 : 80,\n    marginBottom: DEVICE_LARGE ? 11.8 : 6\n  },\n  photoContainer: {\n    minWidth: 85,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 15 : 12,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: DEVICE_LARGE ? 71 : 65\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[20],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4\n  },\n  invitationMsg: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARK_ORANGE\n  },\n  greenCircle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 40 : 32,\n    height: DEVICE_LARGE ? 40 : 32,\n    borderRadius: 25,\n    borderWidth: 2,\n    borderColor: GREEN\n  },\n  greyCircle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 40 : 32,\n    height: DEVICE_LARGE ? 40 : 32,\n    borderRadius: 25,\n    borderWidth: 2,\n    borderColor: DARKER_GREY,\n    marginLeft: 7\n  },\n  approvalButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    minWidth: 100\n  }\n});\nexport default InviteCard;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Notifications/InviteCard.tsx"],"names":["InviteCard","invite","props","dispatch","useDispatch","t","useTranslation","inviter","useSelector","selectConnectionById","navigation","useNavigation","backupCompleted","state","api","useContext","handleRejectInvite","Alert","text","onPress","console","style","rejectInvite","cancelable","handleAcceptInvite","op","addOperation","acceptInvite","joinGroup","defaultValue","groupName","getGroupName","backupUser","backupPhoto","group","styles","name","DEVICE_LARGE","StyleSheet","container","width","alignItems","flexDirection","justifyContent","backgroundColor","borderBottomColor","borderBottomWidth","paddingBottom","paddingTop","height","marginBottom","photoContainer","minWidth","info","marginLeft","flex","fontFamily","fontSize","shadowColor","shadowOffset","shadowRadius","invitationMsg","color","greenCircle","borderRadius","borderWidth","borderColor","greyCircle","approvalButtonContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, Alert } from 'react-native';\nimport { SvgXml } from 'react-native-svg';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport { useContext } from 'react';\nimport { useDispatch, useSelector } from '@/store';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport {\n  DARK_ORANGE,\n  GREEN,\n  DARKER_GREY,\n  LIGHT_GREY,\n  WHITE,\n} from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { getGroupName } from '@/utils/groups';\nimport {\n  acceptInvite,\n  rejectInvite,\n  joinGroup,\n  selectConnectionById,\n  addOperation,\n} from '@/actions';\nimport { GroupPhoto } from '@/components/Groups/GroupPhoto';\nimport {\n  backupUser,\n  backupPhoto,\n} from '@/components/Onboarding/RecoveryFlow/thunks/backupThunks';\nimport Check from '@/components/Icons/Check';\nimport xGrey from '@/static/x_grey.svg';\nimport BrightidError from '@/api/brightidError';\nimport { NodeApiContext } from '@/components/NodeApiGate';\n\nconst InviteCard = (props) => {\n  const { invite } = props;\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const inviter = useSelector((state: State) =>\n    selectConnectionById(state, invite.inviter),\n  );\n  const navigation = useNavigation();\n  const { backupCompleted } = useSelector((state: State) => state.user);\n  const api = useContext(NodeApiContext);\n\n  const handleRejectInvite = () => {\n    Alert.alert(\n      t('notifications.alert.title.rejectGroupInvite'),\n      t('notifications.alert.text.rejectGroupInvite'),\n      [\n        {\n          text: t('common.alert.cancel'),\n          onPress: () => console.log('Cancel Pressed'),\n          style: 'cancel',\n        },\n        {\n          text: t('common.alert.sure'),\n          onPress: async () => {\n            try {\n              await dispatch(rejectInvite(invite.id));\n            } catch (err) {\n              Alert.alert(\n                t('notifications.alert.title.failureRejectGroupInvite'),\n                err.message,\n              );\n            }\n          },\n        },\n      ],\n      { cancelable: true },\n    );\n  };\n\n  const handleAcceptInvite = async () => {\n    try {\n      const op = await api.joinGroup(invite.group.id);\n      dispatch(addOperation(op));\n      dispatch(acceptInvite(invite.id));\n      await dispatch(joinGroup(invite.group));\n      Alert.alert(\n        t('common.alert.success'),\n        t('notifications.alert.text.successGroupInvite', {\n          defaultValue: 'You joined {{groupName}}',\n          groupName: getGroupName(invite.group),\n        }),\n      );\n      if (backupCompleted) {\n        await dispatch(backupUser());\n        if (invite.group.photo && invite.group.photo.filename) {\n          await dispatch(\n            backupPhoto(invite.group.id, invite.group.photo.filename),\n          );\n        }\n      }\n      navigation.navigate('Members', { group: invite.group });\n    } catch (err) {\n      if (err instanceof BrightidError) {\n        // Something went wrong in the backend while applying operation\n        Alert.alert(\n          t('notifications.alert.text.failureAcceptGroupInvite'),\n          `${err.errorNum} - ${err.message}`,\n        );\n      } else {\n        Alert.alert('Error', err.message);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.photoContainer}>\n        <GroupPhoto group={invite.group} />\n      </View>\n      <View style={styles.info}>\n        <Text style={styles.name}>{getGroupName(invite.group)}</Text>\n        <Text style={styles.invitationMsg}>\n          {t('notifications.item.text.pendingGroupInvite', {\n            name: inviter?.name,\n          })}\n        </Text>\n      </View>\n      <View style={styles.approvalButtonContainer}>\n        <TouchableOpacity\n          style={styles.greenCircle}\n          onPress={handleAcceptInvite}\n        >\n          <Check\n            color={GREEN}\n            width={DEVICE_LARGE ? 20 : 17}\n            height={DEVICE_LARGE ? 20 : 17}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.greyCircle}\n          onPress={handleRejectInvite}\n        >\n          <SvgXml\n            xml={xGrey}\n            width={DEVICE_LARGE ? 15 : 12}\n            height={DEVICE_LARGE ? 15 : 12}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: WHITE,\n    borderBottomColor: LIGHT_GREY,\n    borderBottomWidth: 1,\n    paddingBottom: 10,\n    paddingTop: 10,\n    height: DEVICE_LARGE ? 94 : 80,\n    marginBottom: DEVICE_LARGE ? 11.8 : 6,\n  },\n  photoContainer: {\n    minWidth: 85,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 15 : 12,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: DEVICE_LARGE ? 71 : 65,\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[20],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n  },\n  invitationMsg: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARK_ORANGE,\n  },\n  greenCircle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 40 : 32,\n    height: DEVICE_LARGE ? 40 : 32,\n    borderRadius: 25,\n    borderWidth: 2,\n    borderColor: GREEN,\n  },\n  greyCircle: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 40 : 32,\n    height: DEVICE_LARGE ? 40 : 32,\n    borderRadius: 25,\n    borderWidth: 2,\n    borderColor: DARKER_GREY,\n    marginLeft: 7,\n  },\n  approvalButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    minWidth: 100,\n  },\n});\n\nexport default InviteCard;\n"]},"metadata":{},"sourceType":"module"}