{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"../../../store\";\nimport { BLACK, ORANGE, WHITE } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { setBackupCompleted, setPassword } from \"../../../reducer/userSlice\";\nimport { RecoverAccount } from \"./RecoverAccount\";\nimport { RestoreBackup } from \"./RestoreBackup\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { finishRecovery, recoverData, setRecoveryKeys, socialRecovery } from \"./thunks/recoveryThunks\";\nimport { CHANNEL_POLL_INTERVAL, clearChannel } from \"./thunks/channelThunks\";\nimport { selectOperationByHash } from \"../../../reducer/operationsSlice\";\nimport { operation_states } from \"../../../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar channelTimeout = CHANNEL_POLL_INTERVAL * 3.1;\nexport var AccountSteps;\n\n(function (AccountSteps) {\n  AccountSteps[AccountSteps[\"WAITING_DOWNLOAD\"] = 0] = \"WAITING_DOWNLOAD\";\n  AccountSteps[AccountSteps[\"DOWNLOAD_COMPLETE\"] = 1] = \"DOWNLOAD_COMPLETE\";\n  AccountSteps[AccountSteps[\"WAITING_OPERATION\"] = 2] = \"WAITING_OPERATION\";\n  AccountSteps[AccountSteps[\"OPERATION_APPLIED\"] = 3] = \"OPERATION_APPLIED\";\n  AccountSteps[AccountSteps[\"ERROR\"] = 4] = \"ERROR\";\n  AccountSteps[AccountSteps[\"COMPLETE\"] = 5] = \"COMPLETE\";\n})(AccountSteps || (AccountSteps = {}));\n\nexport var BackupSteps;\n\n(function (BackupSteps) {\n  BackupSteps[BackupSteps[\"WAITING_ACCOUNT\"] = 0] = \"WAITING_ACCOUNT\";\n  BackupSteps[BackupSteps[\"WAITING_PASSWORD\"] = 1] = \"WAITING_PASSWORD\";\n  BackupSteps[BackupSteps[\"RESTORING_DATA\"] = 2] = \"RESTORING_DATA\";\n  BackupSteps[BackupSteps[\"SKIPPED\"] = 3] = \"SKIPPED\";\n  BackupSteps[BackupSteps[\"ERROR\"] = 4] = \"ERROR\";\n  BackupSteps[BackupSteps[\"COMPLETE\"] = 5] = \"COMPLETE\";\n})(BackupSteps || (BackupSteps = {}));\n\nvar RestoreScreen = function RestoreScreen() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pass = _useState2[0],\n      setPass = _useState2[1];\n\n  var api = useContext(NodeApiContext);\n  var recoveredConnections = useSelector(function (state) {\n    return state.recoveryData.recoveredConnections;\n  });\n  var recoveredGroups = useSelector(function (state) {\n    return state.recoveryData.recoveredGroups;\n  });\n\n  var _useState3 = useState(AccountSteps.WAITING_DOWNLOAD),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accountStep = _useState4[0],\n      setAccountStep = _useState4[1];\n\n  var _useState5 = useState(BackupSteps.WAITING_ACCOUNT),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataStep = _useState6[0],\n      setDataStep = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      accountError = _useState8[0],\n      setAccountError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      recoveryOpHash = _useState10[0],\n      setRecoveryOpHash = _useState10[1];\n\n  var recoveryOp = useSelector(function (state) {\n    return selectOperationByHash(state, recoveryOpHash);\n  });\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentItem = _useState12[0],\n      setCurrentItem = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      totalItems = _useState14[0],\n      setTotalItems = _useState14[1];\n\n  var dispatch = useDispatch();\n  useFocusEffect(useCallback(function () {\n    var t = setTimeout(function () {\n      clearChannel();\n      setAccountStep(AccountSteps.DOWNLOAD_COMPLETE);\n    }, channelTimeout);\n    return function () {\n      clearTimeout(t);\n    };\n  }, []));\n  useEffect(function () {\n    var startRecovery = function _callee() {\n      var op, errorString;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setAccountStep(AccountSteps.WAITING_OPERATION);\n              console.log(\"Starting account recovery\");\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(dispatch(socialRecovery(api)));\n\n            case 5:\n              op = _context.sent;\n\n              if (op === 'ALREADY APPLIED') {\n                setAccountStep(AccountSteps.OPERATION_APPLIED);\n              } else {\n                console.log(\"Recover op Hash: \" + op.hash);\n                setRecoveryOpHash(op.hash);\n              }\n\n              _context.next = 16;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              errorString = '';\n\n              if (_context.t0 instanceof Error) {\n                errorString = \"\" + _context.t0.message;\n              } else {\n                errorString = \"\" + _context.t0;\n              }\n\n              console.log(\"Error during account recovery: \" + errorString);\n              setAccountStep(AccountSteps.ERROR);\n              setAccountError(errorString);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    var finishRecovery = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(setRecoveryKeys());\n              setAccountStep(AccountSteps.COMPLETE);\n              setDataStep(BackupSteps.WAITING_PASSWORD);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    switch (accountStep) {\n      case AccountSteps.DOWNLOAD_COMPLETE:\n        startRecovery();\n        break;\n\n      case AccountSteps.OPERATION_APPLIED:\n        finishRecovery();\n        break;\n\n      default:\n        break;\n    }\n  }, [dispatch, accountStep, api]);\n  useEffect(function () {\n    switch (dataStep) {\n      case BackupSteps.COMPLETE:\n        dispatch(setPassword(pass));\n        dispatch(setBackupCompleted(true));\n        break;\n\n      default:\n        break;\n    }\n  }, [dataStep, dispatch, pass]);\n  useEffect(function () {\n    if (accountStep === AccountSteps.COMPLETE && (dataStep === BackupSteps.COMPLETE || dataStep === BackupSteps.SKIPPED)) {\n      console.log(\"Recovery process finished!\");\n      Alert.alert(t('common.alert.info'), t('restore.alert.text.restoreSuccess'), [{\n        text: t('common.alert.ok')\n      }]);\n      dispatch(finishRecovery());\n    }\n  }, [accountStep, dataStep, dispatch, t]);\n  useEffect(function () {\n    if (recoveryOp && accountStep === AccountSteps.WAITING_OPERATION) {\n      console.log(\"recover Op state: \" + recoveryOp.state);\n\n      switch (recoveryOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          break;\n\n        case operation_states.APPLIED:\n          setAccountStep(AccountSteps.OPERATION_APPLIED);\n          setRecoveryOpHash('');\n          break;\n\n        case operation_states.FAILED:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation could not be applied');\n          setRecoveryOpHash('');\n          break;\n\n        case operation_states.EXPIRED:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation timed out');\n          setRecoveryOpHash('');\n          break;\n\n        default:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Unhandled operation state');\n          setRecoveryOpHash('');\n      }\n    }\n  }, [recoveryOp, accountStep]);\n\n  var skip = function skip() {\n    setPass('');\n    setDataStep(BackupSteps.SKIPPED);\n  };\n\n  var restoreBackup = function _callee3() {\n    var errorString;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log(\"Starting restore backup\");\n            setDataStep(BackupSteps.RESTORING_DATA);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(recoverData(pass, api, setTotalItems, setCurrentItem)));\n\n          case 5:\n            console.log(\"Successfully restored backup\");\n            setDataStep(BackupSteps.COMPLETE);\n            _context3.next = 15;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            errorString = '';\n\n            if (_context3.t0 instanceof Error) {\n              errorString = _context3.t0.name + \" - \" + _context3.t0.message;\n            } else {\n              errorString = \"\" + _context3.t0;\n            }\n\n            console.log(\"Error during recover: \" + errorString);\n            setDataStep(BackupSteps.ERROR);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"position\",\n      children: [_jsx(View, {\n        style: styles.recoverAccountContainer,\n        children: _jsx(RecoverAccount, {\n          currentStep: accountStep,\n          recoveredGroups: recoveredGroups,\n          recoveredConnections: recoveredConnections,\n          errorMessage: accountError\n        })\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsx(View, {\n        style: styles.restoreBackupContainer,\n        children: _jsx(RestoreBackup, {\n          currentStep: dataStep,\n          doRestore: restoreBackup,\n          doSkip: skip,\n          password: pass,\n          setPassword: setPass,\n          totalItems: totalItems,\n          currentItem: currentItem\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK\n  },\n  recoverAccountContainer: {\n    marginTop: DEVICE_LARGE ? 25 : 20,\n    minHeight: '25%'\n  },\n  restoreBackupContainer: {\n    height: '50%'\n  }\n});\nexport default RestoreScreen;","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","useFocusEffect","useTranslation","useDispatch","useSelector","BLACK","ORANGE","WHITE","DEVICE_LARGE","setBackupCompleted","setPassword","RecoverAccount","RestoreBackup","NodeApiContext","finishRecovery","recoverData","setRecoveryKeys","socialRecovery","CHANNEL_POLL_INTERVAL","clearChannel","selectOperationByHash","operation_states","channelTimeout","AccountSteps","BackupSteps","RestoreScreen","t","pass","setPass","api","recoveredConnections","state","recoveryData","recoveredGroups","WAITING_DOWNLOAD","accountStep","setAccountStep","WAITING_ACCOUNT","dataStep","setDataStep","accountError","setAccountError","recoveryOpHash","setRecoveryOpHash","recoveryOp","currentItem","setCurrentItem","totalItems","setTotalItems","dispatch","setTimeout","DOWNLOAD_COMPLETE","clearTimeout","startRecovery","WAITING_OPERATION","console","log","op","OPERATION_APPLIED","hash","errorString","Error","message","ERROR","COMPLETE","WAITING_PASSWORD","SKIPPED","Alert","alert","text","UNKNOWN","INIT","SENT","APPLIED","FAILED","EXPIRED","skip","restoreBackup","RESTORING_DATA","name","styles","orangeTop","container","recoverAccountContainer","divider","restoreBackupContainer","StyleSheet","create","backgroundColor","height","width","zIndex","flex","alignItems","flexDirection","justifyContent","borderTopLeftRadius","marginTop","overflow","marginBottom","borderBottomWidth","hairlineWidth","borderColor","minHeight"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RestoreScreen.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { StyleSheet, View, KeyboardAvoidingView, Alert } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from '@/store';\nimport { BLACK, ORANGE, WHITE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { setBackupCompleted, setPassword } from '@/reducer/userSlice';\nimport { RecoverAccount } from '@/components/Onboarding/RecoveryFlow/RecoverAccount';\nimport { RestoreBackup } from '@/components/Onboarding/RecoveryFlow/RestoreBackup';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport {\n  finishRecovery,\n  recoverData,\n  setRecoveryKeys,\n  socialRecovery,\n} from './thunks/recoveryThunks';\nimport { CHANNEL_POLL_INTERVAL, clearChannel } from './thunks/channelThunks';\nimport { selectOperationByHash } from '@/reducer/operationsSlice';\nimport { operation_states } from '@/utils/constants';\n\n// clear channel after this time\nconst channelTimeout = CHANNEL_POLL_INTERVAL * 3.1;\n\nexport enum AccountSteps {\n  WAITING_DOWNLOAD,\n  DOWNLOAD_COMPLETE,\n  WAITING_OPERATION, // op submitted to backend but not yet applied\n  OPERATION_APPLIED, // op successfully applied in backend\n  ERROR,\n  COMPLETE,\n}\n\nexport enum BackupSteps {\n  WAITING_ACCOUNT, // Waiting for account recovery to complete\n  WAITING_PASSWORD, // Ready to start, waiting for user to provide password\n  RESTORING_DATA, // Restoring in progress\n  SKIPPED, // User decided to skip backup restoration\n  ERROR,\n  COMPLETE,\n}\n\nconst RestoreScreen = () => {\n  const { t } = useTranslation();\n  const [pass, setPass] = useState('');\n  const api = useContext(NodeApiContext);\n  const recoveredConnections = useSelector(\n    (state) => state.recoveryData.recoveredConnections,\n  );\n  const recoveredGroups = useSelector(\n    (state) => state.recoveryData.recoveredGroups,\n  );\n  const [accountStep, setAccountStep] = useState<AccountSteps>(\n    AccountSteps.WAITING_DOWNLOAD,\n  );\n  const [dataStep, setDataStep] = useState<BackupSteps>(\n    BackupSteps.WAITING_ACCOUNT,\n  );\n  const [accountError, setAccountError] = useState('');\n  const [recoveryOpHash, setRecoveryOpHash] = useState('');\n  const recoveryOp = useSelector((state) =>\n    selectOperationByHash(state, recoveryOpHash),\n  );\n  const [currentItem, setCurrentItem] = useState(0);\n  const [totalItems, setTotalItems] = useState(0);\n  const dispatch = useDispatch();\n\n  useFocusEffect(\n    useCallback(() => {\n      // wait 3 passes of the the poll channel to make sure all data is downloaded\n      const t = setTimeout(() => {\n        clearChannel();\n        setAccountStep(AccountSteps.DOWNLOAD_COMPLETE);\n      }, channelTimeout);\n\n      return () => {\n        clearTimeout(t);\n      };\n    }, []),\n  );\n\n  // track account recovery state\n  useEffect(() => {\n    const startRecovery = async () => {\n      try {\n        setAccountStep(AccountSteps.WAITING_OPERATION);\n        console.log(`Starting account recovery`);\n        const op = await dispatch(socialRecovery(api));\n        if (op === 'ALREADY APPLIED') {\n          // we can shortcut to the next step without waiting for operation status\n          setAccountStep(AccountSteps.OPERATION_APPLIED);\n        } else {\n          console.log(`Recover op Hash: ${op.hash}`);\n          setRecoveryOpHash(op.hash);\n        }\n      } catch (err) {\n        let errorString = '';\n        if (err instanceof Error) {\n          errorString = `${err.message}`;\n        } else {\n          errorString = `${err}`;\n        }\n        console.log(`Error during account recovery: ${errorString}`);\n        setAccountStep(AccountSteps.ERROR);\n        setAccountError(errorString);\n      }\n    };\n    const finishRecovery = async () => {\n      dispatch(setRecoveryKeys());\n      setAccountStep(AccountSteps.COMPLETE);\n      // restore backup can now start\n      setDataStep(BackupSteps.WAITING_PASSWORD);\n    };\n    switch (accountStep) {\n      case AccountSteps.DOWNLOAD_COMPLETE:\n        startRecovery();\n        break;\n      case AccountSteps.OPERATION_APPLIED:\n        finishRecovery();\n        break;\n      default:\n        break;\n    }\n  }, [dispatch, accountStep, api]);\n\n  // track data recovery state\n  useEffect(() => {\n    switch (dataStep) {\n      case BackupSteps.COMPLETE:\n        // save password in state and set backupCompleted marker\n        dispatch(setPassword(pass));\n        dispatch(setBackupCompleted(true));\n        break;\n      default:\n        break;\n    }\n  }, [dataStep, dispatch, pass]);\n\n  // track overall progress\n  useEffect(() => {\n    if (\n      accountStep === AccountSteps.COMPLETE &&\n      (dataStep === BackupSteps.COMPLETE || dataStep === BackupSteps.SKIPPED)\n    ) {\n      console.log(`Recovery process finished!`);\n      Alert.alert(\n        t('common.alert.info'),\n        t('restore.alert.text.restoreSuccess'),\n        [{ text: t('common.alert.ok') }],\n      );\n      dispatch(finishRecovery());\n    }\n  }, [accountStep, dataStep, dispatch, t]);\n\n  useEffect(() => {\n    if (recoveryOp && accountStep === AccountSteps.WAITING_OPERATION) {\n      console.log(`recover Op state: ${recoveryOp.state}`);\n      switch (recoveryOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          // op being processed. do nothing.\n          break;\n        case operation_states.APPLIED:\n          setAccountStep(AccountSteps.OPERATION_APPLIED);\n          setRecoveryOpHash('');\n          break;\n        case operation_states.FAILED:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation could not be applied');\n          setRecoveryOpHash('');\n          break;\n        case operation_states.EXPIRED:\n          // operation did not get applied within time window. Abort and show error.\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation timed out');\n          setRecoveryOpHash('');\n          break;\n        default:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Unhandled operation state');\n          setRecoveryOpHash('');\n      }\n    }\n  }, [recoveryOp, accountStep]);\n\n  const skip = () => {\n    setPass('');\n    setDataStep(BackupSteps.SKIPPED);\n  };\n\n  const restoreBackup = async () => {\n    try {\n      console.log(`Starting restore backup`);\n      setDataStep(BackupSteps.RESTORING_DATA);\n      await dispatch(recoverData(pass, api, setTotalItems, setCurrentItem));\n      console.log(`Successfully restored backup`);\n      setDataStep(BackupSteps.COMPLETE);\n    } catch (err) {\n      let errorString = '';\n      if (err instanceof Error) {\n        errorString = `${err.name} - ${err.message}`;\n      } else {\n        errorString = `${err}`;\n      }\n      console.log(`Error during recover: ${errorString}`);\n      setDataStep(BackupSteps.ERROR);\n    }\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <KeyboardAvoidingView style={styles.container} behavior=\"position\">\n        <View style={styles.recoverAccountContainer}>\n          <RecoverAccount\n            currentStep={accountStep}\n            recoveredGroups={recoveredGroups}\n            recoveredConnections={recoveredConnections}\n            errorMessage={accountError}\n          />\n        </View>\n        <View style={styles.divider} />\n        <View style={styles.restoreBackupContainer}>\n          <RestoreBackup\n            currentStep={dataStep}\n            doRestore={restoreBackup}\n            doSkip={skip}\n            password={pass}\n            setPassword={setPass}\n            totalItems={totalItems}\n            currentItem={currentItem}\n          />\n        </View>\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK,\n  },\n  recoverAccountContainer: {\n    marginTop: DEVICE_LARGE ? 25 : 20,\n    minHeight: '25%',\n  },\n  restoreBackupContainer: {\n    height: '50%',\n  },\n});\n\nexport default RestoreScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}