{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport CryptoJS from 'crypto-js';\nimport { retrieveImage } from \"../../../../utils/filesystem\";\nimport backupApi from \"../../../../api/backupService\";\nimport { hash } from \"../../../../utils/encoding\";\nimport { selectAllConnections } from \"../../../../reducer/connectionsSlice\";\n\nvar hashId = function hashId(id, password) {\n  var h = hash(id + password);\n  return h;\n};\n\nexport var encryptAndBackup = function encryptAndBackup(key, data) {\n  return function _callee(_, getState) {\n    var _getState, _getState$user, id, password, hashedId, encrypted;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _getState = getState(), _getState$user = _getState.user, id = _getState$user.id, password = _getState$user.password;\n            hashedId = hashId(id, password);\n            _context.prev = 2;\n            encrypted = CryptoJS.AES.encrypt(data, password).toString();\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(backupApi.putRecovery(hashedId, key, encrypted));\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            _context.t0 instanceof Error ? console.warn(_context.t0.message) : console.warn(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 8]], Promise);\n  };\n};\nexport var backupPhoto = function backupPhoto(id, filename) {\n  return function _callee2(dispatch) {\n    var data;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(retrieveImage(filename));\n\n          case 3:\n            data = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(encryptAndBackup(id, data)));\n\n          case 6:\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.t0 instanceof Error ? console.warn(_context2.t0.message) : console.warn(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\n\nvar backupPhotos = function backupPhotos() {\n  return function _callee3(dispatch, getState) {\n    var _getState2, groups, _getState2$user, id, photo, connections, _iterator, _step, _item$photo, item, _iterator2, _step2, _item$photo2, _item;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _getState2 = getState(), groups = _getState2.groups.groups, _getState2$user = _getState2.user, id = _getState2$user.id, photo = _getState2$user.photo;\n            connections = selectAllConnections(getState());\n            _iterator = _createForOfIteratorHelperLoose(connections);\n\n          case 4:\n            if ((_step = _iterator()).done) {\n              _context3.next = 11;\n              break;\n            }\n\n            item = _step.value;\n\n            if (!((_item$photo = item.photo) != null && _item$photo.filename)) {\n              _context3.next = 9;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(item.id, item.photo.filename)));\n\n          case 9:\n            _context3.next = 4;\n            break;\n\n          case 11:\n            _iterator2 = _createForOfIteratorHelperLoose(groups);\n\n          case 12:\n            if ((_step2 = _iterator2()).done) {\n              _context3.next = 19;\n              break;\n            }\n\n            _item = _step2.value;\n\n            if (!((_item$photo2 = _item.photo) != null && _item$photo2.filename)) {\n              _context3.next = 17;\n              break;\n            }\n\n            _context3.next = 17;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(_item.id, _item.photo.filename)));\n\n          case 17:\n            _context3.next = 12;\n            break;\n\n          case 19:\n            _context3.next = 21;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(id, photo.filename)));\n\n          case 21:\n            _context3.next = 26;\n            break;\n\n          case 23:\n            _context3.prev = 23;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.t0 instanceof Error ? console.warn(_context3.t0.message) : console.warn(_context3.t0);\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 23]], Promise);\n  };\n};\n\nexport var backupUser = function backupUser() {\n  return function _callee4(dispatch, getState) {\n    var _getState3, _getState3$user, id, name, photo, groups, connections, userData, dataStr;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _getState3 = getState(), _getState3$user = _getState3.user, id = _getState3$user.id, name = _getState3$user.name, photo = _getState3$user.photo, groups = _getState3.groups.groups;\n            connections = selectAllConnections(getState());\n            userData = {\n              id: id,\n              name: name,\n              photo: photo\n            };\n            dataStr = JSON.stringify({\n              userData: userData,\n              connections: connections,\n              groups: groups\n            });\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(dispatch(encryptAndBackup('data', dataStr)));\n\n          case 7:\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            _context4.t0 instanceof Error ? console.warn(_context4.t0.message) : console.warn(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var backupAppData = function backupAppData() {\n  return function _callee5(dispatch) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(backupUser()));\n\n          case 3:\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(backupPhotos()));\n\n          case 5:\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            _context5.t0 instanceof Error ? console.warn(_context5.t0.message) : console.warn(_context5.t0);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var fetchBackupData = function _callee6(key, id, pass) {\n  var hashedId, res;\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          hashedId = hashId(id, pass);\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(backupApi.getRecovery(hashedId, key));\n\n        case 4:\n          res = _context6.sent;\n          return _context6.abrupt(\"return\", CryptoJS.AES.decrypt(res.data, pass).toString(CryptoJS.enc.Utf8));\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(\"Error while fetching backup data '\" + key + \"': \" + _context6.t0.message);\n\n          if (!(_context6.t0.message === 'CLIENT_ERROR')) {\n            _context6.next = 15;\n            break;\n          }\n\n          throw new Error('bad password');\n\n        case 15:\n          throw new Error('unknown error');\n\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};","map":{"version":3,"names":["CryptoJS","retrieveImage","backupApi","hash","selectAllConnections","hashId","id","password","h","encryptAndBackup","key","data","_","getState","user","hashedId","encrypted","AES","encrypt","toString","putRecovery","Error","console","warn","message","backupPhoto","filename","dispatch","backupPhotos","groups","photo","connections","item","backupUser","name","userData","dataStr","JSON","stringify","backupAppData","fetchBackupData","pass","getRecovery","res","decrypt","enc","Utf8","log"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/thunks/backupThunks.ts"],"sourcesContent":["import CryptoJS from 'crypto-js';\nimport { retrieveImage } from '@/utils/filesystem';\nimport backupApi from '@/api/backupService';\nimport { hash } from '@/utils/encoding';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\n\nconst hashId = (id: string, password: string) => {\n  const h = hash(id + password);\n  return h;\n};\n\nexport const encryptAndBackup = (key: string, data: string) => async (\n  _: dispatch,\n  getState: getState,\n) => {\n  const {\n    user: { id, password },\n  } = getState();\n  const hashedId = hashId(id, password);\n  try {\n    const encrypted = CryptoJS.AES.encrypt(data, password).toString();\n    await backupApi.putRecovery(hashedId, key, encrypted);\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const backupPhoto = (id: string, filename: string) => async (\n  dispatch: dispatch,\n) => {\n  try {\n    const data = await retrieveImage(filename);\n    await dispatch(encryptAndBackup(id, data));\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nconst backupPhotos = () => async (dispatch: dispatch, getState: getState) => {\n  try {\n    const {\n      groups: { groups },\n      user: { id, photo },\n    } = getState();\n    const connections = selectAllConnections(getState());\n    for (const item of connections) {\n      if (item.photo?.filename) {\n        await dispatch(backupPhoto(item.id, item.photo.filename));\n      }\n    }\n    for (const item of groups) {\n      if (item.photo?.filename) {\n        await dispatch(backupPhoto(item.id, item.photo.filename));\n      }\n    }\n    await dispatch(backupPhoto(id, photo.filename));\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const backupUser = () => async (\n  dispatch: dispatch,\n  getState: getState,\n) => {\n  try {\n    const {\n      user: { id, name, photo },\n      groups: { groups },\n    } = getState();\n    const connections = selectAllConnections(getState());\n\n    const userData = {\n      id,\n      name,\n      photo,\n    };\n\n    const dataStr = JSON.stringify({\n      userData,\n      connections,\n      groups,\n    });\n    await dispatch(encryptAndBackup('data', dataStr));\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const backupAppData = () => async (dispatch: dispatch) => {\n  try {\n    // backup user\n    await dispatch(backupUser());\n    // backup connection photos\n    await dispatch(backupPhotos());\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const fetchBackupData = async (\n  key: string,\n  id: string,\n  pass: string,\n) => {\n  try {\n    const hashedId = hashId(id, pass);\n    const res = await backupApi.getRecovery(hashedId, key);\n    return CryptoJS.AES.decrypt(res.data, pass).toString(CryptoJS.enc.Utf8);\n  } catch (err) {\n    console.log(`Error while fetching backup data '${key}': ${err.message}`);\n    if (err.message === 'CLIENT_ERROR') {\n      // Any 4xx http code will end up as CLIENT_ERROR\n      // We can not tell if\n      //  - the data has vanished by itself on the backup server or\n      //  - the user provided a wrong password (this will lead to trying non-existing file, as\n      //    the password hash is part of the filename).\n      // Assume user entered wrong password, hoping the backup server will never lose data.\n      throw new Error('bad password');\n    } else {\n      // TODO Better error handling\n      throw new Error('unknown error');\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}