{"ast":null,"code":"import { connection_levels } from \"./constants\";\nexport var types = {\n  byNameAscending: 'BY_NAME_ASCENDING',\n  byNameDescending: 'BY_NAME_DESCENDING',\n  byDateAddedAscending: 'BY_DATE_ADDED_ASCENDING',\n  byDateAddedDescending: 'BY_DATE_ADDED_DESCENDING',\n  byTrustLevelAscending: 'BY_TRUST_LEVEL_ASCENDING',\n  byTrustLevelDescending: 'BY_TRUST_LEVEL_DESCENDING'\n};\nvar trustLevels = Object.values(connection_levels);\n\nvar trustLevel = function trustLevel(level) {\n  return trustLevels.indexOf(level);\n};\n\nexport var sortConnectionsBy = function sortConnectionsBy(connectionsSort) {\n  switch (connectionsSort) {\n    case types.byNameAscending:\n      return function (a, b) {\n        return b.name.localeCompare(a.name);\n      };\n\n    case types.byNameDescending:\n      return function (a, b) {\n        return a.name.localeCompare(b.name);\n      };\n\n    case types.byDateAddedAscending:\n      return function (a, b) {\n        return a.connectionDate - b.connectionDate;\n      };\n\n    case types.byDateAddedDescending:\n      return function (a, b) {\n        return b.connectionDate - a.connectionDate;\n      };\n\n    case types.byTrustLevelAscending:\n      return function (a, b) {\n        return trustLevel(a.level) - trustLevel(b.level);\n      };\n\n    case types.byTrustLevelDescending:\n      return function (a, b) {\n        return trustLevel(b.level) - trustLevel(a.level);\n      };\n\n    default:\n      return function (a, b) {\n        return b.connectionDate - a.connectionDate;\n      };\n  }\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/sorting.ts"],"names":["types","byNameAscending","byNameDescending","byDateAddedAscending","byDateAddedDescending","byTrustLevelAscending","byTrustLevelDescending","trustLevels","Object","trustLevel","sortConnectionsBy","b","a"],"mappings":"AAAA,SAAA,iBAAA;AAEA,OAAO,IAAMA,KAAK,GAAG;EACnBC,eAAe,EADI,mBAAA;EAEnBC,gBAAgB,EAFG,oBAAA;EAGnBC,oBAAoB,EAHD,yBAAA;EAInBC,qBAAqB,EAJF,0BAAA;EAKnBC,qBAAqB,EALF,0BAAA;EAMnBC,sBAAsB,EANjB;AAAc,CAAd;AAUP,IAAMC,WAAW,GAAGC,MAAM,CAANA,MAAAA,CAApB,iBAAoBA,CAApB;;AAEA,IAAMC,UAAU,GAAVA,SAAAA,UAAAA,CAAa,KAAbA,EAAa;EAAA,OAAWF,WAAW,CAAXA,OAAAA,CAAX,KAAWA,CAAX;AAAnB,CAAA;;AAEA,OAAO,IAAMG,iBAEgC,GAFhCA,SAAAA,iBAAAA,CAEmC,eAFnCA,EAIR;EACH,QAAA,eAAA;IACE,KAAKV,KAAK,CAAV,eAAA;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUW,CAAC,CAADA,IAAAA,CAAAA,aAAAA,CAAqBC,CAAC,CAAhC,IAAUD,CAAV;MAAP,CAAA;;IAEF,KAAKX,KAAK,CAAV,gBAAA;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUY,CAAC,CAADA,IAAAA,CAAAA,aAAAA,CAAqBD,CAAC,CAAhC,IAAUC,CAAV;MAAP,CAAA;;IAEF,KAAKZ,KAAK,CAAV,oBAAA;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUY,CAAC,CAADA,cAAAA,GAAmBD,CAAC,CAA9B,cAAA;MAAP,CAAA;;IAEF,KAAKX,KAAK,CAAV,qBAAA;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUW,CAAC,CAADA,cAAAA,GAAmBC,CAAC,CAA9B,cAAA;MAAP,CAAA;;IAEF,KAAKZ,KAAK,CAAV,qBAAA;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUS,UAAU,CAACG,CAAC,CAAZH,KAAU,CAAVA,GAAsBA,UAAU,CAACE,CAAC,CAA5C,KAA0C,CAA1C;MAAP,CAAA;;IAEF,KAAKX,KAAK,CAAV,sBAAA;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUS,UAAU,CAACE,CAAC,CAAZF,KAAU,CAAVA,GAAsBA,UAAU,CAACG,CAAC,CAA5C,KAA0C,CAA1C;MAAP,CAAA;;IAEF;MACE,OAAO,UAAA,CAAA,EAAA,CAAA,EAAA;QAAA,OAAUD,CAAC,CAADA,cAAAA,GAAmBC,CAAC,CAA9B,cAAA;MApBX,CAoBI;EApBJ;AALK,CAAA","sourcesContent":["import { connection_levels } from './constants';\n\nexport const types = {\n  byNameAscending: 'BY_NAME_ASCENDING',\n  byNameDescending: 'BY_NAME_DESCENDING',\n  byDateAddedAscending: 'BY_DATE_ADDED_ASCENDING',\n  byDateAddedDescending: 'BY_DATE_ADDED_DESCENDING',\n  byTrustLevelAscending: 'BY_TRUST_LEVEL_ASCENDING',\n  byTrustLevelDescending: 'BY_TRUST_LEVEL_DESCENDING',\n} as const;\n\ntype SortTypes = typeof types[keyof typeof types];\nconst trustLevels = Object.values(connection_levels);\n\nconst trustLevel = (level) => trustLevels.indexOf(level);\n\nexport const sortConnectionsBy: (\n  connectionsSort: SortTypes,\n) => (a: Connection, b: Connection) => number = (\n  connectionsSort: SortTypes,\n) => {\n  switch (connectionsSort) {\n    case types.byNameAscending:\n      return (a, b) => b.name.localeCompare(a.name);\n\n    case types.byNameDescending:\n      return (a, b) => a.name.localeCompare(b.name);\n\n    case types.byDateAddedAscending:\n      return (a, b) => a.connectionDate - b.connectionDate;\n\n    case types.byDateAddedDescending:\n      return (a, b) => b.connectionDate - a.connectionDate;\n\n    case types.byTrustLevelAscending:\n      return (a, b) => trustLevel(a.level) - trustLevel(b.level);\n\n    case types.byTrustLevelDescending:\n      return (a, b) => trustLevel(b.level) - trustLevel(a.level);\n\n    default:\n      return (a, b) => b.connectionDate - a.connectionDate;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}