{"ast":null,"code":"(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1;\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    }\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    }\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    if (currentlyRunningATask) {\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  }\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    installReadyStateChangeImplementation();\n  } else {\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/setimmediate/setImmediate.js"],"names":["global","nextHandle","tasksByHandle","currentlyRunningATask","doc","callback","args","arguments","i","task","registerImmediate","setTimeout","run","clearImmediate","process","runIfPresent","postMessageIsAsynchronous","oldOnMessage","messagePrefix","Math","onGlobalMessage","event","channel","handle","html","script","attachTo","Object","installNextTickImplementation","canUsePostMessage","installPostMessageImplementation","installMessageChannelImplementation","installReadyStateChangeImplementation","installSetTimeoutImplementation"],"mappings":"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","sourcesContent":["(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n"]},"metadata":{},"sourceType":"script"}