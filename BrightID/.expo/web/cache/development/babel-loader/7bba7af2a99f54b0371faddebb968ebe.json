{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport conditional from \"../utils/conditional\";\nvar add = Animated.add,\n    multiply = Animated.multiply;\nexport function forHorizontalIOS(_ref) {\n  var current = _ref.current,\n      next = _ref.next,\n      inverted = _ref.inverted,\n      screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: translateFocused\n      }, {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\nexport function forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n      inverted = _ref2.inverted,\n      screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n      current = _ref3.current,\n      next = _ref3.next,\n      inverted = _ref3.inverted,\n      screen = _ref3.layouts.screen,\n      insets = _ref3.insets;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, index === 0 ? 0 : topOffset, (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : index === 0 ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, isIphoneX() ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n      inverted = _ref4.inverted,\n      screen = _ref4.layouts.screen,\n      closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n      next = _ref5.next,\n      inverted = _ref5.inverted,\n      screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n      next = _ref6.next,\n      closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  var scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.9, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.1]\n  }));\n  return {\n    containerStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"sources":["CardStyleInterpolators.tsx"],"names":["add","multiply","Animated","current","next","inverted","layouts","screen","translateFocused","inputRange","outputRange","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","translateY","index","insets","isLandscape","topOffset","statusBarHeight","aspectRatio","progress","scale","borderRadius","isIphoneX","overflow","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","closing","conditional","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle"],"mappings":"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","sourcesContent":["import { Animated } from 'react-native';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport conditional from '../utils/conditional';\nimport type {\n  StackCardInterpolationProps,\n  StackCardInterpolatedStyle,\n} from '../types';\n\nconst { add, multiply } = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.width, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const translateUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.width * -0.3],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateX: translateFocused },\n        // Translation for the animation of the card on top of this\n        { translateX: translateUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n    shadowStyle: { shadowOpacity },\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS({\n  current,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateY },\n      ],\n    },\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS({\n  index,\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n  insets,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateY = multiply(\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [\n        screen.height,\n        index === 0 ? 0 : topOffset,\n        (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio,\n      ],\n    }),\n    inverted\n  );\n\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1],\n  });\n\n  const scale = isLandscape\n    ? 1\n    : progress.interpolate({\n        inputRange: [0, 1, 2],\n        outputRange: [\n          1,\n          1,\n          screen.width ? 1 - (topOffset * 2) / screen.width : 1,\n        ],\n      });\n\n  const borderRadius = isLandscape\n    ? 0\n    : index === 0\n    ? progress.interpolate({\n        inputRange: [0, 1, 1.0001, 2],\n        outputRange: [0, 0, isIphoneX() ? 38 : 0, 10],\n      })\n    : 10;\n\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{ translateY }, { scale }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.08, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 0.5, 0.9, 1],\n      outputRange: [0, 0.25, 0.7, 1],\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const containerTranslateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * (95.9 / 100) * -1, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.height * (2 / 100) * -1],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{ translateY: containerTranslateY }],\n    },\n    cardStyle: {\n      transform: [\n        { translateY: cardTranslateYFocused },\n        { translateY: cardTranslateYUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Q.\n */\nexport function forScaleFromCenterAndroid({\n  current,\n  next,\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0],\n  });\n\n  const scale = conditional(\n    closing,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.9, 1],\n      extrapolate: 'clamp',\n    }),\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [0.85, 1, 1.1],\n    })\n  );\n\n  return {\n    containerStyle: {\n      opacity,\n      transform: [{ scale }],\n    },\n  };\n}\n\nexport function forNoAnimation(): StackCardInterpolatedStyle {\n  return {};\n}\n"]},"metadata":{},"sourceType":"module"}