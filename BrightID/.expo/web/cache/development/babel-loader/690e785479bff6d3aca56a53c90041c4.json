{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnimatedParam = void 0;\nexports.createAnimatedParam = createAnimatedParam;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _AnimatedNode2 = _interopRequireWildcard(require(\"./AnimatedNode\"));\n\nvar _AnimatedClock = _interopRequireDefault(require(\"./AnimatedClock\"));\n\nvar _val = require(\"../val\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AnimatedParam = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedParam, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedParam);\n\n  function AnimatedParam() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedParam);\n    _this = _super.call(this, {\n      type: 'param'\n    }, []);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"argsStack\", []);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_prevCallID\", void 0);\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedParam, [{\n    key: \"beginContext\",\n    value: function beginContext(ref, prevCallID) {\n      this._prevCallID = prevCallID;\n      this.argsStack.push(ref);\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this.argsStack.pop();\n    }\n  }, {\n    key: \"_getTopNode\",\n    value: function _getTopNode() {\n      if (this.argsStack.length === 0) throw new Error(\"param: Invocation failed because argsStack is empty\");\n      var top = this.argsStack[this.argsStack.length - 1];\n      return top;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var top = this._getTopNode();\n\n      if (top.setValue) {\n        var callID = (0, _AnimatedNode2.getCallID)();\n        (0, _AnimatedNode2.setCallID)(this._prevCallID);\n        top.setValue(value);\n        (0, _AnimatedNode2.setCallID)(callID);\n      } else {\n        throw new Error(\"param: setValue(\".concat(value, \") failed because the top element has no known method for updating it's current value.\"));\n      }\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var callID = (0, _AnimatedNode2.getCallID)();\n      (0, _AnimatedNode2.setCallID)(this._prevCallID);\n\n      var top = this._getTopNode();\n\n      var value = (0, _val.val)(top);\n      (0, _AnimatedNode2.setCallID)(callID);\n      return value;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var node = this._getTopNode();\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \".concat(node));\n      node.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var node = this._getTopNode();\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \".concat(node));\n      node.stop();\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var node = this._getTopNode();\n\n      if (node instanceof AnimatedParam) {\n        return node.isRunning();\n      }\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default, \"param: top node should be of type AnimatedClock but got \".concat(node));\n      return node.isStarted();\n    }\n  }]);\n  return AnimatedParam;\n}(_AnimatedNode2.default);\n\nexports.AnimatedParam = AnimatedParam;\n\nfunction createAnimatedParam() {\n  return new AnimatedParam();\n}","map":{"version":3,"sources":["AnimatedParam.js"],"names":["constructor","type","beginContext","endContext","_getTopNode","top","setValue","callID","setCallID","__onEvaluate","value","val","start","node","invariant","stop","isRunning"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;IAEO,a;;;;;EAILA,yBAAc;IAAA;;IAAA;IACZ,0BAAM;MAAEC,IAAI,EAAE;IAAR,CAAN,EAAA,EAAA;;IADY,eAAA,8CAAA,WAAA,EAHF,EAGE,CAAA;;IAAA,eAAA,8CAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;IAEZ,MAAA,QAAA;;IAFY;EAGb;;;;WAEDC,sBAAY,GAAZA,EAAY,UAAZA,EAA8B;MAC5B,KAAA,WAAA,GAAA,UAAA;MACA,KAAA,SAAA,CAAA,IAAA,CAAA,GAAA;IACD;;;WAEDC,sBAAa;MACX,KAAA,SAAA,CAAA,GAAA;IACD;;;WAEDC,uBAAc;MACZ,IAAI,KAAA,SAAA,CAAA,MAAA,KAAJ,CAAA,EAAiC,MAAM,IAAA,KAAA,CAAN,qDAAM,CAAN;MACjC,IAAMC,GAAG,GAAG,KAAA,SAAA,CAAe,KAAA,SAAA,CAAA,MAAA,GAA3B,CAAY,CAAZ;MACA,OAAA,GAAA;IACD;;;WAEDC,kBAAQ,KAARA,EAAgB;MACd,IAAMD,GAAG,GAAG,KAAZ,WAAY,EAAZ;;MACA,IAAIA,GAAG,CAAP,QAAA,EAAkB;QAChB,IAAME,MAAM,GAAZ,IAAA,wBAAA,GAAA;QACAC,IAAAA,wBAAAA,EAAU,KAAVA,WAAAA;QACAH,GAAG,CAAHA,QAAAA,CAAAA,KAAAA;QACAG,IAAAA,wBAAAA,EAAAA,MAAAA;MAJF,CAAA,MAKO;QACL,MAAM,IAAA,KAAA,CAAA,mBAAA,MAAA,CAAA,KAAA,EAAN,uFAAM,CAAA,CAAN;MACD;IACF;;;WAEDC,wBAAe;MACb,IAAMF,MAAM,GAAZ,IAAA,wBAAA,GAAA;MACAC,IAAAA,wBAAAA,EAAU,KAAVA,WAAAA;;MACA,IAAMH,GAAG,GAAG,KAAZ,WAAY,EAAZ;;MACA,IAAMK,KAAK,GAAGC,IAAAA,QAAAA,EAAd,GAAcA,CAAd;MACAH,IAAAA,wBAAAA,EAAAA,MAAAA;MACA,OAAA,KAAA;IACD;;;WAEDI,iBAAQ;MACN,IAAMC,IAAI,GAAG,KAAb,WAAa,EAAb;;MACAC,IAAAA,kBAAAA,EACED,IAAI,YAAJA,sBAAAA,IAAiCA,IAAI,YAD9B,aAATC,EAAS,2DAAA,MAAA,CAATA,IAAS,CAATA;MAIAD,IAAI,CAAJA,KAAAA;IACD;;;WAEDE,gBAAO;MACL,IAAMF,IAAI,GAAG,KAAb,WAAa,EAAb;;MACAC,IAAAA,kBAAAA,EACED,IAAI,YAAJA,sBAAAA,IAAiCA,IAAI,YAD9B,aAATC,EAAS,2DAAA,MAAA,CAATA,IAAS,CAATA;MAIAD,IAAI,CAAJA,IAAAA;IACD;;;WAEDG,qBAAY;MACV,IAAMH,IAAI,GAAG,KAAb,WAAa,EAAb;;MAEA,IAAIA,IAAI,YAAR,aAAA,EAAmC;QACjC,OAAOA,IAAI,CAAX,SAAOA,EAAP;MACD;;MACDC,IAAAA,kBAAAA,EACED,IAAI,YADG,sBAATC,EAAS,2DAAA,MAAA,CAATA,IAAS,CAATA;MAIA,OAAOD,IAAI,CAAX,SAAOA,EAAP;IACD;;;EA1EI,sB;;;;AA6EA,SAAA,mBAAA,GAA+B;EACpC,OAAO,IAAP,aAAO,EAAP;AACD","sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport AnimatedClock from './AnimatedClock';\nimport { val } from '../val';\n\nexport class AnimatedParam extends AnimatedNode {\n  argsStack = [];\n  _prevCallID;\n  \n  constructor() {\n    super({ type: 'param' }, []);\n    this.__attach();\n  }\n\n  beginContext(ref, prevCallID) {\n    this._prevCallID = prevCallID;\n    this.argsStack.push(ref);\n  }\n\n  endContext() {\n    this.argsStack.pop();\n  }\n\n  _getTopNode() {\n    if (this.argsStack.length === 0) throw new Error(`param: Invocation failed because argsStack is empty`);\n    const top = this.argsStack[this.argsStack.length - 1];\n    return top;\n  }\n\n  setValue(value) {\n    const top = this._getTopNode();\n    if (top.setValue) {\n      const callID = getCallID();\n      setCallID(this._prevCallID);\n      top.setValue(value);\n      setCallID(callID);\n    } else {\n      throw new Error(`param: setValue(${value}) failed because the top element has no known method for updating it's current value.`)\n    }\n  }\n  \n  __onEvaluate() {\n    const callID = getCallID();\n    setCallID(this._prevCallID);\n    const top = this._getTopNode();\n    const value = val(top);\n    setCallID(callID);\n    return value;\n  }\n\n  start() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.start();\n  }\n\n  stop() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.stop();\n  }\n\n  isRunning() {\n    const node = this._getTopNode();\n\n    if (node instanceof AnimatedParam) {\n      return node.isRunning()\n    }\n    invariant(\n      node instanceof AnimatedClock,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    return node.isStarted();\n  }\n}\n\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}\n"]},"metadata":{},"sourceType":"script"}