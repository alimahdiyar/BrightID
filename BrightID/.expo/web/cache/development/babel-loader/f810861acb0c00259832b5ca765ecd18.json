{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NewGroupScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _store = _interopRequireWildcard(require(\"../../../store\"));\n\nvar _colors = require(\"../../../theme/colors\");\n\nvar _deviceConstants = require(\"../../../utils/deviceConstants\");\n\nvar _fonts = require(\"../../../theme/fonts\");\n\nvar _NodeApiGate = require(\"../../NodeApiGate\");\n\nvar _actions = require(\"../actions\");\n\nvar _NewGroupCard = require(\"./NewGroupCard\");\n\nvar _connectionsSelector = require(\"../../../utils/connectionsSelector\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/NewGroups/NewGroupScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar ITEM_HEIGHT = _deviceConstants.DEVICE_LARGE ? 94 : 80;\nvar ITEM_MARGIN = _deviceConstants.DEVICE_LARGE ? 11.8 : 6;\n\nvar getItemLayout = function getItemLayout(data, index) {\n  return {\n    length: ITEM_HEIGHT + ITEM_MARGIN,\n    offset: (ITEM_HEIGHT + ITEM_MARGIN) * index,\n    index: index\n  };\n};\n\nvar creationStateStrings = {\n  uploadingGroupPhoto: _i18next.default.t('groups.state.uploadingGroupPhoto', 'uploading group photo…'),\n  creatingGroup: _i18next.default.t('groups.state.creatingGroup', 'creating the group…')\n};\n\nvar NewGroupScreen = function NewGroupScreen() {\n  var api = (0, React.useContext)(_NodeApiGate.NodeApiContext);\n  var navigation = (0, _native.useNavigation)();\n  var route = (0, _native.useRoute)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useState = (0, React.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      creating = _useState2[0],\n      setCreating = _useState2[1];\n\n  var _useState3 = (0, React.useState)('uploadingGroupPhoto'),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      creationState = _useState4[0],\n      setCreationState = _useState4[1];\n\n  var connections = (0, _store.useSelector)(function (state) {\n    return (0, _connectionsSelector.connectionsSelector)(state, []);\n  });\n\n  var _useState5 = (0, React.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      newGroupInvitees = _useState6[0],\n      setNewGroupInvitees = _useState6[1];\n\n  var createGroup = function _callee() {\n    var _route$params, photo, name, res;\n\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setCreating(true);\n            _route$params = route.params, photo = _route$params.photo, name = _route$params.name;\n            _context.next = 5;\n            return _regenerator.default.awrap(_store.default.dispatch((0, _actions.createNewGroup)(photo, name, api, newGroupInvitees, setCreationState)));\n\n          case 5:\n            res = _context.sent;\n\n            if (res) {\n              navigation.navigate('Groups');\n            } else {\n              setCreating(false);\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setCreating(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var cardIsSelected = function cardIsSelected(connection) {\n    return newGroupInvitees.includes(connection.id);\n  };\n\n  var toggleNewGroupInvitee = function toggleNewGroupInvitee(id) {\n    var invitees = (0, _toConsumableArray2.default)(newGroupInvitees);\n    var index = invitees.indexOf(id);\n\n    if (index >= 0) {\n      invitees.splice(index, 1);\n    } else {\n      invitees.push(id);\n    }\n\n    setNewGroupInvitees(invitees);\n  };\n\n  var renderConnection = function renderConnection(_ref) {\n    var item = _ref.item;\n    return React.createElement(_NewGroupCard.NewGroupCard, {\n      id: item.id,\n      connectionDate: item.connectionDate,\n      name: item.name,\n      photo: item.photo,\n      selected: cardIsSelected(item),\n      toggleInvitee: toggleNewGroupInvitee,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var renderButtonOrSpinner = function renderButtonOrSpinner() {\n    var skip = newGroupInvitees.length < 1;\n    return !creating ? React.createElement(_reactNative.View, {\n      style: styles.createGroupButtonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, React.createElement(_reactNative.TouchableOpacity, {\n      testID: \"createNewGroupBtn\",\n      onPress: createGroup,\n      style: skip ? (0, _extends2.default)({}, styles.createGroupButton, styles.skipButton) : styles.createGroupButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, React.createElement(_reactNative.Text, {\n      style: styles.buttonInnerText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, skip ? t('createGroup.button.skip') : t('createGroup.button.createGroup')))) : React.createElement(_reactNative.View, {\n      style: styles.loader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, React.createElement(_reactNative.Text, {\n      style: styles.textInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, creationStateStrings[creationState]), React.createElement(_reactNativeSpinkit.default, {\n      isVisible: true,\n      size: 97,\n      type: \"Wave\",\n      color: _colors.BLUE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(_reactNative.View, {\n    style: styles.orangeTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    testID: \"newGroupScreen\",\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, React.createElement(_reactNative.Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, t('createGroup.label.invitees')), React.createElement(_reactNative.Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, t('createGroup.text.invitees'))), React.createElement(_reactNative.View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, connections.length > 0 ? React.createElement(_reactNative.FlatList, {\n    extraData: newGroupInvitees,\n    style: styles.connectionsContainer,\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: connections,\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var id = _ref2.id;\n      return id + index;\n    },\n    renderItem: renderConnection,\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    getItemLayout: getItemLayout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }) : React.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, React.createElement(_reactNative.Text, {\n    style: styles.emptyText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, t('createGroup.text.noConnections'))))), renderButtonOrSpinner()));\n};\n\nexports.NewGroupScreen = NewGroupScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  orangeTop: {\n    backgroundColor: _colors.ORANGE,\n    height: _deviceConstants.DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    marginTop: 8,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '96.7%',\n    borderTopWidth: 1,\n    borderTopColor: _colors.LIGHT_GREY\n  },\n  emptyText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: _fonts.fontSize[20]\n  },\n  moreIcon: {\n    marginRight: 16\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    backgroundColor: _colors.WHITE,\n    width: '96.7%',\n    marginBottom: _deviceConstants.DEVICE_TYPE === 'large' ? 11 : 0\n  },\n  titleText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: _fonts.fontSize[18],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'left',\n    textShadowColor: 'rgba(0, 0, 0, 0.09)',\n    textShadowOffset: {\n      width: 0,\n      height: 2\n    },\n    textShadowRadius: 4,\n    marginBottom: 6\n  },\n  infoText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: _fonts.fontSize[14],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'center'\n  },\n  createGroupButtonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  createGroupButton: {\n    backgroundColor: _colors.BLUE,\n    width: 300,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 13,\n    paddingBottom: 12,\n    marginBottom: _deviceConstants.DEVICE_TYPE === 'large' ? 30 : 25\n  },\n  skipButton: {\n    backgroundColor: _colors.BLUE\n  },\n  buttonInnerText: {\n    fontFamily: 'ApexNew-Medium',\n    color: _colors.WHITE,\n    fontWeight: '600',\n    fontSize: _fonts.fontSize[18]\n  },\n  textInfo: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: _fonts.fontSize[18],\n    margin: 18\n  },\n  loader: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  }\n});","map":{"version":3,"names":["ITEM_HEIGHT","DEVICE_LARGE","ITEM_MARGIN","getItemLayout","data","index","length","offset","creationStateStrings","uploadingGroupPhoto","i18next","t","creatingGroup","NewGroupScreen","api","useContext","NodeApiContext","navigation","useNavigation","route","useRoute","useTranslation","useState","creating","setCreating","creationState","setCreationState","connections","useSelector","state","connectionsSelector","newGroupInvitees","setNewGroupInvitees","createGroup","params","photo","name","store","dispatch","createNewGroup","res","navigate","cardIsSelected","connection","includes","id","toggleNewGroupInvitee","invitees","indexOf","splice","push","renderConnection","item","connectionDate","renderButtonOrSpinner","skip","styles","createGroupButtonContainer","createGroupButton","skipButton","buttonInnerText","loader","textInfo","BLUE","orangeTop","container","mainContainer","titleContainer","titleText","infoText","connectionsContainer","paddingBottom","flexGrow","emptyText","StyleSheet","create","backgroundColor","ORANGE","height","width","zIndex","flex","WHITE","borderTopLeftRadius","marginTop","overflow","justifyContent","alignItems","borderTopWidth","borderTopColor","LIGHT_GREY","fontFamily","fontSize","moreIcon","marginRight","marginBottom","DEVICE_TYPE","fontWeight","fontStyle","letterSpacing","textAlign","textShadowColor","textShadowOffset","textShadowRadius","paddingTop","color","margin"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/NewGroups/NewGroupScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  FlatList,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport Spinner from 'react-native-spinkit';\nimport i18next from 'i18next';\nimport { useContext, useState } from 'react';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport store, { useSelector } from '@/store';\nimport { BLUE, LIGHT_GREY, ORANGE, WHITE } from '@/theme/colors';\nimport { DEVICE_LARGE, DEVICE_TYPE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { createNewGroup } from '../actions';\nimport { NewGroupCard } from './NewGroupCard';\nimport { connectionsSelector } from '@/utils/connectionsSelector';\n\nconst ITEM_HEIGHT = DEVICE_LARGE ? 94 : 80;\nconst ITEM_MARGIN = DEVICE_LARGE ? 11.8 : 6;\n\nconst getItemLayout = (data, index) => ({\n  length: ITEM_HEIGHT + ITEM_MARGIN,\n  offset: (ITEM_HEIGHT + ITEM_MARGIN) * index,\n  index,\n});\n\nconst creationStateStrings = {\n  uploadingGroupPhoto: i18next.t(\n    'groups.state.uploadingGroupPhoto',\n    'uploading group photo…',\n  ),\n  creatingGroup: i18next.t('groups.state.creatingGroup', 'creating the group…'),\n};\n\nexport const NewGroupScreen = () => {\n  const api = useContext(NodeApiContext);\n  const navigation = useNavigation();\n  const route = useRoute() as {\n    params?: { photo: string; name: string };\n  };\n  const { t } = useTranslation();\n  const [creating, setCreating] = useState(false);\n  const [creationState, setCreationState] = useState('uploadingGroupPhoto');\n  const connections = useSelector((state) => connectionsSelector(state, []));\n  const [newGroupInvitees, setNewGroupInvitees] = useState<Array<string>>([]);\n\n  const createGroup = async () => {\n    try {\n      setCreating(true);\n      const { photo, name } = route.params;\n      const res = await store.dispatch(\n        createNewGroup(photo, name, api, newGroupInvitees, setCreationState),\n      );\n      if (res) {\n        navigation.navigate('Groups');\n      } else {\n        setCreating(false);\n      }\n    } catch (err) {\n      setCreating(false);\n    }\n  };\n\n  const cardIsSelected = (connection: Connection) => {\n    return newGroupInvitees.includes(connection.id);\n  };\n\n  const toggleNewGroupInvitee = (id: string) => {\n    const invitees = [...newGroupInvitees];\n    const index = invitees.indexOf(id);\n    if (index >= 0) {\n      invitees.splice(index, 1);\n    } else {\n      invitees.push(id);\n    }\n    setNewGroupInvitees(invitees);\n  };\n\n  const renderConnection = ({ item }: { item: Connection }) => (\n    <NewGroupCard\n      id={item.id}\n      connectionDate={item.connectionDate}\n      name={item.name}\n      photo={item.photo}\n      selected={cardIsSelected(item)}\n      toggleInvitee={toggleNewGroupInvitee}\n    />\n  );\n\n  const renderButtonOrSpinner = () => {\n    const skip = newGroupInvitees.length < 1;\n    return !creating ? (\n      <View style={styles.createGroupButtonContainer}>\n        <TouchableOpacity\n          testID=\"createNewGroupBtn\"\n          onPress={createGroup}\n          style={\n            skip\n              ? { ...styles.createGroupButton, ...styles.skipButton }\n              : styles.createGroupButton\n          }\n        >\n          <Text style={styles.buttonInnerText}>\n            {skip\n              ? t('createGroup.button.skip')\n              : t('createGroup.button.createGroup')}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    ) : (\n      <View style={styles.loader}>\n        <Text style={styles.textInfo}>\n          {creationStateStrings[creationState]}\n        </Text>\n        <Spinner isVisible={true} size={97} type=\"Wave\" color={BLUE} />\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <View style={styles.container}>\n        <View testID=\"newGroupScreen\" style={styles.mainContainer}>\n          <View style={styles.titleContainer}>\n            <Text style={styles.titleText}>\n              {t('createGroup.label.invitees')}\n            </Text>\n            <Text style={styles.infoText}>\n              {t('createGroup.text.invitees')}\n            </Text>\n          </View>\n          <View style={styles.mainContainer}>\n            {connections.length > 0 ? (\n              <FlatList\n                extraData={newGroupInvitees}\n                style={styles.connectionsContainer}\n                contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n                data={connections}\n                keyExtractor={({ id }, index) => id + index}\n                renderItem={renderConnection}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n                getItemLayout={getItemLayout}\n              />\n            ) : (\n              <View>\n                <Text style={styles.emptyText}>\n                  {t('createGroup.text.noConnections')}\n                </Text>\n              </View>\n            )}\n          </View>\n        </View>\n        {renderButtonOrSpinner()}\n      </View>\n    </>\n  );\n};\n\n/*\nexport class NewGroupScreen_ extends React.Component {\n  // make api available through this.context\n  static contextType = NodeApiContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      creationState: 'uploadingGroupPhoto',\n    };\n  }\n\n  componentDidMount() {\n    const { navigation, dispatch } = this.props;\n    navigation.addListener('focus', () => {\n      emitter.on('creatingGroupChannel', this.updateCreationState);\n    });\n    navigation.addListener('blur', () => {\n      dispatch(clearNewGroupInvitees());\n      emitter.off('creatingGroupChannel', this.updateCreationState);\n    });\n  }\n\n  updateCreationState = (creationState) => {\n    this.setState({ creationState });\n  };\n\n  cardIsSelected = (card) => {\n    const { newGroupInvitees } = this.props;\n    return newGroupInvitees.includes(card.id);\n  };\n\n  createGroup = async () => {\n    try {\n      this.setState({ creating: true });\n      const api = this.context;\n      const { route, navigation } = this.props;\n      const { photo, name } = route.params;\n      const res = await store.dispatch(createNewGroup(photo, name, api));\n      if (res) {\n        navigation.navigate('Groups');\n      } else {\n        this.setState({ creating: false });\n      }\n    } catch (err) {\n      this.setState({ creating: false });\n    }\n  };\n\n  renderButtonOrSpinner = () => {\n    const { t } = this.props;\n    const skip = this.props.newGroupInvitees.length < 1;\n    return !this.state.creating ? (\n      <View style={styles.createGroupButtonContainer}>\n        <TouchableOpacity\n          testID=\"createNewGroupBtn\"\n          onPress={this.createGroup}\n          style={\n            skip\n              ? { ...styles.createGroupButton, ...styles.skipButton }\n              : styles.createGroupButton\n          }\n        >\n          <Text style={styles.buttonInnerText}>\n            {skip\n              ? t('createGroup.button.skip')\n              : t('createGroup.button.createGroup')}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    ) : (\n      <View style={styles.loader}>\n        <Text style={styles.textInfo}>\n          {creationStateStrings[this.state.creationState]}\n        </Text>\n        <Spinner isVisible={true} size={97} type=\"Wave\" color={BLUE} />\n      </View>\n    );\n  };\n\n  renderConnection = ({ item }) => (\n    <NewGroupCard\n      {...item}\n      selected={this.cardIsSelected(item)}\n      groups={true}\n      style={styles.connectionCard}\n    />\n  );\n\n  render() {\n    const { t, connections } = this.props;\n\n    return (\n      <>\n        <View style={styles.orangeTop} />\n        <View style={styles.container}>\n          <View testID=\"newGroupScreen\" style={styles.mainContainer}>\n            <View style={styles.titleContainer}>\n              <Text style={styles.titleText}>\n                {t('createGroup.label.invitees')}\n              </Text>\n              <Text style={styles.infoText}>\n                {t('createGroup.text.invitees')}\n              </Text>\n            </View>\n            <View style={styles.mainContainer}>\n              {connections.length > 0 ? (\n                <FlatList\n                  style={styles.connectionsContainer}\n                  contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n                  data={connections}\n                  keyExtractor={({ id }, index) => id + index}\n                  renderItem={this.renderConnection}\n                  showsHorizontalScrollIndicator={false}\n                  showsVerticalScrollIndicator={false}\n                  getItemLayout={getItemLayout}\n                />\n              ) : (\n                <View>\n                  <Text style={styles.emptyText}>\n                    {t('createGroup.text.noConnections')}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </View>\n          {this.renderButtonOrSpinner()}\n        </View>\n      </>\n    );\n  }\n}\n\n */\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  mainContainer: {\n    marginTop: 8,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '96.7%',\n    borderTopWidth: 1,\n    borderTopColor: LIGHT_GREY,\n  },\n  emptyText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20],\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    backgroundColor: WHITE,\n    width: '96.7%',\n\n    marginBottom: DEVICE_TYPE === 'large' ? 11 : 0,\n  },\n  titleText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'left',\n    textShadowColor: 'rgba(0, 0, 0, 0.09)',\n    textShadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    textShadowRadius: 4,\n    marginBottom: 6,\n  },\n  infoText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[14],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n    textAlign: 'center',\n  },\n  createGroupButtonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  createGroupButton: {\n    backgroundColor: BLUE,\n    width: 300,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 13,\n    paddingBottom: 12,\n    marginBottom: DEVICE_TYPE === 'large' ? 30 : 25,\n  },\n  skipButton: {\n    backgroundColor: BLUE,\n  },\n  buttonInnerText: {\n    fontFamily: 'ApexNew-Medium',\n    color: WHITE,\n    fontWeight: '600',\n    fontSize: fontSize[18],\n  },\n  textInfo: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    margin: 18,\n  },\n  loader: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}