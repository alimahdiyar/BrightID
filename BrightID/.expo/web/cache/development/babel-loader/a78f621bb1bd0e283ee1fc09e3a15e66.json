{"ast":null,"code":"'use strict';\n\nmodule.exports = function (string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/@react-navigation/core/node_modules/escape-string-regexp/index.js"],"names":["module","string"],"mappings":"AAAA;;AAEAA,MAAM,CAANA,OAAAA,GAAiB,UAAA,MAAA,EAAU;EAC1B,IAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;IAC/B,MAAM,IAAA,SAAA,CAAN,mBAAM,CAAN;EAKD;;EAAA,OAAOC,MAAM,CAANA,OAAAA,CAAAA,qBAAAA,EAAAA,MAAAA,EAAAA,OAAAA,CAAAA,IAAAA,EAAP,OAAOA,CAAP;AAPDD,CAAAA","sourcesContent":["'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n"]},"metadata":{},"sourceType":"script"}