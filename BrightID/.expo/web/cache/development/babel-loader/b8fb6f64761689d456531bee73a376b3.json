{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCalendar = getCalendar;\nexports.getCountry = getCountry;\nexports.getCurrencies = getCurrencies;\nexports.getLocales = getLocales;\nexports.getNumberFormatSettings = getNumberFormatSettings;\nexports.getTemperatureUnit = getTemperatureUnit;\nexports.getTimeZone = getTimeZone;\nexports.handlers = void 0;\nexports.uses24HourClock = uses24HourClock;\nexports.usesAutoDateAndTime = usesAutoDateAndTime;\nexports.usesAutoTimeZone = usesAutoTimeZone;\nexports.usesMetricSystem = usesMetricSystem;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _constants = require(\"./constants\");\n\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n\nfunction ensureCountryCode(countryCode) {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(languageTag) {\n  var _languageTag$split = languageTag.split(\"-\"),\n      _languageTag$split2 = (0, _slicedToArray2.default)(_languageTag$split, 2),\n      languageCode = _languageTag$split2[0],\n      countryCode = _languageTag$split2[1];\n\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode\n  };\n}\n\nfunction convertLanguageTagToLocale(languageTag, countryCodeFallback) {\n  var _splitLanguageTag = splitLanguageTag(languageTag),\n      languageCode = _splitLanguageTag.languageCode,\n      countryCode = _splitLanguageTag.countryCode;\n\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode,\n    languageTag: languageCode + \"-\" + countryCode,\n    isRTL: _constants.USES_RTL_LAYOUT.includes(languageCode)\n  };\n}\n\nfunction getCurrentLocale() {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nfunction getCalendar() {\n  return \"gregorian\";\n}\n\nfunction getCountry() {\n  var _navigator = navigator,\n      _navigator$languages = _navigator.languages,\n      languages = _navigator$languages === void 0 ? [navigator.language] : _navigator$languages;\n\n  for (var i = 0; i < languages.length; i++) {\n    var _splitLanguageTag2 = splitLanguageTag(languages[i]),\n        countryCode = _splitLanguageTag2.countryCode;\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nfunction getCurrencies() {\n  var _navigator2 = navigator,\n      _navigator2$languages = _navigator2.languages,\n      languages = _navigator2$languages === void 0 ? [navigator.language] : _navigator2$languages;\n  var currencies = [];\n  languages.forEach(function (language) {\n    var _splitLanguageTag3 = splitLanguageTag(language),\n        countryCode = _splitLanguageTag3.countryCode;\n\n    if (countryCode) {\n      var currency = _constants.CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nfunction getLocales() {\n  var _navigator3 = navigator,\n      _navigator3$languages = _navigator3.languages,\n      languages = _navigator3$languages === void 0 ? [navigator.language] : _navigator3$languages;\n  var countryCode = getCountry();\n  var cache = [];\n  var locales = [];\n  languages.forEach(function (language) {\n    var locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n  return locales;\n}\n\nfunction getNumberFormatSettings() {\n  var _getCurrentLocale = getCurrentLocale(),\n      languageTag = _getCurrentLocale.languageTag;\n\n  var formatter = new Intl.NumberFormat(languageTag);\n  var separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0]\n  };\n}\n\nfunction getTemperatureUnit() {\n  return _constants.USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nfunction getTimeZone() {\n  var _getCurrentLocale2 = getCurrentLocale(),\n      languageTag = _getCurrentLocale2.languageTag;\n\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nfunction uses24HourClock() {\n  var _getCurrentLocale3 = getCurrentLocale(),\n      languageTag = _getCurrentLocale3.languageTag;\n\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nfunction usesMetricSystem() {\n  return !_constants.USES_IMPERIAL.includes(getCountry());\n}\n\nfunction usesAutoDateAndTime() {\n  return;\n}\n\nfunction usesAutoTimeZone() {\n  return;\n}\n\nvar handlers = new Set();\nexports.handlers = handlers;\n\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", function () {\n    handlers.forEach(function (handler) {\n      return handler();\n    });\n  });\n}","map":{"version":3,"sources":["module.web.ts"],"names":["canUseDOM","window","countryCode","languageTag","languageCode","splitLanguageTag","ensureCountryCode","isRTL","USES_RTL_LAYOUT","convertLanguageTagToLocale","navigator","getCountry","languages","i","currencies","language","currency","CURRENCIES","cache","locales","locale","getCurrentLocale","formatter","Intl","separators","decimalSeparator","groupingSeparator","USES_FAHRENHEIT","hour","USES_IMPERIAL","handlers","handler"],"mappings":"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","sourcesContent":["import {\n  CURRENCIES,\n  USES_FAHRENHEIT,\n  USES_IMPERIAL,\n  USES_RTL_LAYOUT,\n} from \"./constants\";\nimport type {\n  Calendar,\n  Locale,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nconst canUseDOM = !!(\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n);\n\nfunction ensureCountryCode(countryCode: string): string {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(languageTag: string): {\n  languageCode: string;\n  countryCode?: string;\n} {\n  const [languageCode, countryCode] = languageTag.split(\"-\");\n  return { languageCode, countryCode };\n}\n\nfunction convertLanguageTagToLocale(\n  languageTag: string,\n  countryCodeFallback: string,\n): Locale {\n  let { languageCode, countryCode } = splitLanguageTag(languageTag);\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n\n  return {\n    languageCode,\n    countryCode,\n    languageTag: `${languageCode}-${countryCode}`,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode),\n  };\n}\n\nfunction getCurrentLocale(): Locale {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar(): Calendar {\n  return \"gregorian\";\n}\n\nexport function getCountry(): string {\n  const { languages = [navigator.language] } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const { countryCode } = splitLanguageTag(languages[i]);\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nexport function getCurrencies(): string[] {\n  const { languages = [navigator.language] } = navigator;\n  const currencies: string[] = [];\n\n  languages.forEach((language) => {\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      const currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nexport function getLocales(): Locale[] {\n  const { languages = [navigator.language] } = navigator;\n  const countryCode = getCountry();\n  const cache: string[] = [];\n  const locales: Locale[] = [];\n\n  languages.forEach((language) => {\n    const locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n\n  return locales;\n}\n\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.NumberFormat(languageTag);\n  const separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0],\n  };\n}\n\nexport function getTemperatureUnit(): TemperatureUnit {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nexport function getTimeZone(): string {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nexport function uses24HourClock(): boolean {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nexport function usesMetricSystem(): boolean {\n  return !USES_IMPERIAL.includes(getCountry());\n}\n\nexport function usesAutoDateAndTime(): boolean | undefined {\n  return;\n}\n\nexport function usesAutoTimeZone(): boolean | undefined {\n  return;\n}\n\nexport const handlers: Set<Function> = new Set();\n\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", () => {\n    handlers.forEach((handler) => handler());\n  });\n}\n"]},"metadata":{},"sourceType":"script"}