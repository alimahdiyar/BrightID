{"ast":null,"code":"import * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useSelector } from \"../store\";\nimport NodeApiGate from \"../components/NodeApiGate\";\nimport Apps from \"./Apps\";\nimport RecoveringConnection from \"./RecoveringConnection\";\nimport Devices from \"./Devices\";\nimport Connections from \"./Connections\";\nimport RecoveryConnections from \"./RecoveryConnections\";\nimport Eula from \"./Eula\";\nimport Groups from \"./Groups\";\nimport Home from \"./Home\";\nimport Modals from \"./Modals\";\nimport PendingConnections from \"./PendingConnections\";\nimport Notifications from \"./Notifications\";\nimport Onboarding from \"./Onboarding\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TopStack = createStackNavigator();\nvar Stack = createStackNavigator();\n\nvar MainTabs = function MainTabs() {\n  return _jsxs(Stack.Navigator, {\n    headerMode: \"screen\",\n    children: [Home(), PendingConnections(), Connections(), RecoveryConnections(), Groups(), Notifications(), Devices(), Apps(), Modals(), RecoveringConnection()]\n  });\n};\n\nvar MainApp = function MainApp() {\n  var id = useSelector(function (state) {\n    return state.user.id;\n  });\n  var eula = useSelector(function (state) {\n    return state.user.eula;\n  });\n  return _jsx(NodeApiGate, {\n    children: _jsx(TopStack.Navigator, {\n      children: !eula ? _jsx(TopStack.Screen, {\n        name: \"Eula\",\n        component: Eula,\n        options: {\n          headerShown: false\n        }\n      }) : !id ? _jsx(TopStack.Screen, {\n        name: \"Onboarding\",\n        component: Onboarding,\n        options: {\n          headerShown: false\n        }\n      }) : _jsx(TopStack.Screen, {\n        name: \"App\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n};\n\nexport default MainApp;","map":{"version":3,"names":["React","createStackNavigator","useSelector","NodeApiGate","Apps","RecoveringConnection","Devices","Connections","RecoveryConnections","Eula","Groups","Home","Modals","PendingConnections","Notifications","Onboarding","TopStack","Stack","MainTabs","MainApp","id","state","user","eula","headerShown"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useSelector } from '@/store';\nimport NodeApiGate from '@/components/NodeApiGate';\nimport Apps from './Apps';\nimport RecoveringConnection from './RecoveringConnection';\nimport Devices from './Devices';\nimport Connections from './Connections';\nimport RecoveryConnections from './RecoveryConnections';\nimport Eula from './Eula';\nimport Groups from './Groups';\nimport Home from './Home';\nimport Modals from './Modals';\nimport PendingConnections from './PendingConnections';\nimport Notifications from './Notifications';\nimport Onboarding from './Onboarding';\n\nconst TopStack = createStackNavigator();\nconst Stack = createStackNavigator();\n\nconst MainTabs = () => {\n  return (\n    <Stack.Navigator headerMode=\"screen\">\n      {Home()}\n      {PendingConnections()}\n      {Connections()}\n      {RecoveryConnections()}\n      {Groups()}\n      {Notifications()}\n      {Devices()}\n      {Apps()}\n      {Modals()}\n      {RecoveringConnection()}\n    </Stack.Navigator>\n  );\n};\n\nconst MainApp = () => {\n  const id = useSelector((state: State) => state.user.id);\n  const eula = useSelector((state: State) => state.user.eula);\n  return (\n    <NodeApiGate>\n      <TopStack.Navigator>\n        {!eula ? (\n          <TopStack.Screen\n            name=\"Eula\"\n            component={Eula}\n            options={{ headerShown: false }}\n          />\n        ) : !id ? (\n          <TopStack.Screen\n            name=\"Onboarding\"\n            component={Onboarding}\n            options={{ headerShown: false }}\n          />\n        ) : (\n          <TopStack.Screen\n            name=\"App\"\n            component={MainTabs}\n            options={{ headerShown: false }}\n          />\n        )}\n      </TopStack.Navigator>\n    </NodeApiGate>\n  );\n};\n\nexport default MainApp;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,WAAT;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;;;AAEA,IAAMC,QAAQ,GAAGf,oBAAoB,EAArC;AACA,IAAMgB,KAAK,GAAGhB,oBAAoB,EAAlC;;AAEA,IAAMiB,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,OACE,MAAC,KAAD,CAAO,SAAP;IAAiB,UAAU,EAAC,QAA5B;IAAA,WACGP,IAAI,EADP,EAEGE,kBAAkB,EAFrB,EAGGN,WAAW,EAHd,EAIGC,mBAAmB,EAJtB,EAKGE,MAAM,EALT,EAMGI,aAAa,EANhB,EAOGR,OAAO,EAPV,EAQGF,IAAI,EARP,EASGQ,MAAM,EATT,EAUGP,oBAAoB,EAVvB;EAAA,EADF;AAcD,CAfD;;AAiBA,IAAMc,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,IAAMC,EAAE,GAAGlB,WAAW,CAAC,UAACmB,KAAD;IAAA,OAAkBA,KAAK,CAACC,IAAN,CAAWF,EAA7B;EAAA,CAAD,CAAtB;EACA,IAAMG,IAAI,GAAGrB,WAAW,CAAC,UAACmB,KAAD;IAAA,OAAkBA,KAAK,CAACC,IAAN,CAAWC,IAA7B;EAAA,CAAD,CAAxB;EACA,OACE,KAAC,WAAD;IAAA,UACE,KAAC,QAAD,CAAU,SAAV;MAAA,UACG,CAACA,IAAD,GACC,KAAC,QAAD,CAAU,MAAV;QACE,IAAI,EAAC,MADP;QAEE,SAAS,EAAEd,IAFb;QAGE,OAAO,EAAE;UAAEe,WAAW,EAAE;QAAf;MAHX,EADD,GAMG,CAACJ,EAAD,GACF,KAAC,QAAD,CAAU,MAAV;QACE,IAAI,EAAC,YADP;QAEE,SAAS,EAAEL,UAFb;QAGE,OAAO,EAAE;UAAES,WAAW,EAAE;QAAf;MAHX,EADE,GAOF,KAAC,QAAD,CAAU,MAAV;QACE,IAAI,EAAC,KADP;QAEE,SAAS,EAAEN,QAFb;QAGE,OAAO,EAAE;UAAEM,WAAW,EAAE;QAAf;MAHX;IAdJ;EADF,EADF;AAyBD,CA5BD;;AA8BA,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}