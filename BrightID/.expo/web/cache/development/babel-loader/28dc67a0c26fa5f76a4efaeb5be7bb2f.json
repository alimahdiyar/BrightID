{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { compose } from 'ramda';\nimport ImagePicker from \"./ImagePickerProvider\";\nvar options = {\n  cropping: true,\n  width: 180,\n  height: 180,\n  writeTempFile: false,\n  includeBase64: true,\n  includeExif: true,\n  cropperToolbarTitle: 'Select Photo',\n  smartAlbums: ['RecentlyAdded', 'UserLibrary', 'PhotoStream', 'SelfPortraits'],\n  useFrontCamera: true,\n  compressImageQuality: 0.8,\n  mediaType: 'photo'\n};\nexport var takePhoto = function takePhoto() {\n  return new Promise(function (res, rej) {\n    ImagePicker.openCamera(options).then(function (response) {\n      res(response);\n      console.log('size', response.size);\n      console.log('width', response.width);\n      console.log('height', response.height);\n    }).catch(function (err) {\n      rej(err);\n    });\n  });\n};\nexport var chooseImage = function chooseImage() {\n  return new Promise(function (res, rej) {\n    ImagePicker.openPicker(options).then(function (response) {\n      res(response);\n      console.log('size', response.size);\n      console.log('width', response.width);\n      console.log('height', response.height);\n    }).catch(function (err) {\n      rej(err);\n    });\n  });\n};\n\nvar splitDataURI = function splitDataURI(str) {\n  return str.split(',', 2);\n};\n\nvar mediaTypeToFileExtension = function mediaTypeToFileExtension(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      _ref2$ = _ref2[0],\n      mediaType = _ref2$ === void 0 ? 'jpeg' : _ref2$,\n      _ref2$2 = _ref2[1],\n      image = _ref2$2 === void 0 ? ' ' : _ref2$2;\n\n  if (mediaType.includes('jpeg')) {\n    return {\n      filetype: 'jpg',\n      image: image\n    };\n  }\n\n  if (mediaType.includes('png')) {\n    return {\n      filetype: 'png',\n      image: image\n    };\n  }\n\n  if (mediaType.includes('gif')) {\n    return {\n      filetype: 'gif',\n      image: image\n    };\n  }\n\n  if (mediaType.includes('svg')) {\n    return {\n      filetype: 'svg',\n      image: image\n    };\n  }\n\n  return {\n    filetype: 'jpg',\n    image: image\n  };\n};\n\nexport var parseDataUri = compose(mediaTypeToFileExtension, splitDataURI);\n\nvar fileType = function fileType(str) {\n  return str.split('.').pop().toLowerCase();\n};\n\nvar normalizeType = function normalizeType(t) {\n  switch (t) {\n    case 'jpg':\n      return 'image/jpeg';\n\n    case 'png':\n      return 'image/png';\n\n    case 'gif':\n      return 'image/gif';\n\n    case 'svg':\n      return 'image/svg+xml';\n\n    default:\n      return 'image/jpeg';\n  }\n};\n\nexport var mimeFromUri = compose(normalizeType, fileType);","map":{"version":3,"names":["compose","ImagePicker","options","cropping","width","height","writeTempFile","includeBase64","includeExif","cropperToolbarTitle","smartAlbums","useFrontCamera","compressImageQuality","mediaType","takePhoto","Promise","res","rej","openCamera","then","response","console","log","size","catch","err","chooseImage","openPicker","splitDataURI","str","split","mediaTypeToFileExtension","image","includes","filetype","parseDataUri","fileType","pop","toLowerCase","normalizeType","t","mimeFromUri"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/images.ts"],"sourcesContent":["import { compose } from 'ramda';\nimport { Image, Options } from 'react-native-image-crop-picker';\nimport ImagePicker from './ImagePickerProvider';\n\nconst options: Options = {\n  cropping: true,\n  width: 180,\n  height: 180,\n  writeTempFile: false,\n  includeBase64: true,\n  includeExif: true,\n  cropperToolbarTitle: 'Select Photo',\n  smartAlbums: ['RecentlyAdded', 'UserLibrary', 'PhotoStream', 'SelfPortraits'],\n  useFrontCamera: true,\n  compressImageQuality: 0.8,\n  mediaType: 'photo',\n};\n\nexport const takePhoto = () =>\n  new Promise<Image>((res, rej) => {\n    ImagePicker.openCamera(options)\n      .then((response) => {\n        res(response);\n        console.log('size', response.size);\n        console.log('width', response.width);\n        console.log('height', response.height);\n      })\n      .catch((err) => {\n        rej(err);\n      });\n  });\n\nexport const chooseImage = () =>\n  new Promise<Image>((res, rej) => {\n    ImagePicker.openPicker(options)\n      .then((response) => {\n        res(response);\n        console.log('size', response.size);\n        console.log('width', response.width);\n        console.log('height', response.height);\n      })\n      .catch((err) => {\n        rej(err);\n      });\n  });\n\n/**\n *\n * @param {string} str\n * @returns {string[]}\n */\nconst splitDataURI = (str: string): string[] => str.split(',', 2);\n\n/**\n *\n * @param {string} mediaType\n * @param {string} image\n * @returns\n */\nconst mediaTypeToFileExtension = ([mediaType = 'jpeg', image = ' ']) => {\n  if (mediaType.includes('jpeg')) {\n    return { filetype: 'jpg', image };\n  }\n  if (mediaType.includes('png')) {\n    return { filetype: 'png', image };\n  }\n  if (mediaType.includes('gif')) {\n    return { filetype: 'gif', image };\n  }\n  if (mediaType.includes('svg')) {\n    return { filetype: 'svg', image };\n  }\n  return { filetype: 'jpg', image };\n};\n\nexport const parseDataUri = compose(mediaTypeToFileExtension, splitDataURI);\n\n/**\n *\n * @param {string} str\n * @returns string\n */\nconst fileType = (str: string) => str.split('.').pop().toLowerCase();\n/**\n *\n * @param {string} t\n * @returns string\n */\n\nconst normalizeType = (t: 'jpg' | 'png' | 'gif' | 'svg') => {\n  switch (t) {\n    case 'jpg':\n      return 'image/jpeg';\n    case 'png':\n      return 'image/png';\n    case 'gif':\n      return 'image/gif';\n    case 'svg':\n      return 'image/svg+xml';\n    default:\n      return 'image/jpeg';\n  }\n};\n\nexport const mimeFromUri = compose(normalizeType, fileType);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}