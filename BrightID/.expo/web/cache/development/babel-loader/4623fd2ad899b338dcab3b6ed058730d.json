{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { create } from 'apisauce';\nexport var socialMediaUrl = 'https://finder.brightid.org/api';\nexport var SOCIAL_API_AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR';\n\nvar SocialMediaService = function () {\n  function SocialMediaService() {\n    _classCallCheck(this, SocialMediaService);\n\n    this.socialMediaApi = create({\n      baseURL: socialMediaUrl\n    });\n  }\n\n  _createClass(SocialMediaService, [{\n    key: \"retrieveSocialMediaVariations\",\n    value: function retrieveSocialMediaVariations() {\n      var res;\n      return _regeneratorRuntime.async(function retrieveSocialMediaVariations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.get('/v1/social-media-variation/list/'));\n\n            case 2:\n              res = _context.sent;\n              SocialMediaService.throwOnError(res);\n              return _context.abrupt(\"return\", res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"createSocialMedia\",\n    value: function createSocialMedia(_ref) {\n      var variation, profileHashes, network, res;\n      return _regeneratorRuntime.async(function createSocialMedia$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              variation = _ref.variation, profileHashes = _ref.profileHashes, network = _ref.network;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.post('/v1/social-media/create/', {\n                variation: variation,\n                profileHashes: profileHashes,\n                network: network\n              }));\n\n            case 3:\n              res = _context2.sent;\n              SocialMediaService.throwOnError(res);\n              return _context2.abrupt(\"return\", res.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updateSocialMedia\",\n    value: function updateSocialMedia(_ref2) {\n      var token, profileHashes, res;\n      return _regeneratorRuntime.async(function updateSocialMedia$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = _ref2.token, profileHashes = _ref2.profileHashes;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.put('/v1/social-media/update/', {\n                profileHashes: profileHashes\n              }, {\n                headers: {\n                  Authorization: \"Token \" + token\n                }\n              }));\n\n            case 3:\n              res = _context3.sent;\n              SocialMediaService.throwOnError(res);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"deleteSocialMediaProfile\",\n    value: function deleteSocialMediaProfile(token) {\n      var res;\n      return _regeneratorRuntime.async(function deleteSocialMediaProfile$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.delete('/v1/social-media/delete/', {}, {\n                headers: {\n                  Authorization: \"Token \" + token\n                }\n              }));\n\n            case 2:\n              res = _context4.sent;\n              SocialMediaService.throwOnError(res);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"querySocialMedia\",\n    value: function querySocialMedia(payload) {\n      var res;\n      return _regeneratorRuntime.async(function querySocialMedia$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.post('/v1/social-media/query/', payload));\n\n            case 2:\n              res = _context5.sent;\n              SocialMediaService.throwOnError(res);\n              return _context5.abrupt(\"return\", res.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"throwOnError\",\n    value: function throwOnError(response) {\n      if (response.ok) {\n        return;\n      }\n\n      if (response.data && response.data.errorMessage) {\n        throw new Error(response.data.errorMessage);\n      }\n\n      if (response.status === 401) {\n        throw new Error(SOCIAL_API_AUTHENTICATION_ERROR);\n      }\n\n      console.log(\"socialApi response error: \" + response.status + \" - \" + response.problem);\n      throw new Error(response.problem);\n    }\n  }]);\n\n  return SocialMediaService;\n}();\n\nexport { SocialMediaService };","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/api/socialMediaService.ts"],"names":["socialMediaUrl","SOCIAL_API_AUTHENTICATION_ERROR","SocialMediaService","create","baseURL","response","console","res","variation","profileHashes","network","token","headers","Authorization"],"mappings":"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","sourcesContent":["import { create, ApisauceInstance, ApiResponse } from 'apisauce';\nimport {\n  CreateSocialMediaRequest,\n  CreateSocialMediaResponse,\n  SocialMediaQueryRequest,\n  SocialMediaQueryResponse,\n  UpdateSocialMediaRequest,\n} from '@/api/socialMediaService_types.d';\n\nexport const socialMediaUrl = 'https://finder.brightid.org/api';\n\nexport const SOCIAL_API_AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR';\n\nclass SocialMediaService {\n  socialMediaApi: ApisauceInstance;\n\n  constructor() {\n    this.socialMediaApi = create({\n      baseURL: socialMediaUrl,\n    });\n  }\n\n  static throwOnError(response: ApiResponse<any>) {\n    if (response.ok) {\n      return;\n    }\n    if (response.data && response.data.errorMessage) {\n      throw new Error(response.data.errorMessage);\n    }\n    if (response.status === 401) {\n      throw new Error(SOCIAL_API_AUTHENTICATION_ERROR);\n    }\n    console.log(\n      `socialApi response error: ${response.status} - ${response.problem}`,\n    );\n    throw new Error(response.problem);\n  }\n\n  async retrieveSocialMediaVariations() {\n    const res = await this.socialMediaApi.get<SocialMediaVariation[]>(\n      '/v1/social-media-variation/list/',\n    );\n    SocialMediaService.throwOnError(res);\n    return res.data;\n  }\n\n  async createSocialMedia({\n    variation,\n    profileHashes,\n    network,\n  }: CreateSocialMediaRequest) {\n    const res = await this.socialMediaApi.post<CreateSocialMediaResponse>(\n      '/v1/social-media/create/',\n      {\n        variation,\n        profileHashes,\n        network,\n      },\n    );\n    SocialMediaService.throwOnError(res);\n    return res.data;\n  }\n\n  async updateSocialMedia({ token, profileHashes }: UpdateSocialMediaRequest) {\n    const res = await this.socialMediaApi.put(\n      '/v1/social-media/update/',\n      {\n        profileHashes,\n      },\n      {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      },\n    );\n    SocialMediaService.throwOnError(res);\n  }\n\n  async deleteSocialMediaProfile(token: string) {\n    const res = await this.socialMediaApi.delete(\n      '/v1/social-media/delete/',\n      {},\n      {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      },\n    );\n    SocialMediaService.throwOnError(res);\n  }\n\n  async querySocialMedia(payload: SocialMediaQueryRequest) {\n    const res = await this.socialMediaApi.post<SocialMediaQueryResponse>(\n      '/v1/social-media/query/',\n      payload,\n    );\n    SocialMediaService.throwOnError(res);\n    return res.data;\n  }\n}\n\nexport { SocialMediaService };\n"]},"metadata":{},"sourceType":"module"}