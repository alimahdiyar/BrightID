{"ast":null,"code":"var _window$document;\n\nexport var isDOMAvailable = typeof window !== 'undefined' && !!((_window$document = window.document) != null && _window$document.createElement);\nexport var canUseEventListeners = isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport var canUseViewport = isDOMAvailable && !!window.screen;\nexport var isAsyncDebugging = false;","map":{"version":3,"sources":["../../src/environment/browser.web.ts"],"names":["isDOMAvailable","window","canUseEventListeners","canUseViewport","isAsyncDebugging"],"mappings":";;AASA,OAAO,IAAMA,cAAc,GAAG,OAAA,MAAA,KAAA,WAAA,IAAiC,CAAC,EAAA,CAAA,gBAAA,GAACC,MAAM,CAAP,QAAA,KAAA,IAAA,IAACA,gBAAAA,CAA1D,aAAyD,CAAzD;AACP,OAAO,IAAMC,oBAAoB,GAC/BF,cAAc,IAAI,CAAC,EAAEC,MAAM,CAANA,gBAAAA,IAA2BA,MAAM,CADjD,WACc,CADd;AAEP,OAAO,IAAME,cAAc,GAAGH,cAAc,IAAI,CAAC,CAACC,MAAM,CAAjD,MAAA;AACP,OAAO,IAAMG,gBAAgB,GAAtB,KAAA","sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}