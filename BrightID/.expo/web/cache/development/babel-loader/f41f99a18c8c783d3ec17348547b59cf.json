{"ast":null,"code":"import ReactNativePropRegistry from \"./ReactNativePropRegistry\";\nimport flattenStyle from \"./flattenStyle\";\nimport validate from \"./validate\";\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return flattenStyle(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        validate(key, styles);\n      }\n\n      var id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n  hairlineWidth: 1\n};\nexport default StyleSheet;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/exports/StyleSheet/StyleSheet.js"],"names":["absoluteFillObject","position","left","right","top","bottom","absoluteFill","ReactNativePropRegistry","StyleSheet","compose","process","len","arguments","readableStyles","flattenStyle","JSON","style1","create","result","Object","validate","id","styles","flatten","hairlineWidth"],"mappings":"AASA,OAAA,uBAAA;AACA,OAAA,YAAA;AACA,OAAA,QAAA;AAEA,IAAMA,kBAAkB,GAAG;EACzBC,QAAQ,EADiB,UAAA;EAEzBC,IAAI,EAFqB,CAAA;EAGzBC,KAAK,EAHoB,CAAA;EAIzBC,GAAG,EAJsB,CAAA;EAKzBC,MAAM,EALR;AAA2B,CAA3B;AAOA,IAAMC,YAAoB,GAAGC,uBAAuB,CAAvBA,QAAAA,CAA7B,kBAA6BA,CAA7B;AAEA,IAAMC,UAAU,GAAG;EACjBF,YAAY,EADK,YAAA;EAEjBN,kBAAkB,EAFD,kBAAA;EAGjBS,OAHiB,EAAA,SAAA,OAAA,CAAA,MAAA,EAAA,MAAA,EAGsB;IACrC,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;MAEzC,IAAMC,GAAG,GAAGC,SAAS,CAArB,MAAA;;MACA,IAAID,GAAG,GAAP,CAAA,EAAa;QACX,IAAME,cAAc,GAAG,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,EAAA,GAAA,CAAmB,UAAA,CAAA,EAAA;UAAA,OAAOC,YAAY,CAAnB,CAAmB,CAAnB;QAA1C,CAAuB,CAAvB;QACA,MAAM,IAAA,KAAA,CAAA,6DAAA,GAAA,GAAA,IAAA,GAC+DC,IAAI,CAAJA,SAAAA,CADrE,cACqEA,CAD/D,CAAN;MAOH;IAED;;IAAA,IAAIC,MAAM,IAAV,MAAA,EAAsB;MACpB,OAAO,CAAA,MAAA,EAAP,MAAO,CAAP;IADF,CAAA,MAEO;MACL,OAAOA,MAAM,IAAb,MAAA;IAEH;EAvBgB,CAAA;EAwBjBC,MAxBiB,EAAA,SAAA,MAAA,CAAA,MAAA,EAwBmC;IAClD,IAAMC,MAAM,GAAZ,EAAA;IACAC,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAA4B,UAAA,GAAA,EAAS;MACnC,IAAIT,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;QACzCU,QAAQ,CAAA,GAAA,EAARA,MAAQ,CAARA;MAEF;;MAAA,IAAMC,EAAE,GAAGC,MAAM,CAANA,GAAM,CAANA,IAAef,uBAAuB,CAAvBA,QAAAA,CAAiCe,MAAM,CAAjE,GAAiE,CAAvCf,CAA1B;MACAW,MAAM,CAANA,GAAM,CAANA,GAAAA,EAAAA;IALFC,CAAAA;IAOA,OAAA,MAAA;EAjCe,CAAA;EAmCjBI,OAAO,EAnCU,YAAA;EAuCjBC,aAAa,EAvCf;AAAmB,CAAnB;AA0CA,eAAA,UAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\nimport flattenStyle from './flattenStyle';\nimport validate from './validate';\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nconst absoluteFill: number = ReactNativePropRegistry.register(absoluteFillObject);\n\nconst StyleSheet = {\n  absoluteFill,\n  absoluteFillObject,\n  compose(style1: any, style2: any): any {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable prefer-rest-params */\n      const len = arguments.length;\n      if (len > 2) {\n        const readableStyles = [...arguments].map((a) => flattenStyle(a));\n        throw new Error(\n          `StyleSheet.compose() only accepts 2 arguments, received ${len}: ${JSON.stringify(\n            readableStyles\n          )}`\n        );\n      }\n      /* eslint-enable prefer-rest-params */\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create(styles: Object): {| [key: string]: number |} {\n    const result = {};\n    Object.keys(styles).forEach((key) => {\n      if (process.env.NODE_ENV !== 'production') {\n        validate(key, styles);\n      }\n      const id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n\n  // `hairlineWidth` is not implemented using screen density as browsers may\n  // round sub-pixel values down to `0`, causing the line not to be rendered.\n  hairlineWidth: 1\n};\n\nexport default StyleSheet;\n"]},"metadata":{},"sourceType":"module"}