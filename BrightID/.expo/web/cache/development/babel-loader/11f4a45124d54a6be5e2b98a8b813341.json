{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AddDeviceScreen from \"../components/Onboarding/ImportFlow/AddDeviceScreen\";\nimport DevicesScreen from \"../components/Onboarding/ImportFlow/DevicesScreen\";\nimport RecoveryCodeScreen from \"../components/Onboarding/RecoveryFlow/RecoveryCodeScreen\";\nimport { headerOptions, NavHome } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar topOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  }\n});\n\nvar Devices = function Devices() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Add Device\",\n      component: AddDeviceScreen,\n      options: topOptions\n    }), _jsx(Stack.Screen, {\n      name: \"Devices\",\n      component: DevicesScreen,\n      options: topOptions\n    }), _jsx(Stack.Screen, {\n      name: \"SyncCode\",\n      component: RecoveryCodeScreen,\n      options: topOptions\n    })]\n  });\n};\n\nexport default Devices;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Devices.tsx"],"names":["Stack","createStackNavigator","topOptions","headerLeft","Devices"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,SAAA,oBAAA,QAAA,yBAAA;AAIA,OAAA,eAAA;AACA,OAAA,aAAA;AACA,OAAA,kBAAA;AACA,SAAA,aAAA,EAAA,OAAA;;;;AAEA,IAAMA,KAAK,GAAGC,oBAAd,EAAA;;AAEA,IAAMC,UAAkC,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA;EAEtCC,UAAU,EAAE,SAAA,UAAA,GAAA;IAAA,OAAM,IAAA,CAAA,OAAA,EAAN,EAAM,CAAN;EAFd;AAAwC,CAAA,CAAxC;;AAKA,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,GAAgB;EACpB,OACE,KAAA,CAAA,SAAA,EAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,YAAA;MAEE,SAAS,EAFX,eAAA;MAGE,OAAO,EAJX;IACE,CAAA,CADF,EAME,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,SAAA;MAEE,SAAS,EAFX,aAAA;MAGE,OAAO,EATX;IAME,CAAA,CANF,EAWE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,UAAA;MAEE,SAAS,EAFX,kBAAA;MAGE,OAAO,EAfb;IAYI,CAAA,CAXF;EAAA,CAAA,CADF;AADF,CAAA;;AAsBA,eAAA,OAAA","sourcesContent":["import * as React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport AddDeviceScreen from '@/components/Onboarding/ImportFlow/AddDeviceScreen';\nimport DevicesScreen from '@/components/Onboarding/ImportFlow/DevicesScreen';\nimport RecoveryCodeScreen from '@/components/Onboarding/RecoveryFlow/RecoveryCodeScreen';\nimport { headerOptions, NavHome } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst topOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n};\n\nconst Devices = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"Add Device\"\n        component={AddDeviceScreen}\n        options={topOptions}\n      />\n      <Stack.Screen\n        name=\"Devices\"\n        component={DevicesScreen}\n        options={topOptions}\n      />\n      <Stack.Screen\n        name=\"SyncCode\"\n        component={RecoveryCodeScreen}\n        options={topOptions}\n      />\n    </>\n  );\n};\n\nexport default Devices;\n"]},"metadata":{},"sourceType":"module"}