{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport FullScreenPhoto from \"../components/Helpers/FullScreenPhoto\";\nimport ChangePasswordModal from \"../components/EditProfile/ChangePasswordModal\";\nimport TrustlevelModal from \"../components/Connections/TrustlevelModal\";\nimport SelectSocialMediaModal from \"../components/EditProfile/SelectSocialMediaModal\";\nimport ReportReasonModal from \"../components/Connections/ReportReasonModal\";\nimport SortConnectionsModal from \"../components/Helpers/SortConnectionsModal\";\nimport ViewPassword from \"../components/Onboarding/Walkthroughs/ViewPassword\";\nimport RecoveryCooldownInfoModal from \"../components/Recovery/RecoveryCooldownInfoModal\";\nimport NodeModal from \"../components/Helpers/NodeModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar modalOptions = _objectSpread(_objectSpread({\n  headerShown: false,\n  cardOverlayEnabled: true,\n  gestureEnabled: true\n}, TransitionPresets.FadeFromBottomAndroid), {}, {\n  cardStyle: {\n    backgroundColor: 'transparent'\n  }\n});\n\nvar Modals = function Modals() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"FullScreenPhoto\",\n      component: FullScreenPhoto,\n      options: modalOptions\n    }), _jsx(Stack.Screen, {\n      name: \"ChangePassword\",\n      options: modalOptions,\n      component: ChangePasswordModal\n    }), _jsx(Stack.Screen, {\n      name: \"SelectSocialMedia\",\n      options: modalOptions,\n      component: SelectSocialMediaModal\n    }), _jsx(Stack.Screen, {\n      name: \"SetTrustlevel\",\n      options: modalOptions,\n      component: TrustlevelModal\n    }), _jsx(Stack.Screen, {\n      name: \"ReportReason\",\n      options: modalOptions,\n      component: ReportReasonModal\n    }), _jsx(Stack.Screen, {\n      name: \"SortConnections\",\n      options: modalOptions,\n      component: SortConnectionsModal\n    }), _jsx(Stack.Screen, {\n      name: \"ViewPasswordWalkthrough\",\n      options: modalOptions,\n      component: ViewPassword\n    }), _jsx(Stack.Screen, {\n      name: \"RecoveryCooldownInfo\",\n      options: modalOptions,\n      component: RecoveryCooldownInfoModal\n    }), _jsx(Stack.Screen, {\n      name: \"NodeModal\",\n      options: modalOptions,\n      component: NodeModal\n    })]\n  });\n};\n\nexport default Modals;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Modals.tsx"],"names":["Stack","createStackNavigator","modalOptions","headerShown","cardOverlayEnabled","gestureEnabled","TransitionPresets","cardStyle","backgroundColor","Modals"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,SAAA,oBAAA,EAAA,iBAAA,QAAA,yBAAA;AAKA,OAAA,eAAA;AACA,OAAA,mBAAA;AACA,OAAA,eAAA;AACA,OAAA,sBAAA;AACA,OAAA,iBAAA;AACA,OAAA,oBAAA;AACA,OAAA,YAAA;AACA,OAAA,yBAAA;AACA,OAAA,SAAA;;;;AAEA,IAAMA,KAAK,GAAGC,oBAAd,EAAA;;AAEA,IAAMC,YAAoC,GAAA,aAAA,CAAA,aAAA,CAAA;EACxCC,WAAW,EAD6B,KAAA;EAExCC,kBAAkB,EAFsB,IAAA;EAGxCC,cAAc,EAH0B;AAAA,CAAA,EAIrCC,iBAAiB,CAJoB,qBAAA,CAAA,EAAA,EAAA,EAAA;EAKxCC,SAAS,EAAE;IAAEC,eAAe,EAL9B;EAKa;AAL6B,CAAA,CAA1C;;AAQA,IAAMC,MAAM,GAANA,SAAAA,MAAAA,GAAe;EACnB,OACE,KAAA,CAAA,SAAA,EAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,iBAAA;MAEE,SAAS,EAFX,eAAA;MAGE,OAAO,EAJX;IACE,CAAA,CADF,EAME,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,gBAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EATb;IAME,CAAA,CANF,EAWE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,mBAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EAdb;IAWE,CAAA,CAXF,EAgBE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,eAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EAnBb;IAgBE,CAAA,CAhBF,EAqBE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,cAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EAxBb;IAqBE,CAAA,CArBF,EA0BE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,iBAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EA7Bb;IA0BE,CAAA,CA1BF,EA+BE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,yBAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EAlCb;IA+BE,CAAA,CA/BF,EAoCE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,sBAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EAvCb;IAoCE,CAAA,CApCF,EAyCE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,WAAA;MAEE,OAAO,EAFT,YAAA;MAGE,SAAS,EA7Cf;IA0CI,CAAA,CAzCF;EAAA,CAAA,CADF;AADF,CAAA;;AAoDA,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n  TransitionPresets,\n} from '@react-navigation/stack';\nimport FullScreenPhoto from '@/components/Helpers/FullScreenPhoto';\nimport ChangePasswordModal from '@/components/EditProfile/ChangePasswordModal';\nimport TrustlevelModal from '@/components/Connections/TrustlevelModal';\nimport SelectSocialMediaModal from '@/components/EditProfile/SelectSocialMediaModal';\nimport ReportReasonModal from '@/components/Connections/ReportReasonModal';\nimport SortConnectionsModal from '@/components/Helpers/SortConnectionsModal';\nimport ViewPassword from '@/components/Onboarding/Walkthroughs/ViewPassword';\nimport RecoveryCooldownInfoModal from '@/components/Recovery/RecoveryCooldownInfoModal';\nimport NodeModal from '@/components/Helpers/NodeModal';\n\nconst Stack = createStackNavigator<ModalStackParamList>();\n\nconst modalOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardOverlayEnabled: true,\n  gestureEnabled: true,\n  ...TransitionPresets.FadeFromBottomAndroid,\n  cardStyle: { backgroundColor: 'transparent' },\n};\n\nconst Modals = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"FullScreenPhoto\"\n        component={FullScreenPhoto}\n        options={modalOptions}\n      />\n      <Stack.Screen\n        name=\"ChangePassword\"\n        options={modalOptions}\n        component={ChangePasswordModal}\n      />\n      <Stack.Screen\n        name=\"SelectSocialMedia\"\n        options={modalOptions}\n        component={SelectSocialMediaModal}\n      />\n      <Stack.Screen\n        name=\"SetTrustlevel\"\n        options={modalOptions}\n        component={TrustlevelModal}\n      />\n      <Stack.Screen\n        name=\"ReportReason\"\n        options={modalOptions}\n        component={ReportReasonModal}\n      />\n      <Stack.Screen\n        name=\"SortConnections\"\n        options={modalOptions}\n        component={SortConnectionsModal}\n      />\n      <Stack.Screen\n        name=\"ViewPasswordWalkthrough\"\n        options={modalOptions}\n        component={ViewPassword}\n      />\n      <Stack.Screen\n        name=\"RecoveryCooldownInfo\"\n        options={modalOptions}\n        component={RecoveryCooldownInfoModal}\n      />\n      <Stack.Screen\n        name=\"NodeModal\"\n        options={modalOptions}\n        component={NodeModal}\n      />\n    </>\n  );\n};\n\nexport default Modals;\n"]},"metadata":{},"sourceType":"module"}