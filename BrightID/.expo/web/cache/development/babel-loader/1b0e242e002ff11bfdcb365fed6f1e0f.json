{"ast":null,"code":"import I18nManager from \"../I18nManager\";\nimport multiplyStyleLengthValue from \"../../modules/multiplyStyleLengthValue\";\nvar emptyObject = {};\nvar borderTopLeftRadius = 'borderTopLeftRadius';\nvar borderTopRightRadius = 'borderTopRightRadius';\nvar borderBottomLeftRadius = 'borderBottomLeftRadius';\nvar borderBottomRightRadius = 'borderBottomRightRadius';\nvar borderLeftColor = 'borderLeftColor';\nvar borderLeftStyle = 'borderLeftStyle';\nvar borderLeftWidth = 'borderLeftWidth';\nvar borderRightColor = 'borderRightColor';\nvar borderRightStyle = 'borderRightStyle';\nvar borderRightWidth = 'borderRightWidth';\nvar right = 'right';\nvar marginLeft = 'marginLeft';\nvar marginRight = 'marginRight';\nvar paddingLeft = 'paddingLeft';\nvar paddingRight = 'paddingRight';\nvar left = 'left';\nvar PROPERTIES_FLIP = {\n  borderTopLeftRadius: borderTopRightRadius,\n  borderTopRightRadius: borderTopLeftRadius,\n  borderBottomLeftRadius: borderBottomRightRadius,\n  borderBottomRightRadius: borderBottomLeftRadius,\n  borderLeftColor: borderRightColor,\n  borderLeftStyle: borderRightStyle,\n  borderLeftWidth: borderRightWidth,\n  borderRightColor: borderLeftColor,\n  borderRightStyle: borderLeftStyle,\n  borderRightWidth: borderLeftWidth,\n  left: right,\n  marginLeft: marginRight,\n  marginRight: marginLeft,\n  paddingLeft: paddingRight,\n  paddingRight: paddingLeft,\n  right: left\n};\nvar PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\nvar PROPERTIES_VALUE = {\n  clear: true,\n  float: true,\n  textAlign: true\n};\n\nvar additiveInverse = function additiveInverse(value) {\n  return multiplyStyleLengthValue(value, -1);\n};\n\nvar i18nStyle = function i18nStyle(originalStyle) {\n  var _I18nManager$getConst = I18nManager.getConstants(),\n      doLeftAndRightSwapInRTL = _I18nManager$getConst.doLeftAndRightSwapInRTL,\n      isRTL = _I18nManager$getConst.isRTL;\n\n  var style = originalStyle || emptyObject;\n  var frozenProps = {};\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp)) {\n      continue;\n    }\n\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n      var convertedProp = PROPERTIES_I18N[originalProp];\n      prop = isRTL ? PROPERTIES_FLIP[convertedProp] : convertedProp;\n    } else if (isRTL && doLeftAndRightSwapInRTL && PROPERTIES_FLIP[originalProp]) {\n      prop = PROPERTIES_FLIP[originalProp];\n    }\n\n    if (PROPERTIES_VALUE.hasOwnProperty(originalProp)) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        if (originalValue === 'left') {\n          value = 'right';\n        } else if (originalValue === 'right') {\n          value = 'left';\n        }\n      }\n    }\n\n    if (prop === 'transitionProperty') {\n      if (PROPERTIES_I18N.hasOwnProperty(value)) {\n        var convertedValue = PROPERTIES_I18N[originalValue];\n        value = isRTL ? PROPERTIES_FLIP[convertedValue] : convertedValue;\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        var flippedValue = PROPERTIES_FLIP[originalValue];\n\n        if (flippedValue != null) {\n          value = flippedValue;\n        }\n      }\n    }\n\n    if (isRTL && prop === 'textShadowOffset') {\n      var invertedValue = additiveInverse(value.width);\n      value.width = invertedValue;\n      nextStyle[prop] = value;\n    } else if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (PROPERTIES_I18N[originalProp]) {\n      frozenProps[prop] = true;\n    }\n  }\n\n  return nextStyle;\n};\n\nexport default i18nStyle;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/StyleSheet/i18nStyle.js"],"names":["emptyObject","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRightColor","borderRightStyle","borderRightWidth","right","marginLeft","marginRight","paddingLeft","paddingRight","left","PROPERTIES_FLIP","PROPERTIES_I18N","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartColor","borderStartStyle","borderStartWidth","borderEndColor","borderEndStyle","borderEndWidth","end","marginStart","marginEnd","paddingStart","paddingEnd","start","PROPERTIES_VALUE","clear","float","textAlign","additiveInverse","multiplyStyleLengthValue","i18nStyle","_I18nManager$getConst","I18nManager","doLeftAndRightSwapInRTL","isRTL","style","originalStyle","frozenProps","nextStyle","Object","originalValue","prop","value","convertedProp","convertedValue","flippedValue","invertedValue"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport I18nManager from '../I18nManager';\nimport multiplyStyleLengthValue from '../../modules/multiplyStyleLengthValue';\nvar emptyObject = {};\nvar borderTopLeftRadius = 'borderTopLeftRadius';\nvar borderTopRightRadius = 'borderTopRightRadius';\nvar borderBottomLeftRadius = 'borderBottomLeftRadius';\nvar borderBottomRightRadius = 'borderBottomRightRadius';\nvar borderLeftColor = 'borderLeftColor';\nvar borderLeftStyle = 'borderLeftStyle';\nvar borderLeftWidth = 'borderLeftWidth';\nvar borderRightColor = 'borderRightColor';\nvar borderRightStyle = 'borderRightStyle';\nvar borderRightWidth = 'borderRightWidth';\nvar right = 'right';\nvar marginLeft = 'marginLeft';\nvar marginRight = 'marginRight';\nvar paddingLeft = 'paddingLeft';\nvar paddingRight = 'paddingRight';\nvar left = 'left'; // Map of LTR property names to their BiDi equivalent.\n\nvar PROPERTIES_FLIP = {\n  borderTopLeftRadius: borderTopRightRadius,\n  borderTopRightRadius: borderTopLeftRadius,\n  borderBottomLeftRadius: borderBottomRightRadius,\n  borderBottomRightRadius: borderBottomLeftRadius,\n  borderLeftColor: borderRightColor,\n  borderLeftStyle: borderRightStyle,\n  borderLeftWidth: borderRightWidth,\n  borderRightColor: borderLeftColor,\n  borderRightStyle: borderLeftStyle,\n  borderRightWidth: borderLeftWidth,\n  left: right,\n  marginLeft: marginRight,\n  marginRight: marginLeft,\n  paddingLeft: paddingRight,\n  paddingRight: paddingLeft,\n  right: left\n}; // Map of I18N property names to their LTR equivalent.\n\nvar PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\nvar PROPERTIES_VALUE = {\n  clear: true,\n  float: true,\n  textAlign: true\n}; // Invert the sign of a numeric-like value\n\nvar additiveInverse = function additiveInverse(value) {\n  return multiplyStyleLengthValue(value, -1);\n};\n\nvar i18nStyle = function i18nStyle(originalStyle) {\n  var _I18nManager$getConst = I18nManager.getConstants(),\n      doLeftAndRightSwapInRTL = _I18nManager$getConst.doLeftAndRightSwapInRTL,\n      isRTL = _I18nManager$getConst.isRTL;\n\n  var style = originalStyle || emptyObject;\n  var frozenProps = {};\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp)) {\n      continue;\n    }\n\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue; // BiDi flip properties\n\n    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n      // convert start/end\n      var convertedProp = PROPERTIES_I18N[originalProp];\n      prop = isRTL ? PROPERTIES_FLIP[convertedProp] : convertedProp;\n    } else if (isRTL && doLeftAndRightSwapInRTL && PROPERTIES_FLIP[originalProp]) {\n      prop = PROPERTIES_FLIP[originalProp];\n    } // BiDi flip values\n\n\n    if (PROPERTIES_VALUE.hasOwnProperty(originalProp)) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        if (originalValue === 'left') {\n          value = 'right';\n        } else if (originalValue === 'right') {\n          value = 'left';\n        }\n      }\n    } // BiDi flip transitionProperty value\n\n\n    if (prop === 'transitionProperty') {\n      // BiDi flip properties\n      if (PROPERTIES_I18N.hasOwnProperty(value)) {\n        // convert start/end\n        var convertedValue = PROPERTIES_I18N[originalValue];\n        value = isRTL ? PROPERTIES_FLIP[convertedValue] : convertedValue;\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        var flippedValue = PROPERTIES_FLIP[originalValue];\n\n        if (flippedValue != null) {\n          value = flippedValue;\n        }\n      }\n    } // Create finalized style\n\n\n    if (isRTL && prop === 'textShadowOffset') {\n      var invertedValue = additiveInverse(value.width);\n      value.width = invertedValue;\n      nextStyle[prop] = value;\n    } else if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (PROPERTIES_I18N[originalProp]) {\n      frozenProps[prop] = true;\n    }\n  } // $FlowIgnore\n\n\n  return nextStyle;\n};\n\nexport default i18nStyle;"]},"metadata":{},"sourceType":"module"}