{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nexport var RecoveryErrorType;\n\n(function (RecoveryErrorType) {\n  RecoveryErrorType[\"NONE\"] = \"NONE\";\n  RecoveryErrorType[\"GENERIC\"] = \"GENERIC\";\n  RecoveryErrorType[\"MISMATCH_ID\"] = \"MISMATCH_ID\";\n})(RecoveryErrorType || (RecoveryErrorType = {}));\n\nexport var RecoveryError = function (_Error) {\n  _inherits(RecoveryError, _Error);\n\n  var _super = _createSuper(RecoveryError);\n\n  function RecoveryError(type) {\n    var _this;\n\n    _classCallCheck(this, RecoveryError);\n\n    _this = _super.call(this);\n    _this.name = _this.constructor.name;\n    _this.errorType = type;\n    return _this;\n  }\n\n  return RecoveryError;\n}(_wrapNativeSuper(Error));","map":{"version":3,"names":["RecoveryErrorType","RecoveryError","type","name","constructor","errorType","Error"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RecoveryError.ts"],"sourcesContent":["export enum RecoveryErrorType {\n  NONE = 'NONE',\n  GENERIC = 'GENERIC',\n  MISMATCH_ID = 'MISMATCH_ID',\n}\n\nexport class RecoveryError extends Error {\n  errorType: RecoveryErrorType;\n\n  constructor(type: RecoveryErrorType) {\n    super();\n    this.name = this.constructor.name;\n    this.errorType = type;\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,WAAYA,iBAAZ;;WAAYA,iB;EAAAA,iB;EAAAA,iB;EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAMZ,WAAaC,aAAb;EAAA;;EAAA;;EAGE,uBAAYC,IAAZ,EAAqC;IAAA;;IAAA;;IACnC;IACA,MAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;IACA,MAAKE,SAAL,GAAiBH,IAAjB;IAHmC;EAIpC;;EAPH;AAAA,mBAAmCI,KAAnC"},"metadata":{},"sourceType":"module"}