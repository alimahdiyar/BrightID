{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { find, propEq } from 'ramda';\nimport i18next from 'i18next';\nimport { create } from 'apisauce';\nimport { addLinkedContext, addOperation, selectIsPrimaryDevice, setIsSponsoredv6, updateBlindSig, updateSig } from \"../../actions\";\nimport store from \"../../store\";\nimport { NodeApi } from \"../../api/brightId\";\nimport { selectAllSigs } from \"../../reducer/appsSlice\";\nimport BrightidError, { APP_ID_NOT_FOUND } from \"../../api/brightidError\";\nimport { BrightIdNetwork } from \"./types.d\";\nvar sponsorTimeout = 1000 * 60;\nvar sponsorPollInterval = 3000;\nexport var getSignedTimestamp = function getSignedTimestamp(app) {\n  var sigs = selectAllSigs(store.getState());\n  var vel = app.verificationExpirationLength;\n  var roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n\n  var _loop = function _loop(verification) {\n    var sigInfo = sigs.find(function (sig) {\n      return sig.app === app.id && sig.verification === verification && sig.roundedTimestamp === roundedTimestamp;\n    });\n\n    if (sigInfo && sigInfo.sig) {\n      return {\n        v: sigInfo.signedTimestamp\n      };\n    }\n  };\n\n  for (var _iterator = _createForOfIteratorHelperLoose(app.verifications), _step; !(_step = _iterator()).done;) {\n    var verification = _step.value;\n\n    var _ret = _loop(verification);\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n\n  return null;\n};\nexport var handleV5App = function _callee(params, setSponsoringApp, api) {\n  var _store$getState, apps, handler, appInfo, baseUrl, appId, appUserId, _baseUrl, context, contextId;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _store$getState = store.getState(), apps = _store$getState.apps.apps;\n          params.baseUrl = decodeURIComponent(params.baseUrl);\n          appInfo = find(propEq('id', params.context))(apps);\n\n          if (appInfo && appInfo.soulbound) {\n            baseUrl = params.baseUrl, appId = params.context, appUserId = params.contextId;\n\n            handler = function handler() {\n              return sponsor(appId, appUserId, setSponsoringApp, api, function () {\n                return linkContextId(baseUrl, appId, appUserId);\n              });\n            };\n          } else {\n            _baseUrl = params.baseUrl, context = params.context, contextId = params.contextId;\n\n            handler = function handler() {\n              return linkContextId(_baseUrl, context, contextId);\n            };\n          }\n\n          Alert.alert(i18next.t('apps.alert.title.linkApp'), i18next.t('apps.alert.text.linkApp', {\n            context: \"\" + params.context\n          }), [{\n            text: i18next.t('common.alert.yes'),\n            onPress: handler\n          }, {\n            text: i18next.t('common.alert.no'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var handleV6App = function _callee2(params, setSponsoringApp, api) {\n  var appId, appUserId;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          appId = params.context, appUserId = params.contextId;\n          Alert.alert(i18next.t('apps.alert.title.linkApp'), i18next.t('apps.alert.text.linkApp', {\n            context: \"\" + appId\n          }), [{\n            text: i18next.t('common.alert.yes'),\n            onPress: function onPress() {\n              sponsor(appId, appUserId, setSponsoringApp, api, function () {\n                return linkAppId(appId, appUserId);\n              });\n            }\n          }, {\n            text: i18next.t('common.alert.no'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar linkContextId = function _callee3(baseUrl, context, contextId) {\n  var id, secretKey, api, op;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          id = store.getState().user.id;\n          secretKey = store.getState().keypair.secretKey;\n          api = new NodeApi({\n            url: baseUrl,\n            id: id,\n            secretKey: secretKey\n          });\n          _context3.prev = 3;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(api.linkContextId(context, contextId));\n\n        case 6:\n          op = _context3.sent;\n          op.apiUrl = baseUrl;\n          store.dispatch(addOperation(op));\n          store.dispatch(addLinkedContext({\n            context: context,\n            contextId: contextId,\n            dateAdded: Date.now(),\n            state: 'pending'\n          }));\n          _context3.next = 15;\n          break;\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](3);\n          Alert.alert(i18next.t('apps.alert.title.linkingFailed'), \"\" + _context3.t0.message, [{\n            text: i18next.t('common.alert.dismiss'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[3, 12]], Promise);\n};\n\nexport var linkAppId = function _callee5(appId, appUserId) {\n  var silent,\n      _store$getState2,\n      apps,\n      id,\n      secretKey,\n      appInfo,\n      vel,\n      roundedTimestamp,\n      network,\n      onSuccess,\n      previousSigs,\n      sigs,\n      previousAppUserIds,\n      _iterator2,\n      _step2,\n      previousSig,\n      allVerificationsLinked,\n      missingVerifications,\n      linkedVerifications,\n      isPrimary,\n      missingSigs,\n      url,\n      api,\n      linkedTimestamp,\n      linkSuccess,\n      _iterator6,\n      _step6,\n      sig,\n      msg,\n      _args5 = arguments;\n\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          silent = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : false;\n          _store$getState2 = store.getState(), apps = _store$getState2.apps.apps, id = _store$getState2.user.id, secretKey = _store$getState2.keypair.secretKey;\n          appInfo = find(propEq('id', appId))(apps);\n          vel = appInfo.verificationExpirationLength;\n          roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n          network = __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE;\n\n          onSuccess = function _callee4() {\n            var _api;\n\n            return _regeneratorRuntime.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!appInfo.callbackUrl) {\n                      _context4.next = 4;\n                      break;\n                    }\n\n                    _api = create({\n                      baseURL: appInfo.callbackUrl\n                    });\n                    _context4.next = 4;\n                    return _regeneratorRuntime.awrap(_api.post('/', {\n                      network: network,\n                      appUserId: appUserId\n                    }));\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          _context5.next = 9;\n          return _regeneratorRuntime.awrap(store.dispatch(updateBlindSig(appInfo)));\n\n        case 9:\n          previousSigs = selectAllSigs(store.getState()).filter(function (sig) {\n            return sig.app === appId && sig.linked === true && sig.roundedTimestamp === roundedTimestamp;\n          });\n          sigs = selectAllSigs(store.getState()).filter(function (sig) {\n            return sig.app === appId && sig.linked === false && sig.roundedTimestamp === roundedTimestamp;\n          });\n\n          if (!previousSigs.length) {\n            _context5.next = 21;\n            break;\n          }\n\n          previousAppUserIds = new Set();\n\n          for (_iterator2 = _createForOfIteratorHelperLoose(previousSigs); !(_step2 = _iterator2()).done;) {\n            previousSig = _step2.value;\n\n            if (previousSig.appUserId !== appUserId) {\n              previousAppUserIds.add(previousSig.appUserId);\n            }\n          }\n\n          if (!previousAppUserIds.size) {\n            _context5.next = 17;\n            break;\n          }\n\n          if (!silent) {\n            Alert.alert(i18next.t('apps.alert.title.linkingFailed'), i18next.t('apps.alert.text.blindSigAlreadyLinkedDifferent', 'You are trying to link with {{app}} using {{appUserId}}. You are already linked with {{app}} with different id {{previousAppUserIds}}. This may lead to problems using the app.', {\n              app: appId,\n              appUserId: appUserId,\n              previousAppUserIds: Array.from(previousAppUserIds).join(', ')\n            }));\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 17:\n          allVerificationsLinked = appInfo.verifications.every(function (verification) {\n            for (var _iterator3 = _createForOfIteratorHelperLoose(previousSigs), _step3; !(_step3 = _iterator3()).done;) {\n              var prevSig = _step3.value;\n              if (prevSig.verification === verification) return true;\n            }\n\n            return false;\n          });\n\n          if (!allVerificationsLinked) {\n            _context5.next = 21;\n            break;\n          }\n\n          if (!silent) {\n            Alert.alert(i18next.t('apps.alert.title.linkingFailed'), i18next.t('apps.alert.text.blindSigAlreadyLinked', 'You are already linked with {{app}} with id {{appUserId}}', {\n              app: appId,\n              appUserId: appUserId\n            }));\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 21:\n          missingVerifications = appInfo.verifications.filter(function (verification) {\n            for (var _iterator4 = _createForOfIteratorHelperLoose(previousSigs), _step4; !(_step4 = _iterator4()).done;) {\n              var prevSig = _step4.value;\n\n              if (prevSig.verification === verification) {\n                console.log(\"Verification \" + verification + \" already linked with sig \" + prevSig.uid);\n                return false;\n              }\n            }\n\n            for (var _iterator5 = _createForOfIteratorHelperLoose(sigs), _step5; !(_step5 = _iterator5()).done;) {\n              var sig = _step5.value;\n\n              if (sig.verification === verification) {\n                console.log(\"Verification \" + verification + \" has sig available and ready to link\");\n                return false;\n              }\n            }\n\n            console.log(\"Verification \" + verification + \" is missing\");\n            return true;\n          });\n          linkedVerifications = previousSigs.map(function (sig) {\n            return sig.verification;\n          });\n\n          if (!(sigs.length === 0)) {\n            _context5.next = 26;\n            break;\n          }\n\n          if (!silent) {\n            Alert.alert(i18next.t('apps.alert.title.linkingFailed'), i18next.t('apps.alert.text.missingBlindSig', 'No blind sig found for app {{appId}}. Verifications missing: {{missingVerifications}}. Verifications already linked: {{linkedVerifications}}', {\n              appId: appId,\n              missingVerifications: missingVerifications.join(),\n              linkedVerifications: linkedVerifications.join()\n            }), [{\n              text: i18next.t('common.alert.dismiss'),\n              style: 'cancel',\n              onPress: function onPress() {\n                return null;\n              }\n            }]);\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 26:\n          isPrimary = selectIsPrimaryDevice(store.getState());\n\n          if (isPrimary) {\n            _context5.next = 32;\n            break;\n          }\n\n          missingSigs = sigs.filter(function (sig) {\n            return sig.sig === undefined;\n          });\n\n          if (!missingSigs.length) {\n            _context5.next = 32;\n            break;\n          }\n\n          if (!silent) {\n            Alert.alert(i18next.t('apps.alert.title.notPrimary', 'Linking not possible'), i18next.t('apps.alert.text.notPrimary', 'You are currently using a secondary device. Linking app \"{{app}}\" requires interaction with your primary device. Please sync with your primary device or perform the linking with your primary device.', {\n              app: \"\" + appId\n            }));\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 32:\n          url = appInfo.nodeUrl || \"http://\" + network + \".brightid.org\";\n          api = new NodeApi({\n            url: url,\n            id: id,\n            secretKey: secretKey\n          });\n          linkedTimestamp = Date.now();\n          linkSuccess = false;\n          _iterator6 = _createForOfIteratorHelperLoose(sigs);\n\n        case 37:\n          if ((_step6 = _iterator6()).done) {\n            _context5.next = 53;\n            break;\n          }\n\n          sig = _step6.value;\n          _context5.prev = 39;\n          _context5.next = 42;\n          return _regeneratorRuntime.awrap(api.linkAppId(sig, appUserId));\n\n        case 42:\n          store.dispatch(updateSig({\n            id: sig.uid,\n            changes: {\n              linked: true,\n              linkedTimestamp: linkedTimestamp,\n              appUserId: appUserId\n            }\n          }));\n          linkSuccess = true;\n          _context5.next = 51;\n          break;\n\n        case 46:\n          _context5.prev = 46;\n          _context5.t0 = _context5[\"catch\"](39);\n          console.log(_context5.t0);\n          msg = _context5.t0 instanceof Error ? _context5.t0.message : _context5.t0;\n\n          if (!silent) {\n            Alert.alert(i18next.t('apps.alert.title.linkingFailed'), i18next.t('apps.alert.text.linkSigFailed', 'Error linking verification {{verification}} to app {{appId}}. Error message: {{msg}}', {\n              verification: sig.verification,\n              appId: appId,\n              msg: msg\n            }), [{\n              text: i18next.t('common.alert.dismiss'),\n              style: 'cancel',\n              onPress: function onPress() {\n                return null;\n              }\n            }]);\n          }\n\n        case 51:\n          _context5.next = 37;\n          break;\n\n        case 53:\n          if (!linkSuccess) {\n            _context5.next = 57;\n            break;\n          }\n\n          if (!silent) {\n            Alert.alert(i18next.t('apps.alert.title.linkSuccess'), i18next.t('apps.alert.text.linkSuccess', {\n              context: appInfo.name\n            }));\n          }\n\n          onSuccess();\n          return _context5.abrupt(\"return\", true);\n\n        case 57:\n          return _context5.abrupt(\"return\", false);\n\n        case 58:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[39, 46]], Promise);\n};\n\nvar getSponsorship = function _callee6(appUserId, api) {\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(api.getSponsorship(appUserId));\n\n        case 3:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n\n          if (!(_context6.t0 instanceof BrightidError && _context6.t0.errorNum === APP_ID_NOT_FOUND)) {\n            _context6.next = 12;\n            break;\n          }\n\n          console.log(\"sponsor request for \" + appUserId + \" not yet existing\");\n          _context6.next = 13;\n          break;\n\n        case 12:\n          throw _context6.t0;\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar sponsor = function _callee8(appId, appUserId, setSponsoringApp, api, onSuccess) {\n  var _store$getState3, apps, _store$getState3$user, isSponsored, isSponsoredv6, sp, appInfo, op, msg;\n\n  return _regeneratorRuntime.async(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _store$getState3 = store.getState(), apps = _store$getState3.apps.apps, _store$getState3$user = _store$getState3.user, isSponsored = _store$getState3$user.isSponsored, isSponsoredv6 = _store$getState3$user.isSponsoredv6;\n\n          if (!(isSponsored || isSponsoredv6)) {\n            _context8.next = 4;\n            break;\n          }\n\n          onSuccess();\n          return _context8.abrupt(\"return\");\n\n        case 4:\n          _context8.next = 6;\n          return _regeneratorRuntime.awrap(getSponsorship(appUserId, api));\n\n        case 6:\n          sp = _context8.sent;\n\n          if (!(sp && sp.appHasAuthorized && sp.spendRequested)) {\n            _context8.next = 11;\n            break;\n          }\n\n          console.log('the appUserId is used by another user to get sponsored before.');\n          Alert.alert(i18next.t('apps.alert.title.linkingFailed'), i18next.t('apps.alert.text.duplicateAppUserId', {\n            appUserId: appUserId\n          }));\n          return _context8.abrupt(\"return\");\n\n        case 11:\n          appInfo = find(propEq('id', appId))(apps);\n          setSponsoringApp(appInfo);\n          console.log(\"Sending spend sponsorship op...\");\n          _context8.next = 16;\n          return _regeneratorRuntime.awrap(api.spendSponsorship(appId, appUserId));\n\n        case 16:\n          op = _context8.sent;\n          _context8.prev = 17;\n          _context8.next = 20;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            var startTime = Date.now();\n            var intervalId = setInterval(function _callee7() {\n              var timeElapsed, _sp;\n\n              return _regeneratorRuntime.async(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      timeElapsed = Date.now() - startTime;\n\n                      if (!(timeElapsed > sponsorTimeout)) {\n                        _context7.next = 6;\n                        break;\n                      }\n\n                      clearInterval(intervalId);\n                      reject(new Error(\"Timeout waiting for sponsorship\"));\n                      _context7.next = 11;\n                      break;\n\n                    case 6:\n                      _context7.next = 8;\n                      return _regeneratorRuntime.awrap(getSponsorship(appUserId, api));\n\n                    case 8:\n                      _sp = _context7.sent;\n                      console.log(\"Got sponsorRes: \" + _sp);\n\n                      if (_sp && _sp.appHasAuthorized && _sp.spendRequested) {\n                        console.log(\"Sponsorship complete!\");\n                        clearInterval(intervalId);\n                        resolve();\n                      }\n\n                    case 11:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, sponsorPollInterval);\n          }));\n\n        case 20:\n          store.dispatch(setIsSponsoredv6(true));\n          setSponsoringApp(undefined);\n          onSuccess();\n          _context8.next = 30;\n          break;\n\n        case 25:\n          _context8.prev = 25;\n          _context8.t0 = _context8[\"catch\"](17);\n          msg = _context8.t0 instanceof Error ? _context8.t0.message : _context8.t0;\n          console.log(\"Error getting sponsored: \" + msg);\n          Alert.alert(i18next.t('apps.alert.title.linkingFailed'), \"\" + msg, [{\n            text: i18next.t('common.alert.dismiss'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 30:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[17, 25]], Promise);\n};","map":{"version":3,"names":["find","propEq","i18next","create","addLinkedContext","addOperation","selectIsPrimaryDevice","setIsSponsoredv6","updateBlindSig","updateSig","store","NodeApi","selectAllSigs","BrightidError","APP_ID_NOT_FOUND","BrightIdNetwork","sponsorTimeout","sponsorPollInterval","getSignedTimestamp","app","sigs","getState","vel","verificationExpirationLength","roundedTimestamp","Math","floor","Date","now","verification","sigInfo","sig","id","signedTimestamp","verifications","handleV5App","params","setSponsoringApp","api","apps","baseUrl","decodeURIComponent","appInfo","context","soulbound","appId","appUserId","contextId","handler","sponsor","linkContextId","Alert","alert","t","text","onPress","style","handleV6App","linkAppId","user","secretKey","keypair","url","op","apiUrl","dispatch","dateAdded","state","message","silent","network","__DEV__","TEST","NODE","onSuccess","callbackUrl","baseURL","post","previousSigs","filter","linked","length","previousAppUserIds","Set","previousSig","add","size","Array","from","join","allVerificationsLinked","every","prevSig","missingVerifications","console","log","uid","linkedVerifications","map","isPrimary","missingSigs","undefined","nodeUrl","linkedTimestamp","linkSuccess","changes","msg","Error","name","getSponsorship","errorNum","isSponsored","isSponsoredv6","sp","appHasAuthorized","spendRequested","spendSponsorship","Promise","resolve","reject","startTime","intervalId","setInterval","timeElapsed","clearInterval"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Apps/model.ts"],"sourcesContent":["import { Alert } from 'react-native';\nimport { find, propEq } from 'ramda';\nimport i18next from 'i18next';\nimport { create } from 'apisauce';\nimport { Dispatch, SetStateAction } from 'react';\nimport {\n  addLinkedContext,\n  addOperation,\n  selectIsPrimaryDevice,\n  setIsSponsoredv6,\n  updateBlindSig,\n  updateSig,\n} from '@/actions';\nimport store from '@/store';\nimport { NodeApi } from '@/api/brightId';\nimport { selectAllSigs } from '@/reducer/appsSlice';\nimport BrightidError, { APP_ID_NOT_FOUND } from '@/api/brightidError';\nimport { BrightIdNetwork, Params } from '@/components/Apps/types.d';\n\n// max time to wait for app to respond to sponsoring request\nconst sponsorTimeout = 1000 * 60; // 60 seconds\n// Interval to poll for sponsor op\nconst sponsorPollInterval = 3000; // 5 seconds\n\nexport const getSignedTimestamp = (app: AppInfo) => {\n  const sigs = selectAllSigs(store.getState());\n  const vel = app.verificationExpirationLength;\n  const roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n  for (const verification of app.verifications) {\n    const sigInfo = sigs.find(\n      (sig) =>\n        sig.app === app.id &&\n        sig.verification === verification &&\n        sig.roundedTimestamp === roundedTimestamp,\n    );\n    if (sigInfo && sigInfo.sig) {\n      return sigInfo.signedTimestamp;\n    }\n  }\n  return null;\n};\n\nexport const handleV5App = async (\n  params: Params,\n  setSponsoringApp: Dispatch<SetStateAction<AppInfo>>,\n  api: NodeApi,\n) => {\n  const {\n    apps: { apps },\n  } = store.getState();\n  let handler: () => Promise<void>;\n  params.baseUrl = decodeURIComponent(params.baseUrl);\n  const appInfo = find(propEq('id', params.context))(apps) as AppInfo;\n  if (appInfo && appInfo.soulbound) {\n    // soulbound apps link after sponsorship just like v6 apps\n    const { baseUrl, context: appId, contextId: appUserId } = params;\n    handler = () =>\n      sponsor(appId, appUserId, setSponsoringApp, api, () =>\n        linkContextId(baseUrl, appId, appUserId),\n      );\n  } else {\n    const { baseUrl, context, contextId } = params;\n    handler = () => linkContextId(baseUrl, context, contextId);\n  }\n  Alert.alert(\n    i18next.t('apps.alert.title.linkApp'),\n    i18next.t('apps.alert.text.linkApp', { context: `${params.context}` }),\n    [\n      {\n        text: i18next.t('common.alert.yes'),\n        onPress: handler,\n      },\n      {\n        text: i18next.t('common.alert.no'),\n        style: 'cancel',\n        onPress: () => null,\n      },\n    ],\n  );\n};\n\nexport const handleV6App = async (\n  params: Params,\n  setSponsoringApp,\n  api: NodeApi,\n) => {\n  const { context: appId, contextId: appUserId } = params;\n  Alert.alert(\n    i18next.t('apps.alert.title.linkApp'),\n    i18next.t('apps.alert.text.linkApp', { context: `${appId}` }),\n    [\n      {\n        text: i18next.t('common.alert.yes'),\n        onPress: () => {\n          sponsor(appId, appUserId, setSponsoringApp, api, () =>\n            linkAppId(appId, appUserId),\n          );\n        },\n      },\n      {\n        text: i18next.t('common.alert.no'),\n        style: 'cancel',\n        onPress: () => null,\n      },\n    ],\n  );\n};\n\nconst linkContextId = async (\n  baseUrl: string,\n  context: string,\n  contextId: string,\n) => {\n  // Create temporary NodeAPI object, since only the node at the specified baseUrl knows about this context\n  const { id } = store.getState().user;\n  const { secretKey } = store.getState().keypair;\n  const api = new NodeApi({ url: baseUrl, id, secretKey });\n  try {\n    const op = await api.linkContextId(context, contextId);\n    op.apiUrl = baseUrl;\n    store.dispatch(addOperation(op));\n    store.dispatch(\n      addLinkedContext({\n        context,\n        contextId,\n        dateAdded: Date.now(),\n        state: 'pending',\n      }),\n    );\n  } catch (e) {\n    Alert.alert(\n      i18next.t('apps.alert.title.linkingFailed'),\n      `${(e as Error).message}`,\n      [\n        {\n          text: i18next.t('common.alert.dismiss'),\n          style: 'cancel',\n          onPress: () => null,\n        },\n      ],\n    );\n  }\n};\n\nexport const linkAppId = async (\n  appId: string,\n  appUserId: string,\n  silent = false,\n) => {\n  const {\n    apps: { apps },\n    user: { id },\n    keypair: { secretKey },\n  } = store.getState();\n  const appInfo = find(propEq('id', appId))(apps) as AppInfo;\n  const vel = appInfo.verificationExpirationLength;\n  const roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n  const network = __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE;\n\n  const onSuccess = async () => {\n    if (appInfo.callbackUrl) {\n      const api = create({\n        baseURL: appInfo.callbackUrl,\n      });\n      await api.post('/', {\n        network,\n        appUserId,\n      });\n    }\n  };\n\n  // generate blind sig for apps with no verification expiration at linking time\n  // and also ensure blind sig is not missed because of delay in generation for all apps\n  await store.dispatch(updateBlindSig(appInfo));\n  // existing linked verifications\n  const previousSigs = selectAllSigs(store.getState()).filter(\n    (sig) =>\n      sig.app === appId &&\n      sig.linked === true &&\n      sig.roundedTimestamp === roundedTimestamp,\n  );\n  // not yet linked verifications\n  const sigs = selectAllSigs(store.getState()).filter(\n    (sig) =>\n      sig.app === appId &&\n      sig.linked === false &&\n      sig.roundedTimestamp === roundedTimestamp,\n  );\n\n  // make sure that always the same appUserId is used.\n  if (previousSigs.length) {\n    const previousAppUserIds: Set<string> = new Set();\n    for (const previousSig of previousSigs) {\n      if (previousSig.appUserId !== appUserId) {\n        previousAppUserIds.add(previousSig.appUserId);\n      }\n    }\n    if (previousAppUserIds.size) {\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.linkingFailed'),\n          i18next.t(\n            'apps.alert.text.blindSigAlreadyLinkedDifferent',\n            'You are trying to link with {{app}} using {{appUserId}}. You are already linked with {{app}} with different id {{previousAppUserIds}}. This may lead to problems using the app.',\n            {\n              app: appId,\n              appUserId,\n              previousAppUserIds: Array.from(previousAppUserIds).join(', '),\n            },\n          ),\n        );\n      }\n      return false; // don't link app when userId is different\n    }\n\n    // check if all app verifications are already linked\n    const allVerificationsLinked = appInfo.verifications.every(\n      (verification) => {\n        for (const prevSig of previousSigs) {\n          if (prevSig.verification === verification) return true;\n        }\n        return false;\n      },\n    );\n    if (allVerificationsLinked) {\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.linkingFailed'),\n          i18next.t(\n            'apps.alert.text.blindSigAlreadyLinked',\n            'You are already linked with {{app}} with id {{appUserId}}',\n            { app: appId, appUserId },\n          ),\n        );\n      }\n      return false;\n    }\n  }\n\n  // get list of all missing verifications\n  const missingVerifications = appInfo.verifications.filter((verification) => {\n    // exclude verification if it is already linked\n    for (const prevSig of previousSigs) {\n      if (prevSig.verification === verification) {\n        console.log(\n          `Verification ${verification} already linked with sig ${prevSig.uid}`,\n        );\n        return false;\n      }\n    }\n    // exclude verification if not yet linked, but sig is available\n    for (const sig of sigs) {\n      if (sig.verification === verification) {\n        console.log(\n          `Verification ${verification} has sig available and ready to link`,\n        );\n        return false;\n      }\n    }\n    console.log(`Verification ${verification} is missing`);\n    return true;\n  });\n\n  // get list of all already linked verifications\n  const linkedVerifications = previousSigs.map((sig) => sig.verification);\n\n  if (sigs.length === 0) {\n    if (!silent) {\n      Alert.alert(\n        i18next.t('apps.alert.title.linkingFailed'),\n        i18next.t(\n          'apps.alert.text.missingBlindSig',\n          'No blind sig found for app {{appId}}. Verifications missing: {{missingVerifications}}. Verifications already linked: {{linkedVerifications}}',\n          {\n            appId,\n            missingVerifications: missingVerifications.join(),\n            linkedVerifications: linkedVerifications.join(),\n          },\n        ),\n        [\n          {\n            text: i18next.t('common.alert.dismiss'),\n            style: 'cancel',\n            onPress: () => null,\n          },\n        ],\n      );\n    }\n    return false;\n  }\n\n  // check if blind sigs are existing if this is a secondary device\n  const isPrimary = selectIsPrimaryDevice(store.getState());\n  if (!isPrimary) {\n    const missingSigs = sigs.filter((sig) => sig.sig === undefined);\n    if (missingSigs.length) {\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.notPrimary', 'Linking not possible'),\n          i18next.t(\n            'apps.alert.text.notPrimary',\n            'You are currently using a secondary device. Linking app \"{{app}}\" requires interaction with your primary device. Please sync with your primary device or perform the linking with your primary device.',\n            { app: `${appId}` },\n          ),\n        );\n      }\n      return false;\n    }\n  }\n\n  // Create temporary NodeAPI object, since the node at the specified nodeUrl will\n  // be queried for the verification\n  const url = appInfo.nodeUrl || `http://${network}.brightid.org`;\n  const api = new NodeApi({ url, id, secretKey });\n  const linkedTimestamp = Date.now();\n  let linkSuccess = false;\n  for (const sig of sigs) {\n    try {\n      await api.linkAppId(sig, appUserId);\n      // mark sig as linked with app\n      store.dispatch(\n        updateSig({\n          id: sig.uid,\n          changes: { linked: true, linkedTimestamp, appUserId },\n        }),\n      );\n      linkSuccess = true;\n    } catch (err) {\n      console.log(err);\n      const msg = err instanceof Error ? err.message : err;\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.linkingFailed'),\n          i18next.t(\n            'apps.alert.text.linkSigFailed',\n            'Error linking verification {{verification}} to app {{appId}}. Error message: {{msg}}',\n            { verification: sig.verification, appId, msg },\n          ),\n          [\n            {\n              text: i18next.t('common.alert.dismiss'),\n              style: 'cancel',\n              onPress: () => null,\n            },\n          ],\n        );\n      }\n    }\n  }\n\n  if (linkSuccess) {\n    if (!silent) {\n      Alert.alert(\n        i18next.t('apps.alert.title.linkSuccess'),\n        i18next.t('apps.alert.text.linkSuccess', {\n          context: appInfo.name,\n        }),\n      );\n    }\n    onSuccess();\n    return true;\n  }\n  return false;\n};\n\nconst getSponsorship = async (appUserId: string, api: NodeApi) => {\n  try {\n    return await api.getSponsorship(appUserId);\n  } catch (e) {\n    if (e instanceof BrightidError && e.errorNum === APP_ID_NOT_FOUND) {\n      // node has not yet registered the sponsor request -> Ignore\n      console.log(`sponsor request for ${appUserId} not yet existing`);\n    } else {\n      throw e;\n    }\n  }\n};\n\nconst sponsor = async (\n  appId: string,\n  appUserId: string,\n  setSponsoringApp,\n  api: NodeApi,\n  onSuccess: () => any,\n) => {\n  const {\n    apps: { apps },\n    user: { isSponsored, isSponsoredv6 },\n  } = store.getState();\n  if (isSponsored || isSponsoredv6) {\n    onSuccess();\n    return;\n  }\n  /*\n  1. get appId from deep link\n  2. already Sponsored? yes: go to step 6. no: go to step 3.\n  3. ensure no one else is sponsored using this appId before\n  4. optimistically send Spend Sponsorship operation.\n  5. wait a bit for node to process sponsor operation from app.\n  6. check GET /sponsorships/{appId} to see if it really got sponsored.\n  7. proceed with posting the verification to the node under the appId.\n   */\n  const sp = await getSponsorship(appUserId, api);\n  if (sp && sp.appHasAuthorized && sp.spendRequested) {\n    console.log(\n      'the appUserId is used by another user to get sponsored before.',\n    );\n    Alert.alert(\n      i18next.t('apps.alert.title.linkingFailed'),\n      i18next.t('apps.alert.text.duplicateAppUserId', { appUserId }),\n    );\n    return;\n  }\n  const appInfo = find(propEq('id', appId))(apps) as AppInfo;\n  setSponsoringApp(appInfo);\n  console.log(`Sending spend sponsorship op...`);\n  const op = await api.spendSponsorship(appId, appUserId);\n\n  // TODO wait for op to be applied before starting polling sponsorship status?\n\n  // wait for app to complete the sponsorship\n  try {\n    await new Promise<void>((resolve, reject) => {\n      const startTime = Date.now();\n      const intervalId = setInterval(async () => {\n        const timeElapsed = Date.now() - startTime;\n        if (timeElapsed > sponsorTimeout) {\n          clearInterval(intervalId);\n          reject(new Error(`Timeout waiting for sponsorship`));\n        } else {\n          const sp = await getSponsorship(appUserId, api);\n          console.log(`Got sponsorRes: ${sp}`);\n          if (sp && sp.appHasAuthorized && sp.spendRequested) {\n            console.log(`Sponsorship complete!`);\n            clearInterval(intervalId);\n            resolve();\n          }\n        }\n      }, sponsorPollInterval);\n    });\n    // sponsoring complete\n    store.dispatch(setIsSponsoredv6(true));\n    setSponsoringApp(undefined);\n    onSuccess();\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : err;\n    console.log(`Error getting sponsored: ${msg}`);\n    Alert.alert(i18next.t('apps.alert.title.linkingFailed'), `${msg}`, [\n      {\n        text: i18next.t('common.alert.dismiss'),\n        style: 'cancel',\n        onPress: () => null,\n      },\n    ]);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}