{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { useContext, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport _ from 'lodash';\nimport { useDispatch, useSelector, store } from \"../../store\";\nimport FloatingActionButton from \"../Helpers/FloatingActionButton\";\nimport EmptyList from \"../Helpers/EmptyList\";\nimport { connectionsSelector } from \"../../utils/connectionsSelector\";\nimport { ORANGE, WHITE } from \"../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport { updateConnections } from \"../../actions\";\nimport ConnectionCard from \"./ConnectionCard\";\nimport { MAX_DISPLAY_CONNECTIONS } from \"../../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ITEM_HEIGHT = DEVICE_LARGE ? 102 : 92;\n\nvar getItemLayout = function getItemLayout(_data, index) {\n  return {\n    length: ITEM_HEIGHT,\n    offset: ITEM_HEIGHT * index,\n    index: index\n  };\n};\n\nvar renderItem = function renderItem(_ref) {\n  var item = _ref.item,\n      index = _ref.index;\n  return _jsx(ConnectionCard, _objectSpread(_objectSpread({}, item), {}, {\n    index: index\n  }));\n};\n\nexport var ConnectionsScreen = function ConnectionsScreen() {\n  var _route$params;\n\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var api = useContext(NodeApiContext);\n  var route = useRoute();\n  var excludeGroup = (_route$params = route.params) == null ? void 0 : _route$params.group;\n  var connections = useSelector(function (state) {\n    return connectionsSelector(state, excludeGroup == null ? void 0 : excludeGroup.members);\n  }).slice(0, MAX_DISPLAY_CONNECTIONS);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var handleNewConnection = function handleNewConnection() {\n    navigation.navigate('MyCode');\n  };\n\n  var ConnectionList = useMemo(function () {\n    var onRefresh = function _callee() {\n      var _store$getState, id, conns, incomingConns, incomingConnsById, _iterator, _step, _incomingConnsById$co, conn;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Reloading Connections');\n              _store$getState = store.getState(), id = _store$getState.user.id;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(api.getConnections(id, 'outbound'));\n\n            case 5:\n              conns = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(api.getConnections(id, 'inbound'));\n\n            case 8:\n              incomingConns = _context.sent;\n              incomingConnsById = _.keyBy(incomingConns, 'id');\n\n              for (_iterator = _createForOfIteratorHelperLoose(conns); !(_step = _iterator()).done;) {\n                conn = _step.value;\n                conn.incomingLevel = (_incomingConnsById$co = incomingConnsById[conn.id]) == null ? void 0 : _incomingConnsById$co.level;\n              }\n\n              dispatch(updateConnections(conns));\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0.message);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 14]], Promise);\n    };\n\n    console.log('Rendering Connections List');\n    return _jsx(FlatList, {\n      style: styles.connectionsContainer,\n      data: connections,\n      keyExtractor: function keyExtractor(_ref2, index) {\n        var id = _ref2.id;\n        return id + index;\n      },\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      contentContainerStyle: {\n        paddingBottom: 70,\n        paddingTop: 20,\n        flexGrow: 1\n      },\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      refreshing: false,\n      onRefresh: onRefresh,\n      ListEmptyComponent: _jsx(EmptyList, {\n        iconType: \"account-off-outline\",\n        title: t('connections.text.noConnections')\n      })\n    });\n  }, [connections]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: ORANGE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(View, {\n      style: styles.container,\n      testID: \"connectionsScreen\",\n      children: [_jsx(View, {\n        style: styles.mainContainer,\n        children: ConnectionList\n      }), _jsx(FloatingActionButton, {\n        onPress: handleNewConnection\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 10\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '100%'\n  },\n  actionCard: {\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 60 : 55\n  },\n  actionText: {\n    fontFamily: 'Poppins-Medium',\n    color: WHITE,\n    fontSize: fontSize[11]\n  }\n});\nexport default ConnectionsScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Connections/ConnectionsScreen.tsx"],"names":["ITEM_HEIGHT","DEVICE_LARGE","getItemLayout","length","offset","index","renderItem","item","ConnectionsScreen","dispatch","useDispatch","navigation","useNavigation","api","useContext","route","useRoute","excludeGroup","connections","useSelector","connectionsSelector","t","useTranslation","handleNewConnection","ConnectionList","useMemo","onRefresh","console","id","store","conns","incomingConns","incomingConnsById","_","conn","updateConnections","styles","paddingBottom","paddingTop","flexGrow","StyleSheet","orangeTop","backgroundColor","height","width","zIndex","container","flex","borderTopLeftRadius","marginTop","overflow","mainContainer","alignItems","flexDirection","justifyContent","connectionsContainer","actionCard","actionText","fontFamily","color","fontSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,SAAA,UAAA,EAAA,OAAA,QAAA,OAAA;;;;;AAEA,SAAA,cAAA,QAAA,eAAA;AACA,SAAA,aAAA,EAAA,QAAA,QAAA,0BAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,SAAA,WAAA,EAAA,WAAA,EAAA,KAAA;AACA,OAAA,oBAAA;AACA,OAAA,SAAA;AACA,SAAA,mBAAA;AACA,SAAA,MAAA,EAAA,KAAA;AACA,SAAA,YAAA;AACA,SAAA,QAAA;AACA,SAAA,cAAA;AACA,SAAA,iBAAA;AACA,OAAA,cAAA;AACA,SAAA,uBAAA;;;;AAQA,IAAMA,WAAW,GAAGC,YAAY,GAAA,GAAA,GAAhC,EAAA;;AAEA,IAAMC,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,KAAhBA,EAAgB,KAAhBA,EAAgB;EAAA,OAA2B;IAC/CC,MAAM,EADyC,WAAA;IAE/CC,MAAM,EAAEJ,WAAW,GAF4B,KAAA;IAG/CK,KAAK,EAHe;EAA2B,CAA3B;AAAtB,CAAA;;AAMA,IAAMC,UAAU,GAAVA,SAAAA,UAAAA,CAAa,IAAbA,EAAuE;EAAvDC,IAAAA,IAAuD,GAAA,IAAA,CAAvDA,IAAAA;EAAAA,IAAMF,KAAiD,GAAA,IAAA,CAAjDA,KAANE;EACpB,OAAO,IAAA,CAAA,cAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;IAA0B,KAAK,EAAtC;EAAO,CAAA,CAAA,CAAP;AADF,CAAA;;AAMA,OAAO,IAAMC,iBAAiB,GAAjBA,SAAAA,iBAAAA,GAA0B;EAAA,IAAA,aAAA;;EACrC,IAAMC,QAAQ,GAAGC,WAAjB,EAAA;EACA,IAAMC,UAAU,GAAGC,aAAnB,EAAA;EACA,IAAMC,GAAG,GAAGC,UAAU,CAAtB,cAAsB,CAAtB;EACA,IAAMC,KAAoC,GAAGC,QAA7C,EAAA;EAGA,IAAMC,YAAY,GAAA,CAAA,aAAA,GAAGF,KAAK,CAAR,MAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,aAAAA,CAArB,KAAA;EACA,IAAMG,WAAW,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAC9BC,mBAAmB,CAAA,KAAA,EAAQH,YAAR,IAAA,IAAQA,GAAR,KAAA,CAAQA,GAAAA,YAAY,CADT,OACX,CADW;EAAZE,CAAW,CAAXA,CAAAA,KAAAA,CAAAA,CAAAA,EAApB,uBAAoBA,CAApB;;EAGA,IAAA,eAAA,GAAcG,cAAd,EAAA;EAAA,IAAQD,CAAR,GAAA,eAAA,CAAA,CAAA;;EAEA,IAAME,mBAAmB,GAAnBA,SAAAA,mBAAAA,GAA4B;IAChCZ,UAAU,CAAVA,QAAAA,CAAAA,QAAAA;EADF,CAAA;;EAIA,IAAMa,cAAc,GAAGC,OAAO,CAAC,YAAM;IACnC,IAAMC,SAAS,GAAG,SAAA,OAAA,GAAA;MAAA,IAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,KAAA,EAAA,qBAAA,EAAA,IAAA;;MAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;QAAA,OAAA,CAAA,EAAA;UAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;YAAA,KAAA,CAAA;cAChBC,OAAO,CAAPA,GAAAA,CAAAA,uBAAAA;cADgB,eAAA,GAIZE,KAAK,CAJO,QAIZA,EAJY,EAGND,EAHM,GAAA,eAAA,CAAA,IAAA,CAAA,EAAA;cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;cAAA,OAAA,mBAAA,CAAA,KAAA,CAMMf,GAAG,CAAHA,cAAAA,CAAAA,EAAAA,EANN,UAMMA,CANN,CAAA;;YAAA,KAAA,CAAA;cAMRiB,KANQ,GAAA,QAAA,CAAA,IAMRA;cANQ,QAAA,CAAA,IAAA,GAAA,CAAA;cAAA,OAAA,mBAAA,CAAA,KAAA,CAOcjB,GAAG,CAAHA,cAAAA,CAAAA,EAAAA,EAPd,SAOcA,CAPd,CAAA;;YAAA,KAAA,CAAA;cAORkB,aAPQ,GAAA,QAAA,CAAA,IAORA;cACAC,iBARQ,GAQYC,CAAC,CAADA,KAAAA,CAAAA,aAAAA,EARZ,IAQYA,CAApBD;;cACN,KAAA,SAAA,GAAA,+BAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAA0B;gBAAfE,IAAe,GAAA,KAAA,CAAA,KAAfA;gBACTA,IAAI,CAAJA,aAAAA,GAAAA,CAAAA,qBAAAA,GAAqBF,iBAAiB,CAACE,IAAI,CAA3CA,EAAsC,CAAtCA,KAAAA,IAAAA,GAAAA,KAAAA,CAAAA,GAAqBF,qBAAAA,CAArBE,KAAAA;cAEFzB;;cAAAA,QAAQ,CAAC0B,iBAAiB,CAA1B1B,KAA0B,CAAlB,CAARA;cAZc,QAAA,CAAA,IAAA,GAAA,EAAA;cAAA;;YAAA,KAAA,EAAA;cAAA,QAAA,CAAA,IAAA,GAAA,EAAA;cAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;cAcdkB,OAAO,CAAPA,GAAAA,CAAY,QAAA,CAAA,EAAA,CAAZA,OAAAA;;YAdc,KAAA,EAAA;YAAA,KAAA,KAAA;cAAA,OAAA,QAAA,CAAA,IAAA,EAAA;UAAA;QAAA;MAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA;IAAlB,CAAA;;IAiBAA,OAAO,CAAPA,GAAAA,CAAAA,4BAAAA;IACA,OACE,IAAA,CAAA,QAAA,EAAA;MACE,KAAK,EAAES,MAAM,CADf,oBAAA;MAEE,IAAI,EAFN,WAAA;MAGE,YAAY,EAAE,SAAA,YAAA,CAAA,KAAA,EAAA,KAAA,EAAA;QAAA,IAAGR,EAAH,GAAA,KAAA,CAAA,EAAA;QAAA,OAAmBA,EAAE,GAArB,KAAA;MAHhB,CAAA;MAIE,UAAU,EAJZ,UAAA;MAKE,aAAa,EALf,aAAA;MAME,qBAAqB,EAAE;QACrBS,aAAa,EADQ,EAAA;QAErBC,UAAU,EAFW,EAAA;QAGrBC,QAAQ,EATZ;MAMyB,CANzB;MAWE,8BAA8B,EAXhC,KAAA;MAYE,4BAA4B,EAZ9B,KAAA;MAaE,UAAU,EAbZ,KAAA;MAcE,SAAS,EAdX,SAAA;MAeE,kBAAkB,EAChB,IAAA,CAAA,SAAA,EAAA;QACE,QAAQ,EADV,qBAAA;QAEE,KAAK,EAAElB,CAAC,CAnBhB,gCAmBgB;MAFV,CAAA;IAhBJ,CAAA,CADF;EAnB4B,CAAA,EA4C3B,CA5CH,WA4CG,CA5C2B,CAA9B;EA8CA,OACE,KAAA,CAAA,SAAA,EAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAA,SAAA,EAAA;MACE,QAAQ,EADV,eAAA;MAEE,eAAe,EAFjB,MAAA;MAGE,QAAQ,EAJZ;IACE,CAAA,CADF,EAME,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEe,MAAM,CANrB;IAME,CAAA,CANF,EAQE,KAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,SAAA;MAA+B,MAAM,EAArC,mBAAA;MAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEA,MAAM,CAAnB,aAAA;QAAA,QAAA,EADF;MACE,CAAA,CADF,EAEE,IAAA,CAAA,oBAAA,EAAA;QAAsB,OAAO,EAXnC;MAWM,CAAA,CAFF;IAAA,CAAA,CARF;EAAA,CAAA,CADF;AA/DK,CAAA;AAgFP,IAAMA,MAAM,GAAGI,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,eAAe,EADN,MAAA;IAETC,MAAM,EAAE1C,YAAY,GAAA,EAAA,GAFX,EAAA;IAGT2C,KAAK,EAHI,MAAA;IAITC,MAAM,EALuB;EACpB,CADoB;EAO/BC,SAAS,EAAE;IACTC,IAAI,EADK,CAAA;IAETL,eAAe,EAFN,KAAA;IAGTM,mBAAmB,EAHV,EAAA;IAITC,SAAS,EAAE,CAJF,EAAA;IAKTC,QAAQ,EALC,QAAA;IAMTL,MAAM,EAbuB;EAOpB,CAPoB;EAe/BM,aAAa,EAAE;IACbJ,IAAI,EADS,CAAA;IAEbL,eAAe,EAFF,aAAA;IAGbU,UAAU,EAHG,QAAA;IAIbC,aAAa,EAJA,QAAA;IAKbC,cAAc,EApBe;EAehB,CAfgB;EAsB/BC,oBAAoB,EAAE;IACpBR,IAAI,EADgB,CAAA;IAEpBH,KAAK,EAxBwB;EAsBT,CAtBS;EA0B/BY,UAAU,EAAE;IACVb,MAAM,EAAE1C,YAAY,GAAA,EAAA,GADV,EAAA;IAEVmD,UAAU,EAFA,QAAA;IAGVE,cAAc,EAHJ,QAAA;IAIVV,KAAK,EAAE3C,YAAY,GAAA,EAAA,GA9BU;EA0BnB,CA1BmB;EAgC/BwD,UAAU,EAAE;IACVC,UAAU,EADA,gBAAA;IAEVC,KAAK,EAFK,KAAA;IAGVC,QAAQ,EAAEA,QAAQ,CAnCtB,EAmCsB;EAHR;AAhCmB,CAAlBpB,CAAf;AAuCA,eAAA,iBAAA","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { StyleSheet, View, StatusBar, FlatList } from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport _ from 'lodash';\nimport { useDispatch, useSelector, store } from '@/store';\nimport FloatingActionButton from '@/components/Helpers/FloatingActionButton';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { connectionsSelector } from '@/utils/connectionsSelector';\nimport { ORANGE, WHITE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { updateConnections } from '@/actions';\nimport ConnectionCard from './ConnectionCard';\nimport { MAX_DISPLAY_CONNECTIONS } from '@/utils/constants';\n\n/**\n * Connection screen of BrightID\n * Displays a search input and list of Connection Cards\n */\n\n/** Helper Component */\nconst ITEM_HEIGHT = DEVICE_LARGE ? 102 : 92;\n\nconst getItemLayout = (_data, index: number) => ({\n  length: ITEM_HEIGHT,\n  offset: ITEM_HEIGHT * index,\n  index,\n});\n\nconst renderItem = ({ item, index }: { item: Connection; index: number }) => {\n  return <ConnectionCard {...item} index={index} />;\n};\n\n/** Main Component */\n\nexport const ConnectionsScreen = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const api = useContext(NodeApiContext);\n  const route: { params?: { group: Group } } = useRoute() as {\n    params?: { group: Group };\n  };\n  const excludeGroup = route.params?.group;\n  const connections = useSelector((state) =>\n    connectionsSelector(state, excludeGroup?.members),\n  ).slice(0, MAX_DISPLAY_CONNECTIONS);\n  const { t } = useTranslation();\n\n  const handleNewConnection = () => {\n    navigation.navigate('MyCode');\n  };\n\n  const ConnectionList = useMemo(() => {\n    const onRefresh = async () => {\n      console.log('Reloading Connections');\n      const {\n        user: { id },\n      } = store.getState();\n      try {\n        const conns = await api.getConnections(id, 'outbound');\n        const incomingConns = await api.getConnections(id, 'inbound');\n        const incomingConnsById = _.keyBy(incomingConns, 'id');\n        for (const conn of conns) {\n          conn.incomingLevel = incomingConnsById[conn.id]?.level;\n        }\n        dispatch(updateConnections(conns));\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    console.log('Rendering Connections List');\n    return (\n      <FlatList\n        style={styles.connectionsContainer}\n        data={connections}\n        keyExtractor={({ id }, index) => id + index}\n        renderItem={renderItem}\n        getItemLayout={getItemLayout}\n        contentContainerStyle={{\n          paddingBottom: 70,\n          paddingTop: 20,\n          flexGrow: 1,\n        }}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        refreshing={false}\n        onRefresh={onRefresh}\n        ListEmptyComponent={\n          <EmptyList\n            iconType=\"account-off-outline\"\n            title={t('connections.text.noConnections')}\n          />\n        }\n      />\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connections]);\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor={ORANGE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n\n      <View style={styles.container} testID=\"connectionsScreen\">\n        <View style={styles.mainContainer}>{ConnectionList}</View>\n        <FloatingActionButton onPress={handleNewConnection} />\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 10,\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  connectionsContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  actionCard: {\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 60 : 55,\n  },\n  actionText: {\n    fontFamily: 'Poppins-Medium',\n    color: WHITE,\n    fontSize: fontSize[11],\n  },\n});\n\nexport default ConnectionsScreen;\n"]},"metadata":{},"sourceType":"module"}