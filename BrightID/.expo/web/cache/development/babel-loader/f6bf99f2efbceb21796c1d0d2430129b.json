{"ast":null,"code":"var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n  var shouldLog = logLevel === \"info\" && level === \"info\" || [\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\" || [\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\";\n  return shouldLog;\n}\n\nfunction logGroup(logFn) {\n  return function (level, msg) {\n    if (shouldLog(level)) {\n      logFn(msg);\n    }\n  };\n}\n\nmodule.exports = function (level, msg) {\n  if (shouldLog(level)) {\n    if (level === \"info\") {\n      console.log(msg);\n    } else if (level === \"warning\") {\n      console.warn(msg);\n    } else if (level === \"error\") {\n      console.error(msg);\n    }\n  }\n};\n\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\nmodule.exports.group = logGroup(group);\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n  logLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n  var message = err.message;\n  var stack = err.stack;\n\n  if (!stack) {\n    return message;\n  } else if (stack.indexOf(message) < 0) {\n    return message + \"\\n\" + stack;\n  } else {\n    return stack;\n  }\n};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/webpack/hot/log.js"],"names":["logLevel","shouldLog","level","logFn","module","console","group","groupCollapsed","groupEnd","logGroup","message","err","stack"],"mappings":"AAAA,IAAIA,QAAQ,GAAZ,MAAA;;AAEA,SAAA,KAAA,GAAiB,CAEjB;;AAAA,SAAA,SAAA,CAAA,KAAA,EAA0B;EACzB,IAAIC,SAAS,GACXD,QAAQ,KAARA,MAAAA,IAAuBE,KAAK,KAA7B,MAACF,IACA,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,CAAA,QAAA,KAAA,CAAA,IAA8CE,KAAK,KADpD,SAACF,IAEA,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,QAAA,KAAA,CAAA,IAAuDE,KAAK,KAH9D,OAAA;EAIA,OAAA,SAAA;AAGD;;AAAA,SAAA,QAAA,CAAA,KAAA,EAAyB;EACxB,OAAO,UAAA,KAAA,EAAA,GAAA,EAAqB;IAC3B,IAAID,SAAS,CAAb,KAAa,CAAb,EAAsB;MACrBE,KAAK,CAALA,GAAK,CAALA;IAED;EAJD,CAAA;AAODC;;AAAAA,MAAM,CAANA,OAAAA,GAAiB,UAAA,KAAA,EAAA,GAAA,EAAqB;EACrC,IAAIH,SAAS,CAAb,KAAa,CAAb,EAAsB;IACrB,IAAIC,KAAK,KAAT,MAAA,EAAsB;MACrBG,OAAO,CAAPA,GAAAA,CAAAA,GAAAA;IADD,CAAA,MAEO,IAAIH,KAAK,KAAT,SAAA,EAAyB;MAC/BG,OAAO,CAAPA,IAAAA,CAAAA,GAAAA;IADM,CAAA,MAEA,IAAIH,KAAK,KAAT,OAAA,EAAuB;MAC7BG,OAAO,CAAPA,KAAAA,CAAAA,GAAAA;IAED;EACD;AAVDD,CAAAA;;AAaA,IAAIE,KAAK,GAAGD,OAAO,CAAPA,KAAAA,IAAZ,KAAA;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAPA,cAAAA,IAArB,KAAA;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAPA,QAAAA,IAAf,KAAA;AAGAD,MAAM,CAANA,OAAAA,CAAAA,KAAAA,GAAuBK,QAAQ,CAA/BL,KAA+B,CAA/BA;AAEAA,MAAM,CAANA,OAAAA,CAAAA,cAAAA,GAAgCK,QAAQ,CAAxCL,cAAwC,CAAxCA;AAEAA,MAAM,CAANA,OAAAA,CAAAA,QAAAA,GAA0BK,QAAQ,CAAlCL,QAAkC,CAAlCA;;AAEAA,MAAM,CAANA,OAAAA,CAAAA,WAAAA,GAA6B,UAAA,KAAA,EAAgB;EAC5CJ,QAAQ,GAARA,KAAAA;AADDI,CAAAA;;AAIAA,MAAM,CAANA,OAAAA,CAAAA,WAAAA,GAA6B,UAAA,GAAA,EAAc;EAC1C,IAAIM,OAAO,GAAGC,GAAG,CAAjB,OAAA;EACA,IAAIC,KAAK,GAAGD,GAAG,CAAf,KAAA;;EACA,IAAI,CAAJ,KAAA,EAAY;IACX,OAAA,OAAA;EADD,CAAA,MAEO,IAAIC,KAAK,CAALA,OAAAA,CAAAA,OAAAA,IAAJ,CAAA,EAAgC;IACtC,OAAOF,OAAO,GAAPA,IAAAA,GAAP,KAAA;EADM,CAAA,MAEA;IACN,OAAA,KAAA;EAED;AAVDN,CAAAA","sourcesContent":["var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function(level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function(level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function(level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function(err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}