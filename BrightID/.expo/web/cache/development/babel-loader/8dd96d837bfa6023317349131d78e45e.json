{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport SimpleLineIcons from \"@expo/vector-icons/SimpleLineIcons\";\nimport { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { chooseImage } from \"../../../utils/images\";\nimport { ORANGE, GREY, WHITE, DARKER_GREY, DARK_GREY, BLACK, BLUE } from \"../../../theme/colors\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { DEVICE_TYPE, DEVICE_OS, DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Container = DEVICE_OS === 'ios' ? KeyboardAvoidingView : View;\nexport var GroupInfoScreen = function GroupInfoScreen() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    uri: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      finalBase64 = _useState2[0],\n      setFinalBase64 = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var getPhotoFromLibrary = function _callee() {\n    var _await$chooseImage, mime, data, _finalBase;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(chooseImage());\n\n          case 3:\n            _await$chooseImage = _context.sent;\n            mime = _await$chooseImage.mime;\n            data = _await$chooseImage.data;\n            _finalBase = {\n              uri: \"data:\" + mime + \";base64,\" + data\n            };\n            setFinalBase64(_finalBase);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var validateInputs = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(name.length < 2)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", Alert.alert(t('createGroup.alert.title.formIncomplete'), name.length === 0 ? t('createGroup.alert.text.nameMissing') : t('createGroup.alert.text.nameTooShort')));\n\n          case 2:\n            navigation.navigate('NewGroup', {\n              photo: finalBase64 == null ? void 0 : finalBase64.uri,\n              name: name,\n              isPrimary: false\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(Container, {\n      testID: \"groupInfoScreen\",\n      style: styles.container,\n      behavior: \"padding\",\n      children: [_jsxs(View, {\n        style: styles.groupNameContainer,\n        children: [_jsx(View, {\n          style: styles.addPhotoContainer,\n          children: finalBase64.uri ? _jsx(TouchableOpacity, {\n            testID: \"editGroupPhoto\",\n            onPress: getPhotoFromLibrary,\n            accessible: true,\n            accessibilityLabel: t('common.accessibilityLabel.editPhoto'),\n            children: _jsx(Image, {\n              style: styles.photo,\n              source: finalBase64\n            })\n          }) : _jsx(TouchableOpacity, {\n            testID: \"editGroupPhoto\",\n            onPress: getPhotoFromLibrary,\n            style: styles.addPhoto,\n            accessible: true,\n            accessibilityLabel: t('common.accessibilityLabel.addPhoto'),\n            children: _jsx(SimpleLineIcons, {\n              size: 26,\n              name: \"camera\",\n              color: DARK_GREY\n            })\n          })\n        }), _jsx(View, {\n          style: styles.textInputContainer,\n          children: _jsx(TextInput, {\n            testID: \"editGroupName\",\n            onChangeText: setName,\n            value: name,\n            placeholder: t('createGroup.placeholder.groupName'),\n            placeholderTextColor: GREY,\n            style: styles.textInput,\n            autoCapitalize: \"words\",\n            autoCorrect: false,\n            textContentType: \"name\",\n            underlineColorAndroid: \"transparent\"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          testID: \"nextBtn\",\n          style: styles.nextButton,\n          onPress: validateInputs,\n          children: _jsx(Text, {\n            style: styles.buttonInnerText,\n            children: t('createGroup.button.next')\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  groupNameContainer: {\n    flexDirection: 'row',\n    marginTop: 22\n  },\n  addPhotoContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 28\n  },\n  textInputContainer: {\n    marginTop: 28,\n    minWidth: 200,\n    marginLeft: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    marginTop: DEVICE_TYPE === 'large' ? 35 : 28,\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n  },\n  addPhoto: {\n    borderWidth: 1,\n    borderColor: DARK_GREY,\n    height: 72,\n    width: 72,\n    borderRadius: 36,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  photo: {\n    width: 72,\n    height: 72,\n    borderRadius: 36,\n    shadowColor: BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2\n  },\n  hidden: {\n    display: 'none'\n  },\n  addPhotoText: {\n    fontFamily: 'ApexNew-Book',\n    color: DARK_GREY,\n    marginBottom: 8,\n    marginTop: 8,\n    fontSize: fontSize[12],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0\n  },\n  textInput: {\n    fontFamily: 'ApexNew-Light',\n    fontSize: fontSize[20],\n    fontWeight: '300',\n    fontStyle: 'normal',\n    color: BLACK,\n    letterSpacing: 0,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: GREY,\n    width: '100%',\n    height: 45\n  },\n  buttonInfoText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[16],\n    width: 300,\n    textAlign: 'center'\n  },\n  nextButton: {\n    backgroundColor: BLUE,\n    width: DEVICE_TYPE === 'large' ? 285 : 260,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: DEVICE_TYPE === 'large' ? 14 : 10,\n    paddingBottom: DEVICE_TYPE === 'large' ? 13 : 9,\n    marginTop: 22\n  },\n  buttonInnerText: {\n    fontFamily: 'ApexNew-Medium',\n    color: WHITE,\n    fontWeight: '600',\n    fontSize: fontSize[18]\n  },\n  loader: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  primaryToggleLable: {\n    color: DARKER_GREY,\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    width: 200\n  },\n  toggleContainer: {\n    marginTop: 30,\n    width: 300\n  },\n  primaryGroupText: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    width: 300,\n    textAlign: 'justify'\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/NewGroups/GroupInfoScreen.tsx"],"names":["Container","DEVICE_OS","GroupInfoScreen","t","useTranslation","navigation","useNavigation","finalBase64","setFinalBase64","useState","uri","name","setName","getPhotoFromLibrary","mime","data","chooseImage","console","validateInputs","Alert","photo","isPrimary","styles","StyleSheet","orangeTop","backgroundColor","height","DEVICE_LARGE","width","zIndex","container","flex","alignItems","flexDirection","justifyContent","borderTopLeftRadius","marginTop","overflow","groupNameContainer","addPhotoContainer","textInputContainer","minWidth","marginLeft","buttonContainer","DEVICE_TYPE","addPhoto","borderWidth","borderColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","hidden","display","addPhotoText","fontFamily","color","marginBottom","fontSize","fontWeight","fontStyle","letterSpacing","textInput","borderBottomWidth","borderBottomColor","buttonInfoText","textAlign","nextButton","paddingTop","paddingBottom","buttonInnerText","loader","primaryToggleLable","toggleContainer","primaryGroupText"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Alert,\n  Image,\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\nimport { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { chooseImage } from '@/utils/images';\nimport {\n  ORANGE,\n  GREY,\n  WHITE,\n  DARKER_GREY,\n  DARK_GREY,\n  BLACK,\n  BLUE,\n} from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_TYPE, DEVICE_OS, DEVICE_LARGE } from '@/utils/deviceConstants';\n\nconst Container = DEVICE_OS === 'ios' ? KeyboardAvoidingView : View;\n\nexport const GroupInfoScreen = () => {\n  const { t } = useTranslation();\n  const navigation = useNavigation();\n  const [finalBase64, setFinalBase64] = useState({ uri: '' });\n  const [name, setName] = useState('');\n\n  const getPhotoFromLibrary = async () => {\n    try {\n      const { mime, data } = await chooseImage();\n      const finalBase64 = {\n        uri: `data:${mime};base64,${data}`,\n      };\n      setFinalBase64(finalBase64);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const validateInputs = async () => {\n    if (name.length < 2) {\n      return Alert.alert(\n        t('createGroup.alert.title.formIncomplete'),\n        name.length === 0\n          ? t('createGroup.alert.text.nameMissing')\n          : t('createGroup.alert.text.nameTooShort'),\n      );\n    }\n    navigation.navigate('NewGroup', {\n      photo: finalBase64?.uri,\n      name,\n      isPrimary: false,\n    });\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <Container\n        testID=\"groupInfoScreen\"\n        style={styles.container}\n        behavior=\"padding\"\n      >\n        <View style={styles.groupNameContainer}>\n          <View style={styles.addPhotoContainer}>\n            {finalBase64.uri ? (\n              <TouchableOpacity\n                testID=\"editGroupPhoto\"\n                onPress={getPhotoFromLibrary}\n                accessible={true}\n                accessibilityLabel={t('common.accessibilityLabel.editPhoto')}\n              >\n                <Image style={styles.photo} source={finalBase64} />\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                testID=\"editGroupPhoto\"\n                onPress={getPhotoFromLibrary}\n                style={styles.addPhoto}\n                accessible={true}\n                accessibilityLabel={t('common.accessibilityLabel.addPhoto')}\n              >\n                <SimpleLineIcons size={26} name=\"camera\" color={DARK_GREY} />\n              </TouchableOpacity>\n            )}\n          </View>\n          <View style={styles.textInputContainer}>\n            <TextInput\n              testID=\"editGroupName\"\n              onChangeText={setName}\n              value={name}\n              placeholder={t('createGroup.placeholder.groupName')}\n              placeholderTextColor={GREY}\n              style={styles.textInput}\n              autoCapitalize=\"words\"\n              autoCorrect={false}\n              textContentType=\"name\"\n              underlineColorAndroid=\"transparent\"\n            />\n          </View>\n        </View>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            testID=\"nextBtn\"\n            style={styles.nextButton}\n            onPress={validateInputs}\n          >\n            <Text style={styles.buttonInnerText}>\n              {t('createGroup.button.next')}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </Container>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  groupNameContainer: {\n    flexDirection: 'row',\n    marginTop: 22,\n  },\n  addPhotoContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 28,\n  },\n  textInputContainer: {\n    marginTop: 28,\n    minWidth: 200,\n    marginLeft: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonContainer: {\n    marginTop: DEVICE_TYPE === 'large' ? 35 : 28,\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n  addPhoto: {\n    borderWidth: 1,\n    borderColor: DARK_GREY,\n    height: 72,\n    width: 72,\n    borderRadius: 36,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  photo: {\n    width: 72,\n    height: 72,\n    borderRadius: 36,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n  },\n  hidden: {\n    display: 'none',\n  },\n  addPhotoText: {\n    fontFamily: 'ApexNew-Book',\n    color: DARK_GREY,\n    marginBottom: 8,\n    marginTop: 8,\n    fontSize: fontSize[12],\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    letterSpacing: 0,\n  },\n  textInput: {\n    fontFamily: 'ApexNew-Light',\n    fontSize: fontSize[20],\n    fontWeight: '300',\n    fontStyle: 'normal',\n    color: BLACK,\n    letterSpacing: 0,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: GREY,\n    width: '100%',\n    height: 45,\n  },\n  buttonInfoText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[16],\n    width: 300,\n    textAlign: 'center',\n  },\n  nextButton: {\n    backgroundColor: BLUE,\n    width: DEVICE_TYPE === 'large' ? 285 : 260,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: DEVICE_TYPE === 'large' ? 14 : 10,\n    paddingBottom: DEVICE_TYPE === 'large' ? 13 : 9,\n    marginTop: 22,\n  },\n  buttonInnerText: {\n    fontFamily: 'ApexNew-Medium',\n    color: WHITE,\n    fontWeight: '600',\n    fontSize: fontSize[18],\n  },\n  loader: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n  primaryToggleLable: {\n    color: DARKER_GREY,\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[18],\n    width: 200,\n  },\n  toggleContainer: {\n    marginTop: 30,\n    width: 300,\n  },\n  primaryGroupText: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    width: 300,\n    textAlign: 'justify',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}