{"ast":null,"code":"'use strict';\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar startNativeAnimationNextId = 1;\n\nvar Animation = function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"names":["startNativeAnimationNextId","Animation","_proto","NativeAnimatedHelper","onEnd","startNativeAnimationWaitId","animatedValue"],"mappings":"AASA;;AAEA,OAAA,oBAAA;AACA,IAAIA,0BAA0B,GAA9B,CAAA;;AAIA,IAAIC,SAAS,GAAgB,YAAY;EACvC,SAAA,SAAA,GAAqB,CAErB;;EAAA,IAAIC,MAAM,GAAGD,SAAS,CAAtB,SAAA;;EAEAC,MAAM,CAANA,KAAAA,GAAe,SAAA,KAAA,CAAA,SAAA,EAAA,QAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,aAAA,EAA6E,CAA5FA,CAAAA;;EAEAA,MAAM,CAANA,IAAAA,GAAc,SAAA,IAAA,GAAgB;IAC5B,IAAI,KAAJ,UAAA,EAAqB;MACnBC,oBAAoB,CAApBA,GAAAA,CAAAA,aAAAA,CAAuC,KAAvCA,UAAAA;IAEH;EAJDD,CAAAA;;EAMAA,MAAM,CAANA,0BAAAA,GAAoC,SAAA,0BAAA,GAAsC;IAGxE,MAAM,IAAA,KAAA,CAAN,mDAAM,CAAN;EAHFA,CAAAA;;EAOAA,MAAM,CAANA,gBAAAA,GAA0B,SAAA,gBAAA,CAAA,MAAA,EAAkC;IAC1D,IAAIE,KAAK,GAAG,KAAZ,OAAA;IACA,KAAA,OAAA,GAAA,IAAA;IACAA,KAAK,IAAIA,KAAK,CAAdA,MAAc,CAAdA;EAHFF,CAAAA;;EAMAA,MAAM,CAANA,sBAAAA,GAAgC,SAAA,sBAAA,CAAA,aAAA,EAA+C;IAC7E,IAAIG,0BAA0B,GAAGL,0BAA0B,GAA3D,iBAAA;IACAA,0BAA0B,IAA1BA,CAAAA;IACAG,oBAAoB,CAApBA,GAAAA,CAAAA,uBAAAA,CAAAA,0BAAAA;;IAEA,IAAI;MACFG,aAAa,CAAbA,YAAAA;;MAEA,KAAA,UAAA,GAAkBH,oBAAoB,CAAtC,sBAAkBA,EAAlB;MACAA,oBAAoB,CAApBA,GAAAA,CAAAA,kBAAAA,CAA4C,KAA5CA,UAAAA,EAA6DG,aAAa,CAA1EH,cAA6DG,EAA7DH,EAA6F,KAA7FA,0BAA6F,EAA7FA,EAAgI,KAAA,gBAAA,CAAA,IAAA,CAAhIA,IAAgI,CAAhIA;IACA,CALF,CAKE,OAAA,CAAA,EAAU;MACV,MAAA,CAAA;IANF,CAAA,SAOU;MACRA,oBAAoB,CAApBA,GAAAA,CAAAA,yBAAAA,CAAAA,0BAAAA;IAEH;EAfDD,CAAAA;;EAiBA,OAAA,SAAA;AA3CF,CAA6B,EAA7B;;AA8CA,eAAA,SAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation() {}\n\n  var _proto = Animation.prototype;\n\n  _proto.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  _proto.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  _proto.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n  ;\n\n  _proto.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  _proto.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}