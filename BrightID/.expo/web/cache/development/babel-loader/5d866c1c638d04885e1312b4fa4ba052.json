{"ast":null,"code":"import i18n from 'i18next';\nimport moment from 'moment';\nimport { initReactI18next } from 'react-i18next';\nimport * as RNLocalize from 'react-native-localize';\nimport * as englishTranslation from \"./locales/en/translation.json\";\nimport * as frenchTranslation from \"./locales/fr/translation.json\";\nimport * as germanTranslation from \"./locales/de/translation.json\";\nimport * as spanishTranslation from \"./locales/es/translation.json\";\nimport * as hindiTranslation from \"./locales/hi/translation.json\";\nimport * as hansTranslation from \"./locales/zh_Hans/translation.json\";\nimport * as hantTranslation from \"./locales/zh_Hant/translation.json\";\nimport * as russianTranslation from \"./locales/ru/translation.json\";\nimport 'moment/locale/fr';\nimport 'moment/locale/de';\nimport 'moment/locale/es';\nimport 'moment/locale/hi';\nimport 'moment/locale/zh-cn';\nimport 'moment/locale/zh-tw';\nimport 'moment/locale/ru';\nvar translations = {\n  de: {\n    translation: germanTranslation\n  },\n  en: {\n    translation: englishTranslation\n  },\n  fr: {\n    translation: frenchTranslation\n  },\n  es: {\n    translation: spanishTranslation\n  },\n  hi: {\n    translation: hindiTranslation\n  },\n  'zh-Hans': {\n    translation: hansTranslation\n  },\n  'zh-Hant': {\n    translation: hantTranslation\n  },\n  ru: {\n    translation: russianTranslation\n  }\n};\nvar defaultLanguage = {\n  languageTag: 'en-US',\n  isRTL: false\n};\n\nvar _ref = RNLocalize.findBestAvailableLanguage(Object.keys(translations)) || defaultLanguage,\n    languageTag = _ref.languageTag;\n\nmoment.locale(languageTag);\ni18n.use(initReactI18next).init({\n  resources: translations,\n  lng: languageTag,\n  fallbackLng: 'en',\n  returnEmptyString: false,\n  interpolation: {\n    escapeValue: false\n  },\n  compatibilityJSON: 'v3'\n});\nexport default i18n;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/i18n.js"],"names":["translations","de","translation","en","fr","es","hi","ru","defaultLanguage","languageTag","isRTL","RNLocalize","Object","moment","i18n","resources","lng","fallbackLng","returnEmptyString","interpolation","escapeValue","compatibilityJSON"],"mappings":"AAAA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,gBAAA,QAAA,eAAA;AACA,OAAO,KAAP,UAAA,MAAA,uBAAA;AAMA,OAAO,KAAP,kBAAA;AACA,OAAO,KAAP,iBAAA;AACA,OAAO,KAAP,iBAAA;AACA,OAAO,KAAP,kBAAA;AACA,OAAO,KAAP,gBAAA;AACA,OAAO,KAAP,eAAA;AACA,OAAO,KAAP,eAAA;AACA,OAAO,KAAP,kBAAA;AAMA,OAAA,kBAAA;AACA,OAAA,kBAAA;AACA,OAAA,kBAAA;AACA,OAAA,kBAAA;AACA,OAAA,qBAAA;AACA,OAAA,qBAAA;AACA,OAAA,kBAAA;AAEA,IAAMA,YAAY,GAAG;EACnBC,EAAE,EAAE;IACFC,WAAW,EAFM;EACf,CADe;EAInBC,EAAE,EAAE;IACFD,WAAW,EALM;EAIf,CAJe;EAOnBE,EAAE,EAAE;IACFF,WAAW,EARM;EAOf,CAPe;EAUnBG,EAAE,EAAE;IACFH,WAAW,EAXM;EAUf,CAVe;EAanBI,EAAE,EAAE;IACFJ,WAAW,EAdM;EAaf,CAbe;EAgBnB,WAAW;IACTA,WAAW,EAjBM;EAgBR,CAhBQ;EAmBnB,WAAW;IACTA,WAAW,EApBM;EAmBR,CAnBQ;EAsBnBK,EAAE,EAAE;IACFL,WAAW,EAvBf;EAsBM;AAtBe,CAArB;AA2BA,IAAMM,eAAe,GAAG;EACtBC,WAAW,EADW,OAAA;EAEtBC,KAAK,EAFP;AAAwB,CAAxB;;AAKA,IAAA,IAAA,GACEC,UAAU,CAAVA,yBAAAA,CAAqCC,MAAM,CAANA,IAAAA,CAArCD,YAAqCC,CAArCD,KADF,eAAA;AAAA,IAAQF,WAAR,GAAA,IAAA,CAAA,WAAA;;AAUAI,MAAM,CAANA,MAAAA,CAAAA,WAAAA;AAEAC,IAAI,CAAJA,GAAAA,CAAAA,gBAAAA,EAAAA,IAAAA,CAEQ;EACJC,SAAS,EADL,YAAA;EAEJC,GAAG,EAFC,WAAA;EAGJC,WAAW,EAHP,IAAA;EAIJC,iBAAiB,EAJb,KAAA;EAKJC,aAAa,EAAE;IACbC,WAAW,EANT;EAKW,CALX;EAQJC,iBAAiB,EAVrBP;AAEQ,CAFRA;AAaA,eAAA,IAAA","sourcesContent":["import i18n from 'i18next';\nimport moment from 'moment';\nimport { initReactI18next } from 'react-i18next';\nimport * as RNLocalize from 'react-native-localize';\n\n/**\n * For each supported language, import the corresponding language file.\n * Consumed by i18next.\n */\nimport * as englishTranslation from './locales/en/translation.json';\nimport * as frenchTranslation from './locales/fr/translation.json';\nimport * as germanTranslation from './locales/de/translation.json';\nimport * as spanishTranslation from './locales/es/translation.json';\nimport * as hindiTranslation from './locales/hi/translation.json';\nimport * as hansTranslation from './locales/zh_Hans/translation.json';\nimport * as hantTranslation from './locales/zh_Hant/translation.json';\nimport * as russianTranslation from './locales/ru/translation.json';\n\n/**\n * For each supported language other than English, import the corresponding moment locale\n * Used for time formatting and things like `fromNow()` (\"[...] ago\")\n */\nimport 'moment/locale/fr';\nimport 'moment/locale/de';\nimport 'moment/locale/es';\nimport 'moment/locale/hi';\nimport 'moment/locale/zh-cn'; // simplified chinese\nimport 'moment/locale/zh-tw'; // traditional chinese\nimport 'moment/locale/ru';\n\nconst translations = {\n  de: {\n    translation: germanTranslation,\n  },\n  en: {\n    translation: englishTranslation,\n  },\n  fr: {\n    translation: frenchTranslation,\n  },\n  es: {\n    translation: spanishTranslation,\n  },\n  hi: {\n    translation: hindiTranslation,\n  },\n  'zh-Hans': {\n    translation: hansTranslation,\n  },\n  'zh-Hant': {\n    translation: hantTranslation,\n  },\n  ru: {\n    translation: russianTranslation,\n  },\n};\n\nconst defaultLanguage = {\n  languageTag: 'en-US',\n  isRTL: false,\n};\n\nconst { languageTag } =\n  RNLocalize.findBestAvailableLanguage(Object.keys(translations)) ||\n  defaultLanguage;\n\n// console.log(RNLocalize.getLocales());\n// console.log(`Using languagetag ${languageTag}`);\n\n/**\n * Moment will use detected language throughout the app.\n */\nmoment.locale(languageTag);\n\ni18n\n  .use(initReactI18next) // bind react-i18next to the instance\n  .init({\n    resources: translations,\n    lng: languageTag,\n    fallbackLng: 'en',\n    returnEmptyString: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    compatibilityJSON: 'v3',\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}