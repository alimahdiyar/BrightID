{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.RecoveryConnectionsScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialCommunityIcons\"));\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _operationsSlice = require(\"../../reducer/operationsSlice\");\n\nvar _connectionsSlice = require(\"../../reducer/connectionsSlice\");\n\nvar _store = require(\"../../store\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _NodeApiGate = require(\"../NodeApiGate\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _RecoverConnectionsCard = _interopRequireDefault(require(\"./RecoverConnectionsCard\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/RecoveryConnections/RecoveryConnectionsScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EmptyList = function EmptyList() {\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingHorizontal: '10%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_MaterialCommunityIcons.default, {\n    size: _deviceConstants.DEVICE_LARGE ? 48 : 38,\n    name: \"alert-outline\",\n    color: _colors.GREY,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.emptyText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, t('recoveryConnections.text.emptyList')));\n};\n\nvar RecoveryConnectionsScreen = function RecoveryConnectionsScreen(props) {\n  var navigation = props.navigation;\n  var headerHeight = (0, _stack.useHeaderHeight)();\n\n  if (_deviceConstants.DEVICE_IOS && _deviceConstants.DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var _useTranslation2 = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation2.t;\n\n  var me = (0, _store.useSelector)(function (state) {\n    return state.user;\n  });\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      recoveryConnections = _useState4[0],\n      setRecoveryConnections = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(undefined),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      connectionProfile = _useState6[0],\n      setConnectionProfile = _useState6[1];\n\n  var myConnections = (0, _store.useSelector)(_connectionsSlice.selectAllConnections);\n  var pendingOpsCount = (0, _store.useSelector)(_operationsSlice.selectPendingOperations).length;\n  var api = (0, _react.useContext)(_NodeApiGate.NodeApiContext);\n  (0, _native.useFocusEffect)((0, _react.useCallback)(function () {\n    var fetchData = function _callee() {\n      var profile, recoveryConnections;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (!(pendingOpsCount > 0)) {\n                _context.next = 4;\n                break;\n              }\n\n              console.log('waiting for pending operations to apply');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              console.log(\"fetching own recovery connections\");\n              _context.next = 7;\n              return _regenerator.default.awrap(api.getProfile(me.id));\n\n            case 7:\n              profile = _context.sent;\n              setConnectionProfile(profile);\n              recoveryConnections = profile.recoveryConnections.map(function (rc) {\n                var conn = myConnections.find(function (c) {\n                  return rc.id === c.id;\n                });\n                return conn || {\n                  id: rc.id\n                };\n              });\n              setRecoveryConnections(recoveryConnections);\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [api, me.id, myConnections, pendingOpsCount]));\n\n  var getActiveTime = function getActiveTime(item) {\n    if (!connectionProfile) {\n      return {\n        activeBefore: 0,\n        activeAfter: 0\n      };\n    }\n\n    var rc = connectionProfile.recoveryConnections.find(function (rc) {\n      return rc.id === item.id;\n    });\n    return {\n      activeBefore: rc.activeBefore,\n      activeAfter: rc.activeAfter\n    };\n  };\n\n  var Loading = function Loading() {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.loadingContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNativeSpinkit.default, {\n      size: _deviceConstants.DEVICE_LARGE ? 48 : 42,\n      type: \"Wave\",\n      color: _colors.BLUE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var RecoveryConnectionList = function RecoveryConnectionList() {\n    return _react.default.createElement(_reactNative.FlatList, {\n      data: recoveryConnections,\n      style: styles.recoveryConnectionContainer,\n      contentContainerStyle: {\n        paddingBottom: '35%',\n        paddingTop: 20,\n        flexGrow: 1\n      },\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _react.default.createElement(_RecoverConnectionsCard.default, (0, _extends2.default)({}, item, getActiveTime(item), {\n          index: index,\n          isModify: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }\n        }));\n      },\n      ListEmptyComponent: _react.default.createElement(EmptyList, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 27\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, styles.shadow, {\n      marginTop: headerHeight\n    }],\n    testID: \"RecoveryConnectionsScreen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, recoveryConnections.length > 0 && _react.default.createElement(_reactNative.View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, t('recoveryConnections.text.currentRecoveryConnections'))), loading ? _react.default.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 18\n    }\n  }) : _react.default.createElement(RecoveryConnectionList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 32\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, recoveryConnections.length === 0 ? _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecoveryConnectionsList');\n    },\n    style: styles.orangeButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.orangeButtonLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, t('recoveryConnections.text.addRecoveryConnections'))) : _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecoveryConnectionsList');\n    },\n    style: styles.transparentBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.transparentBtnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, t('recoveryConnections.text.addMoreRecovery')))));\n};\n\nexports.RecoveryConnectionsScreen = RecoveryConnectionsScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    backgroundColor: _colors.WHITE,\n    flex: 1,\n    width: '100%',\n    borderTopLeftRadius: _deviceConstants.DEVICE_LARGE ? 50 : 40\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '20%',\n    marginBottom: '5%'\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16]\n  },\n  recoveryConnectionContainer: {\n    flex: 1,\n    width: '100%'\n  },\n  buttonContainer: {\n    position: 'absolute',\n    zIndex: 10,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    paddingTop: '8%',\n    paddingBottom: _deviceConstants.DEVICE_ANDROID ? '9%' : '11%',\n    backgroundColor: _colors.WHITE\n  },\n  transparentBtn: {\n    backgroundColor: _colors.WHITE,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    width: '100%',\n    paddingLeft: '10%'\n  },\n  transparentBtnText: {\n    fontFamily: 'Poppins-Medium',\n    color: _colors.BLUE,\n    fontSize: _fonts.fontSize[16]\n  },\n  orangeButton: {\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    backgroundColor: _colors.ORANGE,\n    width: '85%'\n  },\n  orangeButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    color: _colors.WHITE,\n    fontSize: _fonts.fontSize[15]\n  },\n  hollowButton: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: _colors.GREY,\n    backgroundColor: _colors.WHITE\n  },\n  hollowButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[15],\n    color: _colors.GREY\n  },\n  emptyText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: _fonts.fontSize[18],\n    color: _colors.GREY,\n    marginVertical: 15\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingBottom: 20\n  }\n});\n\nvar _default = RecoveryConnectionsScreen;\nexports.default = _default;","map":{"version":3,"names":["EmptyList","useTranslation","t","flex","height","width","alignItems","justifyContent","paddingHorizontal","DEVICE_LARGE","GREY","styles","emptyText","RecoveryConnectionsScreen","props","navigation","headerHeight","useHeaderHeight","DEVICE_IOS","me","useSelector","state","user","useState","loading","setLoading","recoveryConnections","setRecoveryConnections","undefined","connectionProfile","setConnectionProfile","myConnections","selectAllConnections","pendingOpsCount","selectPendingOperations","length","api","useContext","NodeApiContext","useFocusEffect","useCallback","fetchData","console","log","getProfile","id","profile","map","rc","conn","find","c","getActiveTime","item","activeBefore","activeAfter","Loading","loadingContainer","BLUE","RecoveryConnectionList","recoveryConnectionContainer","paddingBottom","paddingTop","flexGrow","index","container","shadow","marginTop","titleContainer","title","buttonContainer","navigate","orangeButton","orangeButtonLabel","transparentBtn","transparentBtnText","StyleSheet","create","backgroundColor","WHITE","borderTopLeftRadius","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","marginBottom","fontFamily","fontSize","position","zIndex","bottom","left","right","flexDirection","DEVICE_ANDROID","paddingLeft","color","borderRadius","ORANGE","hollowButton","borderWidth","borderColor","hollowButtonLabel","textAlign","fontWeight","marginVertical"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/RecoveryConnections/RecoveryConnectionsScreen.tsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n} from 'react-native';\n// Redux\nimport Spinner from 'react-native-spinkit';\nimport { useTranslation } from 'react-i18next';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { selectPendingOperations } from '@/reducer/operationsSlice';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\nimport { useSelector } from '@/store';\nimport {\n  DEVICE_LARGE,\n  DEVICE_IOS,\n  DEVICE_ANDROID,\n} from '@/utils/deviceConstants';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { ORANGE, WHITE, BLUE, GREY } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\n\n// Import Components Local\nimport RecoveryConnectionCard from './RecoverConnectionsCard';\n\n// Create Custom Local Components\nconst EmptyList = () => {\n  const { t } = useTranslation();\n  return (\n    <View\n      style={{\n        flex: 1,\n        height: '100%',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingHorizontal: '10%',\n      }}\n    >\n      <MaterialCommunityIcons\n        size={DEVICE_LARGE ? 48 : 38}\n        name=\"alert-outline\"\n        color={GREY}\n      />\n      <Text style={styles.emptyText}>\n        {t('recoveryConnections.text.emptyList')}\n      </Text>\n    </View>\n  );\n};\n\nexport const RecoveryConnectionsScreen = (props) => {\n  const { navigation } = props;\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const { t } = useTranslation();\n  const me = useSelector((state: State) => state.user);\n  const [loading, setLoading] = useState(true);\n  const [recoveryConnections, setRecoveryConnections] = useState<\n    Array<Connection>\n  >([]);\n  const [connectionProfile, setConnectionProfile] = useState<\n    ProfileInfo | undefined\n  >(undefined);\n  const myConnections = useSelector(selectAllConnections);\n  const pendingOpsCount = useSelector(selectPendingOperations).length;\n  const api = useContext(NodeApiContext);\n\n  useFocusEffect(\n    useCallback(() => {\n      const fetchData = async () => {\n        setLoading(true);\n        if (pendingOpsCount > 0) {\n          console.log('waiting for pending operations to apply');\n          return;\n        }\n        console.log(`fetching own recovery connections`);\n        const profile: ProfileInfo = await api.getProfile(me.id);\n        setConnectionProfile(profile);\n        const recoveryConnections = profile.recoveryConnections.map((rc) => {\n          const conn = myConnections.find((c) => rc.id === c.id);\n          return conn || { id: rc.id };\n        });\n        setRecoveryConnections(recoveryConnections);\n        setLoading(false);\n      };\n      fetchData();\n    }, [api, me.id, myConnections, pendingOpsCount]),\n  );\n\n  const getActiveTime = (item) => {\n    if (!connectionProfile) {\n      return { activeBefore: 0, activeAfter: 0 };\n    }\n    const rc = connectionProfile.recoveryConnections.find(\n      (rc) => rc.id === item.id,\n    );\n    return { activeBefore: rc.activeBefore, activeAfter: rc.activeAfter };\n  };\n\n  const Loading = () => (\n    <View style={styles.loadingContainer}>\n      <Spinner size={DEVICE_LARGE ? 48 : 42} type=\"Wave\" color={BLUE} />\n    </View>\n  );\n\n  const RecoveryConnectionList = () => (\n    <FlatList\n      data={recoveryConnections}\n      style={styles.recoveryConnectionContainer}\n      contentContainerStyle={{\n        paddingBottom: '35%',\n        paddingTop: 20,\n        flexGrow: 1,\n      }}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      renderItem={({ item, index }) => (\n        <RecoveryConnectionCard\n          {...item}\n          {...getActiveTime(item)}\n          index={index}\n          isModify={true}\n        />\n      )}\n      ListEmptyComponent={<EmptyList />}\n    />\n  );\n\n  return (\n    <View\n      style={[styles.container, styles.shadow, { marginTop: headerHeight }]}\n      testID=\"RecoveryConnectionsScreen\"\n    >\n      {recoveryConnections.length > 0 && (\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>\n            {t('recoveryConnections.text.currentRecoveryConnections')}\n          </Text>\n        </View>\n      )}\n      {loading ? <Loading /> : <RecoveryConnectionList />}\n\n      <View style={styles.buttonContainer}>\n        {recoveryConnections.length === 0 ? (\n          <TouchableOpacity\n            onPress={() => navigation.navigate('RecoveryConnectionsList')}\n            style={styles.orangeButton}\n          >\n            <Text style={styles.orangeButtonLabel}>\n              {t('recoveryConnections.text.addRecoveryConnections')}\n            </Text>\n          </TouchableOpacity>\n        ) : (\n          <TouchableOpacity\n            onPress={() => navigation.navigate('RecoveryConnectionsList')}\n            style={styles.transparentBtn}\n          >\n            <Text style={styles.transparentBtnText}>\n              {t('recoveryConnections.text.addMoreRecovery')}\n            </Text>\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    width: '100%',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    // flex: 1,\n    marginTop: '20%',\n    marginBottom: '5%',\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n  },\n  recoveryConnectionContainer: {\n    flex: 1,\n    // flexGrow: 1,\n    width: '100%',\n  },\n  buttonContainer: {\n    position: 'absolute',\n    zIndex: 10,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    paddingTop: '8%',\n    paddingBottom: DEVICE_ANDROID ? '9%' : '11%',\n    backgroundColor: WHITE,\n  },\n  transparentBtn: {\n    backgroundColor: WHITE,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    width: '100%',\n    paddingLeft: '10%',\n  },\n  transparentBtnText: {\n    fontFamily: 'Poppins-Medium',\n    color: BLUE,\n    fontSize: fontSize[16],\n  },\n  orangeButton: {\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    backgroundColor: ORANGE,\n    width: '85%',\n  },\n  orangeButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    color: WHITE,\n    fontSize: fontSize[15],\n  },\n  hollowButton: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: GREY,\n    backgroundColor: WHITE,\n  },\n  hollowButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: GREY,\n  },\n  emptyText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: fontSize[18],\n    color: GREY,\n    marginVertical: 15,\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingBottom: 20,\n  },\n});\n\nexport default RecoveryConnectionsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}