{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport TouchableOpacity from \"../TouchableOpacity\";\nimport Text from \"../Text\";\nvar Button = React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/Button/index.js"],"names":["Button","React","accessibilityLabel","props","color","disabled","onPress","testID","title","accessibilityRole","focusable","ref","style","styles","backgroundColor","StyleSheet","button","borderRadius","text","fontWeight","padding","textAlign","textTransform","buttonDisabled","textDisabled"],"mappings":"AASA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,UAAA;AACA,OAAA,gBAAA;AACA,OAAA,IAAA;AACA,IAAIA,MAAM,GAAgBC,KAAK,CAALA,UAAAA,CAAiB,UAAA,KAAA,EAAA,YAAA,EAA+B;EACxE,IAAIC,kBAAkB,GAAGC,KAAK,CAA9B,kBAAA;EAAA,IACIC,KAAK,GAAGD,KAAK,CADjB,KAAA;EAAA,IAEIE,QAAQ,GAAGF,KAAK,CAFpB,QAAA;EAAA,IAGIG,OAAO,GAAGH,KAAK,CAHnB,OAAA;EAAA,IAIII,MAAM,GAAGJ,KAAK,CAJlB,MAAA;EAAA,IAKIK,KAAK,GAAGL,KAAK,CALjB,KAAA;EAMA,OAAoBF,KAAK,CAALA,aAAAA,CAAAA,gBAAAA,EAAsC;IACxDC,kBAAkB,EADsC,kBAAA;IAExDO,iBAAiB,EAFuC,QAAA;IAGxDJ,QAAQ,EAHgD,QAAA;IAIxDK,SAAS,EAAE,CAJ6C,QAAA;IAKxDJ,OAAO,EALiD,OAAA;IAMxDK,GAAG,EANqD,YAAA;IAOxDC,KAAK,EAAE,CAACC,MAAM,CAAP,MAAA,EAAgBT,KAAK,IAAI;MAC9BU,eAAe,EADV;IAAyB,CAAzB,EAEJT,QAAQ,IAAIQ,MAAM,CATmC,cAOjD,CAPiD;IAUxDN,MAAM,EAVYN;EAAsC,CAAtCA,EAWJA,KAAK,CAALA,aAAAA,CAAAA,IAAAA,EAA0B;IACxCW,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAcR,QAAQ,IAAIQ,MAAM,CADzBZ,YACP;EADiC,CAA1BA,EAXhB,KAWgBA,CAXIA,CAApB;AAPF,CAA0BA,CAA1B;AAsBAD,MAAM,CAANA,WAAAA,GAAAA,QAAAA;AACA,IAAIa,MAAM,GAAGE,UAAU,CAAVA,MAAAA,CAAkB;EAC7BC,MAAM,EAAE;IACNF,eAAe,EADT,SAAA;IAENG,YAAY,EAHe;EACrB,CADqB;EAK7BC,IAAI,EAAE;IACJd,KAAK,EADD,MAAA;IAEJe,UAAU,EAFN,KAAA;IAGJC,OAAO,EAHH,CAAA;IAIJC,SAAS,EAJL,QAAA;IAKJC,aAAa,EAVc;EAKvB,CALuB;EAY7BC,cAAc,EAAE;IACdT,eAAe,EAbY;EAYb,CAZa;EAe7BU,YAAY,EAAE;IACZpB,KAAK,EAhBT;EAegB;AAfe,CAAlBW,CAAb;AAmBA,eAAA,MAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport TouchableOpacity from '../TouchableOpacity';\nimport Text from '../Text';\nvar Button = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      color = props.color,\n      disabled = props.disabled,\n      onPress = props.onPress,\n      testID = props.testID,\n      title = props.title;\n  return /*#__PURE__*/React.createElement(TouchableOpacity, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: disabled,\n    focusable: !disabled,\n    onPress: onPress,\n    ref: forwardedRef,\n    style: [styles.button, color && {\n      backgroundColor: color\n    }, disabled && styles.buttonDisabled],\n    testID: testID\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: [styles.text, disabled && styles.textDisabled]\n  }, title));\n});\nButton.displayName = 'Button';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#2196F3',\n    borderRadius: 2\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '500',\n    padding: 8,\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  buttonDisabled: {\n    backgroundColor: '#dfdfdf'\n  },\n  textDisabled: {\n    color: '#a1a1a1'\n  }\n});\nexport default Button;"]},"metadata":{},"sourceType":"module"}