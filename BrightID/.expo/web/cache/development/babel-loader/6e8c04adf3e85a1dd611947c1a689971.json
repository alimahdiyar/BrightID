{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.BackupSteps = exports.AccountSteps = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _store = require(\"../../../store\");\n\nvar _colors = require(\"../../../theme/colors\");\n\nvar _deviceConstants = require(\"../../../utils/deviceConstants\");\n\nvar _userSlice = require(\"../../../reducer/userSlice\");\n\nvar _RecoverAccount = require(\"./RecoverAccount\");\n\nvar _RestoreBackup = require(\"./RestoreBackup\");\n\nvar _NodeApiGate = require(\"../../NodeApiGate\");\n\nvar _recoveryThunks = require(\"./thunks/recoveryThunks\");\n\nvar _channelThunks = require(\"./thunks/channelThunks\");\n\nvar _operationsSlice = require(\"../../../reducer/operationsSlice\");\n\nvar _constants = require(\"../../../utils/constants\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RestoreScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar channelTimeout = _channelThunks.CHANNEL_POLL_INTERVAL * 3.1;\nvar AccountSteps;\nexports.AccountSteps = AccountSteps;\n\n(function (AccountSteps) {\n  AccountSteps[AccountSteps[\"WAITING_DOWNLOAD\"] = 0] = \"WAITING_DOWNLOAD\";\n  AccountSteps[AccountSteps[\"DOWNLOAD_COMPLETE\"] = 1] = \"DOWNLOAD_COMPLETE\";\n  AccountSteps[AccountSteps[\"WAITING_OPERATION\"] = 2] = \"WAITING_OPERATION\";\n  AccountSteps[AccountSteps[\"OPERATION_APPLIED\"] = 3] = \"OPERATION_APPLIED\";\n  AccountSteps[AccountSteps[\"ERROR\"] = 4] = \"ERROR\";\n  AccountSteps[AccountSteps[\"COMPLETE\"] = 5] = \"COMPLETE\";\n})(AccountSteps || (exports.AccountSteps = AccountSteps = {}));\n\nvar BackupSteps;\nexports.BackupSteps = BackupSteps;\n\n(function (BackupSteps) {\n  BackupSteps[BackupSteps[\"WAITING_ACCOUNT\"] = 0] = \"WAITING_ACCOUNT\";\n  BackupSteps[BackupSteps[\"WAITING_PASSWORD\"] = 1] = \"WAITING_PASSWORD\";\n  BackupSteps[BackupSteps[\"RESTORING_DATA\"] = 2] = \"RESTORING_DATA\";\n  BackupSteps[BackupSteps[\"SKIPPED\"] = 3] = \"SKIPPED\";\n  BackupSteps[BackupSteps[\"ERROR\"] = 4] = \"ERROR\";\n  BackupSteps[BackupSteps[\"COMPLETE\"] = 5] = \"COMPLETE\";\n})(BackupSteps || (exports.BackupSteps = BackupSteps = {}));\n\nvar RestoreScreen = function RestoreScreen() {\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      pass = _useState2[0],\n      setPass = _useState2[1];\n\n  var api = (0, _react.useContext)(_NodeApiGate.NodeApiContext);\n  var recoveredConnections = (0, _store.useSelector)(function (state) {\n    return state.recoveryData.recoveredConnections;\n  });\n  var recoveredGroups = (0, _store.useSelector)(function (state) {\n    return state.recoveryData.recoveredGroups;\n  });\n\n  var _useState3 = (0, _react.useState)(AccountSteps.WAITING_DOWNLOAD),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      accountStep = _useState4[0],\n      setAccountStep = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(BackupSteps.WAITING_ACCOUNT),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      dataStep = _useState6[0],\n      setDataStep = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      accountError = _useState8[0],\n      setAccountError = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(''),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      recoveryOpHash = _useState10[0],\n      setRecoveryOpHash = _useState10[1];\n\n  var recoveryOp = (0, _store.useSelector)(function (state) {\n    return (0, _operationsSlice.selectOperationByHash)(state, recoveryOpHash);\n  });\n\n  var _useState11 = (0, _react.useState)(0),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      currentItem = _useState12[0],\n      setCurrentItem = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(0),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      totalItems = _useState14[0],\n      setTotalItems = _useState14[1];\n\n  var dispatch = (0, _store.useDispatch)();\n  (0, _native.useFocusEffect)((0, _react.useCallback)(function () {\n    var t = setTimeout(function () {\n      (0, _channelThunks.clearChannel)();\n      setAccountStep(AccountSteps.DOWNLOAD_COMPLETE);\n    }, channelTimeout);\n    return function () {\n      clearTimeout(t);\n    };\n  }, []));\n  (0, _react.useEffect)(function () {\n    var startRecovery = function _callee() {\n      var op, errorString;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setAccountStep(AccountSteps.WAITING_OPERATION);\n              console.log(\"Starting account recovery\");\n              _context.next = 5;\n              return _regenerator.default.awrap(dispatch((0, _recoveryThunks.socialRecovery)(api)));\n\n            case 5:\n              op = _context.sent;\n\n              if (op === 'ALREADY APPLIED') {\n                setAccountStep(AccountSteps.OPERATION_APPLIED);\n              } else {\n                console.log(\"Recover op Hash: \" + op.hash);\n                setRecoveryOpHash(op.hash);\n              }\n\n              _context.next = 16;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              errorString = '';\n\n              if (_context.t0 instanceof Error) {\n                errorString = \"\" + _context.t0.message;\n              } else {\n                errorString = \"\" + _context.t0;\n              }\n\n              console.log(\"Error during account recovery: \" + errorString);\n              setAccountStep(AccountSteps.ERROR);\n              setAccountError(errorString);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    var finishRecovery = function _callee2() {\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch((0, _recoveryThunks.setRecoveryKeys)());\n              setAccountStep(AccountSteps.COMPLETE);\n              setDataStep(BackupSteps.WAITING_PASSWORD);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    switch (accountStep) {\n      case AccountSteps.DOWNLOAD_COMPLETE:\n        startRecovery();\n        break;\n\n      case AccountSteps.OPERATION_APPLIED:\n        finishRecovery();\n        break;\n\n      default:\n        break;\n    }\n  }, [dispatch, accountStep, api]);\n  (0, _react.useEffect)(function () {\n    switch (dataStep) {\n      case BackupSteps.COMPLETE:\n        dispatch((0, _userSlice.setPassword)(pass));\n        dispatch((0, _userSlice.setBackupCompleted)(true));\n        break;\n\n      default:\n        break;\n    }\n  }, [dataStep, dispatch, pass]);\n  (0, _react.useEffect)(function () {\n    if (accountStep === AccountSteps.COMPLETE && (dataStep === BackupSteps.COMPLETE || dataStep === BackupSteps.SKIPPED)) {\n      console.log(\"Recovery process finished!\");\n\n      _reactNative.Alert.alert(t('common.alert.info'), t('restore.alert.text.restoreSuccess'), [{\n        text: t('common.alert.ok')\n      }]);\n\n      dispatch((0, _recoveryThunks.finishRecovery)());\n    }\n  }, [accountStep, dataStep, dispatch, t]);\n  (0, _react.useEffect)(function () {\n    if (recoveryOp && accountStep === AccountSteps.WAITING_OPERATION) {\n      console.log(\"recover Op state: \" + recoveryOp.state);\n\n      switch (recoveryOp.state) {\n        case _constants.operation_states.UNKNOWN:\n        case _constants.operation_states.INIT:\n        case _constants.operation_states.SENT:\n          break;\n\n        case _constants.operation_states.APPLIED:\n          setAccountStep(AccountSteps.OPERATION_APPLIED);\n          setRecoveryOpHash('');\n          break;\n\n        case _constants.operation_states.FAILED:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation could not be applied');\n          setRecoveryOpHash('');\n          break;\n\n        case _constants.operation_states.EXPIRED:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation timed out');\n          setRecoveryOpHash('');\n          break;\n\n        default:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Unhandled operation state');\n          setRecoveryOpHash('');\n      }\n    }\n  }, [recoveryOp, accountStep]);\n\n  var skip = function skip() {\n    setPass('');\n    setDataStep(BackupSteps.SKIPPED);\n  };\n\n  var restoreBackup = function _callee3() {\n    var errorString;\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log(\"Starting restore backup\");\n            setDataStep(BackupSteps.RESTORING_DATA);\n            _context3.next = 5;\n            return _regenerator.default.awrap(dispatch((0, _recoveryThunks.recoverData)(pass, api, setTotalItems, setCurrentItem)));\n\n          case 5:\n            console.log(\"Successfully restored backup\");\n            setDataStep(BackupSteps.COMPLETE);\n            _context3.next = 15;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            errorString = '';\n\n            if (_context3.t0 instanceof Error) {\n              errorString = _context3.t0.name + \" - \" + _context3.t0.message;\n            } else {\n              errorString = \"\" + _context3.t0;\n            }\n\n            console.log(\"Error during recover: \" + errorString);\n            setDataStep(BackupSteps.ERROR);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.orangeTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"position\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.recoverAccountContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_RecoverAccount.RecoverAccount, {\n    currentStep: accountStep,\n    recoveredGroups: recoveredGroups,\n    recoveredConnections: recoveredConnections,\n    errorMessage: accountError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.restoreBackupContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_RestoreBackup.RestoreBackup, {\n    currentStep: dataStep,\n    doRestore: restoreBackup,\n    doSkip: skip,\n    password: pass,\n    setPassword: setPass,\n    totalItems: totalItems,\n    currentItem: currentItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  orangeTop: {\n    backgroundColor: _colors.ORANGE,\n    height: _deviceConstants.DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  divider: {\n    marginTop: _deviceConstants.DEVICE_LARGE ? 40 : 20,\n    marginBottom: _deviceConstants.DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: _colors.BLACK\n  },\n  recoverAccountContainer: {\n    marginTop: _deviceConstants.DEVICE_LARGE ? 25 : 20,\n    minHeight: '25%'\n  },\n  restoreBackupContainer: {\n    height: '50%'\n  }\n});\n\nvar _default = RestoreScreen;\nexports.default = _default;","map":{"version":3,"names":["channelTimeout","CHANNEL_POLL_INTERVAL","AccountSteps","BackupSteps","RestoreScreen","useTranslation","t","useState","pass","setPass","api","useContext","NodeApiContext","recoveredConnections","useSelector","state","recoveryData","recoveredGroups","WAITING_DOWNLOAD","accountStep","setAccountStep","WAITING_ACCOUNT","dataStep","setDataStep","accountError","setAccountError","recoveryOpHash","setRecoveryOpHash","recoveryOp","selectOperationByHash","currentItem","setCurrentItem","totalItems","setTotalItems","dispatch","useDispatch","useFocusEffect","useCallback","setTimeout","clearChannel","DOWNLOAD_COMPLETE","clearTimeout","useEffect","startRecovery","WAITING_OPERATION","console","log","socialRecovery","op","OPERATION_APPLIED","hash","errorString","Error","message","ERROR","finishRecovery","setRecoveryKeys","COMPLETE","WAITING_PASSWORD","setPassword","setBackupCompleted","SKIPPED","Alert","alert","text","operation_states","UNKNOWN","INIT","SENT","APPLIED","FAILED","EXPIRED","skip","restoreBackup","RESTORING_DATA","recoverData","name","styles","orangeTop","container","recoverAccountContainer","divider","restoreBackupContainer","StyleSheet","create","backgroundColor","ORANGE","height","DEVICE_LARGE","width","zIndex","flex","WHITE","alignItems","flexDirection","justifyContent","borderTopLeftRadius","marginTop","overflow","marginBottom","borderBottomWidth","hairlineWidth","borderColor","BLACK","minHeight"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RestoreScreen.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { StyleSheet, View, KeyboardAvoidingView, Alert } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from '@/store';\nimport { BLACK, ORANGE, WHITE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { setBackupCompleted, setPassword } from '@/reducer/userSlice';\nimport { RecoverAccount } from '@/components/Onboarding/RecoveryFlow/RecoverAccount';\nimport { RestoreBackup } from '@/components/Onboarding/RecoveryFlow/RestoreBackup';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport {\n  finishRecovery,\n  recoverData,\n  setRecoveryKeys,\n  socialRecovery,\n} from './thunks/recoveryThunks';\nimport { CHANNEL_POLL_INTERVAL, clearChannel } from './thunks/channelThunks';\nimport { selectOperationByHash } from '@/reducer/operationsSlice';\nimport { operation_states } from '@/utils/constants';\n\n// clear channel after this time\nconst channelTimeout = CHANNEL_POLL_INTERVAL * 3.1;\n\nexport enum AccountSteps {\n  WAITING_DOWNLOAD,\n  DOWNLOAD_COMPLETE,\n  WAITING_OPERATION, // op submitted to backend but not yet applied\n  OPERATION_APPLIED, // op successfully applied in backend\n  ERROR,\n  COMPLETE,\n}\n\nexport enum BackupSteps {\n  WAITING_ACCOUNT, // Waiting for account recovery to complete\n  WAITING_PASSWORD, // Ready to start, waiting for user to provide password\n  RESTORING_DATA, // Restoring in progress\n  SKIPPED, // User decided to skip backup restoration\n  ERROR,\n  COMPLETE,\n}\n\nconst RestoreScreen = () => {\n  const { t } = useTranslation();\n  const [pass, setPass] = useState('');\n  const api = useContext(NodeApiContext);\n  const recoveredConnections = useSelector(\n    (state) => state.recoveryData.recoveredConnections,\n  );\n  const recoveredGroups = useSelector(\n    (state) => state.recoveryData.recoveredGroups,\n  );\n  const [accountStep, setAccountStep] = useState<AccountSteps>(\n    AccountSteps.WAITING_DOWNLOAD,\n  );\n  const [dataStep, setDataStep] = useState<BackupSteps>(\n    BackupSteps.WAITING_ACCOUNT,\n  );\n  const [accountError, setAccountError] = useState('');\n  const [recoveryOpHash, setRecoveryOpHash] = useState('');\n  const recoveryOp = useSelector((state) =>\n    selectOperationByHash(state, recoveryOpHash),\n  );\n  const [currentItem, setCurrentItem] = useState(0);\n  const [totalItems, setTotalItems] = useState(0);\n  const dispatch = useDispatch();\n\n  useFocusEffect(\n    useCallback(() => {\n      // wait 3 passes of the the poll channel to make sure all data is downloaded\n      const t = setTimeout(() => {\n        clearChannel();\n        setAccountStep(AccountSteps.DOWNLOAD_COMPLETE);\n      }, channelTimeout);\n\n      return () => {\n        clearTimeout(t);\n      };\n    }, []),\n  );\n\n  // track account recovery state\n  useEffect(() => {\n    const startRecovery = async () => {\n      try {\n        setAccountStep(AccountSteps.WAITING_OPERATION);\n        console.log(`Starting account recovery`);\n        const op = await dispatch(socialRecovery(api));\n        if (op === 'ALREADY APPLIED') {\n          // we can shortcut to the next step without waiting for operation status\n          setAccountStep(AccountSteps.OPERATION_APPLIED);\n        } else {\n          console.log(`Recover op Hash: ${op.hash}`);\n          setRecoveryOpHash(op.hash);\n        }\n      } catch (err) {\n        let errorString = '';\n        if (err instanceof Error) {\n          errorString = `${err.message}`;\n        } else {\n          errorString = `${err}`;\n        }\n        console.log(`Error during account recovery: ${errorString}`);\n        setAccountStep(AccountSteps.ERROR);\n        setAccountError(errorString);\n      }\n    };\n    const finishRecovery = async () => {\n      dispatch(setRecoveryKeys());\n      setAccountStep(AccountSteps.COMPLETE);\n      // restore backup can now start\n      setDataStep(BackupSteps.WAITING_PASSWORD);\n    };\n    switch (accountStep) {\n      case AccountSteps.DOWNLOAD_COMPLETE:\n        startRecovery();\n        break;\n      case AccountSteps.OPERATION_APPLIED:\n        finishRecovery();\n        break;\n      default:\n        break;\n    }\n  }, [dispatch, accountStep, api]);\n\n  // track data recovery state\n  useEffect(() => {\n    switch (dataStep) {\n      case BackupSteps.COMPLETE:\n        // save password in state and set backupCompleted marker\n        dispatch(setPassword(pass));\n        dispatch(setBackupCompleted(true));\n        break;\n      default:\n        break;\n    }\n  }, [dataStep, dispatch, pass]);\n\n  // track overall progress\n  useEffect(() => {\n    if (\n      accountStep === AccountSteps.COMPLETE &&\n      (dataStep === BackupSteps.COMPLETE || dataStep === BackupSteps.SKIPPED)\n    ) {\n      console.log(`Recovery process finished!`);\n      Alert.alert(\n        t('common.alert.info'),\n        t('restore.alert.text.restoreSuccess'),\n        [{ text: t('common.alert.ok') }],\n      );\n      dispatch(finishRecovery());\n    }\n  }, [accountStep, dataStep, dispatch, t]);\n\n  useEffect(() => {\n    if (recoveryOp && accountStep === AccountSteps.WAITING_OPERATION) {\n      console.log(`recover Op state: ${recoveryOp.state}`);\n      switch (recoveryOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          // op being processed. do nothing.\n          break;\n        case operation_states.APPLIED:\n          setAccountStep(AccountSteps.OPERATION_APPLIED);\n          setRecoveryOpHash('');\n          break;\n        case operation_states.FAILED:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation could not be applied');\n          setRecoveryOpHash('');\n          break;\n        case operation_states.EXPIRED:\n          // operation did not get applied within time window. Abort and show error.\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Operation timed out');\n          setRecoveryOpHash('');\n          break;\n        default:\n          setAccountStep(AccountSteps.ERROR);\n          setAccountError('Unhandled operation state');\n          setRecoveryOpHash('');\n      }\n    }\n  }, [recoveryOp, accountStep]);\n\n  const skip = () => {\n    setPass('');\n    setDataStep(BackupSteps.SKIPPED);\n  };\n\n  const restoreBackup = async () => {\n    try {\n      console.log(`Starting restore backup`);\n      setDataStep(BackupSteps.RESTORING_DATA);\n      await dispatch(recoverData(pass, api, setTotalItems, setCurrentItem));\n      console.log(`Successfully restored backup`);\n      setDataStep(BackupSteps.COMPLETE);\n    } catch (err) {\n      let errorString = '';\n      if (err instanceof Error) {\n        errorString = `${err.name} - ${err.message}`;\n      } else {\n        errorString = `${err}`;\n      }\n      console.log(`Error during recover: ${errorString}`);\n      setDataStep(BackupSteps.ERROR);\n    }\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <KeyboardAvoidingView style={styles.container} behavior=\"position\">\n        <View style={styles.recoverAccountContainer}>\n          <RecoverAccount\n            currentStep={accountStep}\n            recoveredGroups={recoveredGroups}\n            recoveredConnections={recoveredConnections}\n            errorMessage={accountError}\n          />\n        </View>\n        <View style={styles.divider} />\n        <View style={styles.restoreBackupContainer}>\n          <RestoreBackup\n            currentStep={dataStep}\n            doRestore={restoreBackup}\n            doSkip={skip}\n            password={pass}\n            setPassword={setPass}\n            totalItems={totalItems}\n            currentItem={currentItem}\n          />\n        </View>\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK,\n  },\n  recoverAccountContainer: {\n    marginTop: DEVICE_LARGE ? 25 : 20,\n    minHeight: '25%',\n  },\n  restoreBackupContainer: {\n    height: '50%',\n  },\n});\n\nexport default RestoreScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}