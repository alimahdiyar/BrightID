{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _connectionLevelStrings = require(\"../../utils/connectionLevelStrings\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Connections/TrustLevelView.tsx\";\n\nfunction TrustLevelView(_ref) {\n  var level = _ref.level,\n      connectionId = _ref.connectionId;\n  var navigation = (0, _native.useNavigation)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var setLevel = function setLevel() {\n    navigation.navigate('SetTrustlevel', {\n      connectionId: connectionId\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.trustLevelLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.trustLevelLabelText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, t('connectionDetails.label.connectionLevel'))), _react.default.createElement(_reactNative.View, {\n    style: styles.trustLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    testID: \"ConnectionLevelText\",\n    style: [styles.trustLevelText, {\n      color: _connectionLevelStrings.connectionLevelColors[level]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, _connectionLevelStrings.connectionLevelStrings[level])), level !== _constants.connection_levels.REPORTED && _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.trustLevelButton,\n    testID: \"EditConnectionLevelBtn\",\n    onPress: setLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_MaterialIcons.default, {\n    name: \"edit\",\n    size: _deviceConstants.DEVICE_LARGE ? 22 : 20,\n    color: _colors.BLUE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: _deviceConstants.DEVICE_LARGE ? 22 : 20\n  },\n  trustLevelLabel: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  trustLevelLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.BLACK\n  },\n  trustLevel: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  trustLevelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[14],\n    color: _colors.BLACK\n  },\n  trustLevelButton: {\n    padding: 5\n  }\n});\n\nvar _default = TrustLevelView;\nexports.default = _default;","map":{"version":3,"names":["TrustLevelView","level","connectionId","navigation","useNavigation","useTranslation","t","setLevel","navigate","styles","container","trustLevelLabel","trustLevelLabelText","trustLevel","trustLevelText","color","connectionLevelColors","connectionLevelStrings","connection_levels","REPORTED","trustLevelButton","DEVICE_LARGE","BLUE","StyleSheet","create","flexDirection","alignItems","marginBottom","justifyContent","fontFamily","fontSize","BLACK","flex","padding"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Connections/TrustLevelView.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport Material from 'react-native-vector-icons/MaterialIcons';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport {\n  connectionLevelColors,\n  connectionLevelStrings,\n} from '@/utils/connectionLevelStrings';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLUE, BLACK } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { connection_levels } from '@/utils/constants';\n\ntype Props = {\n  level: ConnectionLevel;\n  connectionId: string;\n};\n\nfunction TrustLevelView({ level, connectionId }: Props) {\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const setLevel = () => {\n    navigation.navigate('SetTrustlevel', {\n      connectionId,\n    });\n  };\n  return (\n    <View style={styles.container}>\n      <View style={styles.trustLevelLabel}>\n        <Text style={styles.trustLevelLabelText}>\n          {t('connectionDetails.label.connectionLevel')}\n        </Text>\n      </View>\n\n      <View style={styles.trustLevel}>\n        <Text\n          testID=\"ConnectionLevelText\"\n          style={[\n            styles.trustLevelText,\n            { color: connectionLevelColors[level] },\n          ]}\n        >\n          {connectionLevelStrings[level]}\n        </Text>\n      </View>\n      {level !== connection_levels.REPORTED && (\n        <TouchableOpacity\n          style={styles.trustLevelButton}\n          testID=\"EditConnectionLevelBtn\"\n          onPress={setLevel}\n        >\n          <Material name=\"edit\" size={DEVICE_LARGE ? 22 : 20} color={BLUE} />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: DEVICE_LARGE ? 22 : 20,\n  },\n  trustLevelLabel: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  trustLevelLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  trustLevel: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n  },\n  trustLevelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: BLACK,\n  },\n  trustLevelButton: {\n    padding: 5,\n  },\n});\n\nexport default TrustLevelView;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;;;AAOA,SAASA,cAAT,OAAwD;EAAA,IAA9BC,KAA8B,QAA9BA,KAA8B;EAAA,IAAvBC,YAAuB,QAAvBA,YAAuB;EACtD,IAAMC,UAAU,GAAG,IAAAC,qBAAA,GAAnB;;EACA,sBAAc,IAAAC,4BAAA,GAAd;EAAA,IAAQC,CAAR,mBAAQA,CAAR;;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrBJ,UAAU,CAACK,QAAX,CAAoB,eAApB,EAAqC;MACnCN,YAAY,EAAZA;IADmC,CAArC;EAGD,CAJD;;EAKA,OACE,6BAAC,iBAAD;IAAM,KAAK,EAAEO,MAAM,CAACC,SAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAM,KAAK,EAAED,MAAM,CAACE,eAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAM,KAAK,EAAEF,MAAM,CAACG,mBAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGN,CAAC,CAAC,yCAAD,CADJ,CADF,CADF,EAOE,6BAAC,iBAAD;IAAM,KAAK,EAAEG,MAAM,CAACI,UAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IACE,MAAM,EAAC,qBADT;IAEE,KAAK,EAAE,CACLJ,MAAM,CAACK,cADF,EAEL;MAAEC,KAAK,EAAEC,6CAAA,CAAsBf,KAAtB;IAAT,CAFK,CAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAOGgB,8CAAA,CAAuBhB,KAAvB,CAPH,CADF,CAPF,EAkBGA,KAAK,KAAKiB,4BAAA,CAAkBC,QAA5B,IACC,6BAAC,6BAAD;IACE,KAAK,EAAEV,MAAM,CAACW,gBADhB;IAEE,MAAM,EAAC,wBAFT;IAGE,OAAO,EAAEb,QAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKE,6BAAC,sBAAD;IAAU,IAAI,EAAC,MAAf;IAAsB,IAAI,EAAEc,6BAAA,GAAe,EAAf,GAAoB,EAAhD;IAAoD,KAAK,EAAEC,YAA3D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,CAnBJ,CADF;AA8BD;;AAED,IAAMb,MAAM,GAAGc,uBAAA,CAAWC,MAAX,CAAkB;EAC/Bd,SAAS,EAAE;IACTe,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,YAAY,EAAEN,6BAAA,GAAe,EAAf,GAAoB;EAHzB,CADoB;EAM/BV,eAAe,EAAE;IACfe,UAAU,EAAE,QADG;IAEfE,cAAc,EAAE;EAFD,CANc;EAU/BhB,mBAAmB,EAAE;IACnBiB,UAAU,EAAE,gBADO;IAEnBC,QAAQ,EAAEA,eAAA,CAAS,EAAT,CAFS;IAGnBf,KAAK,EAAEgB;EAHY,CAVU;EAe/BlB,UAAU,EAAE;IACVmB,IAAI,EAAE,CADI;IAEVN,UAAU,EAAE,UAFF;IAGVE,cAAc,EAAE;EAHN,CAfmB;EAoB/Bd,cAAc,EAAE;IACde,UAAU,EAAE,gBADE;IAEdC,QAAQ,EAAEA,eAAA,CAAS,EAAT,CAFI;IAGdf,KAAK,EAAEgB;EAHO,CApBe;EAyB/BX,gBAAgB,EAAE;IAChBa,OAAO,EAAE;EADO;AAzBa,CAAlB,CAAf;;eA8BejC,c"},"metadata":{},"sourceType":"script"}