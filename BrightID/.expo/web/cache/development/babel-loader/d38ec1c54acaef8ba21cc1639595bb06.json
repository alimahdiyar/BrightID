{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AddDeviceScreen from \"../components/Onboarding/ImportFlow/AddDeviceScreen\";\nimport DevicesScreen from \"../components/Onboarding/ImportFlow/DevicesScreen\";\nimport RecoveryCodeScreen from \"../components/Onboarding/RecoveryFlow/RecoveryCodeScreen\";\nimport { headerOptions, NavHome } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar topOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  }\n});\n\nvar Devices = function Devices() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Add Device\",\n      component: AddDeviceScreen,\n      options: topOptions\n    }), _jsx(Stack.Screen, {\n      name: \"Devices\",\n      component: DevicesScreen,\n      options: topOptions\n    }), _jsx(Stack.Screen, {\n      name: \"SyncCode\",\n      component: RecoveryCodeScreen,\n      options: topOptions\n    })]\n  });\n};\n\nexport default Devices;","map":{"version":3,"names":["React","createStackNavigator","AddDeviceScreen","DevicesScreen","RecoveryCodeScreen","headerOptions","NavHome","Stack","topOptions","headerLeft","Devices"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Devices.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport AddDeviceScreen from '@/components/Onboarding/ImportFlow/AddDeviceScreen';\nimport DevicesScreen from '@/components/Onboarding/ImportFlow/DevicesScreen';\nimport RecoveryCodeScreen from '@/components/Onboarding/RecoveryFlow/RecoveryCodeScreen';\nimport { headerOptions, NavHome } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst topOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n};\n\nconst Devices = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"Add Device\"\n        component={AddDeviceScreen}\n        options={topOptions}\n      />\n      <Stack.Screen\n        name=\"Devices\"\n        component={DevicesScreen}\n        options={topOptions}\n      />\n      <Stack.Screen\n        name=\"SyncCode\"\n        component={RecoveryCodeScreen}\n        options={topOptions}\n      />\n    </>\n  );\n};\n\nexport default Devices;\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,oBADF,QAGO,yBAHP;AAIA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAOC,kBAAP;AACA,SAASC,aAAT,EAAwBC,OAAxB;;;;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;;AAEA,IAAMO,UAAkC,mCACnCH,aADmC;EAEtCI,UAAU,EAAE;IAAA,OAAM,KAAC,OAAD,KAAN;EAAA;AAF0B,EAAxC;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EACpB,OACE;IAAA,WACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,YADP;MAEE,SAAS,EAAER,eAFb;MAGE,OAAO,EAAEM;IAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,SADP;MAEE,SAAS,EAAEL,aAFb;MAGE,OAAO,EAAEK;IAHX,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,UADP;MAEE,SAAS,EAAEJ,kBAFb;MAGE,OAAO,EAAEI;IAHX,EAXF;EAAA,EADF;AAmBD,CApBD;;AAsBA,eAAeE,OAAf"},"metadata":{},"sourceType":"module"}