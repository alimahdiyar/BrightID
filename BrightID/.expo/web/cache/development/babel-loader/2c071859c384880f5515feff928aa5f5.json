{"ast":null,"code":"import i18next from 'i18next';\nimport { connectionTotal, recoveryConnectionsSelector } from \"../../reducer/connectionsSlice\";\nimport { MIN_RECOVERY_CONNECTIONS } from \"../../utils/constants\";\nimport { linkedContextTotal } from \"../../reducer/appsSlice\";\nexport var UserTasks = {\n  make_first_connection: {\n    id: 'make_first_connection',\n    sortValue: 10,\n    title: i18next.t(\"achievements.makeFirstConnection.title\"),\n    description: i18next.t(\"achievements.makeFirstConnection.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn: function checkFn(state) {\n      return connectionTotal(state) > 0;\n    }\n  },\n  link_app: {\n    id: 'link_app',\n    sortValue: 20,\n    title: i18next.t(\"achievements.linkApp.title\"),\n    description: i18next.t(\"achievements.linkApp.description\"),\n    url: 'https://apps.brightid.org/',\n    checkFn: function checkFn(state) {\n      var linkedContexts = linkedContextTotal(state);\n      return linkedContexts > 0;\n    }\n  },\n  get_sponsored: {\n    id: 'get_sponsored',\n    sortValue: 30,\n    title: i18next.t(\"achievements.getSponsored.title\"),\n    description: i18next.t(\"achievements.getSponsored.description\"),\n    url: 'https://apps.brightid.org/',\n    checkFn: function checkFn(state) {\n      return state.user.isSponsored || state.user.isSponsoredv6;\n    }\n  },\n  make_two_connection: {\n    id: 'make_two_connection',\n    sortValue: 50,\n    title: i18next.t(\"achievements.makeTwoConnection.title\"),\n    description: i18next.t(\"achievements.makeTwoConnection.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn: function checkFn(state) {\n      return connectionTotal(state) > 1;\n    }\n  },\n  make_three_connection: {\n    id: 'make_three_connection',\n    sortValue: 60,\n    title: i18next.t(\"achievements.makeThreeConnection.title\"),\n    description: i18next.t(\"achievements.makeThreeConnection.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn: function checkFn(state) {\n      return connectionTotal(state) > 2;\n    }\n  },\n  setup_backup: {\n    id: 'setup_backup',\n    sortValue: 65,\n    title: i18next.t(\"achievements.setupBackup.title\", 'Set backup password'),\n    description: i18next.t(\"achievements.setupBackup.description\", 'Set password to enable encrypted backup of your data'),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn: function checkFn(state) {\n      return !!state.user.password;\n    }\n  },\n  setup_recovery_connections: {\n    id: 'setup_recovery_connections',\n    sortValue: 70,\n    title: i18next.t(\"achievements.setupRecoveryConnections.title\"),\n    description: i18next.t(\"achievements.setupRecoveryConnections.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn: function checkFn(state) {\n      return recoveryConnectionsSelector(state).length >= MIN_RECOVERY_CONNECTIONS;\n    }\n  },\n  join_meet: {\n    id: 'join_meet',\n    sortValue: 110,\n    title: i18next.t(\"achievements.joinMeet.title\"),\n    description: i18next.t(\"achievements.joinMeet.description\"),\n    url: 'https://www.brightid.org/meet',\n    checkFn: function checkFn(state) {\n      return Boolean(state.user.verifications.find(function (verification) {\n        return verification.name === 'SeedConnected' && verification.rank > 0;\n      }));\n    }\n  },\n  bitu_verification: {\n    id: 'bitu_verification',\n    sortValue: 120,\n    title: i18next.t(\"achievements.bituVerification.title\"),\n    description: i18next.t(\"achievements.bituVerification.description\"),\n    url: 'https://brightid.gitbook.io/brightid/getting-verified/bitu-verification',\n    navigationTarget: 'BituVerification',\n    checkFn: function checkFn(state) {\n      return Boolean(state.user.verifications.find(function (verification) {\n        return verification.name === 'Bitu' && verification.score > 0;\n      }));\n    }\n  }\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/UserTasks.ts"],"names":["UserTasks","make_first_connection","id","sortValue","title","i18next","description","url","checkFn","connectionTotal","link_app","linkedContexts","linkedContextTotal","get_sponsored","state","make_two_connection","make_three_connection","setup_backup","setup_recovery_connections","recoveryConnectionsSelector","join_meet","Boolean","verification","bitu_verification","navigationTarget"],"mappings":"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","sourcesContent":["import i18next from 'i18next';\nimport {\n  connectionTotal,\n  recoveryConnectionsSelector,\n} from '@/reducer/connectionsSlice';\nimport { MIN_RECOVERY_CONNECTIONS } from '@/utils/constants';\nimport { linkedContextTotal } from '@/reducer/appsSlice';\n\nexport const UserTasks = {\n  make_first_connection: {\n    id: 'make_first_connection',\n    sortValue: 10,\n    title: i18next.t(`achievements.makeFirstConnection.title`),\n    description: i18next.t(`achievements.makeFirstConnection.description`),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn(state: State) {\n      return connectionTotal(state) > 0;\n    },\n  },\n  link_app: {\n    id: 'link_app',\n    sortValue: 20,\n    title: i18next.t(`achievements.linkApp.title`),\n    description: i18next.t(`achievements.linkApp.description`),\n    url: 'https://apps.brightid.org/',\n    checkFn(state: State) {\n      // is there at least one linked context?\n      const linkedContexts = linkedContextTotal(state);\n      return linkedContexts > 0;\n    },\n  },\n  get_sponsored: {\n    id: 'get_sponsored',\n    sortValue: 30,\n    title: i18next.t(`achievements.getSponsored.title`),\n    description: i18next.t(`achievements.getSponsored.description`),\n    url: 'https://apps.brightid.org/',\n    checkFn(state: State) {\n      return state.user.isSponsored || state.user.isSponsoredv6;\n    },\n  },\n  make_two_connection: {\n    id: 'make_two_connection',\n    sortValue: 50,\n    title: i18next.t(`achievements.makeTwoConnection.title`),\n    description: i18next.t(`achievements.makeTwoConnection.description`),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn(state: State) {\n      return connectionTotal(state) > 1;\n    },\n  },\n  make_three_connection: {\n    id: 'make_three_connection',\n    sortValue: 60,\n    title: i18next.t(`achievements.makeThreeConnection.title`),\n    description: i18next.t(`achievements.makeThreeConnection.description`),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn(state: State) {\n      return connectionTotal(state) > 2;\n    },\n  },\n  setup_backup: {\n    id: 'setup_backup',\n    sortValue: 65,\n    title: i18next.t(`achievements.setupBackup.title`, 'Set backup password'),\n    description: i18next.t(\n      `achievements.setupBackup.description`,\n      'Set password to enable encrypted backup of your data',\n    ),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn(state: State) {\n      return !!state.user.password;\n    },\n  },\n  setup_recovery_connections: {\n    id: 'setup_recovery_connections',\n    sortValue: 70,\n    title: i18next.t(`achievements.setupRecoveryConnections.title`),\n    description: i18next.t(`achievements.setupRecoveryConnections.description`),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn(state: State) {\n      return (\n        recoveryConnectionsSelector(state).length >= MIN_RECOVERY_CONNECTIONS\n      );\n    },\n  },\n  join_meet: {\n    id: 'join_meet',\n    sortValue: 110,\n    title: i18next.t(`achievements.joinMeet.title`),\n    description: i18next.t(`achievements.joinMeet.description`),\n    url: 'https://www.brightid.org/meet',\n    checkFn(state: State) {\n      return Boolean(\n        state.user.verifications.find(\n          (verification) =>\n            verification.name === 'SeedConnected' &&\n            (verification as SeedConnectedVerification).rank > 0,\n        ),\n      );\n    },\n  },\n  bitu_verification: {\n    id: 'bitu_verification',\n    sortValue: 120,\n    title: i18next.t(`achievements.bituVerification.title`),\n    description: i18next.t(`achievements.bituVerification.description`),\n    url: 'https://brightid.gitbook.io/brightid/getting-verified/bitu-verification',\n    navigationTarget: 'BituVerification',\n    checkFn(state: State) {\n      return Boolean(\n        state.user.verifications.find(\n          (verification) =>\n            verification.name === 'Bitu' &&\n            (verification as BituVerification).score > 0,\n        ),\n      );\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}