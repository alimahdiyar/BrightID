{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"animationKeyframes\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport createReactDOMStyle from \"./createReactDOMStyle\";\nimport hash from \"../../vendor/hash\";\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nimport prefixStyles, { prefixInlineStyles } from \"../../modules/prefixStyles\";\nvar cache = {\n  get: function get(property, value) {\n    if (cache[property] != null && cache[property].hasOwnProperty(value) && cache[property][value] != null) {\n      return cache[property][value];\n    }\n  },\n  set: function set(property, value, object) {\n    if (cache[property] == null) {\n      cache[property] = {};\n    }\n\n    return cache[property][value] = object;\n  }\n};\nexport function atomic(style) {\n  return Object.keys(style).sort().reduce(function (acc, property) {\n    var value = style[property];\n\n    if (value != null) {\n      var valueString = stringifyValueWithProperty(value, property);\n      var cachedResult = cache.get(property, valueString);\n\n      if (cachedResult != null) {\n        var identifier = cachedResult.identifier;\n        acc[identifier] = cachedResult;\n      } else {\n        var _identifier = createIdentifier('r', property, value);\n\n        var rules = createAtomicRules(_identifier, property, value);\n\n        var _cachedResult = cache.set(property, valueString, {\n          property: property,\n          value: stringifyValueWithProperty(value, property),\n          identifier: _identifier,\n          rules: rules\n        });\n\n        acc[_identifier] = _cachedResult;\n      }\n    }\n\n    return acc;\n  }, {});\n}\nexport function classic(style, name) {\n  var identifier = createIdentifier('css', name, style);\n\n  var animationKeyframes = style.animationKeyframes,\n      rest = _objectWithoutProperties(style, _excluded);\n\n  var rules = [];\n  var selector = \".\" + identifier;\n  var animationName;\n\n  if (animationKeyframes != null) {\n    var _processKeyframesValu = processKeyframesValue(animationKeyframes),\n        animationNames = _processKeyframesValu.animationNames,\n        keyframesRules = _processKeyframesValu.rules;\n\n    animationName = animationNames.join(',');\n    rules.push.apply(rules, _toConsumableArray(keyframesRules));\n  }\n\n  var block = createDeclarationBlock(_objectSpread(_objectSpread({}, rest), {}, {\n    animationName: animationName\n  }));\n  rules.push(\"\" + selector + block);\n  return _defineProperty({}, identifier, {\n    identifier: identifier,\n    rules: rules\n  });\n}\nexport function inline(style) {\n  return prefixInlineStyles(createReactDOMStyle(style));\n}\nexport function stringifyValueWithProperty(value, property) {\n  var normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string' ? JSON.stringify(normalizedValue || '') : normalizedValue;\n}\n\nfunction createAtomicRules(identifier, property, value) {\n  var rules = [];\n  var selector = \".\" + identifier;\n\n  switch (property) {\n    case 'animationKeyframes':\n      {\n        var _processKeyframesValu2 = processKeyframesValue(value),\n            animationNames = _processKeyframesValu2.animationNames,\n            keyframesRules = _processKeyframesValu2.rules;\n\n        var block = createDeclarationBlock({\n          animationName: animationNames.join(',')\n        });\n        rules.push.apply(rules, [\"\" + selector + block].concat(_toConsumableArray(keyframesRules)));\n        break;\n      }\n\n    case 'placeholderTextColor':\n      {\n        var _block = createDeclarationBlock({\n          color: value,\n          opacity: 1\n        });\n\n        rules.push(selector + \"::-webkit-input-placeholder\" + _block, selector + \"::-moz-placeholder\" + _block, selector + \":-ms-input-placeholder\" + _block, selector + \"::placeholder\" + _block);\n        break;\n      }\n\n    case 'pointerEvents':\n      {\n        var finalValue = value;\n\n        if (value === 'auto' || value === 'box-only') {\n          finalValue = 'auto!important';\n\n          if (value === 'box-only') {\n            var _block3 = createDeclarationBlock({\n              pointerEvents: 'none'\n            });\n\n            rules.push(selector + \">*\" + _block3);\n          }\n        } else if (value === 'none' || value === 'box-none') {\n          finalValue = 'none!important';\n\n          if (value === 'box-none') {\n            var _block4 = createDeclarationBlock({\n              pointerEvents: 'auto'\n            });\n\n            rules.push(selector + \">*\" + _block4);\n          }\n        }\n\n        var _block2 = createDeclarationBlock({\n          pointerEvents: finalValue\n        });\n\n        rules.push(\"\" + selector + _block2);\n        break;\n      }\n\n    case 'scrollbarWidth':\n      {\n        if (value === 'none') {\n          rules.push(selector + \"::-webkit-scrollbar{display:none}\");\n        }\n\n        var _block5 = createDeclarationBlock({\n          scrollbarWidth: value\n        });\n\n        rules.push(\"\" + selector + _block5);\n        break;\n      }\n\n    default:\n      {\n        var _block6 = createDeclarationBlock(_defineProperty({}, property, value));\n\n        rules.push(\"\" + selector + _block6);\n        break;\n      }\n  }\n\n  return rules;\n}\n\nfunction createDeclarationBlock(style) {\n  var domStyle = prefixStyles(createReactDOMStyle(style));\n  var declarationsString = Object.keys(domStyle).map(function (property) {\n    var value = domStyle[property];\n    var prop = hyphenateStyleName(property);\n\n    if (Array.isArray(value)) {\n      return value.map(function (v) {\n        return prop + \":\" + v;\n      }).join(';');\n    } else {\n      return prop + \":\" + value;\n    }\n  }).sort().join(';');\n  return \"{\" + declarationsString + \";}\";\n}\n\nfunction createIdentifier(prefix, name, value) {\n  var hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production' ? prefix + \"-\" + name + \"-\" + hashedString : prefix + \"-\" + hashedString;\n}\n\nfunction createKeyframes(keyframes) {\n  var prefixes = ['-webkit-', ''];\n  var identifier = createIdentifier('r', 'animation', keyframes);\n  var steps = '{' + Object.keys(keyframes).map(function (stepName) {\n    var rule = keyframes[stepName];\n    var block = createDeclarationBlock(rule);\n    return \"\" + stepName + block;\n  }).join('') + '}';\n  var rules = prefixes.map(function (prefix) {\n    return \"@\" + prefix + \"keyframes \" + identifier + steps;\n  });\n  return {\n    identifier: identifier,\n    rules: rules\n  };\n}\n\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(\"Invalid CSS keyframes type: \" + typeof keyframesValue);\n  }\n\n  var animationNames = [];\n  var rules = [];\n  var value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n  value.forEach(function (keyframes) {\n    if (typeof keyframes === 'string') {\n      animationNames.push(keyframes);\n    } else {\n      var _createKeyframes = createKeyframes(keyframes),\n          identifier = _createKeyframes.identifier,\n          keyframesRules = _createKeyframes.rules;\n\n      animationNames.push(identifier);\n      rules.push.apply(rules, _toConsumableArray(keyframesRules));\n    }\n  });\n  return {\n    animationNames: animationNames,\n    rules: rules\n  };\n}","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/exports/StyleSheet/compile.js"],"names":["cache","get","set","Object","value","style","valueString","stringifyValueWithProperty","cachedResult","identifier","acc","createIdentifier","rules","createAtomicRules","property","animationKeyframes","rest","selector","animationNames","keyframesRules","processKeyframesValue","animationName","block","createDeclarationBlock","prefixInlineStyles","createReactDOMStyle","normalizedValue","normalizeValueWithProperty","JSON","color","opacity","finalValue","pointerEvents","scrollbarWidth","domStyle","prefixStyles","declarationsString","prop","hyphenateStyleName","Array","hashedString","hash","name","process","prefix","prefixes","steps","rule","keyframes","createKeyframes"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport createReactDOMStyle from './createReactDOMStyle';\nimport hash from '../../vendor/hash';\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport prefixStyles, { prefixInlineStyles } from '../../modules/prefixStyles';\n\ntype Value = Object | Array<any> | string | number;\ntype Style = { [key: string]: Value };\ntype Rule = string;\ntype Rules = Array<Rule>;\ntype RulesData = {|\n  property?: string,\n  value?: string,\n  identifier: string,\n  rules: Rules\n|};\ntype CompilerOutput = { [key: string]: RulesData };\n\nconst cache = {\n  get(property, value) {\n    if (\n      cache[property] != null &&\n      cache[property].hasOwnProperty(value) &&\n      cache[property][value] != null\n    ) {\n      return cache[property][value];\n    }\n  },\n  set(property, value, object) {\n    if (cache[property] == null) {\n      cache[property] = {};\n    }\n    return (cache[property][value] = object);\n  }\n};\n\n/**\n * Compile style to atomic CSS rules.\n */\nexport function atomic(style: Style): CompilerOutput {\n  return Object.keys(style)\n    .sort()\n    .reduce((acc, property) => {\n      const value = style[property];\n      if (value != null) {\n        const valueString = stringifyValueWithProperty(value, property);\n        const cachedResult = cache.get(property, valueString);\n        if (cachedResult != null) {\n          const { identifier } = cachedResult;\n          acc[identifier] = cachedResult;\n        } else {\n          const identifier = createIdentifier('r', property, value);\n          const rules = createAtomicRules(identifier, property, value);\n          const cachedResult = cache.set(property, valueString, {\n            property,\n            value: stringifyValueWithProperty(value, property),\n            identifier,\n            rules\n          });\n          acc[identifier] = cachedResult;\n        }\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Compile simple style object to classic CSS rules.\n * No support for 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function classic(style: Style, name: string): CompilerOutput {\n  const identifier = createIdentifier('css', name, style);\n  const { animationKeyframes, ...rest } = style;\n\n  const rules = [];\n  const selector = `.${identifier}`;\n  let animationName;\n  if (animationKeyframes != null) {\n    const { animationNames, rules: keyframesRules } = processKeyframesValue(animationKeyframes);\n    animationName = animationNames.join(',');\n    rules.push(...keyframesRules);\n  }\n  const block = createDeclarationBlock({ ...rest, animationName });\n  rules.push(`${selector}${block}`);\n\n  return { [identifier]: { identifier, rules } };\n}\n\n/**\n * Compile simple style object to inline DOM styles.\n * No support for 'animationKeyframes', 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function inline(style: Style): Object {\n  return prefixInlineStyles(createReactDOMStyle(style));\n}\n\n/**\n * Create a value string that normalizes different input values with a common\n * output.\n */\nexport function stringifyValueWithProperty(value: Value, property: ?string): string {\n  // e.g., 0 => '0px', 'black' => 'rgba(0,0,0,1)'\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string'\n    ? JSON.stringify(normalizedValue || '')\n    : normalizedValue;\n}\n\n/**\n * Create the Atomic CSS rules needed for a given StyleSheet rule.\n * Translates StyleSheet declarations to CSS.\n */\nfunction createAtomicRules(identifier: string, property, value): Rules {\n  const rules = [];\n  const selector = `.${identifier}`;\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    case 'animationKeyframes': {\n      const { animationNames, rules: keyframesRules } = processKeyframesValue(value);\n      const block = createDeclarationBlock({ animationName: animationNames.join(',') });\n      rules.push(`${selector}${block}`, ...keyframesRules);\n      break;\n    }\n\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock({ color: value, opacity: 1 });\n      rules.push(\n        `${selector}::-webkit-input-placeholder${block}`,\n        `${selector}::-moz-placeholder${block}`,\n        `${selector}:-ms-input-placeholder${block}`,\n        `${selector}::placeholder${block}`\n      );\n      break;\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    // See d13f78622b233a0afc0c7a200c0a0792c8ca9e58\n    case 'pointerEvents': {\n      let finalValue = value;\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto!important';\n        if (value === 'box-only') {\n          const block = createDeclarationBlock({ pointerEvents: 'none' });\n          rules.push(`${selector}>*${block}`);\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none!important';\n        if (value === 'box-none') {\n          const block = createDeclarationBlock({ pointerEvents: 'auto' });\n          rules.push(`${selector}>*${block}`);\n        }\n      }\n      const block = createDeclarationBlock({ pointerEvents: finalValue });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    // Polyfill for draft spec\n    // https://drafts.csswg.org/css-scrollbars-1/\n    case 'scrollbarWidth': {\n      if (value === 'none') {\n        rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n      }\n      const block = createDeclarationBlock({ scrollbarWidth: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    default: {\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n  }\n\n  return rules;\n}\n\n/**\n * Creates a CSS declaration block from a StyleSheet object.\n */\nfunction createDeclarationBlock(style: Style) {\n  const domStyle = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle)\n    .map((property) => {\n      const value = domStyle[property];\n      const prop = hyphenateStyleName(property);\n      // The prefixer may return an array of values:\n      // { display: [ '-webkit-flex', 'flex' ] }\n      // to represent \"fallback\" declarations\n      // { display: -webkit-flex; display: flex; }\n      if (Array.isArray(value)) {\n        return value.map((v) => `${prop}:${v}`).join(';');\n      } else {\n        return `${prop}:${value}`;\n      }\n    })\n    // Once properties are hyphenated, this will put the vendor\n    // prefixed and short-form properties first in the list.\n    .sort()\n    .join(';');\n\n  return `{${declarationsString};}`;\n}\n\n/**\n * An identifier is associated with a unique set of styles.\n */\nfunction createIdentifier(prefix: string, name: string, value): string {\n  const hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production'\n    ? `${prefix}-${name}-${hashedString}`\n    : `${prefix}-${hashedString}`;\n}\n\n/**\n * Create individual CSS keyframes rules.\n */\nfunction createKeyframes(keyframes) {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier('r', 'animation', keyframes);\n\n  const steps =\n    '{' +\n    Object.keys(keyframes)\n      .map((stepName) => {\n        const rule = keyframes[stepName];\n        const block = createDeclarationBlock(rule);\n        return `${stepName}${block}`;\n      })\n      .join('') +\n    '}';\n\n  const rules = prefixes.map((prefix) => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return { identifier, rules };\n}\n\n/**\n * Create CSS keyframes rules and names from a StyleSheet keyframes object.\n */\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n\n  const animationNames = [];\n  const rules = [];\n  const value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n\n  value.forEach((keyframes) => {\n    if (typeof keyframes === 'string') {\n      // Support external animation libraries (identifiers only)\n      animationNames.push(keyframes);\n    } else {\n      // Create rules for each of the keyframes\n      const { identifier, rules: keyframesRules } = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n\n  return { animationNames, rules };\n}\n"]},"metadata":{},"sourceType":"module"}