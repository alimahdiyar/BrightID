{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TasksProgress = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TasksProgress.tsx\";\n\nvar TasksProgress = function TasksProgress(_ref) {\n  var totalSteps = _ref.totalSteps,\n      currentSteps = _ref.currentSteps,\n      label = _ref.label;\n  var percentMissing = 100 - 100 / totalSteps * currentSteps;\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.label,\n    adjustsFontSizeToFit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"\" + label), _react.default.createElement(_reactNative.View, {\n    style: styles.progressBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.barFilled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, percentMissing > 0 ? _react.default.createElement(_reactNative.View, {\n    style: (0, _extends2.default)({}, styles.barCleared, {\n      width: percentMissing + \"%\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }) : null)), _react.default.createElement(_reactNative.Text, {\n    style: styles.steps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, currentSteps + \"/\" + totalSteps));\n};\n\nexports.TasksProgress = TasksProgress;\n\nvar styles = _reactNative.StyleSheet.create({\n  progressContainer: {\n    paddingTop: _deviceConstants.DEVICE_LARGE ? 20 : 16,\n    paddingRight: 0,\n    paddingBottom: _deviceConstants.DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center'\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: _fonts.fontSize[13]\n  },\n  progressBar: {\n    flexGrow: 1,\n    marginLeft: _deviceConstants.DEVICE_LARGE ? 12 : 10,\n    marginRight: _deviceConstants.DEVICE_LARGE ? 12 : 10,\n    justifyContent: 'flex-end'\n  },\n  barFilled: {\n    height: _deviceConstants.DEVICE_LARGE ? 16 : 14,\n    backgroundColor: _colors.GREEN,\n    borderRadius: 10,\n    width: '100%'\n  },\n  barCleared: {\n    height: _deviceConstants.DEVICE_LARGE ? 16 : 14,\n    backgroundColor: _colors.WHITE,\n    borderRadius: 10,\n    borderColor: _colors.GREEN,\n    borderWidth: 1,\n    alignSelf: 'flex-end'\n  },\n  steps: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: _fonts.fontSize[14]\n  }\n});","map":{"version":3,"names":["TasksProgress","totalSteps","currentSteps","label","percentMissing","styles","progressContainer","progressBar","barFilled","barCleared","width","steps","StyleSheet","create","paddingTop","DEVICE_LARGE","paddingRight","paddingBottom","flexDirection","justifyContent","alignItems","fontFamily","fontStyle","fontSize","flexGrow","marginLeft","marginRight","height","backgroundColor","GREEN","borderRadius","WHITE","borderColor","borderWidth","alignSelf"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TasksProgress.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { GREEN, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\n\ntype TasksProgressProps = {\n  totalSteps: number;\n  currentSteps: number;\n  label: string;\n};\n\nexport const TasksProgress = function ({\n  totalSteps,\n  currentSteps,\n  label,\n}: TasksProgressProps) {\n  const percentMissing = 100 - (100 / totalSteps) * currentSteps;\n  return (\n    <View style={styles.progressContainer}>\n      <Text style={styles.label} adjustsFontSizeToFit={true}>{`${label}`}</Text>\n      <View style={styles.progressBar}>\n        <View style={styles.barFilled}>\n          {percentMissing > 0 ? (\n            <View\n              style={{ ...styles.barCleared, width: `${percentMissing}%` }}\n            />\n          ) : null}\n        </View>\n      </View>\n      <Text style={styles.steps}>{`${currentSteps}/${totalSteps}`}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  progressContainer: {\n    paddingTop: DEVICE_LARGE ? 20 : 16,\n    paddingRight: 0,\n    paddingBottom: DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[13],\n  },\n  progressBar: {\n    flexGrow: 1,\n    marginLeft: DEVICE_LARGE ? 12 : 10,\n    marginRight: DEVICE_LARGE ? 12 : 10,\n    justifyContent: 'flex-end',\n  },\n  barFilled: {\n    height: DEVICE_LARGE ? 16 : 14,\n    backgroundColor: GREEN,\n    borderRadius: 10,\n    width: '100%',\n  },\n  barCleared: {\n    height: DEVICE_LARGE ? 16 : 14,\n    backgroundColor: WHITE,\n    borderRadius: 10,\n    borderColor: GREEN,\n    borderWidth: 1,\n    alignSelf: 'flex-end',\n  },\n  steps: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[14],\n  },\n});\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAQO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAIN;EAAA,IAHrBC,UAGqB,QAHrBA,UAGqB;EAAA,IAFrBC,YAEqB,QAFrBA,YAEqB;EAAA,IADrBC,KACqB,QADrBA,KACqB;EACrB,IAAMC,cAAc,GAAG,MAAO,MAAMH,UAAP,GAAqBC,YAAlD;EACA,OACE,6BAAC,iBAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,iBAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAM,KAAK,EAAED,MAAM,CAACF,KAApB;IAA2B,oBAAoB,EAAE,IAAjD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAA2DA,KAA3D,CADF,EAEE,6BAAC,iBAAD;IAAM,KAAK,EAAEE,MAAM,CAACE,WAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAM,KAAK,EAAEF,MAAM,CAACG,SAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGJ,cAAc,GAAG,CAAjB,GACC,6BAAC,iBAAD;IACE,KAAK,6BAAOC,MAAM,CAACI,UAAd;MAA0BC,KAAK,EAAKN,cAAL;IAA/B,EADP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD,GAIG,IALN,CADF,CAFF,EAWE,6BAAC,iBAAD;IAAM,KAAK,EAAEC,MAAM,CAACM,KAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA+BT,YAA/B,SAA+CD,UAA/C,CAXF,CADF;AAeD,CArBM;;;;AAuBP,IAAMI,MAAM,GAAGO,uBAAA,CAAWC,MAAX,CAAkB;EAC/BP,iBAAiB,EAAE;IACjBQ,UAAU,EAAEC,6BAAA,GAAe,EAAf,GAAoB,EADf;IAEjBC,YAAY,EAAE,CAFG;IAGjBC,aAAa,EAAEF,6BAAA,GAAe,EAAf,GAAoB,EAHlB;IAIjBG,aAAa,EAAE,KAJE;IAKjBC,cAAc,EAAE,eALC;IAMjBT,KAAK,EAAE,MANU;IAOjBU,UAAU,EAAE;EAPK,CADY;EAU/BjB,KAAK,EAAE;IACLkB,UAAU,EAAE,gBADP;IAELC,SAAS,EAAE,QAFN;IAGLC,QAAQ,EAAEA,eAAA,CAAS,EAAT;EAHL,CAVwB;EAe/BhB,WAAW,EAAE;IACXiB,QAAQ,EAAE,CADC;IAEXC,UAAU,EAAEV,6BAAA,GAAe,EAAf,GAAoB,EAFrB;IAGXW,WAAW,EAAEX,6BAAA,GAAe,EAAf,GAAoB,EAHtB;IAIXI,cAAc,EAAE;EAJL,CAfkB;EAqB/BX,SAAS,EAAE;IACTmB,MAAM,EAAEZ,6BAAA,GAAe,EAAf,GAAoB,EADnB;IAETa,eAAe,EAAEC,aAFR;IAGTC,YAAY,EAAE,EAHL;IAITpB,KAAK,EAAE;EAJE,CArBoB;EA2B/BD,UAAU,EAAE;IACVkB,MAAM,EAAEZ,6BAAA,GAAe,EAAf,GAAoB,EADlB;IAEVa,eAAe,EAAEG,aAFP;IAGVD,YAAY,EAAE,EAHJ;IAIVE,WAAW,EAAEH,aAJH;IAKVI,WAAW,EAAE,CALH;IAMVC,SAAS,EAAE;EAND,CA3BmB;EAmC/BvB,KAAK,EAAE;IACLU,UAAU,EAAE,gBADP;IAELC,SAAS,EAAE,QAFN;IAGLC,QAAQ,EAAEA,eAAA,CAAS,EAAT;EAHL;AAnCwB,CAAlB,CAAf"},"metadata":{},"sourceType":"script"}