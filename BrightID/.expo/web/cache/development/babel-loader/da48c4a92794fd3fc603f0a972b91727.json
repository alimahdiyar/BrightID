{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { getGroupName } from \"../utils/groups\";\nimport { fontSize } from \"../theme/fonts\";\nimport { GroupsScreen } from \"../components/Groups/GroupsScreen\";\nimport SearchGroups from \"../components/Helpers/SearchGroups\";\nimport SearchConnections from \"../components/Helpers/SearchConnections\";\nimport { NewGroupScreen } from \"../components/Groups/NewGroups/NewGroupScreen\";\nimport { GroupInfoScreen } from \"../components/Groups/NewGroups/GroupInfoScreen\";\nimport { MembersScreen } from \"../components/Groups/Members/MembersScreen\";\nimport ConnectionsScreen from \"../components/Connections/ConnectionsScreen\";\nimport { headerOptions, NavHome, AnimatedHeaderTitle } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar groupsOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerRight: function headerRight() {\n    return _jsx(SearchGroups, {});\n  },\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  },\n  headerTitle: function headerTitle() {\n    return _jsx(AnimatedHeaderTitle, {\n      text: i18next.t('groups.header.groups', 'Groups')\n    });\n  }\n});\n\nvar newGroupOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerRight: function headerRight() {\n    return _jsx(SearchConnections, {});\n  },\n  headerTitle: function headerTitle() {\n    return _jsx(AnimatedHeaderTitle, {\n      text: i18next.t('groups.header.newGroup', 'New Group')\n    });\n  }\n});\n\nvar membersScreenOptions = function membersScreenOptions(_ref) {\n  var _route$params;\n\n  var route = _ref.route;\n  var group = (_route$params = route.params) == null ? void 0 : _route$params.group;\n  return _objectSpread(_objectSpread({}, headerOptions), {}, {\n    title: getGroupName(group),\n    headerTitleStyle: {\n      fontSize: fontSize[20],\n      paddingLeft: 20,\n      paddingRight: 30\n    }\n  });\n};\n\nvar Groups = function Groups() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Groups\",\n      component: GroupsScreen,\n      options: groupsOptions\n    }), _jsx(Stack.Screen, {\n      name: \"NewGroup\",\n      component: NewGroupScreen,\n      options: newGroupOptions\n    }), _jsx(Stack.Screen, {\n      name: \"GroupInfo\",\n      component: GroupInfoScreen,\n      options: _objectSpread(_objectSpread({}, headerOptions), {}, {\n        title: t('groups.header.newGroup', 'New Group')\n      })\n    }), _jsx(Stack.Screen, {\n      name: \"Members\",\n      component: MembersScreen,\n      options: membersScreenOptions\n    }), _jsx(Stack.Screen, {\n      name: \"InviteList\",\n      component: ConnectionsScreen,\n      options: _objectSpread(_objectSpread({}, headerOptions), {}, {\n        headerRight: function headerRight() {\n          return _jsx(SearchConnections, {});\n        },\n        headerTitle: function headerTitle() {\n          return _jsx(AnimatedHeaderTitle, {\n            text: i18next.t('groups.header.inviteList')\n          });\n        }\n      })\n    })]\n  });\n};\n\nexport default Groups;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Groups.tsx"],"names":["Stack","createStackNavigator","groupsOptions","headerRight","headerLeft","headerTitle","i18next","newGroupOptions","membersScreenOptions","route","group","title","getGroupName","headerTitleStyle","fontSize","paddingLeft","paddingRight","Groups","t","useTranslation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { getGroupName } from '@/utils/groups';\nimport { fontSize } from '@/theme/fonts';\nimport { GroupsScreen } from '@/components/Groups/GroupsScreen';\nimport SearchGroups from '@/components/Helpers/SearchGroups';\nimport SearchConnections from '@/components/Helpers/SearchConnections';\nimport { NewGroupScreen } from '@/components/Groups/NewGroups/NewGroupScreen';\nimport { GroupInfoScreen } from '@/components/Groups/NewGroups/GroupInfoScreen';\nimport { MembersScreen } from '@/components/Groups/Members/MembersScreen';\nimport ConnectionsScreen from '@/components/Connections/ConnectionsScreen';\nimport { headerOptions, NavHome, AnimatedHeaderTitle } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst groupsOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerRight: () => <SearchGroups />,\n  headerLeft: () => <NavHome />,\n  headerTitle: () => (\n    <AnimatedHeaderTitle text={i18next.t('groups.header.groups', 'Groups')} />\n  ),\n};\n\nconst newGroupOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerRight: () => <SearchConnections />,\n  headerTitle: () => (\n    <AnimatedHeaderTitle\n      text={i18next.t('groups.header.newGroup', 'New Group')}\n    />\n  ),\n};\n\nconst membersScreenOptions: ({ route }) => StackNavigationOptions = ({\n  route,\n}) => {\n  const group = route.params?.group;\n  return {\n    ...headerOptions,\n    title: getGroupName(group),\n    headerTitleStyle: {\n      fontSize: fontSize[20],\n      paddingLeft: 20,\n      paddingRight: 30,\n    },\n  };\n};\n\nconst Groups = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Stack.Screen\n        name=\"Groups\"\n        component={GroupsScreen}\n        options={groupsOptions}\n      />\n      <Stack.Screen\n        name=\"NewGroup\"\n        component={NewGroupScreen}\n        options={newGroupOptions}\n      />\n      <Stack.Screen\n        name=\"GroupInfo\"\n        component={GroupInfoScreen}\n        options={{\n          ...headerOptions,\n          title: t('groups.header.newGroup', 'New Group'),\n        }}\n      />\n      <Stack.Screen\n        name=\"Members\"\n        component={MembersScreen}\n        options={membersScreenOptions}\n      />\n      <Stack.Screen\n        name=\"InviteList\"\n        component={ConnectionsScreen}\n        options={{\n          ...headerOptions,\n          headerRight: () => <SearchConnections />,\n          headerTitle: () => (\n            <AnimatedHeaderTitle text={i18next.t('groups.header.inviteList')} />\n          ),\n        }}\n      />\n    </>\n  );\n};\n\nexport default Groups;\n"]},"metadata":{},"sourceType":"module"}