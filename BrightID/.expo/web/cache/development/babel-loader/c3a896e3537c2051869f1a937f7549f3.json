{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { memo } from 'react';\nimport { Emoji } from \"./Emoji\";\nimport { useContext } from \"./CountryContext\";\nimport { useAsync } from 'react-async-hook';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    marginRight: 10\n  },\n  emojiFlag: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1 / PixelRatio.get(),\n    borderColor: 'transparent',\n    backgroundColor: 'transparent'\n  },\n  imageFlag: {\n    resizeMode: 'contain',\n    width: 25,\n    height: 19,\n    borderWidth: 1 / PixelRatio.get(),\n    opacity: 0.8\n  }\n});\nvar ImageFlag = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n      flagSize = _ref.flagSize;\n\n  var _useContext = useContext(),\n      getImageFlagAsync = _useContext.getImageFlagAsync;\n\n  var asyncResult = useAsync(getImageFlagAsync, [countryCode]);\n\n  if (asyncResult.loading) {\n    return React.createElement(ActivityIndicator, {\n      size: 'small'\n    });\n  }\n\n  return React.createElement(Image, {\n    resizeMode: 'contain',\n    style: [styles.imageFlag, {\n      borderColor: 'transparent',\n      height: flagSize\n    }],\n    source: {\n      uri: asyncResult.result\n    }\n  });\n});\nvar EmojiFlag = memo(function (_ref2) {\n  var countryCode = _ref2.countryCode,\n      flagSize = _ref2.flagSize;\n\n  var _useContext2 = useContext(),\n      getEmojiFlagAsync = _useContext2.getEmojiFlagAsync;\n\n  var asyncResult = useAsync(getEmojiFlagAsync, [countryCode]);\n\n  if (asyncResult.loading) {\n    return React.createElement(ActivityIndicator, {\n      size: 'small'\n    });\n  }\n\n  return React.createElement(Text, {\n    style: [styles.emojiFlag, {\n      fontSize: flagSize\n    }],\n    allowFontScaling: false\n  }, React.createElement(Emoji, _extends({}, {\n    name: asyncResult.result\n  })));\n});\nexport var Flag = function Flag(_ref3) {\n  var countryCode = _ref3.countryCode,\n      withEmoji = _ref3.withEmoji,\n      withFlagButton = _ref3.withFlagButton,\n      flagSize = _ref3.flagSize;\n  return withFlagButton ? React.createElement(View, {\n    style: styles.container\n  }, withEmoji ? React.createElement(EmojiFlag, _extends({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  })) : React.createElement(ImageFlag, _extends({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  }))) : null;\n};\nFlag.defaultProps = {\n  withEmoji: true,\n  withFlagButton: true\n};","map":{"version":3,"sources":["../src/Flag.tsx"],"names":["styles","StyleSheet","container","justifyContent","alignItems","width","marginRight","emojiFlag","borderWidth","PixelRatio","borderColor","backgroundColor","imageFlag","resizeMode","height","opacity","ImageFlag","memo","countryCode","flagSize","getImageFlagAsync","useContext","asyncResult","useAsync","React","size","style","source","uri","EmojiFlag","getEmojiFlagAsync","fontSize","allowFontScaling","name","Flag","withEmoji","withFlagButton"],"mappings":"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","sourceRoot":"","sourcesContent":["import _extends from\"@babel/runtime/helpers/extends\";import React,{memo}from'react';import{Emoji}from\"./Emoji\";import{useContext}from\"./CountryContext\";import{useAsync}from'react-async-hook';import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import PixelRatio from\"react-native-web/dist/exports/PixelRatio\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center',width:30,marginRight:10},emojiFlag:{alignItems:'center',justifyContent:'center',borderWidth:1/PixelRatio.get(),borderColor:'transparent',backgroundColor:'transparent'},imageFlag:{resizeMode:'contain',width:25,height:19,borderWidth:1/PixelRatio.get(),opacity:0.8}});var ImageFlag=memo(function(_ref){var countryCode=_ref.countryCode,flagSize=_ref.flagSize;var _useContext=useContext(),getImageFlagAsync=_useContext.getImageFlagAsync;var asyncResult=useAsync(getImageFlagAsync,[countryCode]);if(asyncResult.loading){return React.createElement(ActivityIndicator,{size:'small'});}return React.createElement(Image,{resizeMode:'contain',style:[styles.imageFlag,{borderColor:'transparent',height:flagSize}],source:{uri:asyncResult.result}});});var EmojiFlag=memo(function(_ref2){var countryCode=_ref2.countryCode,flagSize=_ref2.flagSize;var _useContext2=useContext(),getEmojiFlagAsync=_useContext2.getEmojiFlagAsync;var asyncResult=useAsync(getEmojiFlagAsync,[countryCode]);if(asyncResult.loading){return React.createElement(ActivityIndicator,{size:'small'});}return React.createElement(Text,{style:[styles.emojiFlag,{fontSize:flagSize}],allowFontScaling:false},React.createElement(Emoji,_extends({},{name:asyncResult.result})));});export var Flag=function Flag(_ref3){var countryCode=_ref3.countryCode,withEmoji=_ref3.withEmoji,withFlagButton=_ref3.withFlagButton,flagSize=_ref3.flagSize;return withFlagButton?React.createElement(View,{style:styles.container},withEmoji?React.createElement(EmojiFlag,_extends({},{countryCode:countryCode,flagSize:flagSize})):React.createElement(ImageFlag,_extends({},{countryCode:countryCode,flagSize:flagSize}))):null;};Flag.defaultProps={withEmoji:true,withFlagButton:true};"]},"metadata":{},"sourceType":"module"}