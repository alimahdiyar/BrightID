{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 48,\n    width: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    height: 25,\n    width: 25,\n    resizeMode: 'contain'\n  }\n});\n\nvar CloseButtonAndroid = function CloseButtonAndroid(props) {\n  var closeImage = require(\"./assets/images/close.android.png\");\n\n  if (props.image) {\n    closeImage = props.image;\n  }\n\n  var _useTheme = useTheme(),\n      onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableNativeFeedback, {\n    background: Platform.Version < 21 ? TouchableNativeFeedback.SelectableBackground() : TouchableNativeFeedback.SelectableBackgroundBorderless(),\n    onPress: props.onPress\n  }, React.createElement(View, null, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  }))));\n};\n\nvar CloseButtonIOS = function CloseButtonIOS(props) {\n  var closeImage = require(\"./assets/images/close.ios.png\");\n\n  if (props.image) {\n    closeImage = props.image;\n  }\n\n  var _useTheme2 = useTheme(),\n      onBackgroundTextColor = _useTheme2.onBackgroundTextColor;\n\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onPress\n  }, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  })));\n};\n\nvar propTypes = {\n  onPress: PropTypes.func,\n  image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n  ios: CloseButtonIOS,\n  android: CloseButtonAndroid,\n  web: CloseButtonIOS\n});","map":{"version":3,"sources":["../src/CloseButton.tsx"],"names":["styles","StyleSheet","container","height","width","alignItems","justifyContent","imageStyle","resizeMode","CloseButtonAndroid","closeImage","require","props","onBackgroundTextColor","useTheme","React","style","background","Platform","TouchableNativeFeedback","onPress","source","tintColor","CloseButtonIOS","propTypes","PropTypes","image","ios","android","web"],"mappings":"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","sourceRoot":"","sourcesContent":["import React from'react';import Image from\"react-native-web/dist/exports/Image\";import TouchableNativeFeedback from\"react-native-web/dist/exports/TouchableNativeFeedback\";import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import PropTypes from'prop-types';import{useTheme}from\"./CountryTheme\";var styles=StyleSheet.create({container:{height:48,width:'15%',alignItems:'center',justifyContent:'center'},imageStyle:{height:25,width:25,resizeMode:'contain'}});var CloseButtonAndroid=function CloseButtonAndroid(props){var closeImage=require(\"./assets/images/close.android.png\");if(props.image){closeImage=props.image;}var _useTheme=useTheme(),onBackgroundTextColor=_useTheme.onBackgroundTextColor;return React.createElement(View,{style:[styles.container,props.style]},React.createElement(TouchableNativeFeedback,{background:Platform.Version<21?TouchableNativeFeedback.SelectableBackground():TouchableNativeFeedback.SelectableBackgroundBorderless(),onPress:props.onPress},React.createElement(View,null,React.createElement(Image,{source:closeImage,style:[styles.imageStyle,props.imageStyle,{tintColor:onBackgroundTextColor}]}))));};var CloseButtonIOS=function CloseButtonIOS(props){var closeImage=require(\"./assets/images/close.ios.png\");if(props.image){closeImage=props.image;}var _useTheme2=useTheme(),onBackgroundTextColor=_useTheme2.onBackgroundTextColor;return React.createElement(View,{style:[styles.container,props.style]},React.createElement(TouchableOpacity,{onPress:props.onPress},React.createElement(Image,{source:closeImage,style:[styles.imageStyle,props.imageStyle,{tintColor:onBackgroundTextColor}]})));};var propTypes={onPress:PropTypes.func,image:PropTypes.any};CloseButtonIOS.prototype=propTypes;CloseButtonAndroid.prototype=propTypes;export default Platform.select({ios:CloseButtonIOS,android:CloseButtonAndroid,web:CloseButtonIOS});"]},"metadata":{},"sourceType":"module"}