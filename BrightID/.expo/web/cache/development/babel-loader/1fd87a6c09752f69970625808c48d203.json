{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport { connection_levels } from \"../../utils/constants\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { DARKER_GREY } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { connectionLevelColors, connectionLevelStrings } from \"../../utils/connectionLevelStrings\";\nimport { RatingButton } from \"./RatingButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RatingView = function RatingView(_ref) {\n  var setLevelHandler = _ref.setLevelHandler,\n      abuseHandler = _ref.abuseHandler;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.ratingHeader,\n      children: t('pendingConnections.label.rating')\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(RatingButton, {\n        color: connectionLevelColors[connection_levels.SUSPICIOUS],\n        label: connectionLevelStrings[connection_levels.SUSPICIOUS],\n        handleClick: function handleClick() {\n          return abuseHandler();\n        },\n        testID: connection_levels.SUSPICIOUS + \"Btn\"\n      }), _jsx(RatingButton, {\n        color: connectionLevelColors[connection_levels.JUST_MET],\n        label: connectionLevelStrings[connection_levels.JUST_MET],\n        handleClick: function handleClick() {\n          return setLevelHandler(connection_levels.JUST_MET);\n        },\n        testID: connection_levels.JUST_MET + \"Btn\"\n      }), _jsx(RatingButton, {\n        color: connectionLevelColors[connection_levels.ALREADY_KNOWN],\n        label: connectionLevelStrings[connection_levels.ALREADY_KNOWN],\n        handleClick: function handleClick() {\n          return setLevelHandler(connection_levels.ALREADY_KNOWN);\n        },\n        testID: connection_levels.ALREADY_KNOWN + \"Btn\"\n      })]\n    }), _jsx(Text, {\n      style: styles.ratingFooter,\n      children: t('pendingConnections.text.rating')\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  buttonsContainer: {\n    width: '100%',\n    flexGrow: 1,\n    maxHeight: DEVICE_LARGE ? 225 : 210,\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  ratingHeader: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[16],\n    marginBottom: DEVICE_LARGE ? 5 : 4\n  },\n  ratingFooter: {\n    paddingTop: DEVICE_LARGE ? 8 : 7,\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    fontSize: fontSize[12],\n    color: DARKER_GREY\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/RatingView.tsx"],"names":["RatingView","setLevelHandler","abuseHandler","t","useTranslation","styles","connectionLevelColors","connection_levels","connectionLevelStrings","StyleSheet","container","flexGrow","width","alignItems","justifyContent","buttonsContainer","maxHeight","DEVICE_LARGE","ratingHeader","fontFamily","textAlign","fontSize","marginBottom","ratingFooter","paddingTop","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { connection_levels } from '@/utils/constants';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { DARKER_GREY } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport {\n  connectionLevelColors,\n  connectionLevelStrings,\n} from '@/utils/connectionLevelStrings';\nimport { RatingButton } from './RatingButton';\n\ntype RatingViewProps = {\n  setLevelHandler: (level: ConnectionLevel) => any;\n  abuseHandler: () => any;\n};\n\nexport const RatingView = ({\n  setLevelHandler,\n  abuseHandler,\n}: RatingViewProps) => {\n  const { t } = useTranslation();\n  return (\n    <View style={styles.container}>\n      <Text style={styles.ratingHeader}>\n        {t('pendingConnections.label.rating')}\n      </Text>\n      <View style={styles.buttonsContainer}>\n        <RatingButton\n          color={connectionLevelColors[connection_levels.SUSPICIOUS]}\n          label={connectionLevelStrings[connection_levels.SUSPICIOUS]}\n          handleClick={() => abuseHandler()}\n          testID={`${connection_levels.SUSPICIOUS}Btn`}\n        />\n        <RatingButton\n          color={connectionLevelColors[connection_levels.JUST_MET]}\n          label={connectionLevelStrings[connection_levels.JUST_MET]}\n          handleClick={() => setLevelHandler(connection_levels.JUST_MET)}\n          testID={`${connection_levels.JUST_MET}Btn`}\n        />\n        <RatingButton\n          color={connectionLevelColors[connection_levels.ALREADY_KNOWN]}\n          label={connectionLevelStrings[connection_levels.ALREADY_KNOWN]}\n          handleClick={() => setLevelHandler(connection_levels.ALREADY_KNOWN)}\n          testID={`${connection_levels.ALREADY_KNOWN}Btn`}\n        />\n      </View>\n      <Text style={styles.ratingFooter}>\n        {t('pendingConnections.text.rating')}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  buttonsContainer: {\n    width: '100%',\n    flexGrow: 1,\n    maxHeight: DEVICE_LARGE ? 225 : 210,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  ratingHeader: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[16],\n    marginBottom: DEVICE_LARGE ? 5 : 4,\n  },\n  ratingFooter: {\n    paddingTop: DEVICE_LARGE ? 8 : 7,\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    fontSize: fontSize[12],\n    color: DARKER_GREY,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}