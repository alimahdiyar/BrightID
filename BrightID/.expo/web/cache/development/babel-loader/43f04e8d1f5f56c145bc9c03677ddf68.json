{"ast":null,"code":"import * as React from 'react';\nimport ModalPortal from \"./ModalPortal\";\nimport ModalAnimation from \"./ModalAnimation\";\nimport ModalContent from \"./ModalContent\";\nimport ModalFocusTrap from \"./ModalFocusTrap\";\nvar uniqueModalIdentifier = 0;\nvar activeModalStack = [];\nvar activeModalListeners = {};\n\nfunction notifyActiveModalListeners() {\n  if (activeModalStack.length === 0) {\n    return;\n  }\n\n  var activeModalId = activeModalStack[activeModalStack.length - 1];\n  activeModalStack.forEach(function (modalId) {\n    if (modalId in activeModalListeners) {\n      activeModalListeners[modalId](modalId === activeModalId);\n    }\n  });\n}\n\nfunction removeActiveModal(modalId) {\n  if (modalId in activeModalListeners) {\n    activeModalListeners[modalId](false);\n    delete activeModalListeners[modalId];\n  }\n\n  var index = activeModalStack.indexOf(modalId);\n\n  if (index !== -1) {\n    activeModalStack.splice(index, 1);\n    notifyActiveModalListeners();\n  }\n}\n\nfunction addActiveModal(modalId, listener) {\n  removeActiveModal(modalId);\n  activeModalStack.push(modalId);\n  activeModalListeners[modalId] = listener;\n  notifyActiveModalListeners();\n}\n\nvar Modal = React.forwardRef(function (props, forwardedRef) {\n  var animationType = props.animationType,\n      children = props.children,\n      onDismiss = props.onDismiss,\n      onRequestClose = props.onRequestClose,\n      onShow = props.onShow,\n      transparent = props.transparent,\n      _props$visible = props.visible,\n      visible = _props$visible === void 0 ? true : _props$visible;\n  var modalId = React.useMemo(function () {\n    return uniqueModalIdentifier++;\n  }, []);\n\n  var _React$useState = React.useState(false),\n      isActive = _React$useState[0],\n      setIsActive = _React$useState[1];\n\n  var onDismissCallback = React.useCallback(function () {\n    removeActiveModal(modalId);\n\n    if (onDismiss) {\n      onDismiss();\n    }\n  }, [modalId, onDismiss]);\n  var onShowCallback = React.useCallback(function () {\n    addActiveModal(modalId, setIsActive);\n\n    if (onShow) {\n      onShow();\n    }\n  }, [modalId, onShow]);\n  React.useEffect(function () {\n    return function () {\n      return removeActiveModal(modalId);\n    };\n  }, [modalId]);\n  return React.createElement(ModalPortal, null, React.createElement(ModalAnimation, {\n    animationType: animationType,\n    onDismiss: onDismissCallback,\n    onShow: onShowCallback,\n    visible: visible\n  }, React.createElement(ModalFocusTrap, {\n    active: isActive\n  }, React.createElement(ModalContent, {\n    active: isActive,\n    onRequestClose: onRequestClose,\n    ref: forwardedRef,\n    transparent: transparent\n  }, children))));\n});\nexport default Modal;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/Modal/index.js"],"names":["uniqueModalIdentifier","activeModalStack","activeModalListeners","activeModalId","modalId","index","notifyActiveModalListeners","removeActiveModal","Modal","React","animationType","props","children","onDismiss","onRequestClose","onShow","transparent","_props$visible","visible","_React$useState","isActive","setIsActive","onDismissCallback","onShowCallback","addActiveModal","active","ref"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport ModalPortal from './ModalPortal';\nimport ModalAnimation from './ModalAnimation';\nimport ModalContent from './ModalContent';\nimport ModalFocusTrap from './ModalFocusTrap';\nvar uniqueModalIdentifier = 0;\nvar activeModalStack = [];\nvar activeModalListeners = {};\n\nfunction notifyActiveModalListeners() {\n  if (activeModalStack.length === 0) {\n    return;\n  }\n\n  var activeModalId = activeModalStack[activeModalStack.length - 1];\n  activeModalStack.forEach(function (modalId) {\n    if (modalId in activeModalListeners) {\n      activeModalListeners[modalId](modalId === activeModalId);\n    }\n  });\n}\n\nfunction removeActiveModal(modalId) {\n  if (modalId in activeModalListeners) {\n    // Before removing this listener we should probably tell it\n    // that it's no longer the active modal for sure.\n    activeModalListeners[modalId](false);\n    delete activeModalListeners[modalId];\n  }\n\n  var index = activeModalStack.indexOf(modalId);\n\n  if (index !== -1) {\n    activeModalStack.splice(index, 1);\n    notifyActiveModalListeners();\n  }\n}\n\nfunction addActiveModal(modalId, listener) {\n  removeActiveModal(modalId);\n  activeModalStack.push(modalId);\n  activeModalListeners[modalId] = listener;\n  notifyActiveModalListeners();\n}\n\nvar Modal = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var animationType = props.animationType,\n      children = props.children,\n      onDismiss = props.onDismiss,\n      onRequestClose = props.onRequestClose,\n      onShow = props.onShow,\n      transparent = props.transparent,\n      _props$visible = props.visible,\n      visible = _props$visible === void 0 ? true : _props$visible; // Set a unique model identifier so we can correctly route\n  // dismissals and check the layering of modals.\n\n  var modalId = React.useMemo(function () {\n    return uniqueModalIdentifier++;\n  }, []);\n\n  var _React$useState = React.useState(false),\n      isActive = _React$useState[0],\n      setIsActive = _React$useState[1];\n\n  var onDismissCallback = React.useCallback(function () {\n    removeActiveModal(modalId);\n\n    if (onDismiss) {\n      onDismiss();\n    }\n  }, [modalId, onDismiss]);\n  var onShowCallback = React.useCallback(function () {\n    addActiveModal(modalId, setIsActive);\n\n    if (onShow) {\n      onShow();\n    }\n  }, [modalId, onShow]);\n  React.useEffect(function () {\n    return function () {\n      return removeActiveModal(modalId);\n    };\n  }, [modalId]);\n  return /*#__PURE__*/React.createElement(ModalPortal, null, /*#__PURE__*/React.createElement(ModalAnimation, {\n    animationType: animationType,\n    onDismiss: onDismissCallback,\n    onShow: onShowCallback,\n    visible: visible\n  }, /*#__PURE__*/React.createElement(ModalFocusTrap, {\n    active: isActive\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    active: isActive,\n    onRequestClose: onRequestClose,\n    ref: forwardedRef,\n    transparent: transparent\n  }, children))));\n});\nexport default Modal;"]},"metadata":{},"sourceType":"module"}