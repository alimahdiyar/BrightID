{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Constants = void 0;\nexports.hasTorch = hasTorch;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-camera/src/RNCamera.js\";\nvar _excluded = [\"style\"],\n    _excluded2 = [\"children\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Rationale = _propTypes.default.shape({\n  title: _propTypes.default.string.isRequired,\n  message: _propTypes.default.string.isRequired,\n  buttonPositive: _propTypes.default.string,\n  buttonNegative: _propTypes.default.string,\n  buttonNeutral: _propTypes.default.string\n});\n\nvar requestPermissions = function _callee(captureAudio, CameraManager, androidCameraPermissionOptions, androidRecordAudioPermissionOptions) {\n  var hasCameraPermissions, hasRecordAudioPermissions, cameraPermissionResult, audioPermissionResult;\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          hasCameraPermissions = false;\n          hasRecordAudioPermissions = false;\n\n          if (!(_reactNative.Platform.OS === 'ios')) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regenerator.default.awrap(CameraManager.checkVideoAuthorizationStatus());\n\n        case 5:\n          hasCameraPermissions = _context.sent;\n          _context.next = 19;\n          break;\n\n        case 8:\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 11;\n          return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.CAMERA, androidCameraPermissionOptions));\n\n        case 11:\n          cameraPermissionResult = _context.sent;\n\n          if (typeof cameraPermissionResult === 'boolean') {\n            hasCameraPermissions = cameraPermissionResult;\n          } else {\n            hasCameraPermissions = cameraPermissionResult === _reactNative.PermissionsAndroid.RESULTS.GRANTED;\n          }\n\n          _context.next = 19;\n          break;\n\n        case 15:\n          if (!(_reactNative.Platform.OS === 'windows')) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 18;\n          return _regenerator.default.awrap(CameraManager.checkMediaCapturePermission());\n\n        case 18:\n          hasCameraPermissions = _context.sent;\n\n        case 19:\n          if (!captureAudio) {\n            _context.next = 43;\n            break;\n          }\n\n          if (!(_reactNative.Platform.OS === 'ios')) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 23;\n          return _regenerator.default.awrap(CameraManager.checkRecordAudioAuthorizationStatus());\n\n        case 23:\n          hasRecordAudioPermissions = _context.sent;\n          _context.next = 43;\n          break;\n\n        case 26:\n          if (!(_reactNative.Platform.OS === 'android')) {\n            _context.next = 39;\n            break;\n          }\n\n          _context.next = 29;\n          return _regenerator.default.awrap(CameraManager.checkIfRecordAudioPermissionsAreDefined());\n\n        case 29:\n          if (!_context.sent) {\n            _context.next = 36;\n            break;\n          }\n\n          _context.next = 32;\n          return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.RECORD_AUDIO, androidRecordAudioPermissionOptions));\n\n        case 32:\n          audioPermissionResult = _context.sent;\n\n          if (typeof audioPermissionResult === 'boolean') {\n            hasRecordAudioPermissions = audioPermissionResult;\n          } else {\n            hasRecordAudioPermissions = audioPermissionResult === _reactNative.PermissionsAndroid.RESULTS.GRANTED;\n          }\n\n          _context.next = 37;\n          break;\n\n        case 36:\n          if (__DEV__) {\n            console.warn(\"The 'captureAudio' property set on RNCamera instance but 'RECORD_AUDIO' permissions not defined in the applications 'AndroidManifest.xml'. \" + \"If you want to record audio you will have to add '<uses-permission android:name=\\\"android.permission.RECORD_AUDIO\\\"/>' to your 'AndroidManifest.xml'. \" + \"Otherwise you should set the 'captureAudio' property on the component instance to 'false'.\");\n          }\n\n        case 37:\n          _context.next = 43;\n          break;\n\n        case 39:\n          if (!(_reactNative.Platform.OS === 'windows')) {\n            _context.next = 43;\n            break;\n          }\n\n          _context.next = 42;\n          return _regenerator.default.awrap(CameraManager.checkMediaCapturePermission());\n\n        case 42:\n          hasRecordAudioPermissions = _context.sent;\n\n        case 43:\n          return _context.abrupt(\"return\", {\n            hasCameraPermissions: hasCameraPermissions,\n            hasRecordAudioPermissions: hasRecordAudioPermissions\n          });\n\n        case 44:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  authorizationContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  notAuthorizedText: {\n    textAlign: 'center',\n    fontSize: 16\n  }\n});\n\nvar CameraStatus = {\n  READY: 'READY',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n};\nvar RecordAudioPermissionStatusEnum = {\n  AUTHORIZED: 'AUTHORIZED',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n};\nvar CameraManager = _reactNative.NativeModules.RNCameraManager || _reactNative.NativeModules.RNCameraModule || {\n  stubbed: true,\n  Type: {\n    back: 1\n  },\n  AutoFocus: {\n    on: 1\n  },\n  FlashMode: {\n    off: 1\n  },\n  WhiteBalance: {},\n  BarCodeType: {},\n  FaceDetection: {\n    fast: 1,\n    Mode: {},\n    Landmarks: {\n      none: 0\n    },\n    Classifications: {\n      none: 0\n    }\n  },\n  GoogleVisionBarcodeDetection: {\n    BarcodeType: 0,\n    BarcodeMode: 0\n  }\n};\nvar EventThrottleMs = 500;\n\nvar mapValues = function mapValues(input, mapper) {\n  var result = {};\n  Object.entries(input).map(function (_ref) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    result[key] = mapper(value, key);\n  });\n  return result;\n};\n\nvar Camera = function (_React$Component) {\n  (0, _inherits2.default)(Camera, _React$Component);\n\n  var _super = _createSuper(Camera);\n\n  function Camera(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Camera);\n    _this = _super.call(this, props);\n\n    _this.getSupportedPreviewFpsRange = function _callee2() {\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_reactNative.Platform.OS === 'android')) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regenerator.default.awrap(CameraManager.getSupportedPreviewFpsRange(_this._cameraHandle));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              throw new Error('getSupportedPreviewFpsRange is not supported on iOS');\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getAvailablePictureSizes = function _callee3() {\n      return _regenerator.default.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regenerator.default.awrap(CameraManager.getAvailablePictureSizes(_this.props.ratio, _this._cameraHandle));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onMountError = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      if (_this.props.onMountError) {\n        _this.props.onMountError(nativeEvent);\n      }\n    };\n\n    _this._onCameraReady = function () {\n      if (_this.props.onCameraReady) {\n        _this.props.onCameraReady();\n      }\n    };\n\n    _this._onAudioInterrupted = function () {\n      if (_this.props.onAudioInterrupted) {\n        _this.props.onAudioInterrupted();\n      }\n    };\n\n    _this._onTouch = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n\n      if (_this.props.onTap && !nativeEvent.isDoubleTap) {\n        _this.props.onTap(nativeEvent.touchOrigin);\n      }\n\n      if (_this.props.onDoubleTap && nativeEvent.isDoubleTap) {\n        _this.props.onDoubleTap(nativeEvent.touchOrigin);\n      }\n    };\n\n    _this._onAudioConnected = function () {\n      if (_this.props.onAudioConnected) {\n        _this.props.onAudioConnected();\n      }\n    };\n\n    _this._onStatusChange = function () {\n      if (_this.props.onStatusChange) {\n        _this.props.onStatusChange({\n          cameraStatus: _this.getStatus(),\n          recordAudioPermissionStatus: _this.state.recordAudioPermissionStatus\n        });\n      }\n    };\n\n    _this._onPictureSaved = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n\n      if (_this.props.onPictureSaved) {\n        _this.props.onPictureSaved(nativeEvent);\n      }\n    };\n\n    _this._onObjectDetected = function (callback) {\n      return function (_ref6) {\n        var nativeEvent = _ref6.nativeEvent;\n        var type = nativeEvent.type;\n\n        if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date() - _this._lastEventsTimes[type] < EventThrottleMs) {\n          return;\n        }\n\n        if (callback) {\n          callback(nativeEvent);\n          _this._lastEventsTimes[type] = new Date();\n          _this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n    };\n\n    _this._onSubjectAreaChanged = function (e) {\n      if (_this.props.onSubjectAreaChanged) {\n        _this.props.onSubjectAreaChanged(e);\n      }\n    };\n\n    _this._setReference = function (ref) {\n      if (ref) {\n        _this._cameraRef = ref;\n        _this._cameraHandle = (0, _reactNative.findNodeHandle)(ref);\n      } else {\n        _this._cameraRef = null;\n        _this._cameraHandle = null;\n      }\n    };\n\n    _this.getStatus = function () {\n      var _this$state = _this.state,\n          isAuthorized = _this$state.isAuthorized,\n          isAuthorizationChecked = _this$state.isAuthorizationChecked;\n\n      if (isAuthorizationChecked === false) {\n        return CameraStatus.PENDING_AUTHORIZATION;\n      }\n\n      return isAuthorized ? CameraStatus.READY : CameraStatus.NOT_AUTHORIZED;\n    };\n\n    _this.hasFaCC = function () {\n      return typeof _this.props.children === 'function';\n    };\n\n    _this.renderChildren = function () {\n      if (_this.hasFaCC()) {\n        return _this.props.children({\n          camera: (0, _assertThisInitialized2.default)(_this),\n          status: _this.getStatus(),\n          recordAudioPermissionStatus: _this.state.recordAudioPermissionStatus\n        });\n      }\n\n      return _this.props.children;\n    };\n\n    _this._lastEvents = {};\n    _this._lastEventsTimes = {};\n    _this._isMounted = true;\n    _this.state = {\n      isAuthorized: false,\n      isAuthorizationChecked: false,\n      recordAudioPermissionStatus: RecordAudioPermissionStatusEnum.PENDING_AUTHORIZATION\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Camera, [{\n    key: \"takePictureAsync\",\n    value: function takePictureAsync(options) {\n      var _options, orientation;\n\n      return _regenerator.default.async(function takePictureAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!options) {\n                options = {};\n              }\n\n              if (!options.quality) {\n                options.quality = 1;\n              }\n\n              if (options.orientation) {\n                if (typeof options.orientation !== 'number') {\n                  _options = options, orientation = _options.orientation;\n                  options.orientation = CameraManager.Orientation[orientation];\n\n                  if (__DEV__) {\n                    if (typeof options.orientation !== 'number') {\n                      console.warn(\"Orientation '\" + orientation + \"' is invalid.\");\n                    }\n                  }\n                }\n              }\n\n              if (options.pauseAfterCapture === undefined) {\n                options.pauseAfterCapture = false;\n              }\n\n              if (this._cameraHandle) {\n                _context4.next = 6;\n                break;\n              }\n\n              throw 'Camera handle cannot be null';\n\n            case 6:\n              _context4.next = 8;\n              return _regenerator.default.awrap(CameraManager.takePicture(options, this._cameraHandle));\n\n            case 8:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSupportedRatiosAsync\",\n    value: function getSupportedRatiosAsync() {\n      return _regenerator.default.async(function getSupportedRatiosAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(_reactNative.Platform.OS === 'android')) {\n                _context5.next = 6;\n                break;\n              }\n\n              _context5.next = 3;\n              return _regenerator.default.awrap(CameraManager.getSupportedRatios(this._cameraHandle));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              throw new Error('Ratio is not supported on iOS');\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getCameraIdsAsync\",\n    value: function getCameraIdsAsync() {\n      return _regenerator.default.async(function getCameraIdsAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(_reactNative.Platform.OS === 'android')) {\n                _context6.next = 6;\n                break;\n              }\n\n              _context6.next = 3;\n              return _regenerator.default.awrap(CameraManager.getCameraIds(this._cameraHandle));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.next = 8;\n              return _regenerator.default.awrap(CameraManager.getCameraIds());\n\n            case 8:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"recordAsync\",\n    value: function recordAsync(options) {\n      var _options2, orientation, recordAudioPermissionStatus, captureAudio;\n\n      return _regenerator.default.async(function recordAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!options || typeof options !== 'object') {\n                options = {};\n              } else if (typeof options.quality === 'string') {\n                options.quality = Camera.Constants.VideoQuality[options.quality];\n              }\n\n              if (options.orientation) {\n                if (typeof options.orientation !== 'number') {\n                  _options2 = options, orientation = _options2.orientation;\n                  options.orientation = CameraManager.Orientation[orientation];\n\n                  if (__DEV__) {\n                    if (typeof options.orientation !== 'number') {\n                      console.warn(\"Orientation '\" + orientation + \"' is invalid.\");\n                    }\n                  }\n                }\n              }\n\n              if (__DEV__) {\n                if (options.videoBitrate && typeof options.videoBitrate !== 'number') {\n                  console.warn('Video Bitrate should be a positive integer');\n                }\n              }\n\n              recordAudioPermissionStatus = this.state.recordAudioPermissionStatus;\n              captureAudio = this.props.captureAudio;\n\n              if (!captureAudio || recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED) {\n                options.mute = true;\n              }\n\n              if (__DEV__) {\n                if ((!options.mute || captureAudio) && recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED) {\n                  console.warn('Recording with audio not possible. Permissions are missing.');\n                }\n              }\n\n              _context7.next = 9;\n              return _regenerator.default.awrap(CameraManager.record(options, this._cameraHandle));\n\n            case 9:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      CameraManager.stopRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pauseRecording\",\n    value: function pauseRecording() {\n      CameraManager.pauseRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"resumeRecording\",\n    value: function resumeRecording() {\n      CameraManager.resumeRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pausePreview\",\n    value: function pausePreview() {\n      CameraManager.pausePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"isRecording\",\n    value: function isRecording() {\n      return CameraManager.isRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"resumePreview\",\n    value: function resumePreview() {\n      CameraManager.resumePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"arePermissionsGranted\",\n    value: function arePermissionsGranted() {\n      var _this$props, permissionDialogTitle, permissionDialogMessage, androidCameraPermissionOptions, androidRecordAudioPermissionOptions, cameraPermissions, audioPermissions, _await$requestPermiss, hasCameraPermissions, hasRecordAudioPermissions, recordAudioPermissionStatus;\n\n      return _regenerator.default.async(function arePermissionsGranted$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this$props = this.props, permissionDialogTitle = _this$props.permissionDialogTitle, permissionDialogMessage = _this$props.permissionDialogMessage, androidCameraPermissionOptions = _this$props.androidCameraPermissionOptions, androidRecordAudioPermissionOptions = _this$props.androidRecordAudioPermissionOptions;\n              cameraPermissions = androidCameraPermissionOptions;\n              audioPermissions = androidRecordAudioPermissionOptions;\n\n              if (permissionDialogTitle || permissionDialogMessage) {\n                console.warn('permissionDialogTitle and permissionDialogMessage are deprecated. Please use androidCameraPermissionOptions instead.');\n                cameraPermissions = (0, _extends2.default)({}, cameraPermissions, {\n                  title: permissionDialogTitle,\n                  message: permissionDialogMessage\n                });\n                audioPermissions = (0, _extends2.default)({}, audioPermissions, {\n                  title: permissionDialogTitle,\n                  message: permissionDialogMessage\n                });\n              }\n\n              _context8.next = 6;\n              return _regenerator.default.awrap(requestPermissions(this.props.captureAudio, CameraManager, cameraPermissions, audioPermissions));\n\n            case 6:\n              _await$requestPermiss = _context8.sent;\n              hasCameraPermissions = _await$requestPermiss.hasCameraPermissions;\n              hasRecordAudioPermissions = _await$requestPermiss.hasRecordAudioPermissions;\n              recordAudioPermissionStatus = hasRecordAudioPermissions ? RecordAudioPermissionStatusEnum.AUTHORIZED : RecordAudioPermissionStatusEnum.NOT_AUTHORIZED;\n              return _context8.abrupt(\"return\", {\n                hasCameraPermissions: hasCameraPermissions,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              });\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"refreshAuthorizationStatus\",\n    value: function refreshAuthorizationStatus() {\n      var _await$this$arePermis, hasCameraPermissions, recordAudioPermissionStatus;\n\n      return _regenerator.default.async(function refreshAuthorizationStatus$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regenerator.default.awrap(this.arePermissionsGranted());\n\n            case 2:\n              _await$this$arePermis = _context9.sent;\n              hasCameraPermissions = _await$this$arePermis.hasCameraPermissions;\n              recordAudioPermissionStatus = _await$this$arePermis.recordAudioPermissionStatus;\n\n              if (!(this._isMounted === false)) {\n                _context9.next = 7;\n                break;\n              }\n\n              return _context9.abrupt(\"return\");\n\n            case 7:\n              this.setState({\n                isAuthorized: hasCameraPermissions,\n                isAuthorizationChecked: true,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              });\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$this$arePermis2, hasCameraPermissions, recordAudioPermissionStatus;\n\n      return _regenerator.default.async(function componentDidMount$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regenerator.default.awrap(this.arePermissionsGranted());\n\n            case 2:\n              _await$this$arePermis2 = _context10.sent;\n              hasCameraPermissions = _await$this$arePermis2.hasCameraPermissions;\n              recordAudioPermissionStatus = _await$this$arePermis2.recordAudioPermissionStatus;\n\n              if (!(this._isMounted === false)) {\n                _context10.next = 7;\n                break;\n              }\n\n              return _context10.abrupt(\"return\");\n\n            case 7:\n              this.setState({\n                isAuthorized: hasCameraPermissions,\n                isAuthorizationChecked: true,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              }, this._onStatusChange);\n\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$_convertNativeP = this._convertNativeProps(this.props),\n          style = _this$_convertNativeP.style,\n          nativeProps = (0, _objectWithoutProperties2.default)(_this$_convertNativeP, _excluded);\n\n      if (this.state.isAuthorized || this.hasFaCC()) {\n        return _react.default.createElement(_reactNative.View, {\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 9\n          }\n        }, _react.default.createElement(RNCamera, (0, _extends2.default)({}, nativeProps, {\n          style: _reactNative.StyleSheet.absoluteFill,\n          ref: this._setReference,\n          onMountError: this._onMountError,\n          onCameraReady: this._onObjectDetected(this._onCameraReady),\n          onAudioInterrupted: this._onAudioInterrupted,\n          onAudioConnected: this._onAudioConnected,\n          onGoogleVisionBarcodesDetected: this._onObjectDetected(this.props.onGoogleVisionBarcodesDetected),\n          onBarCodeRead: this._onObjectDetected(this.props.onBarCodeRead),\n          onTouch: this._onTouch,\n          onFacesDetected: this._onObjectDetected(this.props.onFacesDetected),\n          onTextRecognized: this._onObjectDetected(this.props.onTextRecognized),\n          onPictureSaved: this._onPictureSaved,\n          onSubjectAreaChanged: this._onSubjectAreaChanged,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 11\n          }\n        })), this.renderChildren());\n      } else if (!this.state.isAuthorizationChecked) {\n        return this.props.pendingAuthorizationView;\n      } else {\n        return this.props.notAuthorizedView;\n      }\n    }\n  }, {\n    key: \"_convertNativeProps\",\n    value: function _convertNativeProps(_ref7) {\n      var children = _ref7.children,\n          props = (0, _objectWithoutProperties2.default)(_ref7, _excluded2);\n      var newProps = mapValues(props, this._convertProp);\n\n      if (props.onBarCodeRead) {\n        newProps.barCodeScannerEnabled = true;\n      }\n\n      if (props.onGoogleVisionBarcodesDetected) {\n        newProps.googleVisionBarcodeDetectorEnabled = true;\n      }\n\n      if (props.onFacesDetected) {\n        newProps.faceDetectorEnabled = true;\n      }\n\n      if (props.onTap || props.onDoubleTap) {\n        newProps.touchDetectorEnabled = true;\n      }\n\n      if (props.onTextRecognized) {\n        newProps.textRecognizerEnabled = true;\n      }\n\n      if (_reactNative.Platform.OS === 'ios') {\n        delete newProps.ratio;\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"_convertProp\",\n    value: function _convertProp(value, key) {\n      if (typeof value === 'string' && Camera.ConversionTables[key]) {\n        return Camera.ConversionTables[key][value];\n      }\n\n      return value;\n    }\n  }], [{\n    key: \"checkIfVideoIsValid\",\n    value: function checkIfVideoIsValid(path) {\n      return _regenerator.default.async(function checkIfVideoIsValid$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!(_reactNative.Platform.OS === 'android')) {\n                _context11.next = 6;\n                break;\n              }\n\n              _context11.next = 3;\n              return _regenerator.default.awrap(CameraManager.checkIfVideoIsValid(path));\n\n            case 3:\n              return _context11.abrupt(\"return\", _context11.sent);\n\n            case 6:\n              return _context11.abrupt(\"return\", true);\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n  return Camera;\n}(_react.default.Component);\n\nexports.default = Camera;\nCamera.Constants = {\n  Type: CameraManager.Type,\n  FlashMode: CameraManager.FlashMode,\n  AutoFocus: CameraManager.AutoFocus,\n  WhiteBalance: CameraManager.WhiteBalance,\n  VideoQuality: CameraManager.VideoQuality,\n  ImageType: CameraManager.ImageType,\n  VideoCodec: CameraManager.VideoCodec,\n  BarCodeType: CameraManager.BarCodeType,\n  GoogleVisionBarcodeDetection: CameraManager.GoogleVisionBarcodeDetection,\n  FaceDetection: CameraManager.FaceDetection,\n  CameraStatus: CameraStatus,\n  CaptureTarget: CameraManager.CaptureTarget,\n  RecordAudioPermissionStatus: RecordAudioPermissionStatusEnum,\n  VideoStabilization: CameraManager.VideoStabilization,\n  Orientation: {\n    auto: 'auto',\n    landscapeLeft: 'landscapeLeft',\n    landscapeRight: 'landscapeRight',\n    portrait: 'portrait',\n    portraitUpsideDown: 'portraitUpsideDown'\n  }\n};\nCamera.ConversionTables = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  exposure: CameraManager.Exposure,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n  faceDetectionMode: (CameraManager.FaceDetection || {}).Mode,\n  faceDetectionLandmarks: (CameraManager.FaceDetection || {}).Landmarks,\n  faceDetectionClassifications: (CameraManager.FaceDetection || {}).Classifications,\n  googleVisionBarcodeType: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType,\n  googleVisionBarcodeMode: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode,\n  videoStabilizationMode: CameraManager.VideoStabilization || {}\n};\nCamera.propTypes = (0, _extends2.default)({}, _reactNative.ViewPropTypes, {\n  zoom: _propTypes.default.number,\n  useNativeZoom: _propTypes.default.bool,\n  maxZoom: _propTypes.default.number,\n  ratio: _propTypes.default.string,\n  focusDepth: _propTypes.default.number,\n  onMountError: _propTypes.default.func,\n  onCameraReady: _propTypes.default.func,\n  onAudioInterrupted: _propTypes.default.func,\n  onAudioConnected: _propTypes.default.func,\n  onStatusChange: _propTypes.default.func,\n  onBarCodeRead: _propTypes.default.func,\n  onPictureTaken: _propTypes.default.func,\n  onPictureSaved: _propTypes.default.func,\n  onRecordingStart: _propTypes.default.func,\n  onRecordingEnd: _propTypes.default.func,\n  onTap: _propTypes.default.func,\n  onDoubleTap: _propTypes.default.func,\n  onGoogleVisionBarcodesDetected: _propTypes.default.func,\n  onFacesDetected: _propTypes.default.func,\n  onTextRecognized: _propTypes.default.func,\n  onSubjectAreaChanged: _propTypes.default.func,\n  trackingEnabled: _propTypes.default.bool,\n  faceDetectionMode: _propTypes.default.number,\n  faceDetectionLandmarks: _propTypes.default.number,\n  faceDetectionClassifications: _propTypes.default.number,\n  barCodeTypes: _propTypes.default.arrayOf(_propTypes.default.string),\n  googleVisionBarcodeType: _propTypes.default.number,\n  googleVisionBarcodeMode: _propTypes.default.number,\n  type: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  cameraId: _propTypes.default.string,\n  flashMode: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  exposure: _propTypes.default.number,\n  whiteBalance: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.shape({\n    temperature: _propTypes.default.number,\n    tint: _propTypes.default.number,\n    redGainOffset: _propTypes.default.number,\n    greenGainOffset: _propTypes.default.number,\n    blueGainOffset: _propTypes.default.number\n  })]),\n  autoFocus: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]),\n  autoFocusPointOfInterest: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  permissionDialogTitle: _propTypes.default.string,\n  permissionDialogMessage: _propTypes.default.string,\n  androidCameraPermissionOptions: Rationale,\n  androidRecordAudioPermissionOptions: Rationale,\n  notAuthorizedView: _propTypes.default.element,\n  pendingAuthorizationView: _propTypes.default.element,\n  captureAudio: _propTypes.default.bool,\n  keepAudioSession: _propTypes.default.bool,\n  useCamera2Api: _propTypes.default.bool,\n  playSoundOnCapture: _propTypes.default.bool,\n  playSoundOnRecord: _propTypes.default.bool,\n  videoStabilizationMode: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  pictureSize: _propTypes.default.string,\n  mirrorVideo: _propTypes.default.bool,\n  rectOfInterest: _propTypes.default.any,\n  defaultVideoQuality: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n});\nCamera.defaultProps = {\n  zoom: 0,\n  useNativeZoom: false,\n  maxZoom: 0,\n  ratio: '4:3',\n  focusDepth: 0,\n  type: CameraManager.Type.back,\n  cameraId: '',\n  autoFocus: CameraManager.AutoFocus.on,\n  flashMode: CameraManager.FlashMode.off,\n  exposure: -1,\n  whiteBalance: CameraManager.WhiteBalance.auto,\n  faceDetectionMode: (CameraManager.FaceDetection || {}).fast,\n  barCodeTypes: Object.values(CameraManager.BarCodeType),\n  googleVisionBarcodeType: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType || {}).None,\n  googleVisionBarcodeMode: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode || {}).NORMAL,\n  faceDetectionLandmarks: ((CameraManager.FaceDetection || {}).Landmarks || {}).none,\n  faceDetectionClassifications: ((CameraManager.FaceDetection || {}).Classifications || {}).none,\n  permissionDialogTitle: '',\n  permissionDialogMessage: '',\n  androidCameraPermissionOptions: null,\n  androidRecordAudioPermissionOptions: null,\n  notAuthorizedView: _react.default.createElement(_reactNative.View, {\n    style: styles.authorizationContainer,\n    __self: Camera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.notAuthorizedText,\n    __self: Camera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }\n  }, \"Camera not authorized\")),\n  pendingAuthorizationView: _react.default.createElement(_reactNative.View, {\n    style: styles.authorizationContainer,\n    __self: Camera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.ActivityIndicator, {\n    size: \"small\",\n    __self: Camera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  })),\n  captureAudio: true,\n  keepAudioSession: false,\n  useCamera2Api: false,\n  playSoundOnCapture: false,\n  playSoundOnRecord: false,\n  pictureSize: 'None',\n  videoStabilizationMode: 0,\n  mirrorVideo: false\n};\nvar Constants = Camera.Constants;\nexports.Constants = Constants;\n\nfunction hasTorch() {\n  return CameraManager.hasTorch();\n}\n\nvar RNCamera = (0, _reactNative.requireNativeComponent)('RNCamera', Camera, {\n  nativeOnly: {\n    accessibilityComponentType: true,\n    accessibilityLabel: true,\n    accessibilityLiveRegion: true,\n    barCodeScannerEnabled: true,\n    touchDetectorEnabled: true,\n    googleVisionBarcodeDetectorEnabled: true,\n    faceDetectorEnabled: true,\n    textRecognizerEnabled: true,\n    importantForAccessibility: true,\n    onBarCodeRead: true,\n    onGoogleVisionBarcodesDetected: true,\n    onCameraReady: true,\n    onAudioInterrupted: true,\n    onAudioConnected: true,\n    onPictureSaved: true,\n    onFaceDetected: true,\n    onTouch: true,\n    onLayout: true,\n    onMountError: true,\n    onSubjectAreaChanged: true,\n    renderToHardwareTextureAndroid: true,\n    testID: true\n  }\n});","map":{"version":3,"names":["Rationale","PropTypes","shape","title","string","isRequired","message","buttonPositive","buttonNegative","buttonNeutral","requestPermissions","captureAudio","CameraManager","androidCameraPermissionOptions","androidRecordAudioPermissionOptions","hasCameraPermissions","hasRecordAudioPermissions","Platform","OS","checkVideoAuthorizationStatus","PermissionsAndroid","request","PERMISSIONS","CAMERA","cameraPermissionResult","RESULTS","GRANTED","checkMediaCapturePermission","checkRecordAudioAuthorizationStatus","checkIfRecordAudioPermissionsAreDefined","RECORD_AUDIO","audioPermissionResult","__DEV__","console","warn","styles","StyleSheet","create","authorizationContainer","flex","alignItems","justifyContent","notAuthorizedText","textAlign","fontSize","CameraStatus","READY","PENDING_AUTHORIZATION","NOT_AUTHORIZED","RecordAudioPermissionStatusEnum","AUTHORIZED","NativeModules","RNCameraManager","RNCameraModule","stubbed","Type","back","AutoFocus","on","FlashMode","off","WhiteBalance","BarCodeType","FaceDetection","fast","Mode","Landmarks","none","Classifications","GoogleVisionBarcodeDetection","BarcodeType","BarcodeMode","EventThrottleMs","mapValues","input","mapper","result","Object","entries","map","key","value","Camera","props","getSupportedPreviewFpsRange","_cameraHandle","Error","getAvailablePictureSizes","ratio","_onMountError","nativeEvent","onMountError","_onCameraReady","onCameraReady","_onAudioInterrupted","onAudioInterrupted","_onTouch","onTap","isDoubleTap","touchOrigin","onDoubleTap","_onAudioConnected","onAudioConnected","_onStatusChange","onStatusChange","cameraStatus","getStatus","recordAudioPermissionStatus","state","_onPictureSaved","onPictureSaved","_onObjectDetected","callback","type","_lastEvents","_lastEventsTimes","JSON","stringify","Date","_onSubjectAreaChanged","e","onSubjectAreaChanged","_setReference","ref","_cameraRef","findNodeHandle","isAuthorized","isAuthorizationChecked","hasFaCC","children","renderChildren","camera","status","_isMounted","options","quality","orientation","Orientation","pauseAfterCapture","undefined","takePicture","getSupportedRatios","getCameraIds","Constants","VideoQuality","videoBitrate","mute","record","stopRecording","pauseRecording","resumeRecording","pausePreview","isRecording","resumePreview","permissionDialogTitle","permissionDialogMessage","cameraPermissions","audioPermissions","arePermissionsGranted","setState","_convertNativeProps","style","nativeProps","absoluteFill","onGoogleVisionBarcodesDetected","onBarCodeRead","onFacesDetected","onTextRecognized","pendingAuthorizationView","notAuthorizedView","newProps","_convertProp","barCodeScannerEnabled","googleVisionBarcodeDetectorEnabled","faceDetectorEnabled","touchDetectorEnabled","textRecognizerEnabled","ConversionTables","path","checkIfVideoIsValid","React","Component","ImageType","VideoCodec","CaptureTarget","RecordAudioPermissionStatus","VideoStabilization","auto","landscapeLeft","landscapeRight","portrait","portraitUpsideDown","flashMode","exposure","Exposure","autoFocus","whiteBalance","faceDetectionMode","faceDetectionLandmarks","faceDetectionClassifications","googleVisionBarcodeType","googleVisionBarcodeMode","videoStabilizationMode","propTypes","ViewPropTypes","zoom","number","useNativeZoom","bool","maxZoom","focusDepth","func","onPictureTaken","onRecordingStart","onRecordingEnd","trackingEnabled","barCodeTypes","arrayOf","oneOfType","cameraId","temperature","tint","redGainOffset","greenGainOffset","blueGainOffset","autoFocusPointOfInterest","x","y","element","keepAudioSession","useCamera2Api","playSoundOnCapture","playSoundOnRecord","pictureSize","mirrorVideo","rectOfInterest","any","defaultVideoQuality","defaultProps","values","None","NORMAL","hasTorch","RNCamera","requireNativeComponent","nativeOnly","accessibilityComponentType","accessibilityLabel","accessibilityLiveRegion","importantForAccessibility","onFaceDetected","onTouch","onLayout","renderToHardwareTextureAndroid","testID"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-camera/src/RNCamera.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  findNodeHandle,\n  Platform,\n  NativeModules,\n  ViewPropTypes,\n  requireNativeComponent,\n  View,\n  ActivityIndicator,\n  Text,\n  StyleSheet,\n  PermissionsAndroid,\n} from 'react-native';\n\nimport type { FaceFeature } from './FaceDetector';\n\nconst Rationale = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  buttonPositive: PropTypes.string,\n  buttonNegative: PropTypes.string,\n  buttonNeutral: PropTypes.string,\n});\n\nconst requestPermissions = async (\n  captureAudio: boolean,\n  CameraManager: any,\n  androidCameraPermissionOptions: Rationale | null,\n  androidRecordAudioPermissionOptions: Rationale | null,\n): Promise<{ hasCameraPermissions: boolean, hasRecordAudioPermissions: boolean }> => {\n  let hasCameraPermissions = false;\n  let hasRecordAudioPermissions = false;\n\n  if (Platform.OS === 'ios') {\n    hasCameraPermissions = await CameraManager.checkVideoAuthorizationStatus();\n  } else if (Platform.OS === 'android') {\n    const cameraPermissionResult = await PermissionsAndroid.request(\n      PermissionsAndroid.PERMISSIONS.CAMERA,\n      androidCameraPermissionOptions,\n    );\n    if (typeof cameraPermissionResult === 'boolean') {\n      hasCameraPermissions = cameraPermissionResult;\n    } else {\n      hasCameraPermissions = cameraPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n    }\n  } else if (Platform.OS === 'windows') {\n    hasCameraPermissions = await CameraManager.checkMediaCapturePermission();\n  }\n\n  if (captureAudio) {\n    if (Platform.OS === 'ios') {\n      hasRecordAudioPermissions = await CameraManager.checkRecordAudioAuthorizationStatus();\n    } else if (Platform.OS === 'android') {\n      if (await CameraManager.checkIfRecordAudioPermissionsAreDefined()) {\n        const audioPermissionResult = await PermissionsAndroid.request(\n          PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n          androidRecordAudioPermissionOptions,\n        );\n        if (typeof audioPermissionResult === 'boolean') {\n          hasRecordAudioPermissions = audioPermissionResult;\n        } else {\n          hasRecordAudioPermissions = audioPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n        }\n      } else if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `The 'captureAudio' property set on RNCamera instance but 'RECORD_AUDIO' permissions not defined in the applications 'AndroidManifest.xml'. ` +\n            `If you want to record audio you will have to add '<uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>' to your 'AndroidManifest.xml'. ` +\n            `Otherwise you should set the 'captureAudio' property on the component instance to 'false'.`,\n        );\n      }\n    } else if (Platform.OS === 'windows') {\n      hasRecordAudioPermissions = await CameraManager.checkMediaCapturePermission();\n    }\n  }\n\n  return {\n    hasCameraPermissions,\n    hasRecordAudioPermissions,\n  };\n};\n\nconst styles = StyleSheet.create({\n  authorizationContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  notAuthorizedText: {\n    textAlign: 'center',\n    fontSize: 16,\n  },\n});\n\ntype Orientation = 'auto' | 'landscapeLeft' | 'landscapeRight' | 'portrait' | 'portraitUpsideDown';\ntype OrientationNumber = 1 | 2 | 3 | 4;\n\ntype PictureOptions = {\n  quality?: number,\n  orientation?: Orientation | OrientationNumber,\n  base64?: boolean,\n  mirrorImage?: boolean,\n  exif?: boolean,\n  writeExif?: boolean | { [name: string]: any },\n  width?: number,\n  fixOrientation?: boolean,\n  forceUpOrientation?: boolean,\n  pauseAfterCapture?: boolean,\n};\n\ntype TrackedFaceFeature = FaceFeature & {\n  faceID?: number,\n};\n\ntype TrackedTextFeature = {\n  type: string,\n  bounds: {\n    size: {\n      width: number,\n      height: number,\n    },\n    origin: {\n      x: number,\n      y: number,\n    },\n  },\n  value: string,\n  components: Array<TrackedTextFeature>,\n};\n\ntype TrackedBarcodeFeature = {\n  bounds: {\n    size: {\n      width: number,\n      height: number,\n    },\n    origin: {\n      x: number,\n      y: number,\n    },\n  },\n  data: string,\n  dataRaw: string,\n  type: BarcodeType,\n  format?: string,\n  addresses?: {\n    addressesType?: 'UNKNOWN' | 'Work' | 'Home',\n    addressLines?: string[],\n  }[],\n  emails?: Email[],\n  phones?: Phone[],\n  urls: ?(string[]),\n  name?: {\n    firstName?: string,\n    lastName?: string,\n    middleName?: string,\n    prefix?: string,\n    pronounciation?: string,\n    suffix?: string,\n    formattedName?: string,\n  },\n  phone?: Phone,\n  organization?: string,\n  latitude?: number,\n  longitude?: number,\n  ssid?: string,\n  password?: string,\n  encryptionType?: string,\n  title?: string,\n  url?: string,\n  firstName?: string,\n  middleName?: string,\n  lastName?: string,\n  gender?: string,\n  addressCity?: string,\n  addressState?: string,\n  addressStreet?: string,\n  addressZip?: string,\n  birthDate?: string,\n  documentType?: string,\n  licenseNumber?: string,\n  expiryDate?: string,\n  issuingDate?: string,\n  issuingCountry?: string,\n  eventDescription?: string,\n  location?: string,\n  organizer?: string,\n  status?: string,\n  summary?: string,\n  start?: string,\n  end?: string,\n  email?: Email,\n  phoneNumber?: string,\n  message?: string,\n};\n\ntype BarcodeType =\n  | 'EMAIL'\n  | 'PHONE'\n  | 'CALENDAR_EVENT'\n  | 'DRIVER_LICENSE'\n  | 'GEO'\n  | 'SMS'\n  | 'CONTACT_INFO'\n  | 'WIFI'\n  | 'TEXT'\n  | 'ISBN'\n  | 'PRODUCT'\n  | 'URL';\n\ntype Email = {\n  address?: string,\n  body?: string,\n  subject?: string,\n  emailType?: 'UNKNOWN' | 'Work' | 'Home',\n};\n\ntype Phone = {\n  number?: string,\n  phoneType?: 'UNKNOWN' | 'Work' | 'Home' | 'Fax' | 'Mobile',\n};\n\ntype RecordingOptions = {\n  maxDuration?: number,\n  maxFileSize?: number,\n  orientation?: Orientation,\n  quality?: number | string,\n  fps?: number,\n  codec?: string,\n  mute?: boolean,\n  path?: string,\n  videoBitrate?: number,\n};\n\ntype EventCallbackArgumentsType = {\n  nativeEvent: Object,\n};\n\ntype Rect = {\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n};\n\ntype PropsType = typeof View.props & {\n  zoom?: number,\n  useNativeZoom?: boolean,\n  maxZoom?: number,\n  ratio?: string,\n  focusDepth?: number,\n  type?: number | string,\n  onCameraReady?: Function,\n  onAudioInterrupted?: Function,\n  onAudioConnected?: Function,\n  onStatusChange?: Function,\n  onBarCodeRead?: Function,\n  onPictureTaken?: Function,\n  onPictureSaved?: Function,\n  onRecordingStart?: Function,\n  onRecordingEnd?: Function,\n  onTap?: Function,\n  onDoubleTap?: Function,\n  onGoogleVisionBarcodesDetected?: ({ barcodes: Array<TrackedBarcodeFeature> }) => void,\n  onSubjectAreaChanged?: ({ nativeEvent: { prevPoint: {| x: number, y: number |} } }) => void,\n  faceDetectionMode?: number,\n  trackingEnabled?: boolean,\n  flashMode?: number | string,\n  exposure?: number,\n  barCodeTypes?: Array<string>,\n  googleVisionBarcodeType?: number,\n  googleVisionBarcodeMode?: number,\n  whiteBalance?: number | string | {temperature: number, tint: number, redGainOffset?: number, greenGainOffset?: number, blueGainOffset?: number },\n  faceDetectionLandmarks?: number,\n  autoFocus?: string | boolean | number,\n  autoFocusPointOfInterest?: { x: number, y: number },\n  faceDetectionClassifications?: number,\n  onFacesDetected?: ({ faces: Array<TrackedFaceFeature> }) => void,\n  onTextRecognized?: ({ textBlocks: Array<TrackedTextFeature> }) => void,\n  captureAudio?: boolean,\n  keepAudioSession?: boolean,\n  useCamera2Api?: boolean,\n  playSoundOnCapture?: boolean,\n  playSoundOnRecord?: boolean,\n  videoStabilizationMode?: number | string,\n  pictureSize?: string,\n  rectOfInterest: Rect,\n};\n\ntype StateType = {\n  isAuthorized: boolean,\n  isAuthorizationChecked: boolean,\n  recordAudioPermissionStatus: RecordAudioPermissionStatus,\n};\n\nexport type Status = 'READY' | 'PENDING_AUTHORIZATION' | 'NOT_AUTHORIZED';\n\nconst CameraStatus: { [key: Status]: Status } = {\n  READY: 'READY',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED',\n};\n\nexport type RecordAudioPermissionStatus = 'AUTHORIZED' | 'NOT_AUTHORIZED' | 'PENDING_AUTHORIZATION';\n\nconst RecordAudioPermissionStatusEnum: {\n  [key: RecordAudioPermissionStatus]: RecordAudioPermissionStatus,\n} = {\n  AUTHORIZED: 'AUTHORIZED',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED',\n};\n\nconst CameraManager: Object = NativeModules.RNCameraManager ||\n  NativeModules.RNCameraModule || {\n    stubbed: true,\n    Type: {\n      back: 1,\n    },\n    AutoFocus: {\n      on: 1,\n    },\n    FlashMode: {\n      off: 1,\n    },\n    WhiteBalance: {},\n    BarCodeType: {},\n    FaceDetection: {\n      fast: 1,\n      Mode: {},\n      Landmarks: {\n        none: 0,\n      },\n      Classifications: {\n        none: 0,\n      },\n    },\n    GoogleVisionBarcodeDetection: {\n      BarcodeType: 0,\n      BarcodeMode: 0,\n    },\n  };\n\nconst EventThrottleMs = 500;\n\nconst mapValues = (input, mapper) => {\n  const result = {};\n  Object.entries(input).map(([key, value]) => {\n    result[key] = mapper(value, key);\n  });\n  return result;\n};\n\nexport default class Camera extends React.Component<PropsType, StateType> {\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    ImageType: CameraManager.ImageType,\n    VideoCodec: CameraManager.VideoCodec,\n    BarCodeType: CameraManager.BarCodeType,\n    GoogleVisionBarcodeDetection: CameraManager.GoogleVisionBarcodeDetection,\n    FaceDetection: CameraManager.FaceDetection,\n    CameraStatus,\n    CaptureTarget: CameraManager.CaptureTarget,\n    RecordAudioPermissionStatus: RecordAudioPermissionStatusEnum,\n    VideoStabilization: CameraManager.VideoStabilization,\n    Orientation: {\n      auto: 'auto',\n      landscapeLeft: 'landscapeLeft',\n      landscapeRight: 'landscapeRight',\n      portrait: 'portrait',\n      portraitUpsideDown: 'portraitUpsideDown',\n    },\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    exposure: CameraManager.Exposure,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance,\n    faceDetectionMode: (CameraManager.FaceDetection || {}).Mode,\n    faceDetectionLandmarks: (CameraManager.FaceDetection || {}).Landmarks,\n    faceDetectionClassifications: (CameraManager.FaceDetection || {}).Classifications,\n    googleVisionBarcodeType: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType,\n    googleVisionBarcodeMode: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode,\n    videoStabilizationMode: CameraManager.VideoStabilization || {},\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    zoom: PropTypes.number,\n    useNativeZoom: PropTypes.bool,\n    maxZoom: PropTypes.number,\n    ratio: PropTypes.string,\n    focusDepth: PropTypes.number,\n    onMountError: PropTypes.func,\n    onCameraReady: PropTypes.func,\n    onAudioInterrupted: PropTypes.func,\n    onAudioConnected: PropTypes.func,\n    onStatusChange: PropTypes.func,\n    onBarCodeRead: PropTypes.func,\n    onPictureTaken: PropTypes.func,\n    onPictureSaved: PropTypes.func,\n    onRecordingStart: PropTypes.func,\n    onRecordingEnd: PropTypes.func,\n    onTap: PropTypes.func,\n    onDoubleTap: PropTypes.func,\n    onGoogleVisionBarcodesDetected: PropTypes.func,\n    onFacesDetected: PropTypes.func,\n    onTextRecognized: PropTypes.func,\n    onSubjectAreaChanged: PropTypes.func,\n    trackingEnabled: PropTypes.bool,\n    faceDetectionMode: PropTypes.number,\n    faceDetectionLandmarks: PropTypes.number,\n    faceDetectionClassifications: PropTypes.number,\n    barCodeTypes: PropTypes.arrayOf(PropTypes.string),\n    googleVisionBarcodeType: PropTypes.number,\n    googleVisionBarcodeMode: PropTypes.number,\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    cameraId: PropTypes.string,\n    flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    exposure: PropTypes.number,\n    whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number,\n      PropTypes.shape({ temperature: PropTypes.number, tint: PropTypes.number,\n        redGainOffset: PropTypes.number,\n        greenGainOffset: PropTypes.number,\n        blueGainOffset: PropTypes.number })]),\n    autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n    autoFocusPointOfInterest: PropTypes.shape({ x: PropTypes.number, y: PropTypes.number }),\n    permissionDialogTitle: PropTypes.string,\n    permissionDialogMessage: PropTypes.string,\n    androidCameraPermissionOptions: Rationale,\n    androidRecordAudioPermissionOptions: Rationale,\n    notAuthorizedView: PropTypes.element,\n    pendingAuthorizationView: PropTypes.element,\n    captureAudio: PropTypes.bool,\n    keepAudioSession: PropTypes.bool,\n    useCamera2Api: PropTypes.bool,\n    playSoundOnCapture: PropTypes.bool,\n    playSoundOnRecord: PropTypes.bool,\n    videoStabilizationMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    pictureSize: PropTypes.string,\n    mirrorVideo: PropTypes.bool,\n    rectOfInterest: PropTypes.any,\n    defaultVideoQuality: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps: Object = {\n    zoom: 0,\n    useNativeZoom: false,\n    maxZoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    type: CameraManager.Type.back,\n    cameraId: '',\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    exposure: -1,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n    faceDetectionMode: (CameraManager.FaceDetection || {}).fast,\n    barCodeTypes: Object.values(CameraManager.BarCodeType),\n    googleVisionBarcodeType: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType || {})\n      .None,\n    googleVisionBarcodeMode: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode || {})\n      .NORMAL,\n    faceDetectionLandmarks: ((CameraManager.FaceDetection || {}).Landmarks || {}).none,\n    faceDetectionClassifications: ((CameraManager.FaceDetection || {}).Classifications || {}).none,\n    permissionDialogTitle: '',\n    permissionDialogMessage: '',\n    androidCameraPermissionOptions: null,\n    androidRecordAudioPermissionOptions: null,\n    notAuthorizedView: (\n      <View style={styles.authorizationContainer}>\n        <Text style={styles.notAuthorizedText}>Camera not authorized</Text>\n      </View>\n    ),\n    pendingAuthorizationView: (\n      <View style={styles.authorizationContainer}>\n        <ActivityIndicator size=\"small\" />\n      </View>\n    ),\n    captureAudio: true,\n    keepAudioSession: false,\n    useCamera2Api: false,\n    playSoundOnCapture: false,\n    playSoundOnRecord: false,\n    pictureSize: 'None',\n    videoStabilizationMode: 0,\n    mirrorVideo: false,\n  };\n\n  _cameraRef: ?Object;\n  _cameraHandle: ?number;\n  _lastEvents: { [string]: string };\n  _lastEventsTimes: { [string]: Date };\n  _isMounted: boolean;\n\n  constructor(props: PropsType) {\n    super(props);\n    this._lastEvents = {};\n    this._lastEventsTimes = {};\n    this._isMounted = true;\n    this.state = {\n      isAuthorized: false,\n      isAuthorizationChecked: false,\n      recordAudioPermissionStatus: RecordAudioPermissionStatusEnum.PENDING_AUTHORIZATION,\n    };\n  }\n\n  async takePictureAsync(options?: PictureOptions) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.quality) {\n      options.quality = 1;\n    }\n\n    if (options.orientation) {\n      if (typeof options.orientation !== 'number') {\n        const { orientation } = options;\n        options.orientation = CameraManager.Orientation[orientation];\n        if (__DEV__) {\n          if (typeof options.orientation !== 'number') {\n            // eslint-disable-next-line no-console\n            console.warn(`Orientation '${orientation}' is invalid.`);\n          }\n        }\n      }\n    }\n\n    if (options.pauseAfterCapture === undefined) {\n      options.pauseAfterCapture = false;\n    }\n\n    if (!this._cameraHandle) {\n      throw 'Camera handle cannot be null';\n    }\n\n    return await CameraManager.takePicture(options, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedRatios(this._cameraHandle);\n    } else {\n      throw new Error('Ratio is not supported on iOS');\n    }\n  }\n\n  async getCameraIdsAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getCameraIds(this._cameraHandle);\n    } else {\n      return await CameraManager.getCameraIds(); // iOS does not need a camera instance\n    }\n  }\n\n  static async checkIfVideoIsValid(path) {\n    if (Platform.OS === 'android') {\n      return await CameraManager.checkIfVideoIsValid(path);\n    } else {\n      return true; // iOS: not implemented\n    }\n  }\n\n  getSupportedPreviewFpsRange = async (): Promise<[]> => {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedPreviewFpsRange(this._cameraHandle);\n    } else {\n      throw new Error('getSupportedPreviewFpsRange is not supported on iOS');\n    }\n  };\n\n  getAvailablePictureSizes = async (): string[] => {\n    //$FlowFixMe\n    return await CameraManager.getAvailablePictureSizes(this.props.ratio, this._cameraHandle);\n  };\n\n  async recordAsync(options?: RecordingOptions) {\n    if (!options || typeof options !== 'object') {\n      options = {};\n    } else if (typeof options.quality === 'string') {\n      options.quality = Camera.Constants.VideoQuality[options.quality];\n    }\n    if (options.orientation) {\n      if (typeof options.orientation !== 'number') {\n        const { orientation } = options;\n        options.orientation = CameraManager.Orientation[orientation];\n        if (__DEV__) {\n          if (typeof options.orientation !== 'number') {\n            // eslint-disable-next-line no-console\n            console.warn(`Orientation '${orientation}' is invalid.`);\n          }\n        }\n      }\n    }\n\n    if (__DEV__) {\n      if (options.videoBitrate && typeof options.videoBitrate !== 'number') {\n        // eslint-disable-next-line no-console\n        console.warn('Video Bitrate should be a positive integer');\n      }\n    }\n\n    const { recordAudioPermissionStatus } = this.state;\n    const { captureAudio } = this.props;\n\n    if (\n      !captureAudio ||\n      recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED\n    ) {\n      options.mute = true;\n    }\n\n    if (__DEV__) {\n      if (\n        (!options.mute || captureAudio) &&\n        recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED\n      ) {\n        // eslint-disable-next-line no-console\n        console.warn('Recording with audio not possible. Permissions are missing.');\n      }\n    }\n\n    return await CameraManager.record(options, this._cameraHandle);\n  }\n\n  stopRecording() {\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pauseRecording() {\n    CameraManager.pauseRecording(this._cameraHandle);\n  }\n\n  resumeRecording() {\n    CameraManager.resumeRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  isRecording() {\n    return CameraManager.isRecording(this._cameraHandle);\n  }\n\n  resumePreview() {\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onMountError = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onAudioInterrupted = () => {\n    if (this.props.onAudioInterrupted) {\n      this.props.onAudioInterrupted();\n    }\n  };\n  _onTouch = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onTap && !nativeEvent.isDoubleTap) {\n      this.props.onTap(nativeEvent.touchOrigin);\n    }\n    if (this.props.onDoubleTap && nativeEvent.isDoubleTap) {\n      this.props.onDoubleTap(nativeEvent.touchOrigin);\n    }\n  };\n  _onAudioConnected = () => {\n    if (this.props.onAudioConnected) {\n      this.props.onAudioConnected();\n    }\n  };\n\n  _onStatusChange = () => {\n    if (this.props.onStatusChange) {\n      this.props.onStatusChange({\n        cameraStatus: this.getStatus(),\n        recordAudioPermissionStatus: this.state.recordAudioPermissionStatus,\n      });\n    }\n  };\n\n  _onPictureSaved = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onPictureSaved) {\n      this.props.onPictureSaved(nativeEvent);\n    }\n  };\n\n  _onObjectDetected = (callback: ?Function) => ({ nativeEvent }: EventCallbackArgumentsType) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date() - this._lastEventsTimes[type] < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _onSubjectAreaChanged = e => {\n    if (this.props.onSubjectAreaChanged) {\n      this.props.onSubjectAreaChanged(e);\n    }\n  };\n\n  _setReference = (ref: ?Object) => {\n    if (ref) {\n      this._cameraRef = ref;\n      this._cameraHandle = findNodeHandle(ref);\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async arePermissionsGranted() {\n    const {\n      permissionDialogTitle,\n      permissionDialogMessage,\n      androidCameraPermissionOptions,\n      androidRecordAudioPermissionOptions,\n    } = this.props;\n\n    let cameraPermissions = androidCameraPermissionOptions;\n    let audioPermissions = androidRecordAudioPermissionOptions;\n    if (permissionDialogTitle || permissionDialogMessage) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'permissionDialogTitle and permissionDialogMessage are deprecated. Please use androidCameraPermissionOptions instead.',\n      );\n      cameraPermissions = {\n        ...cameraPermissions,\n        title: permissionDialogTitle,\n        message: permissionDialogMessage,\n      };\n      audioPermissions = {\n        ...audioPermissions,\n        title: permissionDialogTitle,\n        message: permissionDialogMessage,\n      };\n    }\n\n    const { hasCameraPermissions, hasRecordAudioPermissions } = await requestPermissions(\n      this.props.captureAudio,\n      CameraManager,\n      cameraPermissions,\n      audioPermissions,\n    );\n\n    const recordAudioPermissionStatus = hasRecordAudioPermissions\n      ? RecordAudioPermissionStatusEnum.AUTHORIZED\n      : RecordAudioPermissionStatusEnum.NOT_AUTHORIZED;\n    return { hasCameraPermissions, recordAudioPermissionStatus };\n  }\n\n  async refreshAuthorizationStatus() {\n    const {\n      hasCameraPermissions,\n      recordAudioPermissionStatus,\n    } = await this.arePermissionsGranted();\n    if (this._isMounted === false) {\n      return;\n    }\n\n    this.setState({\n      isAuthorized: hasCameraPermissions,\n      isAuthorizationChecked: true,\n      recordAudioPermissionStatus,\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      hasCameraPermissions,\n      recordAudioPermissionStatus,\n    } = await this.arePermissionsGranted();\n    if (this._isMounted === false) {\n      return;\n    }\n\n    this.setState(\n      {\n        isAuthorized: hasCameraPermissions,\n        isAuthorizationChecked: true,\n        recordAudioPermissionStatus,\n      },\n      this._onStatusChange,\n    );\n  }\n\n  getStatus = (): Status => {\n    const { isAuthorized, isAuthorizationChecked } = this.state;\n    if (isAuthorizationChecked === false) {\n      return CameraStatus.PENDING_AUTHORIZATION;\n    }\n    return isAuthorized ? CameraStatus.READY : CameraStatus.NOT_AUTHORIZED;\n  };\n\n  // FaCC = Function as Child Component;\n  hasFaCC = (): * => typeof this.props.children === 'function';\n\n  renderChildren = (): * => {\n    if (this.hasFaCC()) {\n      return this.props.children({\n        camera: this,\n        status: this.getStatus(),\n        recordAudioPermissionStatus: this.state.recordAudioPermissionStatus,\n      });\n    }\n    return this.props.children;\n  };\n\n  render() {\n    const { style, ...nativeProps } = this._convertNativeProps(this.props);\n\n    if (this.state.isAuthorized || this.hasFaCC()) {\n      return (\n        <View style={style}>\n          <RNCamera\n            {...nativeProps}\n            style={StyleSheet.absoluteFill}\n            ref={this._setReference}\n            onMountError={this._onMountError}\n            onCameraReady={this._onObjectDetected(this._onCameraReady)}\n            onAudioInterrupted={this._onAudioInterrupted}\n            onAudioConnected={this._onAudioConnected}\n            onGoogleVisionBarcodesDetected={this._onObjectDetected(\n              this.props.onGoogleVisionBarcodesDetected,\n            )}\n            onBarCodeRead={this._onObjectDetected(this.props.onBarCodeRead)}\n            onTouch={this._onTouch}\n            onFacesDetected={this._onObjectDetected(this.props.onFacesDetected)}\n            onTextRecognized={this._onObjectDetected(this.props.onTextRecognized)}\n            onPictureSaved={this._onPictureSaved}\n            onSubjectAreaChanged={this._onSubjectAreaChanged}\n          />\n          {this.renderChildren()}\n        </View>\n      );\n    } else if (!this.state.isAuthorizationChecked) {\n      return this.props.pendingAuthorizationView;\n    } else {\n      return this.props.notAuthorizedView;\n    }\n  }\n\n  _convertNativeProps({ children, ...props }: PropsType) {\n    const newProps = mapValues(props, this._convertProp);\n\n    if (props.onBarCodeRead) {\n      newProps.barCodeScannerEnabled = true;\n    }\n\n    if (props.onGoogleVisionBarcodesDetected) {\n      newProps.googleVisionBarcodeDetectorEnabled = true;\n    }\n\n    if (props.onFacesDetected) {\n      newProps.faceDetectorEnabled = true;\n    }\n\n    if (props.onTap || props.onDoubleTap) {\n      newProps.touchDetectorEnabled = true;\n    }\n\n    if (props.onTextRecognized) {\n      newProps.textRecognizerEnabled = true;\n    }\n\n    if (Platform.OS === 'ios') {\n      delete newProps.ratio;\n    }\n\n    return newProps;\n  }\n\n  _convertProp(value: *, key: string): * {\n    if (typeof value === 'string' && Camera.ConversionTables[key]) {\n      return Camera.ConversionTables[key][value];\n    }\n\n    return value;\n  }\n}\n\nexport const Constants = Camera.Constants;\n\nexport function hasTorch() {\n  return CameraManager.hasTorch();\n}\n\nconst RNCamera = requireNativeComponent('RNCamera', Camera, {\n  nativeOnly: {\n    accessibilityComponentType: true,\n    accessibilityLabel: true,\n    accessibilityLiveRegion: true,\n    barCodeScannerEnabled: true,\n    touchDetectorEnabled: true,\n    googleVisionBarcodeDetectorEnabled: true,\n    faceDetectorEnabled: true,\n    textRecognizerEnabled: true,\n    importantForAccessibility: true,\n    onBarCodeRead: true,\n    onGoogleVisionBarcodesDetected: true,\n    onCameraReady: true,\n    onAudioInterrupted: true,\n    onAudioConnected: true,\n    onPictureSaved: true,\n    onFaceDetected: true,\n    onTouch: true,\n    onLayout: true,\n    onMountError: true,\n    onSubjectAreaChanged: true,\n    renderToHardwareTextureAndroid: true,\n    testID: true,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}