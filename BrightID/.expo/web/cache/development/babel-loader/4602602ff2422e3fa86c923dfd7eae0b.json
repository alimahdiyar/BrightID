{"ast":null,"code":"import * as React from 'react';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport View from \"../View\";\nimport createElement from \"../createElement\";\nimport StyleSheet from \"../StyleSheet\";\nimport UIManager from \"../UIManager\";\n\nvar FocusBracket = function FocusBracket() {\n  return createElement('div', {\n    accessibilityRole: 'none',\n    tabIndex: 0,\n    style: styles.focusBracket\n  });\n};\n\nfunction attemptFocus(element) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  try {\n    element.focus();\n  } catch (e) {}\n\n  return document.activeElement === element;\n}\n\nfunction focusFirstDescendant(element) {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n\n    if (attemptFocus(child) || focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction focusLastDescendant(element) {\n  for (var i = element.childNodes.length - 1; i >= 0; i--) {\n    var child = element.childNodes[i];\n\n    if (attemptFocus(child) || focusLastDescendant(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar ModalFocusTrap = function ModalFocusTrap(_ref) {\n  var active = _ref.active,\n      children = _ref.children;\n  var trapElementRef = React.useRef();\n  var focusRef = React.useRef({\n    trapFocusInProgress: false,\n    lastFocusedElement: null\n  });\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var trapFocus = function trapFocus() {\n        if (trapElementRef.current == null || focusRef.current.trapFocusInProgress || !active) {\n          return;\n        }\n\n        try {\n          focusRef.current.trapFocusInProgress = true;\n\n          if (document.activeElement instanceof Node && !trapElementRef.current.contains(document.activeElement)) {\n            var hasFocused = focusFirstDescendant(trapElementRef.current);\n\n            if (focusRef.current.lastFocusedElement === document.activeElement) {\n              hasFocused = focusLastDescendant(trapElementRef.current);\n            }\n\n            if (!hasFocused && trapElementRef.current != null && document.activeElement) {\n              UIManager.focus(trapElementRef.current);\n            }\n          }\n        } finally {\n          focusRef.current.trapFocusInProgress = false;\n        }\n\n        focusRef.current.lastFocusedElement = document.activeElement;\n      };\n\n      trapFocus();\n      document.addEventListener('focus', trapFocus, true);\n      return function () {\n        return document.removeEventListener('focus', trapFocus, true);\n      };\n    }\n  }, [active]);\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var lastFocusedElementOutsideTrap = document.activeElement;\n      return function () {\n        if (lastFocusedElementOutsideTrap && document.contains(lastFocusedElementOutsideTrap)) {\n          UIManager.focus(lastFocusedElementOutsideTrap);\n        }\n      };\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(FocusBracket, null), React.createElement(View, {\n    ref: trapElementRef\n  }, children), React.createElement(FocusBracket, null));\n};\n\nexport default ModalFocusTrap;\nvar styles = StyleSheet.create({\n  focusBracket: {\n    outlineStyle: 'none'\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/Modal/ModalFocusTrap.js"],"names":["FocusBracket","createElement","accessibilityRole","tabIndex","style","styles","element","document","i","child","attemptFocus","focusFirstDescendant","focusLastDescendant","ModalFocusTrap","active","_ref","children","trapElementRef","React","focusRef","trapFocusInProgress","lastFocusedElement","trapFocus","hasFocused","UIManager","lastFocusedElementOutsideTrap","ref","StyleSheet","focusBracket","outlineStyle"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport View from '../View';\nimport createElement from '../createElement';\nimport StyleSheet from '../StyleSheet';\nimport UIManager from '../UIManager';\n/**\n * This Component is used to \"wrap\" the modal we're opening\n * so that changing focus via tab will never leave the document.\n *\n * This allows us to properly trap the focus within a modal\n * even if the modal is at the start or end of a document.\n */\n\nvar FocusBracket = function FocusBracket() {\n  return createElement('div', {\n    accessibilityRole: 'none',\n    tabIndex: 0,\n    style: styles.focusBracket\n  });\n};\n\nfunction attemptFocus(element) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  try {\n    element.focus();\n  } catch (e) {// Do nothing\n  }\n\n  return document.activeElement === element;\n}\n\nfunction focusFirstDescendant(element) {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n\n    if (attemptFocus(child) || focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction focusLastDescendant(element) {\n  for (var i = element.childNodes.length - 1; i >= 0; i--) {\n    var child = element.childNodes[i];\n\n    if (attemptFocus(child) || focusLastDescendant(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar ModalFocusTrap = function ModalFocusTrap(_ref) {\n  var active = _ref.active,\n      children = _ref.children;\n  var trapElementRef = React.useRef();\n  var focusRef = React.useRef({\n    trapFocusInProgress: false,\n    lastFocusedElement: null\n  });\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var trapFocus = function trapFocus() {\n        // We should not trap focus if:\n        // - The modal hasn't fully initialized with an HTMLElement ref\n        // - Focus is already in the process of being trapped (e.g., we're refocusing)\n        // - isTrapActive prop being falsey tells us to do nothing\n        if (trapElementRef.current == null || focusRef.current.trapFocusInProgress || !active) {\n          return;\n        }\n\n        try {\n          focusRef.current.trapFocusInProgress = true;\n\n          if (document.activeElement instanceof Node && !trapElementRef.current.contains(document.activeElement)) {\n            // To handle keyboard focusing we can make an assumption here.\n            // If you're tabbing through the focusable elements, the previously\n            // active element will either be the first or the last.\n            // If the previously selected element is the \"first\" descendant\n            // and we're leaving it - this means that we should be looping\n            // around to the other side of the modal.\n            var hasFocused = focusFirstDescendant(trapElementRef.current);\n\n            if (focusRef.current.lastFocusedElement === document.activeElement) {\n              hasFocused = focusLastDescendant(trapElementRef.current);\n            } // If we couldn't focus a new element then we need to focus onto the trap target\n\n\n            if (!hasFocused && trapElementRef.current != null && document.activeElement) {\n              UIManager.focus(trapElementRef.current);\n            }\n          }\n        } finally {\n          focusRef.current.trapFocusInProgress = false;\n        }\n\n        focusRef.current.lastFocusedElement = document.activeElement;\n      }; // Call the trapFocus callback at least once when this modal has been activated.\n\n\n      trapFocus();\n      document.addEventListener('focus', trapFocus, true);\n      return function () {\n        return document.removeEventListener('focus', trapFocus, true);\n      };\n    }\n  }, [active]); // To be fully compliant with WCAG we need to refocus element that triggered opening modal\n  // after closing it\n\n  React.useEffect(function () {\n    if (canUseDOM) {\n      var lastFocusedElementOutsideTrap = document.activeElement;\n      return function () {\n        if (lastFocusedElementOutsideTrap && document.contains(lastFocusedElementOutsideTrap)) {\n          UIManager.focus(lastFocusedElementOutsideTrap);\n        }\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FocusBracket, null), /*#__PURE__*/React.createElement(View, {\n    ref: trapElementRef\n  }, children), /*#__PURE__*/React.createElement(FocusBracket, null));\n};\n\nexport default ModalFocusTrap;\nvar styles = StyleSheet.create({\n  focusBracket: {\n    outlineStyle: 'none'\n  }\n});"]},"metadata":{},"sourceType":"module"}