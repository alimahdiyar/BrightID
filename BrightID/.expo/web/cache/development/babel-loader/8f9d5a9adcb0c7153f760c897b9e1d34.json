{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useTheme } from '@react-navigation/native';\nexport default function HeaderTitle(_ref) {\n  var tintColor = _ref.tintColor,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\nvar styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"sources":["HeaderTitle.tsx"],"names":["tintColor","style","rest","colors","useTheme","React","Animated","accessibilityRole","numberOfLines","styles","color","StyleSheet","title","Platform","ios","fontSize","fontWeight","android","fontFamily","default"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AASA,SAAA,QAAA,QAAA,0BAAA;AAQA,eAAe,SAAA,WAAA,CAAA,IAAA,EAA2D;EAApCA,IAAAA,SAAoC,GAAA,IAAA,CAApCA,SAAAA;EAAAA,IAAWC,KAAyB,GAAA,IAAA,CAAzBA,KAAXD;EAAAA,IAAqBE,IAAe,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAApCF;;EACpC,IAAA,SAAA,GAAmBI,QAAnB,EAAA;EAAA,IAAQD,MAAR,GAAA,SAAA,CAAA,MAAA;;EAEA,OACEE,KAAAA,CAAAA,aAAAA,CAACC,QAADD,CAAAA,IAAAA,EAAAA,QAAAA,CAAAA;IACEE,iBAAiB,EADnBF,QAAAA;IAEE,cAFFA,GAAAA;IAGEG,aAAa,EAHfH;EAAAA,CAAAA,EAAAA,IAAAA,EAAAA;IAKEJ,KAAK,EAAE,CACLQ,MAAM,CADD,KAAA,EAEL;MAAEC,KAAK,EAAEV,SAAS,KAATA,SAAAA,GAA0BG,MAAM,CAAhCH,IAAAA,GAFJ;IAEL,CAFK,EANX,KAMW;EALTK,CAAAA,CAAAA,CADF;AAeF;AAAA,IAAMI,MAAM,GAAGE,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,KAAK,EAAEC,QAAQ,CAARA,MAAAA,CAAgB;IACrBC,GAAG,EAAE;MACHC,QAAQ,EADL,EAAA;MAEHC,UAAU,EAHS;IAChB,CADgB;IAKrBC,OAAO,EAAE;MACPF,QAAQ,EADD,EAAA;MAEPG,UAAU,EAFH,mBAAA;MAGPF,UAAU,EARS;IAKZ,CALY;IAUrBG,OAAO,EAAE;MACPJ,QAAQ,EADD,EAAA;MAEPC,UAAU,EAbhB;IAWa;EAVY,CAAhBH;AADwB,CAAlBF,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Platform,\n  TextProps,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  children?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}