{"ast":null,"code":"import moment from 'moment';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { ORANGE, BLACK, RED } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { useSelector } from \"../../store\";\nimport { pendingConnection_states } from \"./pendingConnectionSlice\";\nimport { RatingView } from \"./RatingView\";\nimport { ConnectionStats } from \"./ConnectionStats\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar REPORTED_PERCENTAGE = 0.1;\nexport var PreviewConnectionView = function PreviewConnectionView(props) {\n  var _profileInfo$mutualCo;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _props$pendingConnect = props.pendingConnection,\n      state = _props$pendingConnect.state,\n      _props$pendingConnect2 = _props$pendingConnect.pendingConnectionData,\n      sharedProfile = _props$pendingConnect2.sharedProfile,\n      profileInfo = _props$pendingConnect2.profileInfo,\n      setLevelHandler = props.setLevelHandler,\n      photoTouchHandler = props.photoTouchHandler,\n      abuseHandler = props.abuseHandler;\n  var id = useSelector(function (state) {\n    return state.user.id;\n  });\n  var reports = (profileInfo == null ? void 0 : profileInfo.reports) || [];\n  var userReported = reports.find(function (report) {\n    return report.id === id;\n  });\n  var reported = !userReported && reports.length / ((profileInfo == null ? void 0 : profileInfo.connectionsNum) || 1) >= REPORTED_PERCENTAGE;\n  var ratingView;\n\n  switch (state) {\n    case pendingConnection_states.UNCONFIRMED:\n      {\n        ratingView = _jsx(RatingView, {\n          setLevelHandler: setLevelHandler,\n          abuseHandler: abuseHandler\n        });\n        break;\n      }\n\n    case pendingConnection_states.CONFIRMING:\n    case pendingConnection_states.CONFIRMED:\n      {\n        ratingView = _jsx(Text, {\n          style: styles.infoText,\n          children: t('pendingConnection.text.alreadyRated')\n        });\n        break;\n      }\n\n    case pendingConnection_states.ERROR:\n      {\n        ratingView = _jsx(Text, {\n          style: styles.infoText,\n          children: t('pendingConnections.text.errorGeneric')\n        });\n        break;\n      }\n\n    case pendingConnection_states.EXPIRED:\n      {\n        ratingView = _jsx(Text, {\n          style: styles.infoText,\n          children: t('pendingConnection.text.errorExpired')\n        });\n        break;\n      }\n\n    case pendingConnection_states.MYSELF:\n      {\n        ratingView = _jsx(Text, {\n          style: styles.infoText,\n          children: t('pendingConnection.text.errorMyself')\n        });\n        break;\n      }\n\n    default:\n      ratingView = _jsx(Text, {\n        style: styles.infoText,\n        children: t('pendingConnection.text.errorUnhandled')\n      });\n  }\n\n  var date = moment((profileInfo == null ? void 0 : profileInfo.createdAt) || Date.now()).fromNow();\n  var connectionBrightId = __DEV__ ? _jsx(View, {\n    children: _jsx(Text, {\n      testID: \"connectionBrightId\",\n      style: {\n        fontSize: 6,\n        color: BLACK\n      },\n      children: sharedProfile.id\n    })\n  }) : null;\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      testID: \"previewConnectionScreen\",\n      style: styles.userContainer,\n      children: [reported && _jsx(Text, {\n        style: [styles.reported, {\n          marginBottom: DEVICE_LARGE ? 12 : 10\n        }],\n        children: t('common.tag.reported')\n      }), _jsx(TouchableWithoutFeedback, {\n        onPress: photoTouchHandler,\n        children: _jsx(Image, {\n          source: {\n            uri: sharedProfile.photo\n          },\n          style: styles.photo,\n          resizeMode: \"cover\",\n          onError: function onError(e) {\n            console.log(e);\n          },\n          accessible: true,\n          accessibilityLabel: t('common.accessibilityLabel.userPhoto')\n        })\n      }), _jsxs(View, {\n        style: styles.connectNameContainer,\n        children: [_jsx(Text, {\n          style: styles.connectName,\n          children: sharedProfile.name\n        }), _jsx(View, {\n          style: styles.createdContainer,\n          children: _jsx(Text, {\n            style: styles.createdText,\n            children: t('pendingConnections.label.created', {\n              date: date\n            })\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.countsContainer,\n      children: _jsx(ConnectionStats, {\n        connectionsNum: (profileInfo == null ? void 0 : profileInfo.connectionsNum) || 0,\n        groupsNum: (profileInfo == null ? void 0 : profileInfo.groupsNum) || 0,\n        mutualConnectionsNum: (profileInfo == null ? void 0 : (_profileInfo$mutualCo = profileInfo.mutualConnections) == null ? void 0 : _profileInfo$mutualCo.length) || 0\n      })\n    }), userReported && _jsxs(Text, {\n      style: styles.reported,\n      children: [\"(\", t('common.tag.reportedByUser'), userReported.reportReason && userReported.reportReason !== 'other' && t('common.tag.reportReason', {\n        reportReason: userReported.reportReason\n      }), \")\"]\n    }), _jsx(View, {\n      style: styles.ratingView,\n      children: ratingView\n    }), connectionBrightId]\n  });\n};\nvar styles = StyleSheet.create({\n  userContainer: {\n    paddingBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  photo: {\n    width: DEVICE_LARGE ? 120 : 100,\n    height: DEVICE_LARGE ? 120 : 100,\n    borderRadius: 100\n  },\n  connectNameContainer: {\n    marginTop: DEVICE_LARGE ? 12 : 10,\n    alignItems: 'center'\n  },\n  connectName: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n    letterSpacing: 0,\n    textAlign: 'left',\n    color: BLACK\n  },\n  reported: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: RED\n  },\n  countsContainer: {\n    width: '88%',\n    paddingTop: 6,\n    paddingBottom: 6,\n    marginTop: 4,\n    marginBottom: DEVICE_LARGE ? 12 : 10,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ORANGE,\n    justifyContent: 'space-evenly',\n    flexDirection: 'row'\n  },\n  ratingView: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '90%'\n  },\n  infoText: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[17],\n    marginTop: 32\n  },\n  createdContainer: {\n    marginTop: DEVICE_LARGE ? 7 : 6\n  },\n  createdText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[12],\n    color: ORANGE\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/PreviewConnectionView.tsx"],"names":["REPORTED_PERCENTAGE","PreviewConnectionView","t","useTranslation","state","sharedProfile","profileInfo","setLevelHandler","photoTouchHandler","abuseHandler","props","id","useSelector","reports","userReported","report","reported","pendingConnection_states","ratingView","styles","date","moment","Date","connectionBrightId","__DEV__","fontSize","color","marginBottom","DEVICE_LARGE","uri","console","reportReason","StyleSheet","userContainer","paddingBottom","justifyContent","alignItems","photo","width","height","borderRadius","connectNameContainer","marginTop","connectName","fontFamily","letterSpacing","textAlign","countsContainer","paddingTop","borderTopWidth","borderBottomWidth","borderColor","flexDirection","flex","infoText","createdContainer","createdText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { ORANGE, BLACK, RED } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { useSelector } from '@/store';\nimport { pendingConnection_states } from './pendingConnectionSlice';\nimport { RatingView } from './RatingView';\nimport { ConnectionStats } from './ConnectionStats';\n\n// percentage determines reported warning\nconst REPORTED_PERCENTAGE = 0.1;\n\ntype PreviewConnectionProps = {\n  pendingConnection: PendingConnection;\n  setLevelHandler: (level: ConnectionLevel) => any;\n  photoTouchHandler: () => any;\n  abuseHandler: () => any;\n};\n\nexport const PreviewConnectionView = (props: PreviewConnectionProps) => {\n  const { t } = useTranslation();\n  const {\n    pendingConnection: {\n      state,\n      pendingConnectionData: { sharedProfile, profileInfo },\n    },\n    setLevelHandler,\n    photoTouchHandler,\n    abuseHandler,\n  } = props;\n  const id = useSelector((state) => state.user.id);\n\n  const reports = profileInfo?.reports || [];\n\n  const userReported = reports.find((report) => report.id === id);\n\n  const reported =\n    !userReported &&\n    reports.length / (profileInfo?.connectionsNum || 1) >= REPORTED_PERCENTAGE;\n\n  let ratingView;\n  switch (state) {\n    case pendingConnection_states.UNCONFIRMED: {\n      ratingView = <RatingView setLevelHandler={setLevelHandler} abuseHandler={abuseHandler}/>;\n      break;\n    }\n    case pendingConnection_states.CONFIRMING:\n    case pendingConnection_states.CONFIRMED: {\n      // user already handled this connection request\n      ratingView = (\n        <Text style={styles.infoText}>\n          {t('pendingConnection.text.alreadyRated')}\n        </Text>\n      );\n      break;\n    }\n    case pendingConnection_states.ERROR: {\n      ratingView = (\n        <Text style={styles.infoText}>\n          {t('pendingConnections.text.errorGeneric')}\n        </Text>\n      );\n      break;\n    }\n    case pendingConnection_states.EXPIRED: {\n      ratingView = (\n        <Text style={styles.infoText}>\n          {t('pendingConnection.text.errorExpired')}\n        </Text>\n      );\n      break;\n    }\n    case pendingConnection_states.MYSELF: {\n      ratingView = (\n        <Text style={styles.infoText}>\n          {t('pendingConnection.text.errorMyself')}\n        </Text>\n      );\n      break;\n    }\n    default:\n      ratingView = (\n        <Text style={styles.infoText}>\n          {t('pendingConnection.text.errorUnhandled')}\n        </Text>\n      );\n  }\n\n  const date = moment(profileInfo?.createdAt || Date.now()).fromNow();\n\n  const connectionBrightId = __DEV__ ? (\n    <View>\n      <Text testID=\"connectionBrightId\" style={{ fontSize: 6, color: BLACK }}>\n        {sharedProfile.id}\n      </Text>\n    </View>\n  ) : null;\n\n  return (\n    <>\n      <View testID=\"previewConnectionScreen\" style={styles.userContainer}>\n        {reported && (\n          <Text\n            style={[styles.reported, { marginBottom: DEVICE_LARGE ? 12 : 10 }]}\n          >\n            {t('common.tag.reported')}\n          </Text>\n        )}\n        <TouchableWithoutFeedback onPress={photoTouchHandler}>\n          <Image\n            source={{ uri: sharedProfile.photo }}\n            style={styles.photo}\n            resizeMode=\"cover\"\n            onError={(e) => {\n              console.log(e);\n            }}\n            accessible={true}\n            accessibilityLabel={t('common.accessibilityLabel.userPhoto')}\n          />\n        </TouchableWithoutFeedback>\n        <View style={styles.connectNameContainer}>\n          <Text style={styles.connectName}>{sharedProfile.name}</Text>\n          <View style={styles.createdContainer}>\n            <Text style={styles.createdText}>\n              {t('pendingConnections.label.created', { date })}\n            </Text>\n          </View>\n        </View>\n      </View>\n      <View style={styles.countsContainer}>\n        <ConnectionStats\n          connectionsNum={profileInfo?.connectionsNum || 0}\n          groupsNum={profileInfo?.groupsNum || 0}\n          mutualConnectionsNum={profileInfo?.mutualConnections?.length || 0}\n        />\n      </View>\n      {userReported && (\n        <Text style={styles.reported}>\n          ({t('common.tag.reportedByUser')}\n          {userReported.reportReason &&\n            userReported.reportReason !== 'other' &&\n            t('common.tag.reportReason', {\n              reportReason: userReported.reportReason,\n            })}\n          )\n        </Text>\n      )}\n      <View style={styles.ratingView}>{ratingView}</View>\n      {connectionBrightId}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  userContainer: {\n    paddingBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  photo: {\n    width: DEVICE_LARGE ? 120 : 100,\n    height: DEVICE_LARGE ? 120 : 100,\n    borderRadius: 100,\n  },\n  connectNameContainer: {\n    marginTop: DEVICE_LARGE ? 12 : 10,\n    alignItems: 'center',\n  },\n  connectName: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n    letterSpacing: 0,\n    textAlign: 'left',\n    color: BLACK,\n  },\n  reported: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: RED,\n  },\n  countsContainer: {\n    width: '88%',\n    paddingTop: 6,\n    paddingBottom: 6,\n    marginTop: 4,\n    marginBottom: DEVICE_LARGE ? 12 : 10,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ORANGE,\n    justifyContent: 'space-evenly',\n    flexDirection: 'row',\n  },\n  ratingView: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '90%',\n  },\n  infoText: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[17],\n    marginTop: 32,\n  },\n  createdContainer: {\n    marginTop: DEVICE_LARGE ? 7 : 6,\n  },\n  createdText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[12],\n    color: ORANGE,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}