{"ast":null,"code":"import React from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector } from \"../store\";\nimport { INVITE_ACTIVE } from \"../utils/constants\";\nimport { DEVICE_LARGE } from \"../utils/deviceConstants\";\nimport { BLACK } from \"../theme/colors\";\nimport { createSelector } from '@reduxjs/toolkit';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Bell from \"../components/Icons/NotificationBell\";\nimport Menu from \"../components/Icons/Menu\";\nimport { pendingConnection_states, selectAllPendingConnections } from \"../components/PendingConnections/pendingConnectionSlice\";\nimport { toggleDrawer, resetHome, resetNotifications } from \"../NavigationService\";\nimport { HomeDrawer } from \"./HomeDrawer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar unconfirmedSelector = createSelector(selectAllPendingConnections, function (pendingConnections) {\n  return pendingConnections.filter(function (pc) {\n    return pc.state === pendingConnection_states.UNCONFIRMED;\n  });\n});\nvar inviteSelector = createSelector(function (state) {\n  return state.groups.invites;\n}, function (invites) {\n  return invites.filter(function (_ref) {\n    var state = _ref.state;\n    return state === INVITE_ACTIVE;\n  });\n});\n\nvar NotificationBell = function NotificationBell() {\n  var pendingConnections = useSelector(function (state) {\n    var _unconfirmedSelector;\n\n    return (_unconfirmedSelector = unconfirmedSelector(state)) == null ? void 0 : _unconfirmedSelector.length;\n  });\n  var invites = useSelector(function (state) {\n    var _inviteSelector;\n\n    return (_inviteSelector = inviteSelector(state)) == null ? void 0 : _inviteSelector.length;\n  });\n  var backupPending = useSelector(function (state) {\n    return state.notifications.backupPending;\n  });\n  var displayBadge = backupPending || invites || pendingConnections;\n  return _jsx(TouchableOpacity, {\n    testID: \"notificationsBtn\",\n    style: {\n      marginRight: 25\n    },\n    onPress: function onPress() {\n      Keyboard.dismiss();\n      resetNotifications();\n    },\n    children: _jsx(Bell, {\n      color: BLACK,\n      alert: !!displayBadge\n    })\n  });\n};\n\nvar BrightIdLogo = function BrightIdLogo() {\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n      resetHome();\n    },\n    testID: \"BrightIdLogo\",\n    children: _jsx(Image, {\n      source: require(\"../static/brightid-final.png\"),\n      accessible: true,\n      accessibilityLabel: \"Home Header Logo\",\n      resizeMode: \"contain\",\n      style: {\n        width: DEVICE_LARGE ? 104 : 85,\n        maxHeight: 80\n      }\n    })\n  });\n};\n\nvar homeScreenOptions = {\n  headerTitle: function headerTitle() {\n    return _jsx(BrightIdLogo, {});\n  },\n  headerLeft: function headerLeft() {\n    return _jsx(TouchableOpacity, {\n      testID: \"toggleDrawer\",\n      style: {\n        width: DEVICE_LARGE ? 80 : 70,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        Keyboard.dismiss();\n        toggleDrawer();\n      },\n      children: _jsx(Menu, {\n        width: DEVICE_LARGE ? 30 : 24\n      })\n    });\n  },\n  headerRight: function headerRight() {\n    return _jsx(NotificationBell, {});\n  },\n  headerStyle: {\n    height: DEVICE_LARGE ? 80 : 70,\n    shadowRadius: 0,\n    elevation: -1\n  },\n  headerTitleAlign: 'center',\n  headerTintColor: 'transparent',\n  headerTransparent: true\n};\nvar Stack = createStackNavigator();\n\nvar Home = function Home() {\n  return _jsx(_Fragment, {\n    children: _jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeDrawer,\n      options: homeScreenOptions\n    })\n  });\n};\n\nexport default Home;","map":{"version":3,"names":["React","useSelector","INVITE_ACTIVE","DEVICE_LARGE","BLACK","createSelector","createStackNavigator","Bell","Menu","pendingConnection_states","selectAllPendingConnections","toggleDrawer","resetHome","resetNotifications","HomeDrawer","unconfirmedSelector","pendingConnections","filter","pc","state","UNCONFIRMED","inviteSelector","groups","invites","NotificationBell","length","backupPending","notifications","displayBadge","marginRight","Keyboard","dismiss","BrightIdLogo","require","width","maxHeight","homeScreenOptions","headerTitle","headerLeft","alignItems","justifyContent","headerRight","headerStyle","height","shadowRadius","elevation","headerTitleAlign","headerTintColor","headerTransparent","Stack","Home"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Home.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  Keyboard,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\nimport { useSelector } from '@/store';\nimport { INVITE_ACTIVE } from '@/utils/constants';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK } from '@/theme/colors';\nimport { createSelector } from '@reduxjs/toolkit';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport Bell from '@/components/Icons/NotificationBell';\nimport Menu from '@/components/Icons/Menu';\nimport {\n  pendingConnection_states,\n  selectAllPendingConnections,\n} from '@/components/PendingConnections/pendingConnectionSlice';\nimport {\n  toggleDrawer,\n  resetHome,\n  resetNotifications,\n} from '@/NavigationService';\nimport { HomeDrawer } from './HomeDrawer';\n\n/** SELECTORS */\n\nconst unconfirmedSelector = createSelector(\n  selectAllPendingConnections,\n  (pendingConnections) =>\n    pendingConnections.filter(\n      // @ts-ignore\n      (pc) => pc.state === pendingConnection_states.UNCONFIRMED,\n    ),\n);\n\nconst inviteSelector = createSelector(\n  (state: State) => state.groups.invites,\n  (invites) => invites.filter(({ state }) => state === INVITE_ACTIVE),\n);\n\n/** COMPONENTS */\n\nconst NotificationBell = () => {\n  const pendingConnections = useSelector(\n    (state: State) => unconfirmedSelector(state)?.length,\n  );\n\n  const invites = useSelector((state: State) => inviteSelector(state)?.length);\n\n  const backupPending = useSelector(\n    (state: State) => state.notifications.backupPending,\n  );\n\n  const displayBadge = backupPending || invites || pendingConnections;\n\n  return (\n    <TouchableOpacity\n      testID=\"notificationsBtn\"\n      style={{ marginRight: 25 }}\n      onPress={() => {\n        Keyboard.dismiss();\n        resetNotifications();\n      }}\n    >\n      <Bell color={BLACK} alert={!!displayBadge} />\n    </TouchableOpacity>\n  );\n};\n\n/** OPTIONS */\n\nconst BrightIdLogo = () => {\n  return (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        Keyboard.dismiss();\n        resetHome();\n      }}\n      testID=\"BrightIdLogo\"\n    >\n      <Image\n        source={require('@/static/brightid-final.png')}\n        accessible={true}\n        accessibilityLabel=\"Home Header Logo\"\n        resizeMode=\"contain\"\n        style={{ width: DEVICE_LARGE ? 104 : 85, maxHeight: 80 }}\n      />\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst homeScreenOptions: StackNavigationOptions = {\n  headerTitle: () => <BrightIdLogo />,\n  headerLeft: () => {\n    return (\n      <TouchableOpacity\n        testID=\"toggleDrawer\"\n        style={{\n          width: DEVICE_LARGE ? 80 : 70,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n        onPress={() => {\n          Keyboard.dismiss();\n          toggleDrawer();\n        }}\n      >\n        <Menu width={DEVICE_LARGE ? 30 : 24} />\n      </TouchableOpacity>\n    );\n  },\n  headerRight: () => <NotificationBell />,\n  headerStyle: {\n    height: DEVICE_LARGE ? 80 : 70,\n    shadowRadius: 0,\n    elevation: -1,\n  },\n  headerTitleAlign: 'center',\n  headerTintColor: 'transparent',\n  headerTransparent: true,\n};\n\n/** SCREENS */\n\nconst Stack = createStackNavigator();\n\nconst Home = () => {\n  /* /!\\ Moved 'RecoveringConnection' options to the component in order to access to useTranslation() */\n  // const { t } = useTranslation();\n  return (\n    <>\n      <Stack.Screen\n        name=\"Home\"\n        component={HomeDrawer}\n        options={homeScreenOptions}\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}