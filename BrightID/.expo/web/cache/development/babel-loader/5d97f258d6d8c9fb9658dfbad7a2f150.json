{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport { BLACK } from \"../../theme/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FullScreenPhoto = function FullScreenPhoto(_ref) {\n  var _route$params, _route$params2;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var photo = (_route$params = route.params) == null ? void 0 : _route$params.photo;\n  var base64 = (_route$params2 = route.params) == null ? void 0 : _route$params2.base64;\n  var uri = base64 ? photo : \"file://\" + photoDirectory() + \"/\" + (photo == null ? void 0 : photo.filename);\n  var imageSource = photo != null && photo.filename || base64 ? {\n    uri: uri\n  } : require(\"../../static/default_profile.jpg\");\n  var pan = useRef(new Animated.ValueXY()).current;\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n      return true;\n    },\n    onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n      return true;\n    },\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n      return true;\n    },\n    onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      pan.setOffset({\n        x: pan.x._value,\n        y: pan.y._value\n      });\n    },\n    onPanResponderMove: Animated.event([null, {\n      dx: pan.x,\n      dy: pan.y\n    }], {\n      useNativeDriver: false\n    }),\n    onPanResponderRelease: function onPanResponderRelease() {\n      navigation.goBack();\n    }\n  })).current;\n  return _jsx(BlurView, {\n    style: [styles.container],\n    blurType: \"dark\",\n    blurAmount: 10,\n    reducedTransparencyFallbackColor: BLACK,\n    children: _jsx(Animated.Image, _objectSpread({\n      source: imageSource,\n      style: [styles.photo, {\n        transform: [{\n          translateX: pan.x\n        }, {\n          translateY: pan.y\n        }]\n      }],\n      resizeMethod: \"scale\",\n      resizeMode: \"contain\"\n    }, panResponder.panHandlers))\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent'\n  },\n  photo: {\n    width: '100%',\n    flex: 1\n  }\n});\nexport default FullScreenPhoto;","map":{"version":3,"names":["React","useRef","photoDirectory","BlurView","BLACK","FullScreenPhoto","route","navigation","photo","params","base64","uri","filename","imageSource","require","pan","Animated","ValueXY","current","panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","setOffset","x","_value","y","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","goBack","styles","container","transform","translateX","translateY","panHandlers","StyleSheet","flex","width","height","alignItems","justifyContent","backgroundColor"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/FullScreenPhoto.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Animated, StyleSheet, PanResponder } from 'react-native';\nimport { photoDirectory } from '@/utils/filesystem';\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport { BLACK } from '@/theme/colors';\nimport { StackScreenProps } from '@react-navigation/stack';\n\ntype props = StackScreenProps<ModalStackParamList, 'FullScreenPhoto'>;\n\nconst FullScreenPhoto = ({ route, navigation }: props) => {\n  const photo = route.params?.photo;\n  const base64 = route.params?.base64;\n  const uri = base64 ? photo : `file://${photoDirectory()}/${photo?.filename}`;\n\n  const imageSource =\n    photo?.filename || base64\n      ? {\n          uri,\n        }\n      : require('@/static/default_profile.jpg');\n\n  const pan = useRef(new Animated.ValueXY()).current;\n\n  const panResponder = useRef(\n    PanResponder.create({\n      // Ask to be the responder:\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onPanResponderGrant: () => {\n        pan.setOffset({\n          // @ts-ignore\n          x: pan.x._value,\n          // @ts-ignore\n          y: pan.y._value,\n        });\n      },\n      onPanResponderMove: Animated.event([null, { dx: pan.x, dy: pan.y }], {\n        useNativeDriver: false,\n      }),\n      onPanResponderRelease: () => {\n        navigation.goBack();\n      },\n    }),\n  ).current;\n\n  return (\n    <BlurView\n      style={[styles.container]}\n      blurType=\"dark\"\n      blurAmount={10}\n      reducedTransparencyFallbackColor={BLACK}\n    >\n      <Animated.Image\n        source={imageSource}\n        style={[\n          styles.photo,\n          {\n            transform: [{ translateX: pan.x }, { translateY: pan.y }],\n          },\n        ]}\n        resizeMethod=\"scale\"\n        resizeMode=\"contain\"\n        {...panResponder.panHandlers}\n      />\n    </BlurView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  photo: {\n    width: '100%',\n    flex: 1,\n  },\n});\n\nexport default FullScreenPhoto;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}