{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReconnectView = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _TrustlevelSlider = _interopRequireDefault(require(\"../Connections/TrustlevelSlider\"));\n\nvar _filesystem = require(\"../../utils/filesystem\");\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _store = require(\"../../store\");\n\nvar _ConnectionStats = require(\"./ConnectionStats\");\n\nvar _ProfileCard = require(\"./ProfileCard\");\n\nvar _connectionsSlice = require(\"../../reducer/connectionsSlice\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/ReconnectView.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar REPORTED_PERCENTAGE = 0.1;\n\nvar ReconnectView = function ReconnectView(_ref) {\n  var pendingConnection = _ref.pendingConnection,\n      existingConnection = _ref.existingConnection,\n      setLevelHandler = _ref.setLevelHandler,\n      abuseHandler = _ref.abuseHandler;\n  var _pendingConnection$pe = pendingConnection.pendingConnectionData,\n      sharedProfile = _pendingConnection$pe.sharedProfile,\n      profileInfo = _pendingConnection$pe.profileInfo;\n  var navigation = (0, _native.useNavigation)();\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      identicalProfile = _useState2[0],\n      setIdenticalProfile = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(existingConnection.level),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      connectionLevel = _useState4[0],\n      setConnectionLevel = _useState4[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useSelector = (0, _store.useSelector)(function (state) {\n    return state.user;\n  }),\n      id = _useSelector.id;\n\n  var firstRecoveryTime = (0, _store.useSelector)(_connectionsSlice.firstRecoveryTimeSelector);\n  var userReported = profileInfo.reports.find(function (report) {\n    return report.id === id;\n  });\n  var reported = !userReported && profileInfo.reports.length / (profileInfo.connectionsNum || 1) >= REPORTED_PERCENTAGE;\n  (0, _react.useEffect)(function () {\n    var compareProfiles = function _callee() {\n      var existingPhoto;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(sharedProfile.name !== existingConnection.name)) {\n                _context.next = 3;\n                break;\n              }\n\n              setIdenticalProfile(false);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return _regenerator.default.awrap((0, _filesystem.retrieveImage)(existingConnection.photo.filename));\n\n            case 5:\n              existingPhoto = _context.sent;\n\n              if (!(existingPhoto !== sharedProfile.photo)) {\n                _context.next = 9;\n                break;\n              }\n\n              setIdenticalProfile(false);\n              return _context.abrupt(\"return\");\n\n            case 9:\n              setIdenticalProfile(true);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    compareProfiles();\n  }, [existingConnection, sharedProfile.name, sharedProfile.photo]);\n\n  var photoTouchHandler = function photoTouchHandler(photo, type) {\n    navigation.navigate('FullScreenPhoto', {\n      photo: photo,\n      base64: type === 'base64'\n    });\n  };\n\n  var updateLevel = function updateLevel() {\n    if (existingConnection.level !== connectionLevel && (existingConnection.level === _constants.connection_levels.RECOVERY || connectionLevel === _constants.connection_levels.RECOVERY) && firstRecoveryTime && Date.now() - firstRecoveryTime > _constants.RECOVERY_COOLDOWN_EXEMPTION) {\n      navigation.navigate('RecoveryCooldownInfo', {\n        successCallback: function successCallback() {\n          setLevelHandler(connectionLevel);\n        }\n      });\n    } else {\n      setLevelHandler(connectionLevel);\n    }\n  };\n\n  if (identicalProfile) {\n    var _profileInfo$mutualCo;\n\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n      style: styles.header,\n      testID: \"ReconnectScreen\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.subheaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, t('connections.text.alreadyConnectedWith', {\n      name: sharedProfile.name\n    })), _react.default.createElement(_reactNative.Text, {\n      style: styles.lastConnectedText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, t('connections.tag.lastConnected', {\n      date: (0, _moment.default)(parseInt(String(profileInfo.connectedAt), 10)).fromNow()\n    }))), _react.default.createElement(_reactNative.View, {\n      style: styles.profiles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      testID: \"identicalProfileView\",\n      style: styles.profile,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_ProfileCard.ProfileCard, {\n      name: sharedProfile.name,\n      photo: sharedProfile.photo,\n      photoSize: \"large\",\n      photoType: \"base64\",\n      photoTouchHandler: photoTouchHandler,\n      reported: reported,\n      userReported: userReported,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))), _react.default.createElement(_reactNative.View, {\n      style: styles.countsContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_ConnectionStats.ConnectionStats, {\n      connectionsNum: profileInfo.connectionsNum,\n      groupsNum: profileInfo.groupsNum,\n      mutualConnectionsNum: ((_profileInfo$mutualCo = profileInfo.mutualConnections) == null ? void 0 : _profileInfo$mutualCo.length) || 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    })), _react.default.createElement(_reactNative.View, {\n      style: styles.connectionLevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.connectionLevelLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.connectionLevelLabelText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, t('connections.label.currentConnectionLevel'))), _react.default.createElement(_reactNative.View, {\n      style: styles.connectionLevel,\n      testID: \"ReconnectSliderView\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_TrustlevelSlider.default, {\n      currentLevel: connectionLevel,\n      changeLevelHandler: setConnectionLevel,\n      incomingLevel: existingConnection.incomingLevel,\n      verbose: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }))), _react.default.createElement(_reactNative.View, {\n      style: styles.actionButtons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: styles.updateButton,\n      onPress: updateLevel,\n      testID: \"updateBtn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.updateButtonLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, t('connections.button.reconnect')))));\n  } else {\n    var _profileInfo$mutualCo2;\n\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n      style: styles.header,\n      testID: \"ReconnectScreen\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.subheaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, t('connections.text.alreadyConnectedWith', {\n      name: sharedProfile.name\n    })), _react.default.createElement(_reactNative.Text, {\n      style: styles.lastConnectedText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, t('connections.tag.lastConnected', {\n      date: (0, _moment.default)(parseInt(String(existingConnection.timestamp), 10)).fromNow()\n    }))), _react.default.createElement(_reactNative.View, {\n      style: styles.profiles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      testID: \"oldProfileView\",\n      style: [styles.profile, styles.verticalDivider],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.profileHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.profileHeaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, t('connections.label.oldProfile'))), _react.default.createElement(_ProfileCard.ProfileCard, {\n      name: existingConnection.name,\n      photo: existingConnection.photo.filename,\n      photoSize: \"small\",\n      photoType: \"file\",\n      photoTouchHandler: photoTouchHandler,\n      reported: reported,\n      userReported: userReported,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    })), _react.default.createElement(_reactNative.View, {\n      testID: \"newProfileView\",\n      style: styles.profile,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.profileHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.profileHeaderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, t('connections.label.newProfile'))), _react.default.createElement(_ProfileCard.ProfileCard, {\n      name: sharedProfile.name,\n      photo: sharedProfile.photo,\n      photoSize: \"small\",\n      photoType: \"base64\",\n      photoTouchHandler: photoTouchHandler,\n      reported: reported,\n      userReported: userReported,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }))), _react.default.createElement(_reactNative.View, {\n      style: styles.countsContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_ConnectionStats.ConnectionStats, {\n      connectionsNum: profileInfo.connectionsNum,\n      groupsNum: profileInfo.groupsNum,\n      mutualConnectionsNum: ((_profileInfo$mutualCo2 = profileInfo.mutualConnections) == null ? void 0 : _profileInfo$mutualCo2.length) || 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    })), _react.default.createElement(_reactNative.View, {\n      style: styles.connectionLevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.connectionLevelLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.connectionLevelLabelText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, t('connections.label.currentConnectionLevel'))), _react.default.createElement(_reactNative.View, {\n      style: styles.connectionLevel,\n      testID: \"ReconnectSliderView\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_TrustlevelSlider.default, {\n      currentLevel: connectionLevel,\n      changeLevelHandler: setConnectionLevel,\n      incomingLevel: existingConnection.incomingLevel,\n      verbose: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }))), _react.default.createElement(_reactNative.View, {\n      style: styles.actionButtons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: styles.abuseButton,\n      onPress: abuseHandler,\n      testID: \"reportAbuseBtn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.abuseButtonLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, t('connections.button.reportConnection'))), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: styles.updateButton,\n      onPress: updateLevel,\n      testID: \"updateBtn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.updateButtonLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, t('connections.button.updateConnection')))));\n  }\n};\n\nexports.ReconnectView = ReconnectView;\n\nvar styles = _reactNative.StyleSheet.create({\n  header: {\n    marginTop: _deviceConstants.DEVICE_LARGE ? 10 : 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 5\n  },\n  subheaderText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[15],\n    textAlign: 'center',\n    color: _colors.DARKER_GREY\n  },\n  lastConnectedText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[15],\n    textAlign: 'center',\n    color: _colors.DARKER_GREY\n  },\n  profiles: {\n    flexDirection: 'row',\n    marginTop: 8,\n    marginBottom: 0\n  },\n  profileHeader: {\n    marginTop: 8,\n    marginBottom: 10\n  },\n  profileHeaderText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[15],\n    color: _colors.BLACK\n  },\n  profile: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  verticalDivider: {\n    borderRightWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: _colors.ORANGE,\n    height: '100%'\n  },\n  countsContainer: {\n    width: '88%',\n    paddingTop: 6,\n    paddingBottom: 6,\n    marginTop: 8,\n    marginBottom: 16,\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: _colors.ORANGE,\n    justifyContent: 'space-evenly',\n    flexDirection: 'row'\n  },\n  connectionLevel: {\n    alignItems: 'center'\n  },\n  connectionLevelLabel: {\n    marginBottom: 10\n  },\n  connectionLevelLabelText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[15],\n    color: _colors.BLACK\n  },\n  connectionLevelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[15],\n    marginBottom: 5\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    width: '88%'\n  },\n  abuseButton: {\n    backgroundColor: _colors.RED,\n    flex: 1,\n    marginRight: 5,\n    borderRadius: 60,\n    alignItems: 'center',\n    paddingTop: 8,\n    paddingBottom: 9\n  },\n  abuseButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[14],\n    color: _colors.WHITE\n  },\n  updateButton: {\n    backgroundColor: _colors.WHITE,\n    borderColor: _colors.ORANGE,\n    borderWidth: 1,\n    borderRadius: 60,\n    flex: 1,\n    marginLeft: 5,\n    alignItems: 'center',\n    paddingTop: 8,\n    paddingBottom: 9\n  },\n  updateButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[14],\n    color: _colors.ORANGE\n  }\n});","map":{"version":3,"names":["REPORTED_PERCENTAGE","ReconnectView","pendingConnection","existingConnection","setLevelHandler","abuseHandler","pendingConnectionData","sharedProfile","profileInfo","navigation","useNavigation","useState","identicalProfile","setIdenticalProfile","level","connectionLevel","setConnectionLevel","useTranslation","t","useSelector","state","user","id","firstRecoveryTime","firstRecoveryTimeSelector","userReported","reports","find","report","reported","length","connectionsNum","useEffect","compareProfiles","name","retrieveImage","photo","filename","existingPhoto","photoTouchHandler","type","navigate","base64","updateLevel","connection_levels","RECOVERY","Date","now","RECOVERY_COOLDOWN_EXEMPTION","successCallback","styles","header","subheaderText","lastConnectedText","date","moment","parseInt","String","connectedAt","fromNow","profiles","profile","countsContainer","groupsNum","mutualConnections","connectionLevelLabel","connectionLevelLabelText","incomingLevel","actionButtons","updateButton","updateButtonLabel","timestamp","verticalDivider","profileHeader","profileHeaderText","abuseButton","abuseButtonLabel","StyleSheet","create","marginTop","DEVICE_LARGE","justifyContent","alignItems","marginBottom","fontFamily","fontSize","textAlign","color","DARKER_GREY","flexDirection","BLACK","flex","borderRightWidth","hairlineWidth","borderColor","ORANGE","height","width","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","connectionLevelText","backgroundColor","RED","marginRight","borderRadius","WHITE","borderWidth","marginLeft"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/ReconnectView.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport moment from 'moment';\nimport { useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK, DARKER_GREY, ORANGE, RED, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport TrustlevelSlider from '@/components/Connections/TrustlevelSlider';\nimport { retrieveImage } from '@/utils/filesystem';\nimport {\n  connection_levels,\n  RECOVERY_COOLDOWN_EXEMPTION,\n} from '@/utils/constants';\nimport { useSelector } from '@/store';\nimport { ConnectionStats } from './ConnectionStats';\nimport { ProfileCard } from './ProfileCard';\nimport { firstRecoveryTimeSelector } from '@/reducer/connectionsSlice';\n\n// percentage determines reported warning\nconst REPORTED_PERCENTAGE = 0.1;\n// Reported is currently not displayed inside of the reconnect view\n\ntype ReconnectViewProps = {\n  pendingConnection: PendingConnection;\n  existingConnection: Connection;\n  setLevelHandler: (level: ConnectionLevel) => any;\n  abuseHandler: () => any;\n};\n\nexport const ReconnectView = ({\n  pendingConnection,\n  existingConnection,\n  setLevelHandler,\n  abuseHandler,\n}: ReconnectViewProps) => {\n  const {\n    pendingConnectionData: { sharedProfile, profileInfo },\n  } = pendingConnection;\n\n  const navigation = useNavigation();\n  const [identicalProfile, setIdenticalProfile] = useState(true);\n  const [connectionLevel, setConnectionLevel] = useState(\n    existingConnection.level,\n  );\n  const { t } = useTranslation();\n  const { id } = useSelector((state) => state.user);\n  const firstRecoveryTime = useSelector(firstRecoveryTimeSelector);\n\n  const userReported = profileInfo.reports.find((report) => report.id === id);\n\n  const reported =\n    !userReported &&\n    profileInfo.reports.length / (profileInfo.connectionsNum || 1) >=\n      REPORTED_PERCENTAGE;\n\n  useEffect(() => {\n    const compareProfiles = async () => {\n      if (sharedProfile.name !== existingConnection.name) {\n        setIdenticalProfile(false);\n        return;\n      }\n      const existingPhoto = await retrieveImage(\n        existingConnection.photo.filename,\n      );\n      if (existingPhoto !== sharedProfile.photo) {\n        setIdenticalProfile(false);\n        return;\n      }\n      // name and photo are equal\n      setIdenticalProfile(true);\n    };\n    compareProfiles();\n  }, [existingConnection, sharedProfile.name, sharedProfile.photo]);\n\n  const photoTouchHandler = (photo: string, type: 'base64' | 'file') => {\n    navigation.navigate('FullScreenPhoto', {\n      photo,\n      base64: type === 'base64',\n    });\n  };\n\n  const updateLevel = () => {\n    if (\n      existingConnection.level !== connectionLevel &&\n      (existingConnection.level === connection_levels.RECOVERY ||\n        connectionLevel === connection_levels.RECOVERY) &&\n      firstRecoveryTime &&\n      Date.now() - firstRecoveryTime > RECOVERY_COOLDOWN_EXEMPTION\n    ) {\n      // show info about cooldown period\n      navigation.navigate('RecoveryCooldownInfo', {\n        successCallback: () => {\n          setLevelHandler(connectionLevel);\n        },\n      });\n    } else {\n      setLevelHandler(connectionLevel);\n    }\n  };\n\n  if (identicalProfile) {\n    return (\n      <>\n        <View style={styles.header} testID=\"ReconnectScreen\">\n          <Text style={styles.subheaderText}>\n            {t('connections.text.alreadyConnectedWith', {\n              name: sharedProfile.name,\n            })}\n          </Text>\n          <Text style={styles.lastConnectedText}>\n            {t('connections.tag.lastConnected', {\n              date: moment(\n                parseInt(String(profileInfo.connectedAt), 10),\n              ).fromNow(),\n            })}\n          </Text>\n        </View>\n        <View style={styles.profiles}>\n          <View testID=\"identicalProfileView\" style={styles.profile}>\n            <ProfileCard\n              name={sharedProfile.name}\n              photo={sharedProfile.photo}\n              photoSize=\"large\"\n              photoType=\"base64\"\n              photoTouchHandler={photoTouchHandler}\n              reported={reported}\n              userReported={userReported}\n            />\n          </View>\n        </View>\n        <View style={styles.countsContainer}>\n          <ConnectionStats\n            connectionsNum={profileInfo.connectionsNum}\n            groupsNum={profileInfo.groupsNum}\n            mutualConnectionsNum={profileInfo.mutualConnections?.length || 0}\n          />\n        </View>\n        <View style={styles.connectionLevel}>\n          <View style={styles.connectionLevelLabel}>\n            <Text style={styles.connectionLevelLabelText}>\n              {t('connections.label.currentConnectionLevel')}\n            </Text>\n          </View>\n          <View style={styles.connectionLevel} testID=\"ReconnectSliderView\">\n            <TrustlevelSlider\n              currentLevel={connectionLevel}\n              changeLevelHandler={setConnectionLevel}\n              incomingLevel={existingConnection.incomingLevel}\n              verbose={false}\n            />\n          </View>\n        </View>\n        <View style={styles.actionButtons}>\n          <TouchableOpacity\n            style={styles.updateButton}\n            onPress={updateLevel}\n            testID=\"updateBtn\"\n          >\n            <Text style={styles.updateButtonLabel}>\n              {t('connections.button.reconnect')}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <View style={styles.header} testID=\"ReconnectScreen\">\n          <Text style={styles.subheaderText}>\n            {t('connections.text.alreadyConnectedWith', {\n              name: sharedProfile.name,\n            })}\n          </Text>\n          <Text style={styles.lastConnectedText}>\n            {t('connections.tag.lastConnected', {\n              date: moment(\n                parseInt(String(existingConnection.timestamp), 10),\n              ).fromNow(),\n            })}\n          </Text>\n        </View>\n\n        <View style={styles.profiles}>\n          <View\n            testID=\"oldProfileView\"\n            style={[styles.profile, styles.verticalDivider]}\n          >\n            <View style={styles.profileHeader}>\n              <Text style={styles.profileHeaderText}>\n                {t('connections.label.oldProfile')}\n              </Text>\n            </View>\n            <ProfileCard\n              name={existingConnection.name}\n              photo={existingConnection.photo.filename}\n              photoSize=\"small\"\n              photoType=\"file\"\n              photoTouchHandler={photoTouchHandler}\n              reported={reported}\n              userReported={userReported}\n            />\n          </View>\n          <View testID=\"newProfileView\" style={styles.profile}>\n            <View style={styles.profileHeader}>\n              <Text style={styles.profileHeaderText}>\n                {t('connections.label.newProfile')}\n              </Text>\n            </View>\n            <ProfileCard\n              name={sharedProfile.name}\n              photo={sharedProfile.photo}\n              photoSize=\"small\"\n              photoType=\"base64\"\n              photoTouchHandler={photoTouchHandler}\n              reported={reported}\n              userReported={userReported}\n            />\n          </View>\n        </View>\n        <View style={styles.countsContainer}>\n          <ConnectionStats\n            connectionsNum={profileInfo.connectionsNum}\n            groupsNum={profileInfo.groupsNum}\n            mutualConnectionsNum={profileInfo.mutualConnections?.length || 0}\n          />\n        </View>\n        <View style={styles.connectionLevel}>\n          <View style={styles.connectionLevelLabel}>\n            <Text style={styles.connectionLevelLabelText}>\n              {t('connections.label.currentConnectionLevel')}\n            </Text>\n          </View>\n          <View style={styles.connectionLevel} testID=\"ReconnectSliderView\">\n            <TrustlevelSlider\n              currentLevel={connectionLevel}\n              changeLevelHandler={setConnectionLevel}\n              incomingLevel={existingConnection.incomingLevel}\n              verbose={false}\n            />\n          </View>\n        </View>\n        <View style={styles.actionButtons}>\n          <TouchableOpacity\n            style={styles.abuseButton}\n            onPress={abuseHandler}\n            testID=\"reportAbuseBtn\"\n          >\n            <Text style={styles.abuseButtonLabel}>\n              {t('connections.button.reportConnection')}\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.updateButton}\n            onPress={updateLevel}\n            testID=\"updateBtn\"\n          >\n            <Text style={styles.updateButtonLabel}>\n              {t('connections.button.updateConnection')}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    marginTop: DEVICE_LARGE ? 10 : 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 5,\n  },\n  subheaderText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    textAlign: 'center',\n    color: DARKER_GREY,\n  },\n  lastConnectedText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    textAlign: 'center',\n    color: DARKER_GREY,\n  },\n  profiles: {\n    flexDirection: 'row',\n    marginTop: 8,\n    marginBottom: 0,\n  },\n  profileHeader: {\n    marginTop: 8,\n    marginBottom: 10,\n  },\n  profileHeaderText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  profile: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  verticalDivider: {\n    borderRightWidth: StyleSheet.hairlineWidth,\n    borderColor: ORANGE,\n    height: '100%',\n  },\n  countsContainer: {\n    width: '88%',\n    paddingTop: 6,\n    paddingBottom: 6,\n    marginTop: 8,\n    marginBottom: 16,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ORANGE,\n    justifyContent: 'space-evenly',\n    flexDirection: 'row',\n  },\n  connectionLevel: {\n    alignItems: 'center',\n  },\n  connectionLevelLabel: {\n    marginBottom: 10,\n  },\n  connectionLevelLabelText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  connectionLevelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    marginBottom: 5,\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    width: '88%',\n  },\n  abuseButton: {\n    backgroundColor: RED,\n    flex: 1,\n    marginRight: 5,\n    borderRadius: 60,\n    alignItems: 'center',\n    paddingTop: 8,\n    paddingBottom: 9,\n  },\n  abuseButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[14],\n    color: WHITE,\n  },\n  updateButton: {\n    backgroundColor: WHITE,\n    borderColor: ORANGE,\n    borderWidth: 1,\n    borderRadius: 60,\n    flex: 1,\n    marginLeft: 5,\n    alignItems: 'center',\n    paddingTop: 8,\n    paddingBottom: 9,\n  },\n  updateButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[14],\n    color: ORANGE,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}