{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nexport default function useFocusedListenersChildrenAdapter(_ref) {\n  var navigation = _ref.navigation,\n      focusedListeners = _ref.focusedListeners;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      addListener = _React$useContext.addListener;\n\n  var listener = React.useCallback(function (callback) {\n    if (navigation.isFocused()) {\n      for (var _iterator = _createForOfIteratorHelperLoose(focusedListeners), _step; !(_step = _iterator()).done;) {\n        var _listener = _step.value;\n\n        var _listener2 = _listener(callback),\n            handled = _listener2.handled,\n            result = _listener2.result;\n\n        if (handled) {\n          return {\n            handled: handled,\n            result: result\n          };\n        }\n      }\n\n      return {\n        handled: true,\n        result: callback(navigation)\n      };\n    } else {\n      return {\n        handled: false,\n        result: null\n      };\n    }\n  }, [focusedListeners, navigation]);\n  React.useEffect(function () {\n    return addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener);\n  }, [addListener, listener]);\n}","map":{"version":3,"sources":["useFocusedListenersChildrenAdapter.tsx"],"names":["navigation","focusedListeners","addListener","React","listener","callback","handled","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,wBAAA;AAcA,eAAe,SAAA,kCAAA,CAAA,IAAA,EAGH;EAFVA,IAAAA,UAEU,GAAA,IAAA,CAFVA,UAAAA;EAAAA,IACAC,gBACU,GAAA,IAAA,CADVA,gBADAD;;EAGA,IAAA,iBAAA,GAAwBG,KAAK,CAALA,UAAAA,CAAxB,wBAAwBA,CAAxB;EAAA,IAAQD,WAAR,GAAA,iBAAA,CAAA,WAAA;;EAEA,IAAME,QAAQ,GAAGD,KAAK,CAALA,WAAAA,CACdE,UAAD,QAACA,EAA6C;IAC5C,IAAIL,UAAU,CAAd,SAAIA,EAAJ,EAA4B;MAC1B,KAAA,IAAA,SAAA,GAAA,+BAAA,CAAA,gBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAyC;QAA9BI,IAAAA,SAA8B,GAAA,KAAA,CAAA,KAA9BA;;QACT,IAAA,UAAA,GAA4BA,SAAQ,CAApC,QAAoC,CAApC;QAAA,IAAQE,OAAR,GAAA,UAAA,CAAA,OAAA;QAAA,IAAiBC,MAAjB,GAAA,UAAA,CAAA,MAAA;;QAEA,IAAA,OAAA,EAAa;UACX,OAAO;YAAED,OAAF,EAAA,OAAA;YAAWC,MAAAA,EAAlB;UAAO,CAAP;QAEH;MAED;;MAAA,OAAO;QAAED,OAAO,EAAT,IAAA;QAAiBC,MAAM,EAAEF,QAAQ,CAT1C,UAS0C;MAAjC,CAAP;IATF,CAAA,MAUO;MACL,OAAO;QAAEC,OAAO,EAAT,KAAA;QAAkBC,MAAM,EAA/B;MAAO,CAAP;IAbWJ;EAAAA,CAAAA,EAgBf,CAAA,gBAAA,EAhBF,UAgBE,CAhBeA,CAAjB;EAmBAA,KAAK,CAALA,SAAAA,CAAgB,YAAA;IAAA,OAAMD,WAAN,KAAA,IAAMA,IAAAA,WAAN,KAAA,KAAA,CAAMA,GAAN,KAAA,CAAMA,GAAAA,WAAW,CAAA,OAAA,EAAjB,QAAiB,CAAjB;EAAhBC,CAAAA,EAAwD,CAAA,WAAA,EAAxDA,QAAwD,CAAxDA;AAID","sourcesContent":["import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationBuilderContext, {\n  FocusedNavigationCallback,\n  FocusedNavigationListener,\n} from './NavigationBuilderContext';\nimport type { NavigationHelpers } from './types';\n\ntype Options = {\n  navigation: NavigationHelpers<ParamListBase>;\n  focusedListeners: FocusedNavigationListener[];\n};\n\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter({\n  navigation,\n  focusedListeners,\n}: Options) {\n  const { addListener } = React.useContext(NavigationBuilderContext);\n\n  const listener = React.useCallback(\n    (callback: FocusedNavigationCallback<any>) => {\n      if (navigation.isFocused()) {\n        for (const listener of focusedListeners) {\n          const { handled, result } = listener(callback);\n\n          if (handled) {\n            return { handled, result };\n          }\n        }\n\n        return { handled: true, result: callback(navigation) };\n      } else {\n        return { handled: false, result: null };\n      }\n    },\n    [focusedListeners, navigation]\n  );\n\n  React.useEffect(() => addListener?.('focus', listener), [\n    addListener,\n    listener,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}