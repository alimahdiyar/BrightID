{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/bradley/Code/react-native-action-sheet/src/ActionSheet/ActionGroup.tsx\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedbackSafe from \"./TouchableNativeFeedbackSafe\";\nvar BLACK_54PC_TRANSPARENT = '#0000008a';\nvar BLACK_87PC_TRANSPARENT = '#000000de';\nvar DESTRUCTIVE_COLOR = '#d32f2f';\n\nvar focusViewOnRender = function focusViewOnRender(ref) {\n  if (ref) {\n    var reactTag = findNodeHandle(ref);\n\n    if (reactTag) {\n      if (Platform.OS === 'android') {\n        UIManager.sendAccessibilityEvent(reactTag, UIManager.AccessibilityEventTypes.typeViewFocused);\n      } else {\n        AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nvar isIndexDestructive = function isIndexDestructive(index, destructiveIndex) {\n  if (Array.isArray(destructiveIndex)) {\n    return destructiveIndex.includes(index);\n  }\n\n  return index === destructiveIndex;\n};\n\nvar isIndexDisabled = function isIndexDisabled(index) {\n  var disabledButtonIndices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return disabledButtonIndices.includes(index);\n};\n\nvar ActionGroup = function (_React$Component) {\n  _inherits(ActionGroup, _React$Component);\n\n  var _super = _createSuper(ActionGroup);\n\n  function ActionGroup() {\n    var _this;\n\n    _classCallCheck(this, ActionGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderRowSeparator = function (key) {\n      return React.createElement(View, {\n        key: \"separator-\" + key,\n        style: [styles.rowSeparator, _this.props.separatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._renderTitleContent = function () {\n      var _this$props = _this.props,\n          title = _this$props.title,\n          titleTextStyle = _this$props.titleTextStyle,\n          message = _this$props.message,\n          messageTextStyle = _this$props.messageTextStyle,\n          showSeparators = _this$props.showSeparators;\n\n      if (!title && !message) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.titleContainer, {\n          paddingBottom: showSeparators ? 24 : 16\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, !!title && React.createElement(Text, {\n        style: [styles.title, titleTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, title), !!message && React.createElement(Text, {\n        style: [styles.message, messageTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, message)), !!showSeparators && _this._renderRowSeparator('title'));\n    };\n\n    _this._renderIconElement = function (iconSource, color) {\n      var tintIcons = _this.props.tintIcons;\n\n      if (!iconSource) {\n        return null;\n      }\n\n      if (typeof iconSource === 'number') {\n        var iconStyle = [styles.icon, {\n          tintColor: tintIcons ? color : undefined\n        }];\n        return React.createElement(Image, {\n          fadeDuration: 0,\n          source: iconSource,\n          resizeMode: \"contain\",\n          style: iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 14\n          }\n        }, iconSource);\n      }\n    };\n\n    _this._renderOptionViews = function () {\n      var _this$props2 = _this.props,\n          options = _this$props2.options,\n          icons = _this$props2.icons,\n          destructiveButtonIndex = _this$props2.destructiveButtonIndex,\n          disabledButtonIndices = _this$props2.disabledButtonIndices,\n          _this$props2$destruct = _this$props2.destructiveColor,\n          destructiveColor = _this$props2$destruct === void 0 ? DESTRUCTIVE_COLOR : _this$props2$destruct,\n          onSelect = _this$props2.onSelect,\n          startIndex = _this$props2.startIndex,\n          length = _this$props2.length,\n          textStyle = _this$props2.textStyle,\n          tintColor = _this$props2.tintColor,\n          autoFocus = _this$props2.autoFocus,\n          showSeparators = _this$props2.showSeparators;\n      var optionViews = [];\n      var nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple('rgba(180, 180, 180, 1)', false);\n\n      var _loop = function _loop(_i) {\n        var defaultColor = tintColor ? tintColor : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n        var disabled = isIndexDisabled(_i, disabledButtonIndices);\n        var color = isIndexDestructive(_i, destructiveButtonIndex) ? destructiveColor : defaultColor;\n        var iconSource = icons != null ? icons[_i] : null;\n        optionViews.push(React.createElement(TouchableNativeFeedbackSafe, {\n          ref: autoFocus && _i === 0 ? focusViewOnRender : undefined,\n          key: _i,\n          pressInDelay: 0,\n          background: nativeFeedbackBackground,\n          disabled: disabled,\n          onPress: function onPress() {\n            return onSelect(_i);\n          },\n          style: [styles.button, disabled && styles.disabledButton],\n          accessibilityRole: \"button\",\n          accessibilityLabel: options[_i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 9\n          }\n        }, _this._renderIconElement(iconSource, color), React.createElement(Text, {\n          style: [styles.text, textStyle, {\n            color: color\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, options[_i])));\n\n        if (showSeparators && _i < startIndex + length - 1) {\n          optionViews.push(_this._renderRowSeparator(_i));\n        }\n      };\n\n      for (var _i = startIndex; _i < startIndex + length; _i++) {\n        _loop(_i);\n      }\n\n      return optionViews;\n    };\n\n    return _this;\n  }\n\n  _createClass(ActionGroup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.groupContainer, this.props.containerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, this._renderTitleContent(), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, this._renderOptionViews()));\n    }\n  }]);\n\n  return ActionGroup;\n}(React.Component);\n\nActionGroup.defaultProps = {\n  title: null,\n  message: null,\n  showSeparators: false,\n  tintIcons: true,\n  textStyle: {}\n};\nexport { ActionGroup as default };\nvar styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16\n  },\n  disabledButton: {\n    opacity: 0.5\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden'\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center'\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%'\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24\n  }\n});","map":{"version":3,"sources":["ActionGroup.tsx"],"names":["BLACK_54PC_TRANSPARENT","BLACK_87PC_TRANSPARENT","DESTRUCTIVE_COLOR","focusViewOnRender","reactTag","findNodeHandle","Platform","UIManager","AccessibilityInfo","isIndexDestructive","Array","destructiveIndex","index","isIndexDisabled","disabledButtonIndices","ActionGroup","React","Component","title","message","showSeparators","tintIcons","textStyle","style","styles","_renderRowSeparator","key","_this","_renderTitleContent","titleTextStyle","messageTextStyle","paddingBottom","_renderIconElement","iconStyle","tintColor","fadeDuration","source","resizeMode","_renderOptionViews","options","icons","destructiveButtonIndex","destructiveColor","onSelect","startIndex","length","autoFocus","optionViews","nativeFeedbackBackground","TouchableNativeFeedbackSafe","i","defaultColor","disabled","color","iconSource","ref","pressInDelay","background","onPress","accessibilityRole","accessibilityLabel","StyleSheet","button","justifyContent","alignItems","flexDirection","height","paddingHorizontal","disabledButton","opacity","groupContainer","backgroundColor","overflow","icon","width","marginRight","marginTop","fontSize","textAlignVertical","rowSeparator","text","titleContainer","padding","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  findNodeHandle,\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  UIManager,\n  View,\n} from 'react-native';\n\nimport { ActionSheetOptions } from '../types';\nimport TouchableNativeFeedbackSafe from './TouchableNativeFeedbackSafe';\n\ntype Props = ActionSheetOptions & {\n  tintIcons: boolean | null;\n  onSelect: (i: number) => boolean;\n  startIndex: number;\n  length: number;\n};\n\nconst BLACK_54PC_TRANSPARENT = '#0000008a';\nconst BLACK_87PC_TRANSPARENT = '#000000de';\nconst DESTRUCTIVE_COLOR = '#d32f2f';\n\n/**\n * Can be used as a React ref for a component to auto-focus for accessibility on render.\n * @param ref The component to auto-focus\n */\nconst focusViewOnRender = (ref: React.Component | null) => {\n  if (ref) {\n    const reactTag = findNodeHandle(ref);\n    if (reactTag) {\n      if (Platform.OS === 'android') {\n        // @ts-ignore: sendAccessibilityEvent is missing from @types/react-native\n        UIManager.sendAccessibilityEvent(\n          reactTag,\n          // @ts-ignore: AccessibilityEventTypes is missing from @types/react-native\n          UIManager.AccessibilityEventTypes.typeViewFocused\n        );\n      } else {\n        AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nconst isIndexDestructive = (index: number, destructiveIndex?: number | number[]) => {\n  if (Array.isArray(destructiveIndex)) {\n    return destructiveIndex.includes(index);\n  }\n\n  return index === destructiveIndex;\n};\n\nconst isIndexDisabled = (index: number, disabledButtonIndices: number[] = []) => {\n  return disabledButtonIndices.includes(index);\n};\n\nexport default class ActionGroup extends React.Component<Props> {\n  static defaultProps = {\n    title: null,\n    message: null,\n    showSeparators: false,\n    tintIcons: true,\n    textStyle: {},\n  };\n\n  render() {\n    return (\n      <View style={[styles.groupContainer, this.props.containerStyle]}>\n        {this._renderTitleContent()}\n        <ScrollView>{this._renderOptionViews()}</ScrollView>\n      </View>\n    );\n  }\n\n  _renderRowSeparator = (key: string | number) => {\n    return (\n      <View key={`separator-${key}`} style={[styles.rowSeparator, this.props.separatorStyle]} />\n    );\n  };\n\n  _renderTitleContent = () => {\n    const { title, titleTextStyle, message, messageTextStyle, showSeparators } = this.props;\n\n    if (!title && !message) {\n      return null;\n    }\n\n    return (\n      <View>\n        <View style={[styles.titleContainer, { paddingBottom: showSeparators ? 24 : 16 }]}>\n          {!!title && <Text style={[styles.title, titleTextStyle]}>{title}</Text>}\n          {!!message && <Text style={[styles.message, messageTextStyle]}>{message}</Text>}\n        </View>\n        {!!showSeparators && this._renderRowSeparator('title')}\n      </View>\n    );\n  };\n\n  _renderIconElement = (iconSource: React.ReactNode | null, color: string) => {\n    const { tintIcons } = this.props;\n    if (!iconSource) {\n      return null;\n    }\n\n    if (typeof iconSource === 'number') {\n      const iconStyle = [styles.icon, { tintColor: tintIcons ? color : undefined }];\n      return <Image fadeDuration={0} source={iconSource} resizeMode=\"contain\" style={iconStyle} />;\n    } else {\n      return <View style={styles.icon}>{iconSource}</View>;\n    }\n  };\n\n  _renderOptionViews = () => {\n    const {\n      options,\n      icons,\n      destructiveButtonIndex,\n      disabledButtonIndices,\n      destructiveColor = DESTRUCTIVE_COLOR,\n      onSelect,\n      startIndex,\n      length,\n      textStyle,\n      tintColor,\n      autoFocus,\n      showSeparators,\n    } = this.props;\n    const optionViews: React.ReactNode[] = [];\n    const nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple(\n      'rgba(180, 180, 180, 1)',\n      false\n    );\n\n    for (let i = startIndex; i < startIndex + length; i++) {\n      const defaultColor = tintColor\n        ? tintColor\n        : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n      const disabled = isIndexDisabled(i, disabledButtonIndices);\n      const color = isIndexDestructive(i, destructiveButtonIndex) ? destructiveColor : defaultColor;\n      const iconSource = icons != null ? icons[i] : null;\n\n      optionViews.push(\n        <TouchableNativeFeedbackSafe\n          ref={autoFocus && i === 0 ? focusViewOnRender : undefined}\n          key={i}\n          pressInDelay={0}\n          background={nativeFeedbackBackground}\n          disabled={disabled}\n          onPress={() => onSelect(i)}\n          style={[styles.button, disabled && styles.disabledButton]}\n          accessibilityRole=\"button\"\n          accessibilityLabel={options[i]}>\n          {this._renderIconElement(iconSource, color)}\n          <Text style={[styles.text, textStyle, { color }]}>{options[i]}</Text>\n        </TouchableNativeFeedbackSafe>\n      );\n\n      if (showSeparators && i < startIndex + length - 1) {\n        optionViews.push(this._renderRowSeparator(i));\n      }\n    }\n\n    return optionViews;\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center',\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%',\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}