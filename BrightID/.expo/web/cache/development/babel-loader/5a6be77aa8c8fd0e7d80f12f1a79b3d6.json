{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { find, propEq } from 'ramda';\nimport { SOCIAL_API_AUTHENTICATION_ERROR } from \"../../api/socialMediaService\";\nimport { getSignedTimestamp, linkAppId } from \"../Apps/model\";\nimport store from \"../../store\";\nimport { selectAllApps } from \"../../reducer/appsSlice\";\nimport { saveSocialMedia, selectAllSocialMedia, selectSocialMediaById } from \"../../reducer/socialMediaSlice\";\nimport { selectSocialMediaVariationById, upsertSocialMediaVariations } from \"../../reducer/socialMediaVariationSlice\";\nimport { generateSocialProfileHashes } from \"../../utils/socialUtils\";\nimport { SOCIAL_MEDIA_SIG_WAIT_TIME } from \"../../utils/constants\";\nimport { selectSyncSocialMediaEnabled, setSyncSocialMediaEnabled } from \"../../reducer/settingsSlice\";\nimport { BrightIdNetwork } from \"../Apps/types.d\";\nimport socialMediaService from \"../../utils/socialMediaServiceProvider\";\nexport function linkSocialMediaApp(appId, appUserId) {\n  var linked, apps, appInfo, signedTimestamp;\n  return _regeneratorRuntime.async(function linkSocialMediaApp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          linked = false;\n          apps = selectAllApps(store.getState());\n          appInfo = find(propEq('id', appId))(apps);\n\n          if (!(appInfo && appInfo.usingBlindSig)) {\n            _context.next = 15;\n            break;\n          }\n\n          signedTimestamp = getSignedTimestamp(appInfo);\n\n          if (!(signedTimestamp && Date.now() - signedTimestamp > SOCIAL_MEDIA_SIG_WAIT_TIME)) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.prev = 6;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(linkAppId(appId, appUserId, true));\n\n        case 9:\n          linked = _context.sent;\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](6);\n          console.log(_context.t0);\n\n        case 15:\n          return _context.abrupt(\"return\", linked);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 12]], Promise);\n}\nexport function syncSocialMedia(token, incomingSocialMedia, socialMediaVariation) {\n  var _incomingSocialMedia$;\n\n  var synced, appUserId, profileHashes, data;\n  return _regeneratorRuntime.async(function syncSocialMedia$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          synced = false;\n          appUserId = ((_incomingSocialMedia$ = incomingSocialMedia.brightIdSocialAppData) == null ? void 0 : _incomingSocialMedia$.appUserId) || null;\n          profileHashes = generateSocialProfileHashes(incomingSocialMedia.profile, socialMediaVariation.id);\n\n          if (!token) {\n            _context2.next = 17;\n            break;\n          }\n\n          _context2.prev = 4;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(socialMediaService.updateSocialMedia({\n            token: token,\n            profileHashes: profileHashes\n          }));\n\n        case 7:\n          synced = true;\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](4);\n\n          if (!(_context2.t0.message === SOCIAL_API_AUTHENTICATION_ERROR)) {\n            _context2.next = 14;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", syncSocialMedia(null, incomingSocialMedia, socialMediaVariation));\n\n        case 14:\n          console.log(_context2.t0);\n\n        case 15:\n          _context2.next = 29;\n          break;\n\n        case 17:\n          _context2.prev = 17;\n          _context2.next = 20;\n          return _regeneratorRuntime.awrap(socialMediaService.createSocialMedia({\n            profileHashes: profileHashes,\n            variation: socialMediaVariation.id,\n            network: __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE\n          }));\n\n        case 20:\n          data = _context2.sent;\n          token = data.token;\n          appUserId = data.appUserId;\n          synced = true;\n          _context2.next = 29;\n          break;\n\n        case 26:\n          _context2.prev = 26;\n          _context2.t1 = _context2[\"catch\"](17);\n          console.log(_context2.t1);\n\n        case 29:\n          return _context2.abrupt(\"return\", {\n            token: token,\n            appUserId: appUserId,\n            synced: synced\n          });\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[4, 10], [17, 26]], Promise);\n}\nexport var saveAndLinkSocialMedia = function saveAndLinkSocialMedia(incomingSocialMedia) {\n  return function _callee(dispatch, getState) {\n    var prevProfile, syncSocialMediaEnabled, socialMediaVariation, brightIdSocialAppData, synced, token, appUserId, linked, __ret, appId, socialMedia;\n\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            prevProfile = selectSocialMediaById(getState(), incomingSocialMedia.id);\n            dispatch(saveSocialMedia(incomingSocialMedia));\n            syncSocialMediaEnabled = selectSyncSocialMediaEnabled(getState());\n\n            if (syncSocialMediaEnabled) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", incomingSocialMedia);\n\n          case 5:\n            socialMediaVariation = selectSocialMediaVariationById(getState(), incomingSocialMedia.id);\n            brightIdSocialAppData = _objectSpread({\n              synced: false,\n              linked: false,\n              appUserId: null,\n              token: null\n            }, incomingSocialMedia.brightIdSocialAppData);\n            synced = brightIdSocialAppData.synced, token = brightIdSocialAppData.token, appUserId = brightIdSocialAppData.appUserId, linked = brightIdSocialAppData.linked;\n\n            if (!(!synced || (prevProfile == null ? void 0 : prevProfile.profile) !== incomingSocialMedia.profile)) {\n              _context3.next = 15;\n              break;\n            }\n\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(syncSocialMedia(token, incomingSocialMedia, socialMediaVariation));\n\n          case 11:\n            __ret = _context3.sent;\n            token = __ret.token;\n            appUserId = __ret.appUserId;\n            synced = __ret.synced;\n\n          case 15:\n            if (!(synced && !linked)) {\n              _context3.next = 21;\n              break;\n            }\n\n            appId = socialMediaVariation.brightIdAppId;\n\n            if (!appId) {\n              _context3.next = 21;\n              break;\n            }\n\n            _context3.next = 20;\n            return _regeneratorRuntime.awrap(linkSocialMediaApp(appId, appUserId));\n\n          case 20:\n            linked = _context3.sent;\n\n          case 21:\n            socialMedia = _objectSpread(_objectSpread({}, incomingSocialMedia), {}, {\n              brightIdSocialAppData: {\n                synced: synced,\n                token: token,\n                appUserId: appUserId,\n                linked: linked\n              }\n            });\n            dispatch(saveSocialMedia(socialMedia));\n            return _context3.abrupt(\"return\", socialMedia);\n\n          case 24:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var removeSocialFromServer = function _callee2(socialMedia) {\n  var _socialMedia$brightId;\n\n  return _regeneratorRuntime.async(function _callee2$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!((_socialMedia$brightId = socialMedia.brightIdSocialAppData) != null && _socialMedia$brightId.token)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(socialMediaService.deleteSocialMediaProfile(socialMedia.brightIdSocialAppData.token));\n\n        case 4:\n          _context4.next = 10;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](1);\n\n          if (!(_context4.t0.message !== SOCIAL_API_AUTHENTICATION_ERROR)) {\n            _context4.next = 10;\n            break;\n          }\n\n          throw _context4.t0;\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};\nexport var removeSocialMediaThunk = function removeSocialMediaThunk(id) {\n  return function _callee3(dispatch, getState) {\n    var prevProfile, socialMedia;\n    return _regeneratorRuntime.async(function _callee3$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            prevProfile = selectSocialMediaById(getState(), id);\n\n            if (!prevProfile) {\n              _context5.next = 6;\n              break;\n            }\n\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(removeSocialFromServer(prevProfile));\n\n          case 4:\n            socialMedia = _objectSpread(_objectSpread({}, prevProfile), {}, {\n              profile: null\n            });\n            dispatch(saveSocialMedia(socialMedia));\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateSocialMediaVariations = function updateSocialMediaVariations() {\n  return function _callee4(dispatch, getState) {\n    var socialMediaVariations;\n    return _regeneratorRuntime.async(function _callee4$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(socialMediaService.retrieveSocialMediaVariations());\n\n          case 2:\n            socialMediaVariations = _context6.sent;\n            dispatch(upsertSocialMediaVariations(socialMediaVariations));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var syncAndLinkSocialMedias = function syncAndLinkSocialMedias() {\n  return function _callee5(dispatch, getState) {\n    var socialMedias;\n    return _regeneratorRuntime.async(function _callee5$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            socialMedias = selectAllSocialMedia(getState());\n            socialMedias.forEach(function (socialMedia) {\n              if (socialMedia.profile) {\n                dispatch(saveAndLinkSocialMedia(socialMedia));\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var removeAllSocialMediasFromServer = function removeAllSocialMediasFromServer() {\n  return function _callee6(dispatch, getState) {\n    var socialMedias, i, socialMedia, newSocialMedia;\n    return _regeneratorRuntime.async(function _callee6$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            socialMedias = selectAllSocialMedia(getState());\n            i = 0;\n\n          case 2:\n            if (!(i < socialMedias.length)) {\n              _context8.next = 12;\n              break;\n            }\n\n            socialMedia = socialMedias[i];\n\n            if (!socialMedia.profile) {\n              _context8.next = 9;\n              break;\n            }\n\n            _context8.next = 7;\n            return _regeneratorRuntime.awrap(removeSocialFromServer(socialMedia));\n\n          case 7:\n            newSocialMedia = _objectSpread(_objectSpread({}, socialMedia), {}, {\n              brightIdSocialAppData: _objectSpread(_objectSpread({}, socialMedia.brightIdSocialAppData), {}, {\n                synced: false\n              })\n            });\n            dispatch(saveSocialMedia(newSocialMedia));\n\n          case 9:\n            i++;\n            _context8.next = 2;\n            break;\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var setSyncSocialMediaEnabledThunk = function setSyncSocialMediaEnabledThunk(value) {\n  return function _callee7(dispatch, getState) {\n    var prevState;\n    return _regeneratorRuntime.async(function _callee7$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            prevState = selectSyncSocialMediaEnabled(getState());\n            dispatch(setSyncSocialMediaEnabled(value));\n            _context9.prev = 2;\n\n            if (!value) {\n              _context9.next = 8;\n              break;\n            }\n\n            _context9.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(syncAndLinkSocialMedias()));\n\n          case 6:\n            _context9.next = 10;\n            break;\n\n          case 8:\n            _context9.next = 10;\n            return _regeneratorRuntime.awrap(dispatch(removeAllSocialMediasFromServer()));\n\n          case 10:\n            _context9.next = 15;\n            break;\n\n          case 12:\n            _context9.prev = 12;\n            _context9.t0 = _context9[\"catch\"](2);\n            dispatch(setSyncSocialMediaEnabled(prevState));\n\n          case 15:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, [[2, 12]], Promise);\n  };\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/EditProfile/socialMediaThunks.ts"],"names":["linked","apps","selectAllApps","store","appInfo","find","propEq","signedTimestamp","getSignedTimestamp","Date","linkAppId","console","synced","appUserId","profileHashes","generateSocialProfileHashes","incomingSocialMedia","socialMediaVariation","socialMediaService","token","syncSocialMedia","data","variation","network","__DEV__","BrightIdNetwork","saveAndLinkSocialMedia","prevProfile","selectSocialMediaById","getState","dispatch","saveSocialMedia","syncSocialMediaEnabled","selectSyncSocialMediaEnabled","selectSocialMediaVariationById","brightIdSocialAppData","__ret","appId","linkSocialMediaApp","socialMedia","removeSocialFromServer","removeSocialMediaThunk","profile","updateSocialMediaVariations","socialMediaVariations","upsertSocialMediaVariations","syncAndLinkSocialMedias","socialMedias","selectAllSocialMedia","removeAllSocialMediasFromServer","i","newSocialMedia","setSyncSocialMediaEnabledThunk","prevState","setSyncSocialMediaEnabled"],"mappings":"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","sourcesContent":["import { find, propEq } from 'ramda';\nimport { SOCIAL_API_AUTHENTICATION_ERROR } from '@/api/socialMediaService';\nimport { getSignedTimestamp, linkAppId } from '@/components/Apps/model';\nimport store from '@/store';\nimport { selectAllApps } from '@/reducer/appsSlice';\nimport {\n  saveSocialMedia,\n  selectAllSocialMedia,\n  selectSocialMediaById,\n} from '@/reducer/socialMediaSlice';\nimport {\n  selectSocialMediaVariationById,\n  upsertSocialMediaVariations,\n} from '@/reducer/socialMediaVariationSlice';\nimport { generateSocialProfileHashes } from '@/utils/socialUtils';\nimport { SOCIAL_MEDIA_SIG_WAIT_TIME } from '@/utils/constants';\nimport {\n  selectSyncSocialMediaEnabled,\n  setSyncSocialMediaEnabled,\n} from '@/reducer/settingsSlice';\nimport { BrightIdNetwork } from '@/components/Apps/types.d';\nimport socialMediaService from '@/utils/socialMediaServiceProvider';\n\nexport async function linkSocialMediaApp(appId: string, appUserId: string) {\n  let linked = false;\n  const apps = selectAllApps(store.getState());\n  const appInfo = find(propEq('id', appId))(apps) as AppInfo;\n  if (appInfo && appInfo.usingBlindSig) {\n    const signedTimestamp = getSignedTimestamp(appInfo);\n    if (\n      signedTimestamp &&\n      Date.now() - signedTimestamp > SOCIAL_MEDIA_SIG_WAIT_TIME\n    ) {\n      try {\n        linked = await linkAppId(appId, appUserId, true);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n  return linked;\n}\n\nexport async function syncSocialMedia(\n  token: string,\n  incomingSocialMedia: SocialMedia,\n  socialMediaVariation: SocialMediaVariation,\n) {\n  let synced = false;\n  let appUserId = incomingSocialMedia.brightIdSocialAppData?.appUserId || null;\n  const profileHashes = generateSocialProfileHashes(\n    incomingSocialMedia.profile,\n    socialMediaVariation.id,\n  );\n  if (token) {\n    try {\n      await socialMediaService.updateSocialMedia({\n        token,\n        profileHashes,\n      });\n      synced = true;\n    } catch (e) {\n      if (e.message === SOCIAL_API_AUTHENTICATION_ERROR) {\n        return syncSocialMedia(null, incomingSocialMedia, socialMediaVariation);\n      }\n      console.log(e);\n    }\n  } else {\n    try {\n      const data = await socialMediaService.createSocialMedia({\n        profileHashes,\n        variation: socialMediaVariation.id,\n        network: __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE,\n      });\n      token = data.token;\n      appUserId = data.appUserId;\n      synced = true;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return { token, appUserId, synced };\n}\n\nexport const saveAndLinkSocialMedia =\n  (incomingSocialMedia: SocialMedia) =>\n  async (dispatch: dispatch, getState: getState) => {\n    const prevProfile = selectSocialMediaById(\n      getState(),\n      incomingSocialMedia.id,\n    );\n\n    // First, update locally, so the user doesn't need to wait for\n    // the server to complete the request to see his new profile in the UI.\n    dispatch(saveSocialMedia(incomingSocialMedia));\n    const syncSocialMediaEnabled = selectSyncSocialMediaEnabled(getState());\n    if (!syncSocialMediaEnabled) {\n      return incomingSocialMedia;\n    }\n    const socialMediaVariation = selectSocialMediaVariationById(\n      getState(),\n      incomingSocialMedia.id,\n    );\n    const brightIdSocialAppData: BrightIdSocialAppData = {\n      synced: false,\n      linked: false,\n      appUserId: null,\n      token: null,\n      ...incomingSocialMedia.brightIdSocialAppData,\n    };\n    let { synced, token, appUserId, linked } = brightIdSocialAppData;\n\n    if (!synced || prevProfile?.profile !== incomingSocialMedia.profile) {\n      const __ret = await syncSocialMedia(\n        token,\n        incomingSocialMedia,\n        socialMediaVariation,\n      );\n      token = __ret.token;\n      appUserId = __ret.appUserId;\n      synced = __ret.synced;\n    }\n\n    if (synced && !linked) {\n      const appId = socialMediaVariation.brightIdAppId;\n      if (appId) {\n        linked = await linkSocialMediaApp(appId, appUserId);\n      }\n    }\n\n    const socialMedia: SocialMedia = {\n      ...incomingSocialMedia,\n      brightIdSocialAppData: { synced, token, appUserId, linked },\n    };\n    dispatch(saveSocialMedia(socialMedia));\n    return socialMedia;\n  };\n\nexport const removeSocialFromServer = async (socialMedia: SocialMedia) => {\n  if (socialMedia.brightIdSocialAppData?.token) {\n    try {\n      await socialMediaService.deleteSocialMediaProfile(\n        socialMedia.brightIdSocialAppData.token,\n      );\n    } catch (e) {\n      // if the token by some reason doesn't exist on the server, so\n      // there is nothing to delete, so ignore the error.\n      if (e.message !== SOCIAL_API_AUTHENTICATION_ERROR) {\n        throw e;\n      }\n    }\n  }\n};\n\nexport const removeSocialMediaThunk =\n  (id: string) => async (dispatch: dispatch, getState: getState) => {\n    const prevProfile = selectSocialMediaById(getState(), id);\n    if (prevProfile) {\n      await removeSocialFromServer(prevProfile);\n      const socialMedia: SocialMedia = {\n        ...prevProfile,\n        profile: null,\n      };\n      dispatch(saveSocialMedia(socialMedia));\n    }\n  };\n\nexport const updateSocialMediaVariations =\n  () => async (dispatch: dispatch, getState: getState) => {\n    const socialMediaVariations =\n      await socialMediaService.retrieveSocialMediaVariations();\n    dispatch(upsertSocialMediaVariations(socialMediaVariations));\n  };\n\nexport const syncAndLinkSocialMedias =\n  () => async (dispatch: dispatch, getState: getState) => {\n    const socialMedias = selectAllSocialMedia(getState());\n    socialMedias.forEach((socialMedia) => {\n      if (socialMedia.profile) {\n        dispatch(saveAndLinkSocialMedia(socialMedia));\n      }\n    });\n  };\n\nexport const removeAllSocialMediasFromServer =\n  () => async (dispatch: dispatch, getState: getState) => {\n    const socialMedias = selectAllSocialMedia(getState());\n    for (let i = 0; i < socialMedias.length; i++) {\n      const socialMedia = socialMedias[i];\n      if (socialMedia.profile) {\n        await removeSocialFromServer(socialMedia);\n        const newSocialMedia: SocialMedia = {\n          ...socialMedia,\n          brightIdSocialAppData: {\n            ...socialMedia.brightIdSocialAppData,\n            synced: false,\n          },\n        };\n        dispatch(saveSocialMedia(newSocialMedia));\n      }\n    }\n  };\n\nexport const setSyncSocialMediaEnabledThunk =\n  (value: boolean) => async (dispatch: dispatch, getState: getState) => {\n    const prevState = selectSyncSocialMediaEnabled(getState());\n\n    dispatch(setSyncSocialMediaEnabled(value));\n    try {\n      if (value) {\n        await dispatch(syncAndLinkSocialMedias());\n      } else {\n        await dispatch(removeAllSocialMediasFromServer());\n      }\n    } catch (e) {\n      // rollback\n      dispatch(setSyncSocialMediaEnabled(prevState));\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}