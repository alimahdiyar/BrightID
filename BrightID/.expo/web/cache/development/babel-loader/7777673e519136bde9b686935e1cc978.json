{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport Hammer from '@egjs/hammerjs';\nimport { State } from \"../State\";\nimport PressGestureHandler from \"./PressGestureHandler\";\nimport { isnan, isValidNumber } from \"./utils\";\n\nvar LongPressGestureHandler = function (_PressGestureHandler) {\n  _inherits(LongPressGestureHandler, _PressGestureHandler);\n\n  var _super = _createSuper(LongPressGestureHandler);\n\n  function LongPressGestureHandler() {\n    _classCallCheck(this, LongPressGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LongPressGestureHandler, [{\n    key: \"minDurationMs\",\n    get: function get() {\n      return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var maxDistSq = _ref.maxDistSq;\n      return !isValidNumber(maxDistSq);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(LongPressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n\n      return (_Hammer$INPUT_START$H = {}, _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_START, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_MOVE, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_END, State.END), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_CANCEL, State.FAILED), _Hammer$INPUT_START$H)[type];\n    }\n  }]);\n\n  return LongPressGestureHandler;\n}(PressGestureHandler);\n\nexport default LongPressGestureHandler;","map":{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["LongPressGestureHandler","PressGestureHandler","isnan","updateHasCustomActivationCriteria","maxDistSq","isValidNumber","getConfig","shouldCancelWhenOutside","getHammerConfig","time","getState","Hammer","State"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAAA,OAAA,MAAA,MAAA,gBAAA;AAEA,SAAA,KAAA;AACA,OAAA,mBAAA;AACA,SAAA,KAAA,EAAA,aAAA;;AAIMA,IAAAA,uB;;;;;;;;;;;;;SACa,SAAA,GAAA,GAAW;MAE1B,OAAOE,KAAK,CAAC,KAAA,MAAA,CAANA,aAAK,CAALA,GAAAA,GAAAA,GAAyC,KAAA,MAAA,CAAhD,aAAA;;;;SAGS,SAAA,GAAA,GAAG;MAEZ,OAAOA,KAAK,CAAC,KAAA,MAAA,CAANA,OAAK,CAALA,GAAAA,CAAAA,GAAiC,KAAA,MAAA,CAAxC,OAAA;;;;WAGFC,SAAAA,iCAAAA,CAAAA,IAAAA,EAAyD;MAArBC,IAAAA,SAAqB,GAAA,IAAA,CAArBA,SAAAA;MAClC,OAAO,CAACC,aAAa,CAArB,SAAqB,CAArB;;;;WAGFC,SAAAA,SAAAA,GAAY;MACV,IAAI,CAAC,KAAL,2BAAA,EAAuC;QAGrC,OAAO;UACLC,uBAAuB,EADlB,IAAA;UAELH,SAAS,EAFX;QAAO,CAAP;MAKF;;MAAA,OAAO,KAAP,MAAA;;;;WAGFI,SAAAA,eAAAA,GAAkB;MAChB,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,iBAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA;QAGEC,IAAI,EAAE,KAHR;MAAA,CAAA,CAAA;;;;WAOFC,SAAAA,QAAAA,CAAAA,IAAAA,EAA8C;MAAA,IAAA,qBAAA;;MAC5C,OAAO,CAAA,qBAAA,GAAA,EAAA,EAAA,eAAA,CAAA,qBAAA,EACJC,MAAM,CADF,WAAA,EACiBC,KAAK,CADtB,MAAA,CAAA,EAAA,eAAA,CAAA,qBAAA,EAEJD,MAAM,CAFF,UAAA,EAEgBC,KAAK,CAFrB,MAAA,CAAA,EAAA,eAAA,CAAA,qBAAA,EAGJD,MAAM,CAHF,SAAA,EAGeC,KAAK,CAHpB,GAAA,CAAA,EAAA,eAAA,CAAA,qBAAA,EAIJD,MAAM,CAJF,YAAA,EAIkBC,KAAK,CAJvB,MAAA,CAAA,EAAA,qBAAA,EAAP,IAAO,CAAP;;;;;EApCkCX,mB,CAAhCD;;AA6CN,eAAA,uBAAA","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\nimport { Config } from './GestureHandler';\nimport { HammerInputNames } from './constants';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs(): number {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }: Config) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type: keyof typeof HammerInputNames) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n"]},"metadata":{},"sourceType":"module"}