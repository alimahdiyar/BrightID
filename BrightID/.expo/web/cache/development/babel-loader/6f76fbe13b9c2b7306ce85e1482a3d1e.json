{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\", \"linking\", \"fallback\", \"documentTitle\", \"onReady\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { BaseNavigationContainer } from '@react-navigation/core';\nimport ThemeProvider from \"./theming/ThemeProvider\";\nimport DefaultTheme from \"./theming/DefaultTheme\";\nimport LinkingContext from \"./LinkingContext\";\nimport useThenable from \"./useThenable\";\nimport useLinking from \"./useLinking\";\nimport useDocumentTitle from \"./useDocumentTitle\";\nimport useBackButton from \"./useBackButton\";\nvar NavigationContainer = React.forwardRef(function NavigationContainer(_ref, ref) {\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? DefaultTheme : _ref$theme,\n      linking = _ref.linking,\n      _ref$fallback = _ref.fallback,\n      fallback = _ref$fallback === void 0 ? null : _ref$fallback,\n      documentTitle = _ref.documentTitle,\n      onReady = _ref.onReady,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isLinkingEnabled = linking ? linking.enabled !== false : false;\n  var refContainer = React.useRef(null);\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  var _useLinking = useLinking(refContainer, _objectSpread({\n    enabled: isLinkingEnabled,\n    prefixes: []\n  }, linking)),\n      getInitialState = _useLinking.getInitialState;\n\n  var _useThenable = useThenable(getInitialState),\n      _useThenable2 = _slicedToArray(_useThenable, 2),\n      isResolved = _useThenable2[0],\n      initialState = _useThenable2[1];\n\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  var linkingContext = React.useMemo(function () {\n    return {\n      options: linking\n    };\n  }, [linking]);\n  var isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n  var onReadyRef = React.useRef(onReady);\n  React.useEffect(function () {\n    onReadyRef.current = onReady;\n  });\n  React.useEffect(function () {\n    if (isReady) {\n      var _onReadyRef$current;\n\n      (_onReadyRef$current = onReadyRef.current) === null || _onReadyRef$current === void 0 ? void 0 : _onReadyRef$current.call(onReadyRef);\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return fallback;\n  }\n\n  return React.createElement(LinkingContext.Provider, {\n    value: linkingContext\n  }, React.createElement(ThemeProvider, {\n    value: theme\n  }, React.createElement(BaseNavigationContainer, _extends({}, rest, {\n    initialState: rest.initialState == null ? initialState : rest.initialState,\n    ref: refContainer\n  }))));\n});\nexport default NavigationContainer;","map":{"version":3,"sources":["NavigationContainer.tsx"],"names":["NavigationContainer","React","theme","DefaultTheme","linking","fallback","documentTitle","onReady","rest","isLinkingEnabled","refContainer","useBackButton","useDocumentTitle","getInitialState","useLinking","enabled","prefixes","isResolved","initialState","useThenable","linkingContext","options","isReady","onReadyRef","LinkingContext","value","ref"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport LinkingContext from './LinkingContext';\nimport useThenable from './useThenable';\nimport useLinking from './useLinking';\nimport useDocumentTitle from './useDocumentTitle';\nimport useBackButton from './useBackButton';\nimport type { Theme, LinkingOptions, DocumentTitleOptions } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props,\n  ref?: React.Ref<NavigationContainerRef | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n});\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}