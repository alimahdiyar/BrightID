{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport { useTranslation } from 'react-i18next';\nimport Contacts from \"../../utils/ContactsProvider\";\nimport { DEVICE_IOS, DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { BLACK, DARKER_GREY, GREY, ORANGE, WHITE } from \"../../theme/colors\";\nimport { useSelector } from \"../../store\";\nimport { selectSocialMediaVariationById } from \"../../reducer/socialMediaVariationSlice\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { SocialMediaVariationIds } from \"../EditProfile/socialMediaVariations\";\nimport { extractDigits } from \"../../utils/phoneUtils\";\nimport { hashSocialProfile } from \"../../utils/cryptoHelper\";\nimport EmptyList from \"../Helpers/EmptyList\";\nimport { BrightIdNetwork } from \"../Apps/types.d\";\nimport socialMediaService from \"../../utils/socialMediaServiceProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar FlatListItemSeparator = function FlatListItemSeparator() {\n  return _jsx(View, {\n    style: {\n      height: StyleSheet.hairlineWidth,\n      backgroundColor: GREY\n    }\n  });\n};\n\nfunction removeDuplicates(friendProfiles) {\n  var uniques = [];\n  friendProfiles.forEach(function (friendProfile) {\n    if (!uniques.find(function (item) {\n      return item.profile === friendProfile.profile && item.variation.id === friendProfile.variation.id;\n    })) {\n      uniques.push(friendProfile);\n    }\n  });\n  return uniques;\n}\n\nexport var FindFriendsScreen = function FindFriendsScreen() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var headerHeight = useHeaderHeight();\n\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var isDrawerOpen = useIsDrawerOpen();\n  var emailSocialMediaVariation = useSelector(function (state) {\n    return selectSocialMediaVariationById(state, SocialMediaVariationIds.EMAIL);\n  });\n  var phoneNumberSocialMediaVariation = useSelector(function (state) {\n    return selectSocialMediaVariationById(state, SocialMediaVariationIds.PHONE_NUMBER);\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      friendsRaw = _useState2[0],\n      setFriendsRaw = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      apiError = _useState4[0],\n      setApiError = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friends = _useState6[0],\n      setFriends = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var getContacts = useCallback(function _callee() {\n    var _friendsRaw, permissionStatus, contacts;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _friendsRaw = [];\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.READ_CONTACTS, {\n              title: 'Contacts',\n              message: 'This app would like to view your contacts.',\n              buttonPositive: 'Please accept bare mortal',\n              buttonNegative: 'No, thanks'\n            }));\n\n          case 3:\n            permissionStatus = _context.sent;\n\n            if (!(permissionStatus === 'granted')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(Contacts.getAll());\n\n          case 7:\n            contacts = _context.sent;\n            contacts.forEach(function (contact) {\n              var contactName = contact.displayName;\n              contact.emailAddresses.forEach(function (emailAddress) {\n                var _profile = emailAddress.email;\n\n                _friendsRaw.push({\n                  name: contactName,\n                  profile: _profile,\n                  profileHash: hashSocialProfile(_profile),\n                  variation: emailSocialMediaVariation\n                });\n              });\n              contact.phoneNumbers.forEach(function (phoneNumber) {\n                var _profile = extractDigits(phoneNumber.number);\n\n                _friendsRaw.push({\n                  name: contactName,\n                  profile: _profile,\n                  profileHash: hashSocialProfile(_profile),\n                  variation: phoneNumberSocialMediaVariation\n                });\n              });\n            });\n\n          case 9:\n            _friendsRaw = removeDuplicates(_friendsRaw);\n            setFriendsRaw(_friendsRaw);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [emailSocialMediaVariation, phoneNumberSocialMediaVariation]);\n  useEffect(function () {\n    getContacts().catch(console.error);\n  }, [getContacts]);\n  var fetchFriends = useCallback(function _callee2() {\n    var _profileHashes, _filteredProfileHashes;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (friendsRaw.length) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            setApiError(null);\n            _profileHashes = friendsRaw.map(function (friendProfile) {\n              return friendProfile.profileHash;\n            });\n\n            if (!_profileHashes.length) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.prev = 6;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(socialMediaService.querySocialMedia({\n              profileHashes: _profileHashes,\n              network: __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE\n            }));\n\n          case 9:\n            _filteredProfileHashes = _context2.sent;\n            setFriends(friendsRaw.filter(function (friendProfile) {\n              return _filteredProfileHashes.includes(friendProfile.profileHash);\n            }));\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](6);\n            setApiError(t('common.text.noConnection'));\n\n          case 16:\n            _context2.next = 19;\n            break;\n\n          case 18:\n            setFriends([]);\n\n          case 19:\n            setLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[6, 13]], Promise);\n  }, [friendsRaw, t]);\n  useEffect(function () {\n    fetchFriends().catch(console.error);\n  }, [fetchFriends, friendsRaw]);\n\n  function sendInvitation(item) {\n    var subject = \"Let's connect on BrightID\";\n    var connectionLink = 'https://app.brightid.org/connection-code/xxx';\n    var body = \"Hi\\nLet's connect on BrightID!\\n\" + connectionLink;\n\n    if (item.variation.id === SocialMediaVariationIds.PHONE_NUMBER) {\n      var smsDivider = Platform.OS === 'ios' ? '&' : '?';\n      var phone = item.profile;\n      Linking.openURL(\"sms:\" + phone + smsDivider + \"body=\" + body);\n      return;\n    }\n\n    if (item.variation.id === SocialMediaVariationIds.EMAIL) {\n      var email = item.profile;\n      Linking.openURL(\"mailto:\" + email + \"?subject=\" + subject + \"&body=\" + body);\n      return;\n    }\n\n    var invitationNotAvailableText = t('findFriends.text.invitationNotAvailable');\n\n    if (Platform.OS === 'android') {\n      ToastAndroid.show(invitationNotAvailableText, ToastAndroid.LONG);\n    } else {\n      Alert.alert(invitationNotAvailableText);\n    }\n  }\n\n  var keyExtractor = function keyExtractor(item, idx) {\n    var _item$recordID;\n\n    return (item == null ? void 0 : (_item$recordID = item.recordID) == null ? void 0 : _item$recordID.toString()) || idx.toString();\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: styles.contactCon,\n      testID: item.name + \"-\" + item.variation.name,\n      children: [_jsx(View, {\n        style: styles.imgCon,\n        children: _jsx(View, {\n          style: styles.placeholder,\n          children: _jsx(Text, {\n            style: styles.txt,\n            children: item.name ? item.name[0] : ''\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.contactDat,\n        children: [_jsx(Text, {\n          style: styles.name,\n          numberOfLines: 1,\n          children: item.name\n        }), _jsx(Text, {\n          style: styles.profile,\n          numberOfLines: 1,\n          children: item.variation.name\n        }), _jsx(Text, {\n          style: styles.profile,\n          numberOfLines: 1,\n          testID: item.profile,\n          children: item.profile\n        })]\n      }), _jsx(View, {\n        style: styles.contactAction\n      })]\n    });\n  };\n\n  function renderFriendsList() {\n    return _jsx(FlatList, {\n      data: friends,\n      contentContainerStyle: {\n        paddingBottom: 50,\n        flexGrow: 1\n      },\n      keyExtractor: keyExtractor,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      ItemSeparatorComponent: FlatListItemSeparator,\n      renderItem: renderItem,\n      ListEmptyComponent: _jsx(EmptyList, {\n        iconType: \"account-off-outline\",\n        title: t('findFriends.text.noFriends')\n      }),\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: false,\n        onRefresh: fetchFriends\n      })\n    });\n  }\n\n  function renderStatus() {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: apiError ? _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.apiErrorText,\n          children: apiError\n        }), _jsx(TouchableOpacity, {\n          style: styles.retryBtn,\n          onPress: fetchFriends,\n          children: _jsx(Text, {\n            style: styles.retryBtnText,\n            children: t('common.button.retry')\n          })\n        })]\n      }) : _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: DARKER_GREY,\n        animating: true\n      })\n    });\n  }\n\n  return _jsx(View, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }, !isDrawerOpen && styles.shadow],\n    testID: \"findFriendsScreen\",\n    children: loading || apiError ? renderStatus() : renderFriendsList()\n  });\n};\nvar styles = StyleSheet.create({\n  apiErrorText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: 26,\n    marginBottom: 12\n  },\n  retryBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 160 : 140,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  retryBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE\n  },\n  inviteBtn: {\n    width: '100%',\n    height: 40,\n    borderRadius: 100,\n    borderColor: ORANGE,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inviteBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: ORANGE\n  },\n  statusContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: -20,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    paddingLeft: 10,\n    paddingRight: 18\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  contactCon: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 5,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#d9d9d9',\n    paddingVertical: 24,\n    paddingHorizontal: 18\n  },\n  imgCon: {},\n  placeholder: {\n    width: 55,\n    height: 55,\n    borderRadius: 30,\n    overflow: 'hidden',\n    backgroundColor: '#d9d9d9',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  contactDat: {\n    flex: 3,\n    justifyContent: 'center',\n    paddingLeft: 10,\n    paddingRight: 5\n  },\n  contactAction: {\n    flex: 1.4,\n    justifyContent: 'center',\n    paddingLeft: 5\n  },\n  txt: {\n    fontSize: 18\n  },\n  name: {\n    fontSize: 16\n  },\n  profile: {\n    color: '#888'\n  }\n});\nexport default FindFriendsScreen;","map":{"version":3,"names":["React","useCallback","useEffect","useState","useHeaderHeight","useIsDrawerOpen","useTranslation","Contacts","DEVICE_IOS","DEVICE_LARGE","BLACK","DARKER_GREY","GREY","ORANGE","WHITE","useSelector","selectSocialMediaVariationById","fontSize","SocialMediaVariationIds","extractDigits","hashSocialProfile","EmptyList","BrightIdNetwork","socialMediaService","FlatListItemSeparator","height","StyleSheet","hairlineWidth","backgroundColor","removeDuplicates","friendProfiles","uniques","forEach","friendProfile","find","item","profile","variation","id","push","FindFriendsScreen","t","headerHeight","isDrawerOpen","emailSocialMediaVariation","state","EMAIL","phoneNumberSocialMediaVariation","PHONE_NUMBER","friendsRaw","setFriendsRaw","apiError","setApiError","friends","setFriends","loading","setLoading","getContacts","_friendsRaw","PermissionsAndroid","request","PERMISSIONS","READ_CONTACTS","title","message","buttonPositive","buttonNegative","permissionStatus","getAll","contacts","contact","contactName","displayName","emailAddresses","emailAddress","_profile","email","name","profileHash","phoneNumbers","phoneNumber","number","catch","console","error","fetchFriends","length","_profileHashes","map","querySocialMedia","profileHashes","network","__DEV__","TEST","NODE","_filteredProfileHashes","filter","includes","sendInvitation","subject","connectionLink","body","smsDivider","Platform","OS","phone","Linking","openURL","invitationNotAvailableText","ToastAndroid","show","LONG","Alert","alert","keyExtractor","idx","recordID","toString","renderItem","styles","contactCon","imgCon","placeholder","txt","contactDat","contactAction","renderFriendsList","paddingBottom","flexGrow","renderStatus","statusContainer","apiErrorText","retryBtn","retryBtnText","container","marginTop","shadow","create","fontFamily","textAlign","lineHeight","marginBottom","alignItems","justifyContent","width","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","color","inviteBtn","borderColor","borderWidth","flexDirection","inviteBtnText","position","left","right","top","bottom","flex","paddingLeft","paddingRight","shadowOpacity","padding","borderBottomWidth","borderBottomColor","paddingVertical","paddingHorizontal","overflow"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/FindFriends/FindFriendsScreen.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  ActivityIndicator,\n  Alert,\n  FlatList,\n  Linking,\n  PermissionsAndroid,\n  Platform,\n  RefreshControl,\n  StyleSheet,\n  Text,\n  ToastAndroid,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport { useTranslation } from 'react-i18next';\nimport Contacts from '@/utils/ContactsProvider';\nimport { DEVICE_IOS, DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK, DARKER_GREY, GREY, ORANGE, WHITE } from '@/theme/colors';\nimport { useSelector } from '@/store';\nimport { selectSocialMediaVariationById } from '@/reducer/socialMediaVariationSlice';\nimport { fontSize } from '@/theme/fonts';\nimport { SocialMediaVariationIds } from '@/components/EditProfile/socialMediaVariations';\nimport { extractDigits } from '@/utils/phoneUtils';\nimport { hashSocialProfile } from '@/utils/cryptoHelper';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { BrightIdNetwork } from '@/components/Apps/types.d';\nimport socialMediaService from '@/utils/socialMediaServiceProvider';\n\nconst FlatListItemSeparator = () => {\n  return (\n    <View\n      style={{\n        height: StyleSheet.hairlineWidth,\n        backgroundColor: GREY,\n      }}\n    />\n  );\n};\n\ntype FriendProfile = {\n  profile: string;\n  profileHash: string;\n  name: string;\n  variation: SocialMediaVariation;\n};\n\nfunction removeDuplicates(friendProfiles: FriendProfile[]) {\n  const uniques: FriendProfile[] = [];\n  friendProfiles.forEach((friendProfile) => {\n    if (\n      !uniques.find(\n        (item) =>\n          item.profile === friendProfile.profile &&\n          item.variation.id === friendProfile.variation.id,\n      )\n    ) {\n      uniques.push(friendProfile);\n    }\n  });\n  return uniques;\n}\n\nexport const FindFriendsScreen = function () {\n  const { t } = useTranslation();\n\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const isDrawerOpen = useIsDrawerOpen();\n\n  const emailSocialMediaVariation = useSelector((state) =>\n    selectSocialMediaVariationById(state, SocialMediaVariationIds.EMAIL),\n  );\n  const phoneNumberSocialMediaVariation = useSelector((state) =>\n    selectSocialMediaVariationById(state, SocialMediaVariationIds.PHONE_NUMBER),\n  );\n  const [friendsRaw, setFriendsRaw] = useState<FriendProfile[]>([]);\n  const [apiError, setApiError] = useState<string | null>(null);\n  const [friends, setFriends] = useState<FriendProfile[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const getContacts = useCallback(async () => {\n    let _friendsRaw: FriendProfile[] = [];\n    const permissionStatus = await PermissionsAndroid.request(\n      PermissionsAndroid.PERMISSIONS.READ_CONTACTS,\n      {\n        title: 'Contacts',\n        message: 'This app would like to view your contacts.',\n        buttonPositive: 'Please accept bare mortal',\n        buttonNegative: 'No, thanks',\n      },\n    );\n    if (permissionStatus === 'granted') {\n      const contacts = await Contacts.getAll();\n      contacts.forEach((contact) => {\n        const contactName = contact.displayName;\n        contact.emailAddresses.forEach((emailAddress) => {\n          const _profile = emailAddress.email;\n          _friendsRaw.push({\n            name: contactName,\n            profile: _profile,\n            profileHash: hashSocialProfile(_profile),\n            variation: emailSocialMediaVariation,\n          });\n        });\n        contact.phoneNumbers.forEach((phoneNumber) => {\n          const _profile = extractDigits(phoneNumber.number);\n          _friendsRaw.push({\n            name: contactName,\n            profile: _profile,\n            profileHash: hashSocialProfile(_profile),\n            variation: phoneNumberSocialMediaVariation,\n          });\n        });\n      });\n    }\n    _friendsRaw = removeDuplicates(_friendsRaw);\n    setFriendsRaw(_friendsRaw);\n  }, [emailSocialMediaVariation, phoneNumberSocialMediaVariation]);\n\n  useEffect(() => {\n    getContacts().catch(console.error);\n  }, [getContacts]);\n\n  const fetchFriends = useCallback(async () => {\n    if (!friendsRaw.length) {\n      return;\n    }\n    setLoading(true);\n    setApiError(null);\n    const _profileHashes = friendsRaw.map(\n      (friendProfile) => friendProfile.profileHash,\n    );\n    if (_profileHashes.length) {\n      try {\n        const _filteredProfileHashes =\n          await socialMediaService.querySocialMedia({\n            profileHashes: _profileHashes,\n            network: __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE,\n          });\n        setFriends(\n          friendsRaw.filter((friendProfile) =>\n            _filteredProfileHashes.includes(friendProfile.profileHash),\n          ),\n        );\n      } catch (_e) {\n        setApiError(t('common.text.noConnection'));\n      }\n    } else {\n      setFriends([]);\n    }\n    setLoading(false);\n  }, [friendsRaw, t]);\n\n  useEffect(() => {\n    fetchFriends().catch(console.error);\n  }, [fetchFriends, friendsRaw]);\n\n  function sendInvitation(item: FriendProfile) {\n    const subject = \"Let's connect on BrightID\";\n    // TODO: generate connection link\n    const connectionLink = 'https://app.brightid.org/connection-code/xxx';\n    const body = `Hi\\nLet's connect on BrightID!\\n${connectionLink}`;\n    if (item.variation.id === SocialMediaVariationIds.PHONE_NUMBER) {\n      const smsDivider = Platform.OS === 'ios' ? '&' : '?';\n      const phone = item.profile;\n      Linking.openURL(`sms:${phone}${smsDivider}body=${body}`);\n      return;\n    }\n    if (item.variation.id === SocialMediaVariationIds.EMAIL) {\n      const email = item.profile;\n      Linking.openURL(`mailto:${email}?subject=${subject}&body=${body}`);\n      return;\n    }\n    const invitationNotAvailableText = t(\n      'findFriends.text.invitationNotAvailable',\n    );\n    if (Platform.OS === 'android') {\n      ToastAndroid.show(invitationNotAvailableText, ToastAndroid.LONG);\n    } else {\n      Alert.alert(invitationNotAvailableText);\n    }\n  }\n\n  const keyExtractor = (item, idx) => {\n    return item?.recordID?.toString() || idx.toString();\n  };\n\n  const renderItem = ({ item }: { item: FriendProfile }) => {\n    return (\n      <View\n        style={styles.contactCon}\n        testID={`${item.name}-${item.variation.name}`}\n      >\n        <View style={styles.imgCon}>\n          <View style={styles.placeholder}>\n            <Text style={styles.txt}>{item.name ? item.name[0] : ''}</Text>\n          </View>\n        </View>\n        <View style={styles.contactDat}>\n          <Text style={styles.name} numberOfLines={1}>\n            {item.name}\n          </Text>\n          <Text style={styles.profile} numberOfLines={1}>\n            {item.variation.name}\n          </Text>\n          <Text style={styles.profile} numberOfLines={1} testID={item.profile}>\n            {item.profile}\n          </Text>\n        </View>\n        <View style={styles.contactAction}>\n          {/* <TouchableOpacity */}\n          {/*  testID=\"InviteBtn\" */}\n          {/*  style={styles.inviteBtn} */}\n          {/*  onPress={() => sendInvitation(item)} */}\n          {/* > */}\n          {/*  <Text style={styles.inviteBtnText}> */}\n          {/*    {t('findFriends.button.invite')} */}\n          {/*  </Text> */}\n          {/* </TouchableOpacity> */}\n        </View>\n      </View>\n    );\n  };\n\n  function renderFriendsList() {\n    return (\n      <FlatList\n        data={friends}\n        contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n        keyExtractor={keyExtractor}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        ItemSeparatorComponent={FlatListItemSeparator}\n        renderItem={renderItem}\n        ListEmptyComponent={\n          <EmptyList\n            iconType=\"account-off-outline\"\n            title={t('findFriends.text.noFriends')}\n          />\n        }\n        refreshControl={\n          <RefreshControl refreshing={false} onRefresh={fetchFriends} />\n        }\n      />\n    );\n  }\n\n  function renderStatus() {\n    return (\n      <View style={styles.statusContainer}>\n        {apiError ? (\n          <>\n            <Text style={styles.apiErrorText}>{apiError}</Text>\n            <TouchableOpacity style={styles.retryBtn} onPress={fetchFriends}>\n              <Text style={styles.retryBtnText}>\n                {t('common.button.retry')}\n              </Text>\n            </TouchableOpacity>\n          </>\n        ) : (\n          <ActivityIndicator size=\"large\" color={DARKER_GREY} animating />\n        )}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { marginTop: headerHeight },\n        !isDrawerOpen && styles.shadow,\n      ]}\n      testID=\"findFriendsScreen\"\n    >\n      {loading || apiError ? renderStatus() : renderFriendsList()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  apiErrorText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: 26,\n    marginBottom: 12,\n  },\n  retryBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 160 : 140,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  retryBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n  inviteBtn: {\n    width: '100%',\n    height: 40,\n    borderRadius: 100,\n    borderColor: ORANGE,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inviteBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: ORANGE,\n  },\n  statusContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: -20,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    paddingLeft: 10,\n    paddingRight: 18,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  contactCon: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 5,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#d9d9d9',\n    paddingVertical: 24,\n    paddingHorizontal: 18,\n  },\n  imgCon: {},\n  placeholder: {\n    width: 55,\n    height: 55,\n    borderRadius: 30,\n    overflow: 'hidden',\n    backgroundColor: '#d9d9d9',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  contactDat: {\n    flex: 3,\n    justifyContent: 'center',\n    paddingLeft: 10,\n    paddingRight: 5,\n  },\n  contactAction: {\n    flex: 1.4,\n    justifyContent: 'center',\n    paddingLeft: 5,\n  },\n  txt: {\n    fontSize: 18,\n  },\n  name: {\n    fontSize: 16,\n  },\n  profile: {\n    color: '#888',\n  },\n});\n\nexport default FindFriendsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}