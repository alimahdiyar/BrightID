{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport Platform from \"../Platform\";\nimport { CodedError } from \"./CodedError\";\nexport var UnavailabilityError = function (_CodedError) {\n  _inherits(UnavailabilityError, _CodedError);\n\n  var _super = _createSuper(UnavailabilityError);\n\n  function UnavailabilityError(moduleName, propertyName) {\n    _classCallCheck(this, UnavailabilityError);\n\n    return _super.call(this, 'ERR_UNAVAILABLE', \"The method or property \" + moduleName + \".\" + propertyName + \" is not available on \" + Platform.OS + \", are you sure you've linked all the native dependencies properly?\");\n  }\n\n  return UnavailabilityError;\n}(CodedError);","map":{"version":3,"sources":["../../src/errors/UnavailabilityError.ts"],"names":["UnavailabilityError","Platform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,QAAA;AACA,SAAA,UAAA;AAOA,OAAA,IAAaA,mBAAb,GAAA,UAAA,WAAA,EAAA;EAAA,SAAA,CAAA,mBAAA,EAAA,WAAA,CAAA;;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,mBAAA,CAAA;;EACE,SAAA,mBAAA,CAAA,UAAA,EAAA,YAAA,EAAoD;IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,CAAA;;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,4BAAA,UAAA,GAAA,GAAA,GAAA,YAAA,GAAA,uBAAA,GAG4BC,QAAQ,CAHpC,EAAA,GAAA,oEAAA,CAAA;EADtD;;EAAA,OAAA,mBAAA;AAAA,CAAA,CAAA,UAAA,CAAA","sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}