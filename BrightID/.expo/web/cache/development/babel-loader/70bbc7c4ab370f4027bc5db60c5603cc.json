{"ast":null,"code":"import { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Spinner from 'react-native-spinkit';\nimport { useTranslation } from 'react-i18next';\nimport { setUserId, setPrimaryDevice } from \"../../../actions\";\nimport { useSelector, useDispatch } from \"../../../store\";\nimport { BLACK, ORANGE } from \"../../../theme/colors\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { setRecoveryKeys } from \"../RecoveryFlow/thunks/recoveryThunks\";\nimport { resetRecoveryData, uploadCompletedByOtherSide } from \"../RecoveryFlow/recoveryDataSlice\";\nimport { clearImportChannel } from \"./thunks/channelThunks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ImportScreen = function ImportScreen() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n  var recoveryData = useSelector(function (state) {\n    return state.recoveryData;\n  });\n  var importCompleted = useSelector(uploadCompletedByOtherSide);\n  useEffect(function () {\n    if (importCompleted) {\n      clearImportChannel();\n      dispatch(setPrimaryDevice(false));\n      dispatch(setRecoveryKeys());\n      dispatch(resetRecoveryData());\n      dispatch(setUserId(recoveryData.id));\n    }\n  }, [recoveryData, dispatch, importCompleted]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.waitingContainer,\n      children: [_jsx(Text, {\n        style: styles.infoText,\n        children: t('import.text.waitImporting')\n      }), _jsx(Spinner, {\n        isVisible: true,\n        size: DEVICE_LARGE ? 64 : 44,\n        type: \"Wave\",\n        color: ORANGE\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1\n  },\n  waitingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    color: BLACK,\n    fontSize: fontSize[16],\n    maxWidth: '90%'\n  }\n});\nexport default ImportScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/ImportScreen.tsx"],"names":["ImportScreen","t","useTranslation","dispatch","useDispatch","recoveryData","useSelector","state","importCompleted","useEffect","clearImportChannel","setPrimaryDevice","setRecoveryKeys","resetRecoveryData","setUserId","styles","DEVICE_LARGE","StyleSheet","container","justifyContent","alignItems","width","flex","waitingContainer","infoText","fontFamily","textAlign","color","fontSize","maxWidth"],"mappings":"AAAA,SAAA,SAAA,QAAA,OAAA;;;;AAEA,OAAA,OAAA,MAAA,sBAAA;AACA,SAAA,cAAA,QAAA,eAAA;AACA,SAAA,SAAA,EAAA,gBAAA;AACA,SAAA,WAAA,EAAA,WAAA;AACA,SAAA,KAAA,EAAA,MAAA;AACA,SAAA,QAAA;AACA,SAAA,YAAA;AACA,SAAA,eAAA;AACA,SAAA,iBAAA,EAAA,0BAAA;AAIA,SAAA,kBAAA;;;;AAGA,IAAMA,YAAY,GAAZA,SAAAA,YAAAA,GAAqB;EACzB,IAAA,eAAA,GAAcE,cAAd,EAAA;EAAA,IAAQD,CAAR,GAAA,eAAA,CAAA,CAAA;;EACA,IAAME,QAAQ,GAAGC,WAAjB,EAAA;EACA,IAAMC,YAAY,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAAkBC,KAAK,CAAvB,YAAA;EAAjC,CAAgC,CAAhC;EACA,IAAMC,eAAe,GAAGF,WAAW,CAAnC,0BAAmC,CAAnC;EAEAG,SAAS,CAAC,YAAM;IACd,IAAA,eAAA,EAAqB;MACnBC,kBAAkB;MAClBP,QAAQ,CAACQ,gBAAgB,CAAzBR,KAAyB,CAAjB,CAARA;MACAA,QAAQ,CAACS,eAATT,EAAQ,CAARA;MACAA,QAAQ,CAACU,iBAATV,EAAQ,CAARA;MACAA,QAAQ,CAACW,SAAS,CAACT,YAAY,CAA/BF,EAAkB,CAAV,CAARA;IAEH;EARQ,CAAA,EAQN,CAAA,YAAA,EAAA,QAAA,EARHM,eAQG,CARM,CAATA;EAUA,OACE,IAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAEM,MAAM,CAAnB,SAAA;IAAA,QAAA,EACE,KAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,gBAAA;MAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEA,MAAM,CAAnB,QAAA;QAAA,QAAA,EAA+Bd,CAAC,CADlC,2BACkC;MAAhC,CAAA,CADF,EAEE,IAAA,CAAA,OAAA,EAAA;QACE,SAAS,EADX,IAAA;QAEE,IAAI,EAAEe,YAAY,GAAA,EAAA,GAFpB,EAAA;QAGE,IAAI,EAHN,MAAA;QAIE,KAAK,EARb;MAIM,CAAA,CAFF;IAAA,CAAA;EADF,CAAA,CADF;AAhBF,CAAA;;AA+BA,IAAMD,MAAM,GAAGE,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,cAAc,EADL,QAAA;IAETC,UAAU,EAFD,QAAA;IAGTC,KAAK,EAHI,MAAA;IAITC,IAAI,EALyB;EACpB,CADoB;EAO/BC,gBAAgB,EAAE;IAChBD,IAAI,EADY,CAAA;IAEhBH,cAAc,EAFE,QAAA;IAGhBC,UAAU,EAVmB;EAOb,CAPa;EAY/BI,QAAQ,EAAE;IACRC,UAAU,EADF,gBAAA;IAERC,SAAS,EAFD,QAAA;IAGRC,KAAK,EAHG,KAAA;IAIRC,QAAQ,EAAEA,QAAQ,CAJV,EAIU,CAJV;IAKRC,QAAQ,EAjBZ;EAYY;AAZqB,CAAlBZ,CAAf;AAqBA,eAAA,YAAA","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Spinner from 'react-native-spinkit';\nimport { useTranslation } from 'react-i18next';\nimport { setUserId, setPrimaryDevice } from '@/actions';\nimport { useSelector, useDispatch } from '@/store';\nimport { BLACK, ORANGE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { setRecoveryKeys } from '../RecoveryFlow/thunks/recoveryThunks';\nimport {\n  resetRecoveryData,\n  uploadCompletedByOtherSide,\n} from '../RecoveryFlow/recoveryDataSlice';\nimport { clearImportChannel } from './thunks/channelThunks';\n\n/* Component to track import restore */\nconst ImportScreen = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const recoveryData = useSelector((state: State) => state.recoveryData);\n  const importCompleted = useSelector(uploadCompletedByOtherSide);\n\n  useEffect(() => {\n    if (importCompleted) {\n      clearImportChannel();\n      dispatch(setPrimaryDevice(false));\n      dispatch(setRecoveryKeys());\n      dispatch(resetRecoveryData());\n      dispatch(setUserId(recoveryData.id));\n    }\n  }, [recoveryData, dispatch, importCompleted]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.waitingContainer}>\n        <Text style={styles.infoText}>{t('import.text.waitImporting')}</Text>\n        <Spinner\n          isVisible={true}\n          size={DEVICE_LARGE ? 64 : 44}\n          type=\"Wave\"\n          color={ORANGE}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    flex: 1,\n  },\n  waitingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    color: BLACK,\n    fontSize: fontSize[16],\n    maxWidth: '90%',\n  },\n});\n\nexport default ImportScreen;\n"]},"metadata":{},"sourceType":"module"}