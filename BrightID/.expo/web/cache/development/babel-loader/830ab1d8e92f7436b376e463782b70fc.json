{"ast":null,"code":"var accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityRole = _ref.accessibilityRole;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/modules/AccessibilityUtil/propsToAriaRole.js"],"names":["accessibilityRoleToWebRole","adjustable","button","header","image","imagebutton","keyboardkey","label","link","none","search","summary","text","propsToAriaRole","accessibilityRole","inferredRole"],"mappings":"AASA,IAAMA,0BAA0B,GAAG;EACjCC,UAAU,EADuB,QAAA;EAEjCC,MAAM,EAF2B,QAAA;EAGjCC,MAAM,EAH2B,SAAA;EAIjCC,KAAK,EAJ4B,KAAA;EAKjCC,WAAW,EALsB,IAAA;EAMjCC,WAAW,EANsB,IAAA;EAOjCC,KAAK,EAP4B,IAAA;EAQjCC,IAAI,EAR6B,MAAA;EASjCC,IAAI,EAT6B,cAAA;EAUjCC,MAAM,EAV2B,QAAA;EAWjCC,OAAO,EAX0B,QAAA;EAYjCC,IAAI,EAZN;AAAmC,CAAnC;;AAeA,IAAMC,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,IAAlBA,EAA4F;EAAvEC,IAAAA,iBAAuE,GAAA,IAAA,CAAvEA,iBAAAA;;EACzB,IAAA,iBAAA,EAAuB;IACrB,IAAMC,YAAY,GAAGf,0BAA0B,CAA/C,iBAA+C,CAA/C;;IACA,IAAIe,YAAY,KAAhB,IAAA,EAA2B;MAEzB,OAAOA,YAAY,IAAnB,iBAAA;IAEH;EACF;AARD,CAAA;;AAUA,eAAA,eAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nconst propsToAriaRole = ({ accessibilityRole }: { accessibilityRole?: string }): string | void => {\n  if (accessibilityRole) {\n    const inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;\n"]},"metadata":{},"sourceType":"module"}