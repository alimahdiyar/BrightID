{"ast":null,"code":"import * as React from 'react';\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function forwardRef(node) {\n    args.forEach(function (ref) {\n      if (ref == null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/modules/mergeRefs/index.js"],"names":["args","ref","console","String"],"mappings":"AASA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,eAAe,SAAA,SAAA,GAEuB;EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EADjCA,IACiC,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IADjCA,IACiC,CAAA,IAAA,CADjCA,GACiC,SAAA,CAAA,IAAA,CADjCA;EAEH;;EAAA,OAAO,SAAA,UAAA,CAAA,IAAA,EAA8C;IACnDA,IAAI,CAAJA,OAAAA,CAAa,UAAA,GAAA,EAAgC;MAC3C,IAAIC,GAAG,IAAP,IAAA,EAAiB;QACf;MAEF;;MAAA,IAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;QAC7BA,GAAG,CAAHA,IAAG,CAAHA;QACA;MAEF;;MAAA,IAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;QAC3BA,GAAG,CAAHA,OAAAA,GAAAA,IAAAA;QACA;MAEFC;;MAAAA,OAAO,CAAPA,KAAAA,CAAAA,kFACkFC,MAAM,CADxFD,GACwF,CADxFA;IAZFF,CAAAA;EADF,CAAA;AAoBD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nimport * as React from 'react';\n\nexport default function mergeRefs(\n  ...args: $ReadOnlyArray<React.ElementRef<any>>\n): (node: HTMLElement | null) => void {\n  return function forwardRef(node: HTMLElement | null) {\n    args.forEach((ref: React.ElementRef<any>) => {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n      console.error(\n        `mergeRefs cannot handle Refs of type boolean, number or string, received ref ${String(\n          ref\n        )}`\n      );\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}