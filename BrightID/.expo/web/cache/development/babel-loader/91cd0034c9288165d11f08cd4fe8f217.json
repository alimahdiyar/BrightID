{"ast":null,"code":"import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet';\nimport AppRoutes from \"./routes\";\nimport { store, persistor } from \"./store/index\";\nimport { navigationRef } from \"./NavigationService\";\nimport InitialLoading from \"./components/Helpers/InitialLoadingScreen\";\nimport { NotificationBanner } from \"./components/Helpers/NotificationBanner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var App = function App() {\n  var linking = {\n    prefixes: ['brightid://', 'https://app.brightid.org'],\n    config: {\n      screens: {\n        App: {\n          screens: {\n            Apps: {\n              path: 'link-verification/:baseUrl?/:context/:contextId/',\n              exact: true\n            },\n            ScanCode: {\n              path: 'connection-code/:qrcode',\n              exact: true\n            }\n          }\n        }\n      }\n    }\n  };\n  console.log('RENDERING ENTIRE APP');\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PersistGate, {\n      loading: _jsx(InitialLoading, {\n        app: true\n      }),\n      persistor: persistor,\n      children: _jsx(ActionSheetProvider, {\n        children: _jsxs(SafeAreaProvider, {\n          children: [_jsx(NotificationBanner, {}), _jsx(NavigationContainer, {\n            linking: linking,\n            ref: navigationRef,\n            fallback: _jsx(InitialLoading, {\n              app: false\n            }),\n            children: _jsx(AppRoutes, {})\n          })]\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","Provider","PersistGate","SafeAreaProvider","NavigationContainer","ActionSheetProvider","AppRoutes","store","persistor","navigationRef","InitialLoading","NotificationBanner","App","linking","prefixes","config","screens","Apps","path","exact","ScanCode","console","log"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport {\n  getStateFromPath,\n  NavigationContainer,\n} from '@react-navigation/native';\nimport { Linking } from 'react-native';\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet';\nimport AppRoutes from './routes';\nimport { store, persistor } from './store/index';\nimport { navigationRef } from './NavigationService';\nimport InitialLoading from './components/Helpers/InitialLoadingScreen';\nimport { NotificationBanner } from './components/Helpers/NotificationBanner';\n\n/**\n * Central part of the application\n * react-navigation is used for routing\n * read docs here: https://reactnavigation.org/\n */\n// NOTE: BOOTSTRAP happens inside of LoadingScreen\nexport const App = () => {\n  // setup deep linking\n  const linking = {\n    prefixes: ['brightid://', 'https://app.brightid.org'],\n    config: {\n      screens: {\n        App: {\n          screens: {\n            Apps: {\n              path: 'link-verification/:baseUrl?/:context/:contextId/',\n              exact: true,\n            },\n            ScanCode: {\n              path: 'connection-code/:qrcode',\n              exact: true,\n            },\n          },\n        },\n      },\n    },\n    // // Add custom subscribe method to prevent crashes when url is undefined\n    // subscribe(listener) {\n    //   // default deep link handling\n    //   const onReceiveURL = ({ url }: { url: string }) => {\n    //     if (url) {\n    //       console.log(\n    //         `Custom subscribe got url ${url}. Calling listener callback.`,\n    //       );\n    //       listener(url);\n    //     } else {\n    //       console.log(`Custom subscribe got undefined url. Ignoring event.`);\n    //     }\n    //   };\n    //\n    //   // Listen to incoming links from deep linking\n    //   const emitterSubscription = Linking.addEventListener('url', onReceiveURL);\n    //   return () => {\n    //     // Clean up the event listeners\n    //     emitterSubscription.remove();\n    //   };\n    // },\n  };\n\n  console.log('RENDERING ENTIRE APP');\n\n  return (\n    <Provider store={store}>\n      <PersistGate\n        loading={<InitialLoading app={true} />}\n        persistor={persistor}\n      >\n        <ActionSheetProvider>\n          <SafeAreaProvider>\n            <NotificationBanner />\n            <NavigationContainer\n              linking={linking}\n              ref={navigationRef}\n              fallback={<InitialLoading app={false} />}\n            >\n              <AppRoutes />\n            </NavigationContainer>\n          </SafeAreaProvider>\n        </ActionSheetProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAEEC,mBAFF,QAGO,0BAHP;AAKA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAOC,SAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB;AACA,SAASC,aAAT;AACA,OAAOC,cAAP;AACA,SAASC,kBAAT;;;AAQA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAEvB,IAAMC,OAAO,GAAG;IACdC,QAAQ,EAAE,CAAC,aAAD,EAAgB,0BAAhB,CADI;IAEdC,MAAM,EAAE;MACNC,OAAO,EAAE;QACPJ,GAAG,EAAE;UACHI,OAAO,EAAE;YACPC,IAAI,EAAE;cACJC,IAAI,EAAE,kDADF;cAEJC,KAAK,EAAE;YAFH,CADC;YAKPC,QAAQ,EAAE;cACRF,IAAI,EAAE,yBADE;cAERC,KAAK,EAAE;YAFC;UALH;QADN;MADE;IADH;EAFM,CAAhB;EAyCAE,OAAO,CAACC,GAAR,CAAY,sBAAZ;EAEA,OACE,KAAC,QAAD;IAAU,KAAK,EAAEf,KAAjB;IAAA,UACE,KAAC,WAAD;MACE,OAAO,EAAE,KAAC,cAAD;QAAgB,GAAG,EAAE;MAArB,EADX;MAEE,SAAS,EAAEC,SAFb;MAAA,UAIE,KAAC,mBAAD;QAAA,UACE,MAAC,gBAAD;UAAA,WACE,KAAC,kBAAD,KADF,EAEE,KAAC,mBAAD;YACE,OAAO,EAAEK,OADX;YAEE,GAAG,EAAEJ,aAFP;YAGE,QAAQ,EAAE,KAAC,cAAD;cAAgB,GAAG,EAAE;YAArB,EAHZ;YAAA,UAKE,KAAC,SAAD;UALF,EAFF;QAAA;MADF;IAJF;EADF,EADF;AAqBD,CAlEM;AAoEP,eAAeG,GAAf"},"metadata":{},"sourceType":"module"}