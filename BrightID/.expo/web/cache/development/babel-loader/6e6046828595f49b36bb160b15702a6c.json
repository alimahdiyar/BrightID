{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"style\"],\n    _excluded2 = [\"children\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Rationale = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  buttonPositive: PropTypes.string,\n  buttonNegative: PropTypes.string,\n  buttonNeutral: PropTypes.string\n});\n\nvar requestPermissions = function _callee(captureAudio, CameraManager, androidCameraPermissionOptions, androidRecordAudioPermissionOptions) {\n  var hasCameraPermissions, hasRecordAudioPermissions, cameraPermissionResult, audioPermissionResult;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          hasCameraPermissions = false;\n          hasRecordAudioPermissions = false;\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(CameraManager.checkVideoAuthorizationStatus());\n\n        case 5:\n          hasCameraPermissions = _context.sent;\n          _context.next = 19;\n          break;\n\n        case 8:\n          if (!(Platform.OS === 'android')) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.CAMERA, androidCameraPermissionOptions));\n\n        case 11:\n          cameraPermissionResult = _context.sent;\n\n          if (typeof cameraPermissionResult === 'boolean') {\n            hasCameraPermissions = cameraPermissionResult;\n          } else {\n            hasCameraPermissions = cameraPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n          }\n\n          _context.next = 19;\n          break;\n\n        case 15:\n          if (!(Platform.OS === 'windows')) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(CameraManager.checkMediaCapturePermission());\n\n        case 18:\n          hasCameraPermissions = _context.sent;\n\n        case 19:\n          if (!captureAudio) {\n            _context.next = 43;\n            break;\n          }\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 23;\n          return _regeneratorRuntime.awrap(CameraManager.checkRecordAudioAuthorizationStatus());\n\n        case 23:\n          hasRecordAudioPermissions = _context.sent;\n          _context.next = 43;\n          break;\n\n        case 26:\n          if (!(Platform.OS === 'android')) {\n            _context.next = 39;\n            break;\n          }\n\n          _context.next = 29;\n          return _regeneratorRuntime.awrap(CameraManager.checkIfRecordAudioPermissionsAreDefined());\n\n        case 29:\n          if (!_context.sent) {\n            _context.next = 36;\n            break;\n          }\n\n          _context.next = 32;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO, androidRecordAudioPermissionOptions));\n\n        case 32:\n          audioPermissionResult = _context.sent;\n\n          if (typeof audioPermissionResult === 'boolean') {\n            hasRecordAudioPermissions = audioPermissionResult;\n          } else {\n            hasRecordAudioPermissions = audioPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n          }\n\n          _context.next = 37;\n          break;\n\n        case 36:\n          if (__DEV__) {\n            console.warn(\"The 'captureAudio' property set on RNCamera instance but 'RECORD_AUDIO' permissions not defined in the applications 'AndroidManifest.xml'. \" + \"If you want to record audio you will have to add '<uses-permission android:name=\\\"android.permission.RECORD_AUDIO\\\"/>' to your 'AndroidManifest.xml'. \" + \"Otherwise you should set the 'captureAudio' property on the component instance to 'false'.\");\n          }\n\n        case 37:\n          _context.next = 43;\n          break;\n\n        case 39:\n          if (!(Platform.OS === 'windows')) {\n            _context.next = 43;\n            break;\n          }\n\n          _context.next = 42;\n          return _regeneratorRuntime.awrap(CameraManager.checkMediaCapturePermission());\n\n        case 42:\n          hasRecordAudioPermissions = _context.sent;\n\n        case 43:\n          return _context.abrupt(\"return\", {\n            hasCameraPermissions: hasCameraPermissions,\n            hasRecordAudioPermissions: hasRecordAudioPermissions\n          });\n\n        case 44:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = StyleSheet.create({\n  authorizationContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  notAuthorizedText: {\n    textAlign: 'center',\n    fontSize: 16\n  }\n});\nvar CameraStatus = {\n  READY: 'READY',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n};\nvar RecordAudioPermissionStatusEnum = {\n  AUTHORIZED: 'AUTHORIZED',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n};\nvar CameraManager = NativeModules.RNCameraManager || NativeModules.RNCameraModule || {\n  stubbed: true,\n  Type: {\n    back: 1\n  },\n  AutoFocus: {\n    on: 1\n  },\n  FlashMode: {\n    off: 1\n  },\n  WhiteBalance: {},\n  BarCodeType: {},\n  FaceDetection: {\n    fast: 1,\n    Mode: {},\n    Landmarks: {\n      none: 0\n    },\n    Classifications: {\n      none: 0\n    }\n  },\n  GoogleVisionBarcodeDetection: {\n    BarcodeType: 0,\n    BarcodeMode: 0\n  }\n};\nvar EventThrottleMs = 500;\n\nvar mapValues = function mapValues(input, mapper) {\n  var result = {};\n  Object.entries(input).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    result[key] = mapper(value, key);\n  });\n  return result;\n};\n\nvar Camera = function (_React$Component) {\n  _inherits(Camera, _React$Component);\n\n  var _super = _createSuper(Camera);\n\n  function Camera(props) {\n    var _this;\n\n    _classCallCheck(this, Camera);\n\n    _this = _super.call(this, props);\n\n    _this.getSupportedPreviewFpsRange = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.getSupportedPreviewFpsRange(_this._cameraHandle));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              throw new Error('getSupportedPreviewFpsRange is not supported on iOS');\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getAvailablePictureSizes = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(CameraManager.getAvailablePictureSizes(_this.props.ratio, _this._cameraHandle));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onMountError = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      if (_this.props.onMountError) {\n        _this.props.onMountError(nativeEvent);\n      }\n    };\n\n    _this._onCameraReady = function () {\n      if (_this.props.onCameraReady) {\n        _this.props.onCameraReady();\n      }\n    };\n\n    _this._onAudioInterrupted = function () {\n      if (_this.props.onAudioInterrupted) {\n        _this.props.onAudioInterrupted();\n      }\n    };\n\n    _this._onTouch = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n\n      if (_this.props.onTap && !nativeEvent.isDoubleTap) {\n        _this.props.onTap(nativeEvent.touchOrigin);\n      }\n\n      if (_this.props.onDoubleTap && nativeEvent.isDoubleTap) {\n        _this.props.onDoubleTap(nativeEvent.touchOrigin);\n      }\n    };\n\n    _this._onAudioConnected = function () {\n      if (_this.props.onAudioConnected) {\n        _this.props.onAudioConnected();\n      }\n    };\n\n    _this._onStatusChange = function () {\n      if (_this.props.onStatusChange) {\n        _this.props.onStatusChange({\n          cameraStatus: _this.getStatus(),\n          recordAudioPermissionStatus: _this.state.recordAudioPermissionStatus\n        });\n      }\n    };\n\n    _this._onPictureSaved = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n\n      if (_this.props.onPictureSaved) {\n        _this.props.onPictureSaved(nativeEvent);\n      }\n    };\n\n    _this._onObjectDetected = function (callback) {\n      return function (_ref6) {\n        var nativeEvent = _ref6.nativeEvent;\n        var type = nativeEvent.type;\n\n        if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date() - _this._lastEventsTimes[type] < EventThrottleMs) {\n          return;\n        }\n\n        if (callback) {\n          callback(nativeEvent);\n          _this._lastEventsTimes[type] = new Date();\n          _this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n    };\n\n    _this._onSubjectAreaChanged = function (e) {\n      if (_this.props.onSubjectAreaChanged) {\n        _this.props.onSubjectAreaChanged(e);\n      }\n    };\n\n    _this._setReference = function (ref) {\n      if (ref) {\n        _this._cameraRef = ref;\n        _this._cameraHandle = findNodeHandle(ref);\n      } else {\n        _this._cameraRef = null;\n        _this._cameraHandle = null;\n      }\n    };\n\n    _this.getStatus = function () {\n      var _this$state = _this.state,\n          isAuthorized = _this$state.isAuthorized,\n          isAuthorizationChecked = _this$state.isAuthorizationChecked;\n\n      if (isAuthorizationChecked === false) {\n        return CameraStatus.PENDING_AUTHORIZATION;\n      }\n\n      return isAuthorized ? CameraStatus.READY : CameraStatus.NOT_AUTHORIZED;\n    };\n\n    _this.hasFaCC = function () {\n      return typeof _this.props.children === 'function';\n    };\n\n    _this.renderChildren = function () {\n      if (_this.hasFaCC()) {\n        return _this.props.children({\n          camera: _assertThisInitialized(_this),\n          status: _this.getStatus(),\n          recordAudioPermissionStatus: _this.state.recordAudioPermissionStatus\n        });\n      }\n\n      return _this.props.children;\n    };\n\n    _this._lastEvents = {};\n    _this._lastEventsTimes = {};\n    _this._isMounted = true;\n    _this.state = {\n      isAuthorized: false,\n      isAuthorizationChecked: false,\n      recordAudioPermissionStatus: RecordAudioPermissionStatusEnum.PENDING_AUTHORIZATION\n    };\n    return _this;\n  }\n\n  _createClass(Camera, [{\n    key: \"takePictureAsync\",\n    value: function takePictureAsync(options) {\n      var _options, orientation;\n\n      return _regeneratorRuntime.async(function takePictureAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!options) {\n                options = {};\n              }\n\n              if (!options.quality) {\n                options.quality = 1;\n              }\n\n              if (options.orientation) {\n                if (typeof options.orientation !== 'number') {\n                  _options = options, orientation = _options.orientation;\n                  options.orientation = CameraManager.Orientation[orientation];\n\n                  if (__DEV__) {\n                    if (typeof options.orientation !== 'number') {\n                      console.warn(\"Orientation '\" + orientation + \"' is invalid.\");\n                    }\n                  }\n                }\n              }\n\n              if (options.pauseAfterCapture === undefined) {\n                options.pauseAfterCapture = false;\n              }\n\n              if (this._cameraHandle) {\n                _context4.next = 6;\n                break;\n              }\n\n              throw 'Camera handle cannot be null';\n\n            case 6:\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(CameraManager.takePicture(options, this._cameraHandle));\n\n            case 8:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSupportedRatiosAsync\",\n    value: function getSupportedRatiosAsync() {\n      return _regeneratorRuntime.async(function getSupportedRatiosAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context5.next = 6;\n                break;\n              }\n\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.getSupportedRatios(this._cameraHandle));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              throw new Error('Ratio is not supported on iOS');\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getCameraIdsAsync\",\n    value: function getCameraIdsAsync() {\n      return _regeneratorRuntime.async(function getCameraIdsAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context6.next = 6;\n                break;\n              }\n\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.getCameraIds(this._cameraHandle));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.next = 8;\n              return _regeneratorRuntime.awrap(CameraManager.getCameraIds());\n\n            case 8:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"recordAsync\",\n    value: function recordAsync(options) {\n      var _options2, orientation, recordAudioPermissionStatus, captureAudio;\n\n      return _regeneratorRuntime.async(function recordAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!options || typeof options !== 'object') {\n                options = {};\n              } else if (typeof options.quality === 'string') {\n                options.quality = Camera.Constants.VideoQuality[options.quality];\n              }\n\n              if (options.orientation) {\n                if (typeof options.orientation !== 'number') {\n                  _options2 = options, orientation = _options2.orientation;\n                  options.orientation = CameraManager.Orientation[orientation];\n\n                  if (__DEV__) {\n                    if (typeof options.orientation !== 'number') {\n                      console.warn(\"Orientation '\" + orientation + \"' is invalid.\");\n                    }\n                  }\n                }\n              }\n\n              if (__DEV__) {\n                if (options.videoBitrate && typeof options.videoBitrate !== 'number') {\n                  console.warn('Video Bitrate should be a positive integer');\n                }\n              }\n\n              recordAudioPermissionStatus = this.state.recordAudioPermissionStatus;\n              captureAudio = this.props.captureAudio;\n\n              if (!captureAudio || recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED) {\n                options.mute = true;\n              }\n\n              if (__DEV__) {\n                if ((!options.mute || captureAudio) && recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED) {\n                  console.warn('Recording with audio not possible. Permissions are missing.');\n                }\n              }\n\n              _context7.next = 9;\n              return _regeneratorRuntime.awrap(CameraManager.record(options, this._cameraHandle));\n\n            case 9:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      CameraManager.stopRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pauseRecording\",\n    value: function pauseRecording() {\n      CameraManager.pauseRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"resumeRecording\",\n    value: function resumeRecording() {\n      CameraManager.resumeRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pausePreview\",\n    value: function pausePreview() {\n      CameraManager.pausePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"isRecording\",\n    value: function isRecording() {\n      return CameraManager.isRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"resumePreview\",\n    value: function resumePreview() {\n      CameraManager.resumePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"arePermissionsGranted\",\n    value: function arePermissionsGranted() {\n      var _this$props, permissionDialogTitle, permissionDialogMessage, androidCameraPermissionOptions, androidRecordAudioPermissionOptions, cameraPermissions, audioPermissions, _await$requestPermiss, hasCameraPermissions, hasRecordAudioPermissions, recordAudioPermissionStatus;\n\n      return _regeneratorRuntime.async(function arePermissionsGranted$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this$props = this.props, permissionDialogTitle = _this$props.permissionDialogTitle, permissionDialogMessage = _this$props.permissionDialogMessage, androidCameraPermissionOptions = _this$props.androidCameraPermissionOptions, androidRecordAudioPermissionOptions = _this$props.androidRecordAudioPermissionOptions;\n              cameraPermissions = androidCameraPermissionOptions;\n              audioPermissions = androidRecordAudioPermissionOptions;\n\n              if (permissionDialogTitle || permissionDialogMessage) {\n                console.warn('permissionDialogTitle and permissionDialogMessage are deprecated. Please use androidCameraPermissionOptions instead.');\n                cameraPermissions = _objectSpread(_objectSpread({}, cameraPermissions), {}, {\n                  title: permissionDialogTitle,\n                  message: permissionDialogMessage\n                });\n                audioPermissions = _objectSpread(_objectSpread({}, audioPermissions), {}, {\n                  title: permissionDialogTitle,\n                  message: permissionDialogMessage\n                });\n              }\n\n              _context8.next = 6;\n              return _regeneratorRuntime.awrap(requestPermissions(this.props.captureAudio, CameraManager, cameraPermissions, audioPermissions));\n\n            case 6:\n              _await$requestPermiss = _context8.sent;\n              hasCameraPermissions = _await$requestPermiss.hasCameraPermissions;\n              hasRecordAudioPermissions = _await$requestPermiss.hasRecordAudioPermissions;\n              recordAudioPermissionStatus = hasRecordAudioPermissions ? RecordAudioPermissionStatusEnum.AUTHORIZED : RecordAudioPermissionStatusEnum.NOT_AUTHORIZED;\n              return _context8.abrupt(\"return\", {\n                hasCameraPermissions: hasCameraPermissions,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              });\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"refreshAuthorizationStatus\",\n    value: function refreshAuthorizationStatus() {\n      var _await$this$arePermis, hasCameraPermissions, recordAudioPermissionStatus;\n\n      return _regeneratorRuntime.async(function refreshAuthorizationStatus$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regeneratorRuntime.awrap(this.arePermissionsGranted());\n\n            case 2:\n              _await$this$arePermis = _context9.sent;\n              hasCameraPermissions = _await$this$arePermis.hasCameraPermissions;\n              recordAudioPermissionStatus = _await$this$arePermis.recordAudioPermissionStatus;\n\n              if (!(this._isMounted === false)) {\n                _context9.next = 7;\n                break;\n              }\n\n              return _context9.abrupt(\"return\");\n\n            case 7:\n              this.setState({\n                isAuthorized: hasCameraPermissions,\n                isAuthorizationChecked: true,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              });\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$this$arePermis2, hasCameraPermissions, recordAudioPermissionStatus;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(this.arePermissionsGranted());\n\n            case 2:\n              _await$this$arePermis2 = _context10.sent;\n              hasCameraPermissions = _await$this$arePermis2.hasCameraPermissions;\n              recordAudioPermissionStatus = _await$this$arePermis2.recordAudioPermissionStatus;\n\n              if (!(this._isMounted === false)) {\n                _context10.next = 7;\n                break;\n              }\n\n              return _context10.abrupt(\"return\");\n\n            case 7:\n              this.setState({\n                isAuthorized: hasCameraPermissions,\n                isAuthorizationChecked: true,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              }, this._onStatusChange);\n\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$_convertNativeP = this._convertNativeProps(this.props),\n          style = _this$_convertNativeP.style,\n          nativeProps = _objectWithoutProperties(_this$_convertNativeP, _excluded);\n\n      if (this.state.isAuthorized || this.hasFaCC()) {\n        return _jsxs(View, {\n          style: style,\n          children: [_jsx(RNCamera, _objectSpread(_objectSpread({}, nativeProps), {}, {\n            style: StyleSheet.absoluteFill,\n            ref: this._setReference,\n            onMountError: this._onMountError,\n            onCameraReady: this._onObjectDetected(this._onCameraReady),\n            onAudioInterrupted: this._onAudioInterrupted,\n            onAudioConnected: this._onAudioConnected,\n            onGoogleVisionBarcodesDetected: this._onObjectDetected(this.props.onGoogleVisionBarcodesDetected),\n            onBarCodeRead: this._onObjectDetected(this.props.onBarCodeRead),\n            onTouch: this._onTouch,\n            onFacesDetected: this._onObjectDetected(this.props.onFacesDetected),\n            onTextRecognized: this._onObjectDetected(this.props.onTextRecognized),\n            onPictureSaved: this._onPictureSaved,\n            onSubjectAreaChanged: this._onSubjectAreaChanged\n          })), this.renderChildren()]\n        });\n      } else if (!this.state.isAuthorizationChecked) {\n        return this.props.pendingAuthorizationView;\n      } else {\n        return this.props.notAuthorizedView;\n      }\n    }\n  }, {\n    key: \"_convertNativeProps\",\n    value: function _convertNativeProps(_ref7) {\n      var children = _ref7.children,\n          props = _objectWithoutProperties(_ref7, _excluded2);\n\n      var newProps = mapValues(props, this._convertProp);\n\n      if (props.onBarCodeRead) {\n        newProps.barCodeScannerEnabled = true;\n      }\n\n      if (props.onGoogleVisionBarcodesDetected) {\n        newProps.googleVisionBarcodeDetectorEnabled = true;\n      }\n\n      if (props.onFacesDetected) {\n        newProps.faceDetectorEnabled = true;\n      }\n\n      if (props.onTap || props.onDoubleTap) {\n        newProps.touchDetectorEnabled = true;\n      }\n\n      if (props.onTextRecognized) {\n        newProps.textRecognizerEnabled = true;\n      }\n\n      if (Platform.OS === 'ios') {\n        delete newProps.ratio;\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"_convertProp\",\n    value: function _convertProp(value, key) {\n      if (typeof value === 'string' && Camera.ConversionTables[key]) {\n        return Camera.ConversionTables[key][value];\n      }\n\n      return value;\n    }\n  }], [{\n    key: \"checkIfVideoIsValid\",\n    value: function checkIfVideoIsValid(path) {\n      return _regeneratorRuntime.async(function checkIfVideoIsValid$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context11.next = 6;\n                break;\n              }\n\n              _context11.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.checkIfVideoIsValid(path));\n\n            case 3:\n              return _context11.abrupt(\"return\", _context11.sent);\n\n            case 6:\n              return _context11.abrupt(\"return\", true);\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Camera;\n}(React.Component);\n\nCamera.Constants = {\n  Type: CameraManager.Type,\n  FlashMode: CameraManager.FlashMode,\n  AutoFocus: CameraManager.AutoFocus,\n  WhiteBalance: CameraManager.WhiteBalance,\n  VideoQuality: CameraManager.VideoQuality,\n  ImageType: CameraManager.ImageType,\n  VideoCodec: CameraManager.VideoCodec,\n  BarCodeType: CameraManager.BarCodeType,\n  GoogleVisionBarcodeDetection: CameraManager.GoogleVisionBarcodeDetection,\n  FaceDetection: CameraManager.FaceDetection,\n  CameraStatus: CameraStatus,\n  CaptureTarget: CameraManager.CaptureTarget,\n  RecordAudioPermissionStatus: RecordAudioPermissionStatusEnum,\n  VideoStabilization: CameraManager.VideoStabilization,\n  Orientation: {\n    auto: 'auto',\n    landscapeLeft: 'landscapeLeft',\n    landscapeRight: 'landscapeRight',\n    portrait: 'portrait',\n    portraitUpsideDown: 'portraitUpsideDown'\n  }\n};\nCamera.ConversionTables = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  exposure: CameraManager.Exposure,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n  faceDetectionMode: (CameraManager.FaceDetection || {}).Mode,\n  faceDetectionLandmarks: (CameraManager.FaceDetection || {}).Landmarks,\n  faceDetectionClassifications: (CameraManager.FaceDetection || {}).Classifications,\n  googleVisionBarcodeType: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType,\n  googleVisionBarcodeMode: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode,\n  videoStabilizationMode: CameraManager.VideoStabilization || {}\n};\nCamera.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  zoom: PropTypes.number,\n  useNativeZoom: PropTypes.bool,\n  maxZoom: PropTypes.number,\n  ratio: PropTypes.string,\n  focusDepth: PropTypes.number,\n  onMountError: PropTypes.func,\n  onCameraReady: PropTypes.func,\n  onAudioInterrupted: PropTypes.func,\n  onAudioConnected: PropTypes.func,\n  onStatusChange: PropTypes.func,\n  onBarCodeRead: PropTypes.func,\n  onPictureTaken: PropTypes.func,\n  onPictureSaved: PropTypes.func,\n  onRecordingStart: PropTypes.func,\n  onRecordingEnd: PropTypes.func,\n  onTap: PropTypes.func,\n  onDoubleTap: PropTypes.func,\n  onGoogleVisionBarcodesDetected: PropTypes.func,\n  onFacesDetected: PropTypes.func,\n  onTextRecognized: PropTypes.func,\n  onSubjectAreaChanged: PropTypes.func,\n  trackingEnabled: PropTypes.bool,\n  faceDetectionMode: PropTypes.number,\n  faceDetectionLandmarks: PropTypes.number,\n  faceDetectionClassifications: PropTypes.number,\n  barCodeTypes: PropTypes.arrayOf(PropTypes.string),\n  googleVisionBarcodeType: PropTypes.number,\n  googleVisionBarcodeMode: PropTypes.number,\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  cameraId: PropTypes.string,\n  flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  exposure: PropTypes.number,\n  whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n    temperature: PropTypes.number,\n    tint: PropTypes.number,\n    redGainOffset: PropTypes.number,\n    greenGainOffset: PropTypes.number,\n    blueGainOffset: PropTypes.number\n  })]),\n  autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  autoFocusPointOfInterest: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  permissionDialogTitle: PropTypes.string,\n  permissionDialogMessage: PropTypes.string,\n  androidCameraPermissionOptions: Rationale,\n  androidRecordAudioPermissionOptions: Rationale,\n  notAuthorizedView: PropTypes.element,\n  pendingAuthorizationView: PropTypes.element,\n  captureAudio: PropTypes.bool,\n  keepAudioSession: PropTypes.bool,\n  useCamera2Api: PropTypes.bool,\n  playSoundOnCapture: PropTypes.bool,\n  playSoundOnRecord: PropTypes.bool,\n  videoStabilizationMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  pictureSize: PropTypes.string,\n  mirrorVideo: PropTypes.bool,\n  rectOfInterest: PropTypes.any,\n  defaultVideoQuality: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\nCamera.defaultProps = {\n  zoom: 0,\n  useNativeZoom: false,\n  maxZoom: 0,\n  ratio: '4:3',\n  focusDepth: 0,\n  type: CameraManager.Type.back,\n  cameraId: '',\n  autoFocus: CameraManager.AutoFocus.on,\n  flashMode: CameraManager.FlashMode.off,\n  exposure: -1,\n  whiteBalance: CameraManager.WhiteBalance.auto,\n  faceDetectionMode: (CameraManager.FaceDetection || {}).fast,\n  barCodeTypes: Object.values(CameraManager.BarCodeType),\n  googleVisionBarcodeType: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType || {}).None,\n  googleVisionBarcodeMode: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode || {}).NORMAL,\n  faceDetectionLandmarks: ((CameraManager.FaceDetection || {}).Landmarks || {}).none,\n  faceDetectionClassifications: ((CameraManager.FaceDetection || {}).Classifications || {}).none,\n  permissionDialogTitle: '',\n  permissionDialogMessage: '',\n  androidCameraPermissionOptions: null,\n  androidRecordAudioPermissionOptions: null,\n  notAuthorizedView: _jsx(View, {\n    style: styles.authorizationContainer,\n    children: _jsx(Text, {\n      style: styles.notAuthorizedText,\n      children: \"Camera not authorized\"\n    })\n  }),\n  pendingAuthorizationView: _jsx(View, {\n    style: styles.authorizationContainer,\n    children: _jsx(ActivityIndicator, {\n      size: \"small\"\n    })\n  }),\n  captureAudio: true,\n  keepAudioSession: false,\n  useCamera2Api: false,\n  playSoundOnCapture: false,\n  playSoundOnRecord: false,\n  pictureSize: 'None',\n  videoStabilizationMode: 0,\n  mirrorVideo: false\n};\nexport { Camera as default };\nexport var Constants = Camera.Constants;\nexport function hasTorch() {\n  return CameraManager.hasTorch();\n}\nvar RNCamera = requireNativeComponent('RNCamera', Camera, {\n  nativeOnly: {\n    accessibilityComponentType: true,\n    accessibilityLabel: true,\n    accessibilityLiveRegion: true,\n    barCodeScannerEnabled: true,\n    touchDetectorEnabled: true,\n    googleVisionBarcodeDetectorEnabled: true,\n    faceDetectorEnabled: true,\n    textRecognizerEnabled: true,\n    importantForAccessibility: true,\n    onBarCodeRead: true,\n    onGoogleVisionBarcodesDetected: true,\n    onCameraReady: true,\n    onAudioInterrupted: true,\n    onAudioConnected: true,\n    onPictureSaved: true,\n    onFaceDetected: true,\n    onTouch: true,\n    onLayout: true,\n    onMountError: true,\n    onSubjectAreaChanged: true,\n    renderToHardwareTextureAndroid: true,\n    testID: true\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-camera/src/RNCamera.js"],"names":["ViewPropTypes","requireNativeComponent","Rationale","PropTypes","title","message","buttonPositive","buttonNegative","buttonNeutral","requestPermissions","hasCameraPermissions","hasRecordAudioPermissions","Platform","CameraManager","cameraPermissionResult","PermissionsAndroid","audioPermissionResult","console","styles","StyleSheet","authorizationContainer","flex","alignItems","justifyContent","notAuthorizedText","textAlign","fontSize","CameraStatus","READY","PENDING_AUTHORIZATION","NOT_AUTHORIZED","RecordAudioPermissionStatusEnum","AUTHORIZED","NativeModules","stubbed","Type","back","AutoFocus","on","FlashMode","off","WhiteBalance","BarCodeType","FaceDetection","fast","Mode","Landmarks","none","Classifications","GoogleVisionBarcodeDetection","BarcodeType","BarcodeMode","EventThrottleMs","mapValues","result","Object","key","value","mapper","Camera","React","Component","Constants","VideoQuality","ImageType","VideoCodec","CaptureTarget","RecordAudioPermissionStatus","VideoStabilization","Orientation","auto","landscapeLeft","landscapeRight","portrait","portraitUpsideDown","ConversionTables","type","flashMode","exposure","autoFocus","whiteBalance","faceDetectionMode","faceDetectionLandmarks","faceDetectionClassifications","googleVisionBarcodeType","googleVisionBarcodeMode","videoStabilizationMode","propTypes","zoom","number","useNativeZoom","bool","maxZoom","ratio","string","focusDepth","onMountError","func","onCameraReady","onAudioInterrupted","onAudioConnected","onStatusChange","onBarCodeRead","onPictureTaken","onPictureSaved","onRecordingStart","onRecordingEnd","onTap","onDoubleTap","onGoogleVisionBarcodesDetected","onFacesDetected","onTextRecognized","onSubjectAreaChanged","trackingEnabled","barCodeTypes","cameraId","temperature","tint","redGainOffset","greenGainOffset","blueGainOffset","autoFocusPointOfInterest","x","y","permissionDialogTitle","permissionDialogMessage","androidCameraPermissionOptions","androidRecordAudioPermissionOptions","notAuthorizedView","element","pendingAuthorizationView","captureAudio","keepAudioSession","useCamera2Api","playSoundOnCapture","playSoundOnRecord","pictureSize","mirrorVideo","rectOfInterest","any","defaultVideoQuality","defaultProps","isAuthorized","isAuthorizationChecked","recordAudioPermissionStatus","options","orientation","nativeEvent","cameraStatus","JSON","callback","findNodeHandle","cameraPermissions","audioPermissions","camera","status","style","nativeProps","children","props","newProps","RNCamera","nativeOnly","accessibilityComponentType","accessibilityLabel","accessibilityLiveRegion","barCodeScannerEnabled","touchDetectorEnabled","googleVisionBarcodeDetectorEnabled","faceDetectorEnabled","textRecognizerEnabled","importantForAccessibility","onFaceDetected","onTouch","onLayout","renderToHardwareTextureAndroid","testID"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  findNodeHandle,\n  Platform,\n  NativeModules,\n  ViewPropTypes,\n  requireNativeComponent,\n  View,\n  ActivityIndicator,\n  Text,\n  StyleSheet,\n  PermissionsAndroid,\n} from 'react-native';\n\nimport type { FaceFeature } from './FaceDetector';\n\nconst Rationale = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  buttonPositive: PropTypes.string,\n  buttonNegative: PropTypes.string,\n  buttonNeutral: PropTypes.string,\n});\n\nconst requestPermissions = async (\n  captureAudio: boolean,\n  CameraManager: any,\n  androidCameraPermissionOptions: Rationale | null,\n  androidRecordAudioPermissionOptions: Rationale | null,\n): Promise<{ hasCameraPermissions: boolean, hasRecordAudioPermissions: boolean }> => {\n  let hasCameraPermissions = false;\n  let hasRecordAudioPermissions = false;\n\n  if (Platform.OS === 'ios') {\n    hasCameraPermissions = await CameraManager.checkVideoAuthorizationStatus();\n  } else if (Platform.OS === 'android') {\n    const cameraPermissionResult = await PermissionsAndroid.request(\n      PermissionsAndroid.PERMISSIONS.CAMERA,\n      androidCameraPermissionOptions,\n    );\n    if (typeof cameraPermissionResult === 'boolean') {\n      hasCameraPermissions = cameraPermissionResult;\n    } else {\n      hasCameraPermissions = cameraPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n    }\n  } else if (Platform.OS === 'windows') {\n    hasCameraPermissions = await CameraManager.checkMediaCapturePermission();\n  }\n\n  if (captureAudio) {\n    if (Platform.OS === 'ios') {\n      hasRecordAudioPermissions = await CameraManager.checkRecordAudioAuthorizationStatus();\n    } else if (Platform.OS === 'android') {\n      if (await CameraManager.checkIfRecordAudioPermissionsAreDefined()) {\n        const audioPermissionResult = await PermissionsAndroid.request(\n          PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n          androidRecordAudioPermissionOptions,\n        );\n        if (typeof audioPermissionResult === 'boolean') {\n          hasRecordAudioPermissions = audioPermissionResult;\n        } else {\n          hasRecordAudioPermissions = audioPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n        }\n      } else if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `The 'captureAudio' property set on RNCamera instance but 'RECORD_AUDIO' permissions not defined in the applications 'AndroidManifest.xml'. ` +\n            `If you want to record audio you will have to add '<uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>' to your 'AndroidManifest.xml'. ` +\n            `Otherwise you should set the 'captureAudio' property on the component instance to 'false'.`,\n        );\n      }\n    } else if (Platform.OS === 'windows') {\n      hasRecordAudioPermissions = await CameraManager.checkMediaCapturePermission();\n    }\n  }\n\n  return {\n    hasCameraPermissions,\n    hasRecordAudioPermissions,\n  };\n};\n\nconst styles = StyleSheet.create({\n  authorizationContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  notAuthorizedText: {\n    textAlign: 'center',\n    fontSize: 16,\n  },\n});\n\ntype Orientation = 'auto' | 'landscapeLeft' | 'landscapeRight' | 'portrait' | 'portraitUpsideDown';\ntype OrientationNumber = 1 | 2 | 3 | 4;\n\ntype PictureOptions = {\n  quality?: number,\n  orientation?: Orientation | OrientationNumber,\n  base64?: boolean,\n  mirrorImage?: boolean,\n  exif?: boolean,\n  writeExif?: boolean | { [name: string]: any },\n  width?: number,\n  fixOrientation?: boolean,\n  forceUpOrientation?: boolean,\n  pauseAfterCapture?: boolean,\n};\n\ntype TrackedFaceFeature = FaceFeature & {\n  faceID?: number,\n};\n\ntype TrackedTextFeature = {\n  type: string,\n  bounds: {\n    size: {\n      width: number,\n      height: number,\n    },\n    origin: {\n      x: number,\n      y: number,\n    },\n  },\n  value: string,\n  components: Array<TrackedTextFeature>,\n};\n\ntype TrackedBarcodeFeature = {\n  bounds: {\n    size: {\n      width: number,\n      height: number,\n    },\n    origin: {\n      x: number,\n      y: number,\n    },\n  },\n  data: string,\n  dataRaw: string,\n  type: BarcodeType,\n  format?: string,\n  addresses?: {\n    addressesType?: 'UNKNOWN' | 'Work' | 'Home',\n    addressLines?: string[],\n  }[],\n  emails?: Email[],\n  phones?: Phone[],\n  urls: ?(string[]),\n  name?: {\n    firstName?: string,\n    lastName?: string,\n    middleName?: string,\n    prefix?: string,\n    pronounciation?: string,\n    suffix?: string,\n    formattedName?: string,\n  },\n  phone?: Phone,\n  organization?: string,\n  latitude?: number,\n  longitude?: number,\n  ssid?: string,\n  password?: string,\n  encryptionType?: string,\n  title?: string,\n  url?: string,\n  firstName?: string,\n  middleName?: string,\n  lastName?: string,\n  gender?: string,\n  addressCity?: string,\n  addressState?: string,\n  addressStreet?: string,\n  addressZip?: string,\n  birthDate?: string,\n  documentType?: string,\n  licenseNumber?: string,\n  expiryDate?: string,\n  issuingDate?: string,\n  issuingCountry?: string,\n  eventDescription?: string,\n  location?: string,\n  organizer?: string,\n  status?: string,\n  summary?: string,\n  start?: string,\n  end?: string,\n  email?: Email,\n  phoneNumber?: string,\n  message?: string,\n};\n\ntype BarcodeType =\n  | 'EMAIL'\n  | 'PHONE'\n  | 'CALENDAR_EVENT'\n  | 'DRIVER_LICENSE'\n  | 'GEO'\n  | 'SMS'\n  | 'CONTACT_INFO'\n  | 'WIFI'\n  | 'TEXT'\n  | 'ISBN'\n  | 'PRODUCT'\n  | 'URL';\n\ntype Email = {\n  address?: string,\n  body?: string,\n  subject?: string,\n  emailType?: 'UNKNOWN' | 'Work' | 'Home',\n};\n\ntype Phone = {\n  number?: string,\n  phoneType?: 'UNKNOWN' | 'Work' | 'Home' | 'Fax' | 'Mobile',\n};\n\ntype RecordingOptions = {\n  maxDuration?: number,\n  maxFileSize?: number,\n  orientation?: Orientation,\n  quality?: number | string,\n  fps?: number,\n  codec?: string,\n  mute?: boolean,\n  path?: string,\n  videoBitrate?: number,\n};\n\ntype EventCallbackArgumentsType = {\n  nativeEvent: Object,\n};\n\ntype Rect = {\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n};\n\ntype PropsType = typeof View.props & {\n  zoom?: number,\n  useNativeZoom?: boolean,\n  maxZoom?: number,\n  ratio?: string,\n  focusDepth?: number,\n  type?: number | string,\n  onCameraReady?: Function,\n  onAudioInterrupted?: Function,\n  onAudioConnected?: Function,\n  onStatusChange?: Function,\n  onBarCodeRead?: Function,\n  onPictureTaken?: Function,\n  onPictureSaved?: Function,\n  onRecordingStart?: Function,\n  onRecordingEnd?: Function,\n  onTap?: Function,\n  onDoubleTap?: Function,\n  onGoogleVisionBarcodesDetected?: ({ barcodes: Array<TrackedBarcodeFeature> }) => void,\n  onSubjectAreaChanged?: ({ nativeEvent: { prevPoint: {| x: number, y: number |} } }) => void,\n  faceDetectionMode?: number,\n  trackingEnabled?: boolean,\n  flashMode?: number | string,\n  exposure?: number,\n  barCodeTypes?: Array<string>,\n  googleVisionBarcodeType?: number,\n  googleVisionBarcodeMode?: number,\n  whiteBalance?: number | string | {temperature: number, tint: number, redGainOffset?: number, greenGainOffset?: number, blueGainOffset?: number },\n  faceDetectionLandmarks?: number,\n  autoFocus?: string | boolean | number,\n  autoFocusPointOfInterest?: { x: number, y: number },\n  faceDetectionClassifications?: number,\n  onFacesDetected?: ({ faces: Array<TrackedFaceFeature> }) => void,\n  onTextRecognized?: ({ textBlocks: Array<TrackedTextFeature> }) => void,\n  captureAudio?: boolean,\n  keepAudioSession?: boolean,\n  useCamera2Api?: boolean,\n  playSoundOnCapture?: boolean,\n  playSoundOnRecord?: boolean,\n  videoStabilizationMode?: number | string,\n  pictureSize?: string,\n  rectOfInterest: Rect,\n};\n\ntype StateType = {\n  isAuthorized: boolean,\n  isAuthorizationChecked: boolean,\n  recordAudioPermissionStatus: RecordAudioPermissionStatus,\n};\n\nexport type Status = 'READY' | 'PENDING_AUTHORIZATION' | 'NOT_AUTHORIZED';\n\nconst CameraStatus: { [key: Status]: Status } = {\n  READY: 'READY',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED',\n};\n\nexport type RecordAudioPermissionStatus = 'AUTHORIZED' | 'NOT_AUTHORIZED' | 'PENDING_AUTHORIZATION';\n\nconst RecordAudioPermissionStatusEnum: {\n  [key: RecordAudioPermissionStatus]: RecordAudioPermissionStatus,\n} = {\n  AUTHORIZED: 'AUTHORIZED',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED',\n};\n\nconst CameraManager: Object = NativeModules.RNCameraManager ||\n  NativeModules.RNCameraModule || {\n    stubbed: true,\n    Type: {\n      back: 1,\n    },\n    AutoFocus: {\n      on: 1,\n    },\n    FlashMode: {\n      off: 1,\n    },\n    WhiteBalance: {},\n    BarCodeType: {},\n    FaceDetection: {\n      fast: 1,\n      Mode: {},\n      Landmarks: {\n        none: 0,\n      },\n      Classifications: {\n        none: 0,\n      },\n    },\n    GoogleVisionBarcodeDetection: {\n      BarcodeType: 0,\n      BarcodeMode: 0,\n    },\n  };\n\nconst EventThrottleMs = 500;\n\nconst mapValues = (input, mapper) => {\n  const result = {};\n  Object.entries(input).map(([key, value]) => {\n    result[key] = mapper(value, key);\n  });\n  return result;\n};\n\nexport default class Camera extends React.Component<PropsType, StateType> {\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    ImageType: CameraManager.ImageType,\n    VideoCodec: CameraManager.VideoCodec,\n    BarCodeType: CameraManager.BarCodeType,\n    GoogleVisionBarcodeDetection: CameraManager.GoogleVisionBarcodeDetection,\n    FaceDetection: CameraManager.FaceDetection,\n    CameraStatus,\n    CaptureTarget: CameraManager.CaptureTarget,\n    RecordAudioPermissionStatus: RecordAudioPermissionStatusEnum,\n    VideoStabilization: CameraManager.VideoStabilization,\n    Orientation: {\n      auto: 'auto',\n      landscapeLeft: 'landscapeLeft',\n      landscapeRight: 'landscapeRight',\n      portrait: 'portrait',\n      portraitUpsideDown: 'portraitUpsideDown',\n    },\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    exposure: CameraManager.Exposure,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance,\n    faceDetectionMode: (CameraManager.FaceDetection || {}).Mode,\n    faceDetectionLandmarks: (CameraManager.FaceDetection || {}).Landmarks,\n    faceDetectionClassifications: (CameraManager.FaceDetection || {}).Classifications,\n    googleVisionBarcodeType: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType,\n    googleVisionBarcodeMode: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode,\n    videoStabilizationMode: CameraManager.VideoStabilization || {},\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    zoom: PropTypes.number,\n    useNativeZoom: PropTypes.bool,\n    maxZoom: PropTypes.number,\n    ratio: PropTypes.string,\n    focusDepth: PropTypes.number,\n    onMountError: PropTypes.func,\n    onCameraReady: PropTypes.func,\n    onAudioInterrupted: PropTypes.func,\n    onAudioConnected: PropTypes.func,\n    onStatusChange: PropTypes.func,\n    onBarCodeRead: PropTypes.func,\n    onPictureTaken: PropTypes.func,\n    onPictureSaved: PropTypes.func,\n    onRecordingStart: PropTypes.func,\n    onRecordingEnd: PropTypes.func,\n    onTap: PropTypes.func,\n    onDoubleTap: PropTypes.func,\n    onGoogleVisionBarcodesDetected: PropTypes.func,\n    onFacesDetected: PropTypes.func,\n    onTextRecognized: PropTypes.func,\n    onSubjectAreaChanged: PropTypes.func,\n    trackingEnabled: PropTypes.bool,\n    faceDetectionMode: PropTypes.number,\n    faceDetectionLandmarks: PropTypes.number,\n    faceDetectionClassifications: PropTypes.number,\n    barCodeTypes: PropTypes.arrayOf(PropTypes.string),\n    googleVisionBarcodeType: PropTypes.number,\n    googleVisionBarcodeMode: PropTypes.number,\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    cameraId: PropTypes.string,\n    flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    exposure: PropTypes.number,\n    whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number,\n      PropTypes.shape({ temperature: PropTypes.number, tint: PropTypes.number,\n        redGainOffset: PropTypes.number,\n        greenGainOffset: PropTypes.number,\n        blueGainOffset: PropTypes.number })]),\n    autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n    autoFocusPointOfInterest: PropTypes.shape({ x: PropTypes.number, y: PropTypes.number }),\n    permissionDialogTitle: PropTypes.string,\n    permissionDialogMessage: PropTypes.string,\n    androidCameraPermissionOptions: Rationale,\n    androidRecordAudioPermissionOptions: Rationale,\n    notAuthorizedView: PropTypes.element,\n    pendingAuthorizationView: PropTypes.element,\n    captureAudio: PropTypes.bool,\n    keepAudioSession: PropTypes.bool,\n    useCamera2Api: PropTypes.bool,\n    playSoundOnCapture: PropTypes.bool,\n    playSoundOnRecord: PropTypes.bool,\n    videoStabilizationMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    pictureSize: PropTypes.string,\n    mirrorVideo: PropTypes.bool,\n    rectOfInterest: PropTypes.any,\n    defaultVideoQuality: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps: Object = {\n    zoom: 0,\n    useNativeZoom: false,\n    maxZoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    type: CameraManager.Type.back,\n    cameraId: '',\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    exposure: -1,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n    faceDetectionMode: (CameraManager.FaceDetection || {}).fast,\n    barCodeTypes: Object.values(CameraManager.BarCodeType),\n    googleVisionBarcodeType: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType || {})\n      .None,\n    googleVisionBarcodeMode: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode || {})\n      .NORMAL,\n    faceDetectionLandmarks: ((CameraManager.FaceDetection || {}).Landmarks || {}).none,\n    faceDetectionClassifications: ((CameraManager.FaceDetection || {}).Classifications || {}).none,\n    permissionDialogTitle: '',\n    permissionDialogMessage: '',\n    androidCameraPermissionOptions: null,\n    androidRecordAudioPermissionOptions: null,\n    notAuthorizedView: (\n      <View style={styles.authorizationContainer}>\n        <Text style={styles.notAuthorizedText}>Camera not authorized</Text>\n      </View>\n    ),\n    pendingAuthorizationView: (\n      <View style={styles.authorizationContainer}>\n        <ActivityIndicator size=\"small\" />\n      </View>\n    ),\n    captureAudio: true,\n    keepAudioSession: false,\n    useCamera2Api: false,\n    playSoundOnCapture: false,\n    playSoundOnRecord: false,\n    pictureSize: 'None',\n    videoStabilizationMode: 0,\n    mirrorVideo: false,\n  };\n\n  _cameraRef: ?Object;\n  _cameraHandle: ?number;\n  _lastEvents: { [string]: string };\n  _lastEventsTimes: { [string]: Date };\n  _isMounted: boolean;\n\n  constructor(props: PropsType) {\n    super(props);\n    this._lastEvents = {};\n    this._lastEventsTimes = {};\n    this._isMounted = true;\n    this.state = {\n      isAuthorized: false,\n      isAuthorizationChecked: false,\n      recordAudioPermissionStatus: RecordAudioPermissionStatusEnum.PENDING_AUTHORIZATION,\n    };\n  }\n\n  async takePictureAsync(options?: PictureOptions) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.quality) {\n      options.quality = 1;\n    }\n\n    if (options.orientation) {\n      if (typeof options.orientation !== 'number') {\n        const { orientation } = options;\n        options.orientation = CameraManager.Orientation[orientation];\n        if (__DEV__) {\n          if (typeof options.orientation !== 'number') {\n            // eslint-disable-next-line no-console\n            console.warn(`Orientation '${orientation}' is invalid.`);\n          }\n        }\n      }\n    }\n\n    if (options.pauseAfterCapture === undefined) {\n      options.pauseAfterCapture = false;\n    }\n\n    if (!this._cameraHandle) {\n      throw 'Camera handle cannot be null';\n    }\n\n    return await CameraManager.takePicture(options, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedRatios(this._cameraHandle);\n    } else {\n      throw new Error('Ratio is not supported on iOS');\n    }\n  }\n\n  async getCameraIdsAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getCameraIds(this._cameraHandle);\n    } else {\n      return await CameraManager.getCameraIds(); // iOS does not need a camera instance\n    }\n  }\n\n  static async checkIfVideoIsValid(path) {\n    if (Platform.OS === 'android') {\n      return await CameraManager.checkIfVideoIsValid(path);\n    } else {\n      return true; // iOS: not implemented\n    }\n  }\n\n  getSupportedPreviewFpsRange = async (): Promise<[]> => {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedPreviewFpsRange(this._cameraHandle);\n    } else {\n      throw new Error('getSupportedPreviewFpsRange is not supported on iOS');\n    }\n  };\n\n  getAvailablePictureSizes = async (): string[] => {\n    //$FlowFixMe\n    return await CameraManager.getAvailablePictureSizes(this.props.ratio, this._cameraHandle);\n  };\n\n  async recordAsync(options?: RecordingOptions) {\n    if (!options || typeof options !== 'object') {\n      options = {};\n    } else if (typeof options.quality === 'string') {\n      options.quality = Camera.Constants.VideoQuality[options.quality];\n    }\n    if (options.orientation) {\n      if (typeof options.orientation !== 'number') {\n        const { orientation } = options;\n        options.orientation = CameraManager.Orientation[orientation];\n        if (__DEV__) {\n          if (typeof options.orientation !== 'number') {\n            // eslint-disable-next-line no-console\n            console.warn(`Orientation '${orientation}' is invalid.`);\n          }\n        }\n      }\n    }\n\n    if (__DEV__) {\n      if (options.videoBitrate && typeof options.videoBitrate !== 'number') {\n        // eslint-disable-next-line no-console\n        console.warn('Video Bitrate should be a positive integer');\n      }\n    }\n\n    const { recordAudioPermissionStatus } = this.state;\n    const { captureAudio } = this.props;\n\n    if (\n      !captureAudio ||\n      recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED\n    ) {\n      options.mute = true;\n    }\n\n    if (__DEV__) {\n      if (\n        (!options.mute || captureAudio) &&\n        recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED\n      ) {\n        // eslint-disable-next-line no-console\n        console.warn('Recording with audio not possible. Permissions are missing.');\n      }\n    }\n\n    return await CameraManager.record(options, this._cameraHandle);\n  }\n\n  stopRecording() {\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pauseRecording() {\n    CameraManager.pauseRecording(this._cameraHandle);\n  }\n\n  resumeRecording() {\n    CameraManager.resumeRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  isRecording() {\n    return CameraManager.isRecording(this._cameraHandle);\n  }\n\n  resumePreview() {\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onMountError = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onAudioInterrupted = () => {\n    if (this.props.onAudioInterrupted) {\n      this.props.onAudioInterrupted();\n    }\n  };\n  _onTouch = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onTap && !nativeEvent.isDoubleTap) {\n      this.props.onTap(nativeEvent.touchOrigin);\n    }\n    if (this.props.onDoubleTap && nativeEvent.isDoubleTap) {\n      this.props.onDoubleTap(nativeEvent.touchOrigin);\n    }\n  };\n  _onAudioConnected = () => {\n    if (this.props.onAudioConnected) {\n      this.props.onAudioConnected();\n    }\n  };\n\n  _onStatusChange = () => {\n    if (this.props.onStatusChange) {\n      this.props.onStatusChange({\n        cameraStatus: this.getStatus(),\n        recordAudioPermissionStatus: this.state.recordAudioPermissionStatus,\n      });\n    }\n  };\n\n  _onPictureSaved = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onPictureSaved) {\n      this.props.onPictureSaved(nativeEvent);\n    }\n  };\n\n  _onObjectDetected = (callback: ?Function) => ({ nativeEvent }: EventCallbackArgumentsType) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date() - this._lastEventsTimes[type] < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _onSubjectAreaChanged = e => {\n    if (this.props.onSubjectAreaChanged) {\n      this.props.onSubjectAreaChanged(e);\n    }\n  };\n\n  _setReference = (ref: ?Object) => {\n    if (ref) {\n      this._cameraRef = ref;\n      this._cameraHandle = findNodeHandle(ref);\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async arePermissionsGranted() {\n    const {\n      permissionDialogTitle,\n      permissionDialogMessage,\n      androidCameraPermissionOptions,\n      androidRecordAudioPermissionOptions,\n    } = this.props;\n\n    let cameraPermissions = androidCameraPermissionOptions;\n    let audioPermissions = androidRecordAudioPermissionOptions;\n    if (permissionDialogTitle || permissionDialogMessage) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'permissionDialogTitle and permissionDialogMessage are deprecated. Please use androidCameraPermissionOptions instead.',\n      );\n      cameraPermissions = {\n        ...cameraPermissions,\n        title: permissionDialogTitle,\n        message: permissionDialogMessage,\n      };\n      audioPermissions = {\n        ...audioPermissions,\n        title: permissionDialogTitle,\n        message: permissionDialogMessage,\n      };\n    }\n\n    const { hasCameraPermissions, hasRecordAudioPermissions } = await requestPermissions(\n      this.props.captureAudio,\n      CameraManager,\n      cameraPermissions,\n      audioPermissions,\n    );\n\n    const recordAudioPermissionStatus = hasRecordAudioPermissions\n      ? RecordAudioPermissionStatusEnum.AUTHORIZED\n      : RecordAudioPermissionStatusEnum.NOT_AUTHORIZED;\n    return { hasCameraPermissions, recordAudioPermissionStatus };\n  }\n\n  async refreshAuthorizationStatus() {\n    const {\n      hasCameraPermissions,\n      recordAudioPermissionStatus,\n    } = await this.arePermissionsGranted();\n    if (this._isMounted === false) {\n      return;\n    }\n\n    this.setState({\n      isAuthorized: hasCameraPermissions,\n      isAuthorizationChecked: true,\n      recordAudioPermissionStatus,\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      hasCameraPermissions,\n      recordAudioPermissionStatus,\n    } = await this.arePermissionsGranted();\n    if (this._isMounted === false) {\n      return;\n    }\n\n    this.setState(\n      {\n        isAuthorized: hasCameraPermissions,\n        isAuthorizationChecked: true,\n        recordAudioPermissionStatus,\n      },\n      this._onStatusChange,\n    );\n  }\n\n  getStatus = (): Status => {\n    const { isAuthorized, isAuthorizationChecked } = this.state;\n    if (isAuthorizationChecked === false) {\n      return CameraStatus.PENDING_AUTHORIZATION;\n    }\n    return isAuthorized ? CameraStatus.READY : CameraStatus.NOT_AUTHORIZED;\n  };\n\n  // FaCC = Function as Child Component;\n  hasFaCC = (): * => typeof this.props.children === 'function';\n\n  renderChildren = (): * => {\n    if (this.hasFaCC()) {\n      return this.props.children({\n        camera: this,\n        status: this.getStatus(),\n        recordAudioPermissionStatus: this.state.recordAudioPermissionStatus,\n      });\n    }\n    return this.props.children;\n  };\n\n  render() {\n    const { style, ...nativeProps } = this._convertNativeProps(this.props);\n\n    if (this.state.isAuthorized || this.hasFaCC()) {\n      return (\n        <View style={style}>\n          <RNCamera\n            {...nativeProps}\n            style={StyleSheet.absoluteFill}\n            ref={this._setReference}\n            onMountError={this._onMountError}\n            onCameraReady={this._onObjectDetected(this._onCameraReady)}\n            onAudioInterrupted={this._onAudioInterrupted}\n            onAudioConnected={this._onAudioConnected}\n            onGoogleVisionBarcodesDetected={this._onObjectDetected(\n              this.props.onGoogleVisionBarcodesDetected,\n            )}\n            onBarCodeRead={this._onObjectDetected(this.props.onBarCodeRead)}\n            onTouch={this._onTouch}\n            onFacesDetected={this._onObjectDetected(this.props.onFacesDetected)}\n            onTextRecognized={this._onObjectDetected(this.props.onTextRecognized)}\n            onPictureSaved={this._onPictureSaved}\n            onSubjectAreaChanged={this._onSubjectAreaChanged}\n          />\n          {this.renderChildren()}\n        </View>\n      );\n    } else if (!this.state.isAuthorizationChecked) {\n      return this.props.pendingAuthorizationView;\n    } else {\n      return this.props.notAuthorizedView;\n    }\n  }\n\n  _convertNativeProps({ children, ...props }: PropsType) {\n    const newProps = mapValues(props, this._convertProp);\n\n    if (props.onBarCodeRead) {\n      newProps.barCodeScannerEnabled = true;\n    }\n\n    if (props.onGoogleVisionBarcodesDetected) {\n      newProps.googleVisionBarcodeDetectorEnabled = true;\n    }\n\n    if (props.onFacesDetected) {\n      newProps.faceDetectorEnabled = true;\n    }\n\n    if (props.onTap || props.onDoubleTap) {\n      newProps.touchDetectorEnabled = true;\n    }\n\n    if (props.onTextRecognized) {\n      newProps.textRecognizerEnabled = true;\n    }\n\n    if (Platform.OS === 'ios') {\n      delete newProps.ratio;\n    }\n\n    return newProps;\n  }\n\n  _convertProp(value: *, key: string): * {\n    if (typeof value === 'string' && Camera.ConversionTables[key]) {\n      return Camera.ConversionTables[key][value];\n    }\n\n    return value;\n  }\n}\n\nexport const Constants = Camera.Constants;\n\nexport function hasTorch() {\n  return CameraManager.hasTorch();\n}\n\nconst RNCamera = requireNativeComponent('RNCamera', Camera, {\n  nativeOnly: {\n    accessibilityComponentType: true,\n    accessibilityLabel: true,\n    accessibilityLiveRegion: true,\n    barCodeScannerEnabled: true,\n    touchDetectorEnabled: true,\n    googleVisionBarcodeDetectorEnabled: true,\n    faceDetectorEnabled: true,\n    textRecognizerEnabled: true,\n    importantForAccessibility: true,\n    onBarCodeRead: true,\n    onGoogleVisionBarcodesDetected: true,\n    onCameraReady: true,\n    onAudioInterrupted: true,\n    onAudioConnected: true,\n    onPictureSaved: true,\n    onFaceDetected: true,\n    onTouch: true,\n    onLayout: true,\n    onMountError: true,\n    onSubjectAreaChanged: true,\n    renderToHardwareTextureAndroid: true,\n    testID: true,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}