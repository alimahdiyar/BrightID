{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.UploadDataSteps = exports.AddSigningKeySteps = exports.AddDeviceScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _store = _interopRequireWildcard(require(\"../../../store\"));\n\nvar _fonts = require(\"../../../theme/fonts\");\n\nvar _colors = require(\"../../../theme/colors\");\n\nvar _deviceConstants = require(\"../../../utils/deviceConstants\");\n\nvar _actions = require(\"../../../actions\");\n\nvar _channelService = _interopRequireDefault(require(\"../../../api/channelService\"));\n\nvar _channelUploadThunks = require(\"./thunks/channelUploadThunks\");\n\nvar _NodeApiGate = require(\"../../NodeApiGate\");\n\nvar _constants = require(\"../../../utils/constants\");\n\nvar _AddSigningKey = require(\"./AddSigningKey\");\n\nvar _UploadData = require(\"./UploadData\");\n\nvar _recovery = require(\"../../../utils/recovery\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddDeviceScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar AddSigningKeySteps;\nexports.AddSigningKeySteps = AddSigningKeySteps;\n\n(function (AddSigningKeySteps) {\n  AddSigningKeySteps[AddSigningKeySteps[\"WAITING\"] = 0] = \"WAITING\";\n  AddSigningKeySteps[AddSigningKeySteps[\"DOWNLOADING\"] = 1] = \"DOWNLOADING\";\n  AddSigningKeySteps[AddSigningKeySteps[\"WAITING_OPERATION\"] = 2] = \"WAITING_OPERATION\";\n  AddSigningKeySteps[AddSigningKeySteps[\"OPERATION_APPLIED\"] = 3] = \"OPERATION_APPLIED\";\n  AddSigningKeySteps[AddSigningKeySteps[\"ERROR\"] = 4] = \"ERROR\";\n})(AddSigningKeySteps || (exports.AddSigningKeySteps = AddSigningKeySteps = {}));\n\nvar UploadDataSteps;\nexports.UploadDataSteps = UploadDataSteps;\n\n(function (UploadDataSteps) {\n  UploadDataSteps[UploadDataSteps[\"WAITING\"] = 0] = \"WAITING\";\n  UploadDataSteps[UploadDataSteps[\"UPLOADING\"] = 1] = \"UPLOADING\";\n  UploadDataSteps[UploadDataSteps[\"COMPLETE\"] = 2] = \"COMPLETE\";\n  UploadDataSteps[UploadDataSteps[\"ERROR\"] = 3] = \"ERROR\";\n})(UploadDataSteps || (exports.UploadDataSteps = UploadDataSteps = {}));\n\nvar AddDeviceScreen = function AddDeviceScreen() {\n  var dispatch = (0, _store.useDispatch)();\n  var navigation = (0, _native.useNavigation)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var url = (0, _store.useSelector)(function (state) {\n    var _state$recoveryData$c;\n\n    return (_state$recoveryData$c = state.recoveryData.channel) == null ? void 0 : _state$recoveryData$c.url;\n  });\n  var aesKey = (0, _store.useSelector)(function (state) {\n    return state.recoveryData.aesKey;\n  });\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      deviceName = _useState2[0],\n      setDeviceName = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      signingKey = _useState4[0],\n      setSigningKey = _useState4[1];\n\n  var api = (0, _react.useContext)(_NodeApiGate.NodeApiContext);\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      addSigningKeyOpHash = _useState6[0],\n      setSigningKeyOpHash = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      addSigningKeyError = _useState8[0],\n      setAddSigningKeyError = _useState8[1];\n\n  var addSigningKeyOp = (0, _store.useSelector)(function (state) {\n    return (0, _actions.selectOperationByHash)(state, addSigningKeyOpHash);\n  });\n\n  var _useState9 = (0, _react.useState)(AddSigningKeySteps.WAITING),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      addSigningKeyStep = _useState10[0],\n      setAddSigningKeyStep = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(UploadDataSteps.WAITING),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      uploadDataStep = _useState12[0],\n      setUploadDataStep = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(''),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      uploadDataError = _useState14[0],\n      setUploadDataError = _useState14[1];\n\n  var handleSubmit = function _callee() {\n    var channelApi, _await$loadRecoveryDa, _signingKey, op;\n\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setAddSigningKeyStep(AddSigningKeySteps.DOWNLOADING);\n            channelApi = new _channelService.default(url.href);\n            _context.next = 5;\n            return _regenerator.default.awrap((0, _recovery.loadRecoveryData)(channelApi, aesKey));\n\n          case 5:\n            _await$loadRecoveryDa = _context.sent;\n            _signingKey = _await$loadRecoveryDa.signingKey;\n            console.log(\"adding new signing key\");\n            setSigningKey(_signingKey);\n            _context.next = 11;\n            return _regenerator.default.awrap(api.addSigningKey(_signingKey));\n\n          case 11:\n            op = _context.sent;\n\n            _store.default.dispatch((0, _actions.addOperation)(op));\n\n            setSigningKeyOpHash(op.hash);\n            setAddSigningKeyStep(AddSigningKeySteps.WAITING_OPERATION);\n            _context.next = 22;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error setting signing key: \" + _context.t0.message);\n            setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n            setAddSigningKeyError(_context.t0.message);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    var runEffect = function _callee2() {\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Starting upload of local info\");\n              _context2.prev = 1;\n              setUploadDataStep(UploadDataSteps.UPLOADING);\n              _context2.next = 5;\n              return _regenerator.default.awrap((0, _channelUploadThunks.uploadAllInfoAfter)(0));\n\n            case 5:\n              setUploadDataStep(UploadDataSteps.COMPLETE);\n              console.log(\"Finished upload of local info\");\n              _context2.next = 14;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"Error uploading data: \" + _context2.t0.message);\n              setUploadDataStep(UploadDataSteps.ERROR);\n              setUploadDataError(_context2.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    };\n\n    if (addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED && uploadDataStep === UploadDataSteps.WAITING) {\n      runEffect();\n    }\n  }, [addSigningKeyStep, uploadDataStep]);\n  (0, _react.useEffect)(function () {\n    if (addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED && uploadDataStep === UploadDataSteps.COMPLETE) {\n      console.log(\"Completed add device workflow!\");\n      dispatch((0, _actions.addDevice)({\n        name: deviceName,\n        signingKey: signingKey,\n        active: true\n      }));\n      navigation.navigate('Devices');\n    }\n  }, [addSigningKeyStep, deviceName, dispatch, navigation, signingKey, uploadDataStep]);\n  (0, _react.useEffect)(function () {\n    if (addSigningKeyOp && addSigningKeyStep === AddSigningKeySteps.WAITING_OPERATION) {\n      switch (addSigningKeyOp.state) {\n        case _constants.operation_states.UNKNOWN:\n        case _constants.operation_states.INIT:\n        case _constants.operation_states.SENT:\n          break;\n\n        case _constants.operation_states.APPLIED:\n          setAddSigningKeyStep(AddSigningKeySteps.OPERATION_APPLIED);\n          setSigningKeyOpHash('');\n          break;\n\n        case _constants.operation_states.FAILED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation could not be applied');\n          setSigningKeyOpHash('');\n          break;\n\n        case _constants.operation_states.EXPIRED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation timed out');\n          setSigningKeyOpHash('');\n          break;\n\n        default:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Unhandled operation state');\n          setSigningKeyOpHash('');\n      }\n    }\n  }, [addSigningKeyOp, addSigningKeyStep]);\n  (0, _react.useEffect)(function () {\n    var showConfirmDialog = function showConfirmDialog() {\n      return _reactNative.Alert.alert(t('common.alert.title.pleaseConfirm'), t('devices.alert.confirmAdd'), [{\n        text: t('common.alert.yes'),\n        onPress: function onPress() {\n          resetFlow();\n        }\n      }, {\n        text: t('common.alert.no'),\n        onPress: function onPress() {\n          navigation.navigate('Home');\n        }\n      }]);\n    };\n\n    showConfirmDialog();\n  }, []);\n\n  var resetFlow = function resetFlow() {\n    setAddSigningKeyStep(AddSigningKeySteps.WAITING);\n    setUploadDataStep(UploadDataSteps.WAITING);\n    setAddSigningKeyError('');\n    setUploadDataError('');\n  };\n\n  var submitEnabled = deviceName.length >= 3 && addSigningKeyStep === AddSigningKeySteps.WAITING && uploadDataStep === UploadDataSteps.WAITING;\n  var pendingSubmit = addSigningKeyStep === AddSigningKeySteps.WAITING && uploadDataStep === UploadDataSteps.WAITING;\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"dark-content\",\n    backgroundColor: _colors.WHITE,\n    animated: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.orangeTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    testID: \"AddDeviceScreen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, pendingSubmit && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.descContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.registerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, t('devices.text.whatsDeviceName'))), _react.default.createElement(_reactNative.View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    testID: \"editDeviceName\",\n    onChangeText: setDeviceName,\n    value: deviceName,\n    placeholder: t('devices.placeholder.deviceName'),\n    placeholderTextColor: _colors.DARKER_GREY,\n    style: styles.textInput,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    textContentType: \"name\",\n    underlineColorAndroid: \"transparent\",\n    blurOnSubmit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.submitContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [styles.submitBtn, {\n      opacity: submitEnabled ? 1 : 0.7\n    }],\n    onPress: handleSubmit,\n    accessibilityLabel: t('devices.button.submit'),\n    disabled: !submitEnabled,\n    testID: \"submitDeviceName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.submitBtnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, t('devices.button.submit'))))), _react.default.createElement(_reactNative.View, {\n    style: styles.progressContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, addSigningKeyStep !== AddSigningKeySteps.WAITING && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.addSigningKeyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_AddSigningKey.AddSigningKey, {\n    currentStep: addSigningKeyStep,\n    errorMessage: addSigningKeyError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.uploadDataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_UploadData.UploadData, {\n    currentStep: uploadDataStep,\n    errorMessage: uploadDataError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexports.AddDeviceScreen = AddDeviceScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  orangeTop: {\n    backgroundColor: _colors.ORANGE,\n    height: _deviceConstants.DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2\n  },\n  waitingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  descContainer: {\n    marginTop: _deviceConstants.DEVICE_LARGE ? 100 : 85\n  },\n  midContainer: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    textAlign: 'center',\n    lineHeight: _deviceConstants.DEVICE_LARGE ? 26 : 24\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: _colors.DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  addSigningKeyContainer: {},\n  uploadDataContainer: {},\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: _deviceConstants.DEVICE_LARGE ? 180 : 160,\n    height: _deviceConstants.DEVICE_LARGE ? 50 : 45,\n    backgroundColor: _colors.ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: _colors.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.WHITE\n  },\n  divider: {\n    marginTop: _deviceConstants.DEVICE_LARGE ? 40 : 20,\n    marginBottom: _deviceConstants.DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: _colors.BLACK\n  },\n  progressContainer: {\n    marginTop: _deviceConstants.DEVICE_LARGE ? 50 : 40\n  }\n});\n\nvar _default = AddDeviceScreen;\nexports.default = _default;","map":{"version":3,"names":["AddSigningKeySteps","UploadDataSteps","AddDeviceScreen","dispatch","useDispatch","navigation","useNavigation","useTranslation","t","url","useSelector","state","recoveryData","channel","aesKey","useState","deviceName","setDeviceName","signingKey","setSigningKey","api","useContext","NodeApiContext","addSigningKeyOpHash","setSigningKeyOpHash","addSigningKeyError","setAddSigningKeyError","addSigningKeyOp","selectOperationByHash","WAITING","addSigningKeyStep","setAddSigningKeyStep","uploadDataStep","setUploadDataStep","uploadDataError","setUploadDataError","handleSubmit","DOWNLOADING","channelApi","ChannelAPI","href","loadRecoveryData","console","log","addSigningKey","op","store","addOperation","hash","WAITING_OPERATION","message","ERROR","useEffect","runEffect","UPLOADING","uploadAllInfoAfter","COMPLETE","OPERATION_APPLIED","addDevice","name","active","navigate","operation_states","UNKNOWN","INIT","SENT","APPLIED","FAILED","EXPIRED","showConfirmDialog","Alert","alert","text","onPress","resetFlow","submitEnabled","length","pendingSubmit","WHITE","styles","orangeTop","container","descContainer","registerText","midContainer","DARKER_GREY","textInput","submitContainer","submitBtn","opacity","submitBtnText","progressContainer","addSigningKeyContainer","divider","uploadDataContainer","StyleSheet","create","backgroundColor","ORANGE","height","DEVICE_LARGE","width","zIndex","flex","borderTopLeftRadius","marginTop","overflow","waitingContainer","alignItems","justifyContent","fontFamily","fontSize","textAlign","lineHeight","color","BLACK","borderBottomWidth","borderBottomColor","paddingBottom","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","marginBottom","hairlineWidth","borderColor"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddDeviceScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  Alert,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport store, { useDispatch, useSelector } from '@/store';\nimport { fontSize } from '@/theme/fonts';\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { addDevice, addOperation, selectOperationByHash } from '@/actions';\nimport ChannelAPI from '@/api/channelService';\nimport { uploadAllInfoAfter } from './thunks/channelUploadThunks';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { operation_states } from '@/utils/constants';\nimport { AddSigningKey } from '@/components/Onboarding/ImportFlow/AddSigningKey';\nimport { UploadData } from '@/components/Onboarding/ImportFlow/UploadData';\nimport { loadRecoveryData } from '@/utils/recovery';\n\n/**\n * Screen for adding a new device\n */\n\nexport enum AddSigningKeySteps {\n  WAITING, // not yet started\n  DOWNLOADING, // open channel and download signing key data from other device/client\n  WAITING_OPERATION, // Op to add signing key submitted to backend but not yet applied\n  OPERATION_APPLIED, // op successfully applied in backend\n  ERROR,\n}\n\nexport enum UploadDataSteps {\n  WAITING, // upload not yet started\n  UPLOADING, // upload of data in progress\n  COMPLETE, // all data uploaded\n  ERROR,\n}\n\nexport const AddDeviceScreen = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const url = useSelector((state) => state.recoveryData.channel?.url);\n  const aesKey = useSelector((state) => state.recoveryData.aesKey);\n  const [deviceName, setDeviceName] = useState('');\n  const [signingKey, setSigningKey] = useState('');\n  const api = useContext(NodeApiContext);\n  const [addSigningKeyOpHash, setSigningKeyOpHash] = useState<string>('');\n  const [addSigningKeyError, setAddSigningKeyError] = useState('');\n  const addSigningKeyOp = useSelector((state) =>\n    selectOperationByHash(state, addSigningKeyOpHash),\n  );\n  const [addSigningKeyStep, setAddSigningKeyStep] = useState(\n    AddSigningKeySteps.WAITING,\n  );\n  const [uploadDataStep, setUploadDataStep] = useState(UploadDataSteps.WAITING);\n  const [uploadDataError, setUploadDataError] = useState('');\n\n  const handleSubmit = async () => {\n    try {\n      setAddSigningKeyStep(AddSigningKeySteps.DOWNLOADING);\n      const channelApi = new ChannelAPI(url.href);\n      const { signingKey } = await loadRecoveryData(channelApi, aesKey);\n      console.log(`adding new signing key`);\n      setSigningKey(signingKey);\n      const op = await api.addSigningKey(signingKey);\n      store.dispatch(addOperation(op));\n      setSigningKeyOpHash(op.hash);\n      setAddSigningKeyStep(AddSigningKeySteps.WAITING_OPERATION);\n    } catch (err) {\n      console.log(`Error setting signing key: ${err.message}`);\n      setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n      setAddSigningKeyError(err.message);\n    }\n  };\n\n  // start data upload as soon as signing keys have been added\n  useEffect(() => {\n    const runEffect = async () => {\n      console.log(`Starting upload of local info`);\n      try {\n        setUploadDataStep(UploadDataSteps.UPLOADING);\n        await uploadAllInfoAfter(0);\n        setUploadDataStep(UploadDataSteps.COMPLETE);\n        console.log(`Finished upload of local info`);\n      } catch (err) {\n        console.log(`Error uploading data: ${err.message}`);\n        setUploadDataStep(UploadDataSteps.ERROR);\n        setUploadDataError(err.message);\n      }\n    };\n    if (\n      addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED &&\n      uploadDataStep === UploadDataSteps.WAITING\n    ) {\n      runEffect();\n    }\n  }, [addSigningKeyStep, uploadDataStep]);\n\n  // track overall progress\n  useEffect(() => {\n    if (\n      addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED &&\n      uploadDataStep === UploadDataSteps.COMPLETE\n    ) {\n      console.log(`Completed add device workflow!`);\n      // add new device to local storage and navigate to device screen\n      dispatch(addDevice({ name: deviceName, signingKey, active: true }));\n      navigation.navigate('Devices');\n    }\n  }, [\n    addSigningKeyStep,\n    deviceName,\n    dispatch,\n    navigation,\n    signingKey,\n    uploadDataStep,\n  ]);\n\n  // track addSigningKey operation status\n  useEffect(() => {\n    if (\n      addSigningKeyOp &&\n      addSigningKeyStep === AddSigningKeySteps.WAITING_OPERATION\n    ) {\n      switch (addSigningKeyOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          // op being processed. do nothing.\n          break;\n        case operation_states.APPLIED:\n          setAddSigningKeyStep(AddSigningKeySteps.OPERATION_APPLIED);\n          setSigningKeyOpHash('');\n          break;\n        case operation_states.FAILED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation could not be applied');\n          setSigningKeyOpHash('');\n          break;\n        case operation_states.EXPIRED:\n          // operation did not get applied within time window. Abort and show error.\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation timed out');\n          setSigningKeyOpHash('');\n          break;\n        default:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Unhandled operation state');\n          setSigningKeyOpHash('');\n      }\n    }\n  }, [addSigningKeyOp, addSigningKeyStep]);\n\n  useEffect(() => {\n    const showConfirmDialog = () => {\n      return Alert.alert(\n        t('common.alert.title.pleaseConfirm'),\n        t('devices.alert.confirmAdd'),\n        [\n          {\n            text: t('common.alert.yes'),\n            onPress: () => {\n              resetFlow();\n            },\n          },\n          {\n            text: t('common.alert.no'),\n            onPress: () => {\n              navigation.navigate('Home');\n            },\n          },\n        ],\n      );\n    };\n    showConfirmDialog();\n  }, []);\n\n  const resetFlow = () => {\n    setAddSigningKeyStep(AddSigningKeySteps.WAITING);\n    setUploadDataStep(UploadDataSteps.WAITING);\n    setAddSigningKeyError('');\n    setUploadDataError('');\n  };\n\n  const submitEnabled =\n    deviceName.length >= 3 &&\n    addSigningKeyStep === AddSigningKeySteps.WAITING &&\n    uploadDataStep === UploadDataSteps.WAITING;\n\n  const pendingSubmit =\n    addSigningKeyStep === AddSigningKeySteps.WAITING &&\n    uploadDataStep === UploadDataSteps.WAITING;\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"dark-content\"\n        backgroundColor={WHITE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"AddDeviceScreen\">\n        {pendingSubmit && (\n          <>\n            <View style={styles.descContainer}>\n              <Text style={styles.registerText}>\n                {t('devices.text.whatsDeviceName')}\n              </Text>\n            </View>\n            <View style={styles.midContainer}>\n              <TextInput\n                testID=\"editDeviceName\"\n                onChangeText={setDeviceName}\n                value={deviceName}\n                placeholder={t('devices.placeholder.deviceName')}\n                placeholderTextColor={DARKER_GREY}\n                style={styles.textInput}\n                autoCapitalize=\"words\"\n                autoCorrect={false}\n                textContentType=\"name\"\n                underlineColorAndroid=\"transparent\"\n                blurOnSubmit={true}\n              />\n            </View>\n            <View style={styles.submitContainer}>\n              <TouchableOpacity\n                style={[styles.submitBtn, { opacity: submitEnabled ? 1 : 0.7 }]}\n                onPress={handleSubmit}\n                accessibilityLabel={t('devices.button.submit')}\n                disabled={!submitEnabled}\n                testID=\"submitDeviceName\"\n              >\n                <Text style={styles.submitBtnText}>\n                  {t('devices.button.submit')}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </>\n        )}\n        <View style={styles.progressContainer}>\n          {addSigningKeyStep !== AddSigningKeySteps.WAITING && (\n            <>\n              <View style={styles.addSigningKeyContainer}>\n                <AddSigningKey\n                  currentStep={addSigningKeyStep}\n                  errorMessage={addSigningKeyError}\n                />\n              </View>\n              <View style={styles.divider} />\n              <View style={styles.uploadDataContainer}>\n                <UploadData\n                  currentStep={uploadDataStep}\n                  errorMessage={uploadDataError}\n                />\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2,\n  },\n  waitingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85,\n  },\n  midContainer: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24,\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10,\n  },\n  addSigningKeyContainer: {\n    // marginTop: DEVICE_LARGE ? 25 : 20,\n    // minHeight: '25%',\n  },\n  uploadDataContainer: {\n    // height: '50%',\n  },\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK,\n  },\n  progressContainer: {\n    marginTop: DEVICE_LARGE ? 50 : 40,\n  },\n});\n\nexport default AddDeviceScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}