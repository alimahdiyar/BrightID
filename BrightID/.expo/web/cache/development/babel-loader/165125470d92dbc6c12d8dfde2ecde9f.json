{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { selectAllConnections } from \"../reducer/connectionsSlice\";\nimport { toSearchString } from \"./strings\";\nimport { sortConnectionsBy } from \"./sorting\";\n\nvar searchParamSelector = function searchParamSelector(state) {\n  return state.connections.searchParam;\n};\n\nvar connSortSelector = function connSortSelector(state) {\n  return state.connections.connectionsSort;\n};\n\nvar filtersSelector = function filtersSelector(state) {\n  return state.connections.filters;\n};\n\nexport var connectionsSelector = createSelector([selectAllConnections, searchParamSelector, filtersSelector, connSortSelector, function (_, excluded) {\n  return excluded;\n}], function (connections, searchParam, filters, connectionsSort, excluded) {\n  var searchString = toSearchString(searchParam);\n  return connections.filter(function (conn) {\n    return toSearchString(\"\" + (conn == null ? void 0 : conn.name)).includes(searchString) && filters.includes(conn == null ? void 0 : conn.level) && !(excluded != null && excluded.includes(conn.id));\n  }).sort(sortConnectionsBy(connectionsSort));\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/connectionsSelector.ts"],"names":["searchParamSelector","state","connSortSelector","filtersSelector","connectionsSelector","createSelector","searchString","toSearchString","connections","conn","filters","excluded","sortConnectionsBy"],"mappings":"AAAA,SAAA,cAAA,QAAA,kBAAA;AACA,SAAA,oBAAA;AACA,SAAA,cAAA;AACA,SAAA,iBAAA;;AAEA,IAAMA,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,KAAtBA,EAAsB;EAAA,OAAkBC,KAAK,CAALA,WAAAA,CAAlB,WAAA;AAA5B,CAAA;;AACA,IAAMC,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAAmB;EAAA,OAAkBD,KAAK,CAALA,WAAAA,CAAlB,eAAA;AAAzB,CAAA;;AACA,IAAME,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,KAAlBA,EAAkB;EAAA,OAAkBF,KAAK,CAALA,WAAAA,CAAlB,OAAA;AAAxB,CAAA;;AAEA,OAAO,IAAMG,mBAAmB,GAAGC,cAAc,CAC/C,CAAA,oBAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,gBAAA,EAKE,UAAA,CAAA,EAAA,QAAA,EAAA;EAAA,OAAA,QAAA;AAN6C,CAC/C,CAD+C,EAQ/C,UAAA,WAAA,EAAA,WAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAkE;EAChE,IAAMC,YAAY,GAAGC,cAAc,CAAnC,WAAmC,CAAnC;EACA,OAAOC,WAAW,CAAXA,MAAAA,CAEH,UAAA,IAAA,EAAA;IAAA,OACED,cAAc,CAAA,MAAIE,IAAJ,IAAA,IAAIA,GAAJ,KAAA,CAAIA,GAAAA,IAAI,CAAtBF,IAAc,CAAA,CAAdA,CAAAA,QAAAA,CAAAA,YAAAA,KACAG,OAAO,CAAPA,QAAAA,CAAiBD,IAAjBC,IAAAA,IAAiBD,GAAjBC,KAAAA,CAAiBD,GAAAA,IAAI,CADrBF,KACAG,CADAH,IAEA,EAACI,QAAD,IAAA,IAACA,IAAAA,QAAQ,CAARA,QAAAA,CAAmBF,IAAI,CAH1B,EAGGE,CAAD,CAHF;EAFGH,CAAAA,EAAAA,IAAAA,CAOCI,iBAAiB,CAPzB,eAOyB,CAPlBJ,CAAP;AAVG,CAA0C,CAA1C","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\nimport { toSearchString } from '@/utils/strings';\nimport { sortConnectionsBy } from '@/utils/sorting';\n\nconst searchParamSelector = (state: State) => state.connections.searchParam;\nconst connSortSelector = (state: State) => state.connections.connectionsSort;\nconst filtersSelector = (state: State) => state.connections.filters;\n\nexport const connectionsSelector = createSelector(\n  [\n    selectAllConnections,\n    searchParamSelector,\n    filtersSelector,\n    connSortSelector,\n    (_: State, excluded: string[] | undefined) => excluded,\n  ],\n  (connections, searchParam, filters, connectionsSort, excluded) => {\n    const searchString = toSearchString(searchParam);\n    return connections\n      .filter(\n        (conn) =>\n          toSearchString(`${conn?.name}`).includes(searchString) &&\n          filters.includes(conn?.level) &&\n          !excluded?.includes(conn.id),\n      )\n      .sort(sortConnectionsBy(connectionsSort));\n  },\n);\n"]},"metadata":{},"sourceType":"module"}