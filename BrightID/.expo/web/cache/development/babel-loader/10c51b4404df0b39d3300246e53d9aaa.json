{"ast":null,"code":"'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require(\"./_stream_transform\");\n\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/readable-stream/lib/_stream_passthrough.js"],"names":["module","Transform","require","util","Object","PassThrough","cb"],"mappings":"AAyBA;;AAEAA,MAAM,CAANA,OAAAA,GAAAA,WAAAA;;AAEA,IAAIC,SAAS,GAAGC,OAAhB,uBAAA;;AAGA,IAAIC,IAAI,GAAGC,MAAM,CAANA,MAAAA,CAAcF,OAAO,CAAhC,cAAgC,CAArBE,CAAX;AACAD,IAAI,CAAJA,QAAAA,GAAgBD,OAAO,CAAvBC,UAAuB,CAAvBA;AAGAA,IAAI,CAAJA,QAAAA,CAAAA,WAAAA,EAAAA,SAAAA;;AAEA,SAAA,WAAA,CAAA,OAAA,EAA8B;EAC5B,IAAI,EAAE,gBAAN,WAAI,CAAJ,EAAoC,OAAO,IAAA,WAAA,CAAP,OAAO,CAAP;EAEpCF,SAAS,CAATA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA;AAGFI;;AAAAA,WAAW,CAAXA,SAAAA,CAAAA,UAAAA,GAAmC,UAAA,KAAA,EAAA,QAAA,EAAA,EAAA,EAA+B;EAChEC,EAAE,CAAA,IAAA,EAAFA,KAAE,CAAFA;AADFD,CAAAA","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};"]},"metadata":{},"sourceType":"script"}