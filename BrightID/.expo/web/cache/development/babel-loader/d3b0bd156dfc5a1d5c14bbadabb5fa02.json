{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TasksScreen = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _store = require(\"../../store\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _TaskCardController = _interopRequireDefault(require(\"./TaskCardController\"));\n\nvar _TasksProgress = require(\"./TasksProgress\");\n\nvar _TasksSlice = require(\"./TasksSlice\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TasksScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar FlatListItemSeparator = function FlatListItemSeparator() {\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      height: _reactNative.StyleSheet.hairlineWidth,\n      backgroundColor: _colors.GREY\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n};\n\nvar TasksScreen = function TasksScreen() {\n  var _this2 = this;\n\n  var dispatch = (0, _store.useDispatch)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var taskIds = (0, _store.useSelector)(_TasksSlice.selectTaskIds);\n  var completedTaskIds = (0, _store.useSelector)(_TasksSlice.selectCompletedTaskIds);\n  var headerHeight = (0, _stack.useHeaderHeight)();\n\n  if (_deviceConstants.DEVICE_IOS && _deviceConstants.DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var isDrawerOpen = (0, _drawer.useIsDrawerOpen)();\n  var refreshTasks = (0, _react.useCallback)(function () {\n    dispatch((0, _TasksSlice.checkTasks)());\n  }, [dispatch]);\n  (0, _native.useFocusEffect)(refreshTasks);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _react.default.createElement(_TaskCardController.default, {\n      taskId: item,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }, !isDrawerOpen && styles.shadow],\n    testID: \"tasksScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_TasksProgress.TasksProgress, {\n    currentSteps: completedTaskIds.length,\n    totalSteps: taskIds.length,\n    label: t('achievements.progress.title'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.FlatList, {\n    data: taskIds,\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    ItemSeparatorComponent: FlatListItemSeparator,\n    renderItem: renderItem,\n    refreshControl: _react.default.createElement(_reactNative.RefreshControl, {\n      refreshing: false,\n      onRefresh: refreshTasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexports.TasksScreen = TasksScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    borderTopLeftRadius: _deviceConstants.DEVICE_LARGE ? 50 : 40,\n    paddingLeft: 42,\n    paddingRight: 18\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  }\n});\n\nvar _default = TasksScreen;\nexports.default = _default;","map":{"version":3,"names":["FlatListItemSeparator","height","StyleSheet","hairlineWidth","backgroundColor","GREY","TasksScreen","dispatch","useDispatch","useTranslation","t","taskIds","useSelector","selectTaskIds","completedTaskIds","selectCompletedTaskIds","headerHeight","useHeaderHeight","DEVICE_IOS","DEVICE_LARGE","isDrawerOpen","useIsDrawerOpen","refreshTasks","useCallback","checkTasks","useFocusEffect","renderItem","item","styles","container","marginTop","shadow","length","paddingBottom","flexGrow","create","flex","WHITE","borderTopLeftRadius","paddingLeft","paddingRight","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","width"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TasksScreen.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { FlatList, StyleSheet, View, RefreshControl } from 'react-native';\nimport { useDispatch, useSelector } from '@/store';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport { DEVICE_LARGE, DEVICE_IOS } from '@/utils/deviceConstants';\nimport { GREY, WHITE } from '@/theme/colors';\nimport { useTranslation } from 'react-i18next';\nimport TaskCardController from './TaskCardController';\nimport { TasksProgress } from './TasksProgress';\nimport {\n  selectTaskIds,\n  selectCompletedTaskIds,\n  checkTasks,\n} from './TasksSlice';\n\nconst FlatListItemSeparator = () => {\n  return (\n    <View\n      style={{\n        height: StyleSheet.hairlineWidth,\n        backgroundColor: GREY,\n      }}\n    />\n  );\n};\n\nexport const TasksScreen = function () {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const taskIds = useSelector(selectTaskIds);\n  const completedTaskIds = useSelector(selectCompletedTaskIds);\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const isDrawerOpen = useIsDrawerOpen();\n\n  const refreshTasks = useCallback(() => {\n    dispatch(checkTasks());\n  }, [dispatch]);\n\n  useFocusEffect(refreshTasks);\n\n  const renderItem = ({ item }) => <TaskCardController taskId={item} />;\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { marginTop: headerHeight },\n        !isDrawerOpen && styles.shadow,\n      ]}\n      testID=\"tasksScreen\"\n    >\n      <TasksProgress\n        currentSteps={completedTaskIds.length}\n        totalSteps={taskIds.length}\n        label={t('achievements.progress.title')}\n      />\n      <FlatList\n        data={taskIds}\n        contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n        keyExtractor={(item) => item}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        ItemSeparatorComponent={FlatListItemSeparator}\n        renderItem={renderItem}\n        refreshControl={\n          <RefreshControl refreshing={false} onRefresh={refreshTasks} />\n        }\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n    paddingLeft: 42,\n    paddingRight: 18,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n});\n\nexport default TasksScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}