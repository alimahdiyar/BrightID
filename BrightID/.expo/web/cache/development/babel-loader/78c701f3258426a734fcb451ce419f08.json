{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ConnectionsScreen from '@/components/Connections/ConnectionsScreen';\nimport ConnectionScreenController from '@/components/Connections/ConnectionScreenController';\nimport SearchConnections from '@/components/Helpers/SearchConnections';\nimport i18next from 'i18next';\nimport { headerOptions, AnimatedHeaderTitle, NavHome } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar connectionsScreenOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerRight: function headerRight() {\n    return _jsx(SearchConnections, {});\n  },\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  },\n  headerTitle: function headerTitle() {\n    return _jsx(AnimatedHeaderTitle, {\n      text: i18next.t('connections.header.connections', 'Connections')\n    });\n  }\n});\n\nvar connectionScreenOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerTitle: function headerTitle() {\n    return _jsx(AnimatedHeaderTitle, {\n      text: i18next.t('connectionDetails.header.connectionDetails', 'Connection details')\n    });\n  }\n});\n\nvar Connections = function Connections() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Connections\",\n      component: ConnectionsScreen,\n      options: connectionsScreenOptions\n    }), _jsx(Stack.Screen, {\n      name: \"Connection\",\n      component: ConnectionScreenController,\n      options: connectionScreenOptions\n    })]\n  });\n};\n\nexport default Connections;","map":{"version":3,"names":["React","createStackNavigator","ConnectionsScreen","ConnectionScreenController","SearchConnections","i18next","headerOptions","AnimatedHeaderTitle","NavHome","Stack","connectionsScreenOptions","headerRight","headerLeft","headerTitle","t","connectionScreenOptions","Connections"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Connections.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport ConnectionsScreen from '@/components/Connections/ConnectionsScreen';\nimport ConnectionScreenController from '@/components/Connections/ConnectionScreenController';\nimport SearchConnections from '@/components/Helpers/SearchConnections';\nimport i18next from 'i18next';\nimport { headerOptions, AnimatedHeaderTitle, NavHome } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst connectionsScreenOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerRight: () => <SearchConnections />,\n  headerLeft: () => <NavHome />,\n  headerTitle: () => (\n    <AnimatedHeaderTitle\n      text={i18next.t('connections.header.connections', 'Connections')}\n    />\n  ),\n};\n\nconst connectionScreenOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerTitle: () => (\n    <AnimatedHeaderTitle\n      text={i18next.t(\n        'connectionDetails.header.connectionDetails',\n        'Connection details',\n      )}\n    />\n  ),\n};\n\nconst Connections = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"Connections\"\n        component={ConnectionsScreen}\n        options={connectionsScreenOptions}\n      />\n\n      <Stack.Screen\n        name=\"Connection\"\n        component={ConnectionScreenController}\n        options={connectionScreenOptions}\n      />\n    </>\n  );\n};\n\nexport default Connections;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,QAGO,yBAHP;AAIA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,0BAAP,MAAuC,qDAAvC;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,OAA7C;;;;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;;AAEA,IAAMS,wBAAgD,mCACjDJ,aADiD;EAEpDK,WAAW,EAAE;IAAA,OAAM,KAAC,iBAAD,KAAN;EAAA,CAFuC;EAGpDC,UAAU,EAAE;IAAA,OAAM,KAAC,OAAD,KAAN;EAAA,CAHwC;EAIpDC,WAAW,EAAE;IAAA,OACX,KAAC,mBAAD;MACE,IAAI,EAAER,OAAO,CAACS,CAAR,CAAU,gCAAV,EAA4C,aAA5C;IADR,EADW;EAAA;AAJuC,EAAtD;;AAWA,IAAMC,uBAA+C,mCAChDT,aADgD;EAEnDO,WAAW,EAAE;IAAA,OACX,KAAC,mBAAD;MACE,IAAI,EAAER,OAAO,CAACS,CAAR,CACJ,4CADI,EAEJ,oBAFI;IADR,EADW;EAAA;AAFsC,EAArD;;AAYA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;EACxB,OACE;IAAA,WACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,aADP;MAEE,SAAS,EAAEd,iBAFb;MAGE,OAAO,EAAEQ;IAHX,EADF,EAOE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,YADP;MAEE,SAAS,EAAEP,0BAFb;MAGE,OAAO,EAAEY;IAHX,EAPF;EAAA,EADF;AAeD,CAhBD;;AAkBA,eAAeC,WAAf"},"metadata":{},"sourceType":"module"}