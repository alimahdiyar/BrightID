{"ast":null,"code":"import * as React from 'react';\nimport DrawerOpenContext from \"./DrawerOpenContext\";\nexport default function useIsDrawerOpen() {\n  var isDrawerOpen = React.useContext(DrawerOpenContext);\n\n  if (typeof isDrawerOpen !== 'boolean') {\n    throw new Error(\"Couldn't find a drawer. Is your component inside a drawer navigator?\");\n  }\n\n  return isDrawerOpen;\n}","map":{"version":3,"sources":["useIsDrawerOpen.tsx"],"names":["isDrawerOpen","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,iBAAA;AAKA,eAAe,SAAA,eAAA,GAA2B;EACxC,IAAMA,YAAY,GAAGC,KAAK,CAALA,UAAAA,CAArB,iBAAqBA,CAArB;;EAEA,IAAI,OAAA,YAAA,KAAJ,SAAA,EAAuC;IACrC,MAAM,IAAA,KAAA,CAAN,sEAAM,CAAN;EAGD;;EAED,OAAA,YAAA;AACD","sourcesContent":["import * as React from 'react';\nimport DrawerOpenContext from './DrawerOpenContext';\n\n/**\n * Hook to detect if the drawer is open in a parent navigator.\n */\nexport default function useIsDrawerOpen() {\n  const isDrawerOpen = React.useContext(DrawerOpenContext);\n\n  if (typeof isDrawerOpen !== 'boolean') {\n    throw new Error(\n      \"Couldn't find a drawer. Is your component inside a drawer navigator?\"\n    );\n  }\n\n  return isDrawerOpen;\n}\n"]},"metadata":{},"sourceType":"module"}