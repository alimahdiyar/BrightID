{"ast":null,"code":"import Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { useTranslation } from 'react-i18next';\nimport Clipboard from '@react-native-community/clipboard';\nimport { DEVICE_LARGE, DEVICE_IOS } from \"../../utils/deviceConstants\";\nimport { BLUE, BLACK, WHITE } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport { getExplorerCode } from \"../../utils/explorer\";\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GraphExplorerScreen = function GraphExplorerScreen() {\n  var headerHeight = useHeaderHeight();\n\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var isDrawerOpen = useIsDrawerOpen();\n  var explorerCode = getExplorerCode();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var copyText = function copyText() {\n    Clipboard.setString(explorerCode);\n    Alert.alert(t('graphExplorer.alert.text.copied'));\n  };\n\n  return _jsxs(View, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }, !isDrawerOpen && styles.shadow],\n    testID: \"graphExplorerScreen\",\n    children: [explorerCode ? _jsxs(TouchableOpacity, {\n      onPressOut: copyText,\n      style: styles.copyCodeContainer,\n      children: [_jsx(View, {\n        style: styles.codeBox,\n        children: _jsx(Text, {\n          style: styles.copyText,\n          numberOfLines: 1,\n          children: explorerCode\n        })\n      }), _jsxs(View, {\n        style: styles.copyButton,\n        children: [_jsx(Material, {\n          name: \"content-copy\",\n          size: DEVICE_LARGE ? 28 : 24,\n          color: BLACK\n        }), _jsx(Text, {\n          style: styles.copyText,\n          children: t('graphExplorer.button.copyCode')\n        })]\n      })]\n    }) : _jsxs(View, {\n      style: styles.noExplorerCode,\n      children: [_jsx(Material, {\n        name: \"boom-gate-alert-outline\",\n        size: 30,\n        color: BLACK,\n        style: styles.alertIcon\n      }), _jsx(Text, {\n        style: styles.setupText,\n        children: t('graphExplorer.text.backupRequired')\n      })]\n    }), _jsx(View, {\n      style: styles.infoTextContainer,\n      children: _jsxs(Text, {\n        style: styles.infoText,\n        children: [_jsxs(Text, {\n          onPress: function onPress() {\n            Linking.openURL('https://explorer.brightid.org/');\n          },\n          style: styles.linkText,\n          children: [\"https://explorer.brightid.org\", ' ']\n        }), t('graphExplorer.text.explorerWebsiteDescription')]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  copyCodeContainer: {\n    flexDirection: 'column',\n    width: '80%',\n    height: 100,\n    marginTop: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  codeBox: {\n    width: '100%',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: BLACK,\n    padding: 10,\n    color: BLACK\n  },\n  copyButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10\n  },\n  setupText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14]\n  },\n  noExplorerCode: {\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 80 : 70,\n    paddingHorizontal: DEVICE_LARGE ? 20 : 10\n  },\n  alertIcon: {\n    marginBottom: DEVICE_LARGE ? 20 : 10\n  },\n  infoTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: DEVICE_LARGE ? 100 : 80,\n    paddingHorizontal: DEVICE_LARGE ? 22 : 20\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14]\n  },\n  linkText: {\n    fontFamily: 'Poppins-Regular',\n    color: BLUE,\n    fontSize: fontSize[14],\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: BLUE,\n    margin: 0,\n    padding: 0\n  },\n  copyText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14]\n  }\n});\nexport default GraphExplorerScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/SideMenu/GraphExplorerScreen.tsx"],"names":["GraphExplorerScreen","headerHeight","useHeaderHeight","DEVICE_IOS","isDrawerOpen","useIsDrawerOpen","explorerCode","getExplorerCode","t","useTranslation","copyText","Clipboard","Alert","styles","marginTop","DEVICE_LARGE","Linking","StyleSheet","container","backgroundColor","flex","alignItems","justifyContent","borderTopLeftRadius","shadow","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","width","height","copyCodeContainer","flexDirection","codeBox","borderBottomWidth","borderBottomColor","padding","color","copyButton","setupText","fontFamily","fontSize","noExplorerCode","paddingHorizontal","alertIcon","marginBottom","infoTextContainer","infoText","linkText","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Alert,\n  Text,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Linking,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport Clipboard from '@react-native-community/clipboard';\nimport { DEVICE_LARGE, DEVICE_IOS } from '@/utils/deviceConstants';\nimport { BLUE, BLACK, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport { getExplorerCode } from '@/utils/explorer';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\n\nexport const GraphExplorerScreen = function () {\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const isDrawerOpen = useIsDrawerOpen();\n  const explorerCode = getExplorerCode();\n  const { t } = useTranslation();\n\n  const copyText = () => {\n    Clipboard.setString(explorerCode);\n    Alert.alert(t('graphExplorer.alert.text.copied'));\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { marginTop: headerHeight },\n        !isDrawerOpen && styles.shadow,\n      ]}\n      testID=\"graphExplorerScreen\"\n    >\n      {explorerCode ? (\n        <TouchableOpacity\n          onPressOut={copyText}\n          style={styles.copyCodeContainer}\n        >\n          <View style={styles.codeBox}>\n            <Text style={styles.copyText} numberOfLines={1}>\n              {explorerCode}\n            </Text>\n          </View>\n          <View style={styles.copyButton}>\n            <Material\n              name=\"content-copy\"\n              size={DEVICE_LARGE ? 28 : 24}\n              color={BLACK}\n            />\n            <Text style={styles.copyText}>\n              {t('graphExplorer.button.copyCode')}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ) : (\n        <View style={styles.noExplorerCode}>\n          <Material\n            name=\"boom-gate-alert-outline\"\n            size={30}\n            color={BLACK}\n            style={styles.alertIcon}\n          />\n          <Text style={styles.setupText}>\n            {t('graphExplorer.text.backupRequired')}\n          </Text>\n        </View>\n      )}\n      <View style={styles.infoTextContainer}>\n        <Text style={styles.infoText}>\n          <Text\n            onPress={() => {\n              Linking.openURL('https://explorer.brightid.org/');\n            }}\n            style={styles.linkText}\n          >\n            https://explorer.brightid.org{' '}\n          </Text>\n          {t('graphExplorer.text.explorerWebsiteDescription')}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n\n  copyCodeContainer: {\n    flexDirection: 'column',\n    width: '80%',\n    height: 100,\n    marginTop: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  codeBox: {\n    width: '100%',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: BLACK,\n    padding: 10,\n    color: BLACK,\n  },\n  copyButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n  },\n  setupText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n  },\n  noExplorerCode: {\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 80 : 70,\n    paddingHorizontal: DEVICE_LARGE ? 20 : 10,\n  },\n  alertIcon: {\n    marginBottom: DEVICE_LARGE ? 20 : 10,\n  },\n  infoTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: DEVICE_LARGE ? 100 : 80,\n    paddingHorizontal: DEVICE_LARGE ? 22 : 20,\n    // width: '80%',\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n  },\n  linkText: {\n    fontFamily: 'Poppins-Regular',\n    color: BLUE,\n    fontSize: fontSize[14],\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: BLUE,\n    margin: 0,\n    padding: 0,\n  },\n  copyText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n  },\n});\n\nexport default GraphExplorerScreen;\n"]},"metadata":{},"sourceType":"module"}