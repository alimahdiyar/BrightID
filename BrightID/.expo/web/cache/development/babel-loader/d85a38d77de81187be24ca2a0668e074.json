{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { createStackNavigator, CardStyleInterpolators } from '@react-navigation/stack';\nimport MyCodeScreen from \"../components/PendingConnections/MyCodeScreen\";\nimport ScanCodeScreen from \"../components/PendingConnections/ScanCodeScreen\";\nimport PendingConnectionsScreen from \"../components/PendingConnections/PendingConnectionsScreen\";\nimport GroupConnectionScreen from \"../components/PendingConnections/GroupConnectionScreen\";\nimport { NavHome, headerOptions } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar newConnectionOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  },\n  headerBackTitleVisible: false,\n  title: ''\n});\n\nvar groupConnectionOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  title: 'Group Connection'\n});\n\nvar connectionPreviewOptions = {\n  headerShown: false,\n  cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS\n};\n\nvar PendingConnections = function PendingConnections() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"MyCode\",\n      component: MyCodeScreen,\n      options: newConnectionOptions\n    }), _jsx(Stack.Screen, {\n      name: \"ScanCode\",\n      component: ScanCodeScreen,\n      options: newConnectionOptions\n    }), _jsx(Stack.Screen, {\n      name: \"PendingConnections\",\n      component: PendingConnectionsScreen,\n      options: connectionPreviewOptions\n    }), _jsx(Stack.Screen, {\n      name: \"GroupConnection\",\n      component: GroupConnectionScreen,\n      options: groupConnectionOptions\n    })]\n  });\n};\n\nexport default PendingConnections;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/PendingConnections.tsx"],"names":["Stack","createStackNavigator","newConnectionOptions","headerLeft","headerBackTitleVisible","title","groupConnectionOptions","connectionPreviewOptions","headerShown","cardStyleInterpolator","CardStyleInterpolators","PendingConnections"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,SAAA,oBAAA,EAAA,sBAAA,QAAA,yBAAA;AAKA,OAAA,YAAA;AACA,OAAA,cAAA;AACA,OAAA,wBAAA;AACA,OAAA,qBAAA;AACA,SAAA,OAAA,EAAA,aAAA;;;;AAEA,IAAMA,KAAK,GAAGC,oBAAd,EAAA;;AAEA,IAAMC,oBAA4C,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA;EAEhDC,UAAU,EAAE,SAAA,UAAA,GAAA;IAAA,OAAM,IAAA,CAAA,OAAA,EAAN,EAAM,CAAN;EAFoC,CAAA;EAGhDC,sBAAsB,EAH0B,KAAA;EAIhDC,KAAK,EAJP;AAAkD,CAAA,CAAlD;;AAOA,IAAMC,sBAA8C,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA;EAElDD,KAAK,EAFP;AAAoD,CAAA,CAApD;;AAKA,IAAME,wBAAgD,GAAG;EACvDC,WAAW,EAD4C,KAAA;EAEvDC,qBAAqB,EAAEC,sBAAsB,CAF/C;AAAyD,CAAzD;;AAKA,IAAMC,kBAAkB,GAAlBA,SAAAA,kBAAAA,GAAqB;EAAA,OACzB,KAAA,CAAA,SAAA,EAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,QAAA;MAEE,SAAS,EAFX,YAAA;MAGE,OAAO,EAJX;IACE,CAAA,CADF,EAME,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,UAAA;MAEE,SAAS,EAFX,cAAA;MAGE,OAAO,EATX;IAME,CAAA,CANF,EAWE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,oBAAA;MAEE,SAAS,EAFX,wBAAA;MAGE,OAAO,EAdX;IAWE,CAAA,CAXF,EAgBE,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;MACE,IAAI,EADN,iBAAA;MAEE,SAAS,EAFX,qBAAA;MAGE,OAAO,EApBc;IAiBvB,CAAA,CAhBF;EAAA,CAAA,CADyB;AAA3B,CAAA;;AAyBA,eAAA,kBAAA","sourcesContent":["import * as React from 'react';\nimport {\n  createStackNavigator,\n  CardStyleInterpolators,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport MyCodeScreen from '@/components/PendingConnections/MyCodeScreen';\nimport ScanCodeScreen from '@/components/PendingConnections/ScanCodeScreen';\nimport PendingConnectionsScreen from '@/components/PendingConnections/PendingConnectionsScreen';\nimport GroupConnectionScreen from '@/components/PendingConnections/GroupConnectionScreen';\nimport { NavHome, headerOptions } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst newConnectionOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n  headerBackTitleVisible: false,\n  title: '',\n};\n\nconst groupConnectionOptions: StackNavigationOptions = {\n  ...headerOptions,\n  title: 'Group Connection',\n};\n\nconst connectionPreviewOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardStyleInterpolator: CardStyleInterpolators.forVerticalIOS,\n};\n\nconst PendingConnections = () => (\n  <>\n    <Stack.Screen\n      name=\"MyCode\"\n      component={MyCodeScreen}\n      options={newConnectionOptions}\n    />\n    <Stack.Screen\n      name=\"ScanCode\"\n      component={ScanCodeScreen}\n      options={newConnectionOptions}\n    />\n    <Stack.Screen\n      name=\"PendingConnections\"\n      component={PendingConnectionsScreen}\n      options={connectionPreviewOptions}\n    />\n    <Stack.Screen\n      name=\"GroupConnection\"\n      component={GroupConnectionScreen}\n      options={groupConnectionOptions}\n    />\n  </>\n);\n\nexport default PendingConnections;\n"]},"metadata":{},"sourceType":"module"}