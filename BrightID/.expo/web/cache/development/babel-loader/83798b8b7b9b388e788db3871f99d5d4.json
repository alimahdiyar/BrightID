{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.NotificationsScreen = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _store = require(\"../../store\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNativeTabView = require(\"react-native-tab-view\");\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _pendingConnectionSlice = require(\"../PendingConnections/pendingConnectionSlice\");\n\nvar _EmptyList = _interopRequireDefault(require(\"../Helpers/EmptyList\"));\n\nvar _filesystem = require(\"../../utils/filesystem\");\n\nvar _actions = require(\"../../actions\");\n\nvar _NodeApiGate = require(\"../NodeApiGate\");\n\nvar _NotificationCard = _interopRequireDefault(require(\"./NotificationCard\"));\n\nvar _InviteCard = _interopRequireDefault(require(\"./InviteCard\"));\n\nvar _PendingConnectionCard = _interopRequireDefault(require(\"./PendingConnectionCard\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Notifications/NotificationsScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar thecount = 0;\nvar inviteSelector = (0, _toolkit.createSelector)(function (state) {\n  return state.groups.invites;\n}, function (invites) {\n  return invites.filter(function (_ref) {\n    var state = _ref.state;\n    return state === _constants.INVITE_ACTIVE;\n  });\n});\n\nvar useRefresh = function useRefresh() {\n  var dispatch = (0, _store.useDispatch)();\n  var api = (0, _react.useContext)(_NodeApiGate.NodeApiContext);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    dispatch((0, _actions.updateNotifications)(api)).then(function () {\n      setRefreshing(false);\n    }).catch(function (err) {\n      console.log(err.message);\n      setRefreshing(false);\n    });\n  };\n\n  return [refreshing, onRefresh];\n};\n\nvar ConnectionsList = function ConnectionsList() {\n  var _useRefresh = useRefresh(),\n      _useRefresh2 = (0, _slicedToArray2.default)(_useRefresh, 2),\n      refreshing = _useRefresh2[0],\n      onRefresh = _useRefresh2[1];\n\n  var pendingConnections = (0, _store.useSelector)(function (state) {\n    return (0, _pendingConnectionSlice.selectAllUnconfirmedConnections)(state);\n  });\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var data = pendingConnections.length > 0 ? [{\n    id: 'pendingList'\n  }] : [];\n  return _react.default.createElement(_reactNative.FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: data,\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var id = _ref2.id;\n      return id + index;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    ListEmptyComponent: _react.default.createElement(_EmptyList.default, {\n      title: t('notifications.text.noPendingConnections'),\n      iconType: \"account-off-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }),\n    renderItem: function renderItem() {\n      return _react.default.createElement(_PendingConnectionCard.default, {\n        pendingConnections: pendingConnections,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n};\n\nvar InviteList = function InviteList() {\n  var _useTranslation2 = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation2.t;\n\n  var _useRefresh3 = useRefresh(),\n      _useRefresh4 = (0, _slicedToArray2.default)(_useRefresh3, 2),\n      refreshing = _useRefresh4[0],\n      onRefresh = _useRefresh4[1];\n\n  var invites = (0, _store.useSelector)(function (state) {\n    return inviteSelector(state);\n  });\n  thecount++;\n  console.log('Rendering Invite List', thecount);\n  return _react.default.createElement(_reactNative.FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: invites,\n    keyExtractor: function keyExtractor(_ref3, index) {\n      var id = _ref3.id;\n      return id + index;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    ListEmptyComponent: _react.default.createElement(_EmptyList.default, {\n      title: t('notifications.text.noGroupInvites'),\n      iconType: \"account-group-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }),\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return _react.default.createElement(_InviteCard.default, {\n        invite: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  });\n};\n\nvar MiscList = function MiscList(_ref5) {\n  var route = _ref5.route;\n\n  var _useTranslation3 = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation3.t;\n\n  var photoFilename = (0, _store.useSelector)(function (state) {\n    return state.user.photo.filename;\n  });\n\n  var _useRefresh5 = useRefresh(),\n      _useRefresh6 = (0, _slicedToArray2.default)(_useRefresh5, 2),\n      refreshing = _useRefresh6[0],\n      onRefresh = _useRefresh6[1];\n\n  var data = [];\n\n  if (route.recoveryConnectionsPending) {\n    var imageSource = photoFilename ? {\n      uri: \"file://\" + (0, _filesystem.photoDirectory)() + \"/\" + photoFilename\n    } : require(\"../../static/default_profile.jpg\");\n    data.push({\n      title: t('notifications.item.title.socialRecovery'),\n      msg: t('notifications.item.msg.socialRecovery'),\n      imageSource: imageSource,\n      navigationTarget: 'Recovery Connections',\n      testID: 'SocialRecoveryNotifcation'\n    });\n  }\n\n  if (route.backupPending) {\n    var _imageSource = photoFilename ? {\n      uri: \"file://\" + (0, _filesystem.photoDirectory)() + \"/\" + photoFilename\n    } : require(\"../../static/default_profile.jpg\");\n\n    data.push({\n      title: t('notifications.item.title.backupBrightId'),\n      msg: t('notifications.item.msg.backupBrightId'),\n      imageSource: _imageSource,\n      navigationTarget: 'Edit Profile',\n      testID: 'BackupNotification'\n    });\n  }\n\n  return _react.default.createElement(_reactNative.FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: data,\n    keyExtractor: function keyExtractor(_ref6, index) {\n      var msg = _ref6.msg;\n      return msg + index;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    ListEmptyComponent: _react.default.createElement(_EmptyList.default, {\n      title: t('notifications.text.noMiscellaneous'),\n      iconType: \"bell-off-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }),\n    renderItem: function renderItem(_ref7) {\n      var item = _ref7.item;\n      return _react.default.createElement(_NotificationCard.default, {\n        title: item.title,\n        msg: item.msg,\n        imageSource: item.imageSource,\n        navigationTarget: item.navigationTarget,\n        testID: item.testID,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  });\n};\n\nvar initialLayout = {\n  width: _reactNative.Dimensions.get('window').width\n};\n\nvar renderTabBar = function renderTabBar(props) {\n  return _react.default.createElement(_reactNativeTabView.TabBar, (0, _extends2.default)({}, props, {\n    indicatorStyle: {\n      backgroundColor: _colors.ORANGE\n    },\n    style: styles.tabBar,\n    renderLabel: function renderLabel(_ref8) {\n      var route = _ref8.route,\n          color = _ref8.color;\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.tabContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }\n      }, route.badge && _react.default.createElement(_reactNative.View, {\n        style: styles.badge,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: [styles.tabText, {\n          color: color\n        }],\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, route.title));\n    },\n    inactiveColor: _colors.GREY,\n    activeColor: _colors.BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar NotificationsScreen = function NotificationsScreen() {\n  var _route$params, _SceneMap;\n\n  var dispatch = (0, _store.useDispatch)();\n  var route = (0, _native.useRoute)();\n\n  var _useTranslation4 = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation4.t;\n\n  var api = (0, _react.useContext)(_NodeApiGate.NodeApiContext);\n  var pendingConnections = (0, _store.useSelector)(function (state) {\n    var _selectAllUnconfirmed;\n\n    return (_selectAllUnconfirmed = (0, _pendingConnectionSlice.selectAllUnconfirmedConnections)(state)) == null ? void 0 : _selectAllUnconfirmed.length;\n  });\n  var invites = (0, _store.useSelector)(function (state) {\n    var _inviteSelector;\n\n    return (_inviteSelector = inviteSelector(state)) == null ? void 0 : _inviteSelector.length;\n  });\n  var backupPending = (0, _store.useSelector)(function (state) {\n    return state.notifications.backupPending;\n  });\n  var recoveryConnectionsPending = (0, _store.useSelector)(function (state) {\n    return state.notifications.recoveryConnectionsPending;\n  });\n  var routes = [{\n    key: _constants.CONNECTIONS_TYPE,\n    title: t('notifications.tab.connections'),\n    badge: !!pendingConnections\n  }, {\n    key: _constants.GROUPS_TYPE,\n    title: t('notifications.tab.groups'),\n    badge: !!invites\n  }, {\n    key: _constants.MISC_TYPE,\n    title: t('notifications.tab.miscellaneous'),\n    badge: backupPending || recoveryConnectionsPending,\n    backupPending: backupPending,\n    recoveryConnectionsPending: recoveryConnectionsPending\n  }];\n  var displayRoute = (_route$params = route.params) != null && _route$params.type ? routes.findIndex(function (_ref9) {\n    var _route$params2;\n\n    var key = _ref9.key;\n    return key === ((_route$params2 = route.params) == null ? void 0 : _route$params2.type);\n  }) : routes.findIndex(function (_ref10) {\n    var badge = _ref10.badge;\n    return badge;\n  });\n\n  var _useState3 = (0, _react.useState)(displayRoute),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  var renderScene = (0, _reactNativeTabView.SceneMap)((_SceneMap = {}, (0, _defineProperty2.default)(_SceneMap, _constants.CONNECTIONS_TYPE, ConnectionsList), (0, _defineProperty2.default)(_SceneMap, _constants.GROUPS_TYPE, InviteList), (0, _defineProperty2.default)(_SceneMap, _constants.MISC_TYPE, MiscList), _SceneMap));\n  (0, _native.useFocusEffect)((0, _react.useCallback)(function () {\n    dispatch((0, _actions.updateNotifications)(api));\n  }, [api, dispatch]));\n  console.log('Rendering Notification Screen');\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: _colors.ORANGE,\n    animated: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.orangeTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    testID: \"NotificationsScreen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeTabView.TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    renderTabBar: renderTabBar,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  })));\n};\n\nexports.NotificationsScreen = NotificationsScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  orangeTop: {\n    backgroundColor: _colors.ORANGE,\n    height: _deviceConstants.DEVICE_LARGE ? 70 : 62,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  badge: {\n    backgroundColor: _colors.ORANGE,\n    width: _deviceConstants.DEVICE_LARGE ? 8 : 6,\n    height: _deviceConstants.DEVICE_LARGE ? 8 : 6,\n    borderRadius: 4,\n    marginRight: _deviceConstants.DEVICE_LARGE ? 8 : 6\n  },\n  tabBar: {\n    backgroundColor: _colors.WHITE,\n    paddingLeft: _deviceConstants.DEVICE_LARGE ? 20 : 18\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tabText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[12]\n  }\n});\n\nvar _default = NotificationsScreen;\nexports.default = _default;","map":{"version":3,"names":["thecount","inviteSelector","createSelector","state","groups","invites","filter","INVITE_ACTIVE","useRefresh","dispatch","useDispatch","api","useContext","NodeApiContext","useState","refreshing","setRefreshing","onRefresh","updateNotifications","then","catch","err","console","log","message","ConnectionsList","pendingConnections","useSelector","selectAllUnconfirmedConnections","useTranslation","t","data","length","id","paddingBottom","flexGrow","index","InviteList","item","MiscList","route","photoFilename","user","photo","filename","recoveryConnectionsPending","imageSource","uri","photoDirectory","require","push","title","msg","navigationTarget","testID","backupPending","initialLayout","width","Dimensions","get","renderTabBar","props","backgroundColor","ORANGE","styles","tabBar","color","tabContainer","badge","tabText","GREY","BLACK","NotificationsScreen","useRoute","notifications","routes","key","CONNECTIONS_TYPE","GROUPS_TYPE","MISC_TYPE","displayRoute","params","type","findIndex","setIndex","renderScene","SceneMap","useFocusEffect","useCallback","orangeTop","container","StyleSheet","create","height","DEVICE_LARGE","zIndex","flex","WHITE","borderTopLeftRadius","marginTop","overflow","borderRadius","marginRight","paddingLeft","flexDirection","alignItems","fontFamily","fontSize"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Notifications/NotificationsScreen.tsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  View,\n  FlatList,\n  Text,\n  StatusBar,\n} from 'react-native';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  useFocusEffect,\n  useNavigation,\n  useRoute,\n  RouteProp,\n} from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { TabBar, TabView, SceneMap } from 'react-native-tab-view';\nimport {\n  INVITE_ACTIVE,\n  CONNECTIONS_TYPE,\n  GROUPS_TYPE,\n  MISC_TYPE,\n} from '@/utils/constants';\nimport { ORANGE, WHITE, GREY, BLACK } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { selectAllUnconfirmedConnections } from '@/components/PendingConnections/pendingConnectionSlice';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { updateNotifications } from '@/actions/index';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport NotificationCard from './NotificationCard';\nimport InviteCard from './InviteCard';\nimport PendingConnectionCard from './PendingConnectionCard';\n\nlet thecount = 0;\n\n/** SELECTORS */\n\nconst inviteSelector = createSelector(\n  (state: State) => state.groups.invites,\n  (invites) => invites.filter(({ state }) => state === INVITE_ACTIVE),\n);\n\n/** HOOKS */\n\nconst useRefresh: () => [boolean, () => void] = () => {\n  const dispatch = useDispatch();\n  const api = useContext(NodeApiContext);\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefresh = () => {\n    setRefreshing(true);\n    dispatch(updateNotifications(api))\n      .then(() => {\n        setRefreshing(false);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setRefreshing(false);\n      });\n  };\n  return [refreshing, onRefresh];\n};\n\n/** TYPES */\n\ntype Route = {\n  badge: boolean;\n  backupPending?: boolean;\n  recoveryConnectionsPending?: boolean;\n  title?: string;\n};\n/** COMPONENTS  */\n\nconst ConnectionsList = () => {\n  const [refreshing, onRefresh] = useRefresh();\n  const pendingConnections = useSelector((state) =>\n    selectAllUnconfirmedConnections(state),\n  );\n  const { t } = useTranslation();\n  // only display one notification for all pending connections\n  const data = pendingConnections.length > 0 ? [{ id: 'pendingList' }] : [];\n\n  return (\n    <FlatList\n      contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n      data={data}\n      keyExtractor={({ id }, index) => id + index}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      ListEmptyComponent={\n        <EmptyList\n          title={t('notifications.text.noPendingConnections')}\n          iconType=\"account-off-outline\"\n        />\n      }\n      renderItem={() => (\n        <PendingConnectionCard pendingConnections={pendingConnections} />\n      )}\n    />\n  );\n};\n\nconst InviteList = () => {\n  const { t } = useTranslation();\n  const [refreshing, onRefresh] = useRefresh();\n  const invites = useSelector((state) => inviteSelector(state));\n  thecount++;\n  console.log('Rendering Invite List', thecount);\n\n  return (\n    <FlatList\n      contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n      data={invites}\n      keyExtractor={({ id }, index) => id + index}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      ListEmptyComponent={\n        <EmptyList\n          title={t('notifications.text.noGroupInvites')}\n          iconType=\"account-group-outline\"\n        />\n      }\n      renderItem={({ item }) => <InviteCard invite={item} />}\n    />\n  );\n};\n\nconst MiscList = ({ route }: { route: Route }) => {\n  const { t } = useTranslation();\n  const photoFilename = useSelector((state) => state.user.photo.filename);\n  const [refreshing, onRefresh] = useRefresh();\n  const data = [];\n\n  if (route.recoveryConnectionsPending) {\n    // TODO: Set better image\n    const imageSource = photoFilename\n      ? { uri: `file://${photoDirectory()}/${photoFilename}` }\n      : require('@/static/default_profile.jpg');\n    data.push({\n      title: t('notifications.item.title.socialRecovery'),\n      msg: t('notifications.item.msg.socialRecovery'),\n      imageSource,\n      navigationTarget: 'Recovery Connections',\n      testID: 'SocialRecoveryNotifcation',\n    });\n  }\n\n  if (route.backupPending) {\n    // TODO: Set appropriate image\n    const imageSource = photoFilename\n      ? { uri: `file://${photoDirectory()}/${photoFilename}` }\n      : require('@/static/default_profile.jpg');\n    data.push({\n      title: t('notifications.item.title.backupBrightId'),\n      msg: t('notifications.item.msg.backupBrightId'),\n      imageSource,\n      navigationTarget: 'Edit Profile',\n      testID: 'BackupNotification',\n    });\n  }\n\n  return (\n    <FlatList\n      contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n      data={data}\n      keyExtractor={({ msg }, index) => msg + index}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      ListEmptyComponent={\n        <EmptyList\n          title={t('notifications.text.noMiscellaneous')}\n          iconType=\"bell-off-outline\"\n        />\n      }\n      renderItem={({ item }) => (\n        <NotificationCard\n          title={item.title}\n          msg={item.msg}\n          imageSource={item.imageSource}\n          navigationTarget={item.navigationTarget}\n          testID={item.testID}\n        />\n      )}\n    />\n  );\n};\n\nconst initialLayout = { width: Dimensions.get('window').width };\n\nconst renderTabBar = (props) => (\n  <TabBar\n    {...props}\n    indicatorStyle={{ backgroundColor: ORANGE }}\n    style={styles.tabBar}\n    renderLabel={({ route, color }: { route: Route; color: string }) => (\n      <View style={styles.tabContainer}>\n        {route.badge && <View style={styles.badge} />}\n        <Text\n          style={[styles.tabText, { color }]}\n          adjustsFontSizeToFit={true}\n          numberOfLines={1}\n        >\n          {route.title}\n        </Text>\n      </View>\n    )}\n    inactiveColor={GREY}\n    activeColor={BLACK}\n  />\n);\n\ntype NotificationsRoute = RouteProp<\n  {\n    Notifications: {\n      type?: typeof CONNECTIONS_TYPE | typeof GROUPS_TYPE | typeof MISC_TYPE;\n    };\n  },\n  'Notifications'\n>;\n\nexport const NotificationsScreen = () => {\n  const dispatch = useDispatch();\n  const route = useRoute<NotificationsRoute>();\n  const { t } = useTranslation();\n  const api = useContext(NodeApiContext);\n\n  const pendingConnections = useSelector(\n    (state) => selectAllUnconfirmedConnections(state)?.length,\n  );\n\n  const invites = useSelector((state) => inviteSelector(state)?.length);\n\n  const backupPending = useSelector(\n    (state) => state.notifications.backupPending,\n  );\n\n  const recoveryConnectionsPending = useSelector(\n    (state) => state.notifications.recoveryConnectionsPending,\n  );\n\n  const routes = [\n    {\n      key: CONNECTIONS_TYPE,\n      title: t('notifications.tab.connections'),\n      badge: !!pendingConnections,\n    },\n    {\n      key: GROUPS_TYPE,\n      title: t('notifications.tab.groups'),\n      badge: !!invites,\n    },\n    {\n      key: MISC_TYPE,\n      title: t('notifications.tab.miscellaneous'),\n      badge: backupPending || recoveryConnectionsPending,\n      backupPending,\n      recoveryConnectionsPending,\n    },\n  ];\n  // if we navigate here from the banner, go to the section from the banner\n  // if we navigate here normally, go to the first route with content, if any\n\n  const displayRoute = route.params?.type\n    ? routes.findIndex(({ key }) => key === route.params?.type)\n    : routes.findIndex(({ badge }) => badge);\n\n  const [index, setIndex] = useState(displayRoute);\n\n  const renderScene = SceneMap({\n    [CONNECTIONS_TYPE]: ConnectionsList,\n    [GROUPS_TYPE]: InviteList,\n    [MISC_TYPE]: MiscList,\n  });\n\n  useFocusEffect(\n    useCallback(() => {\n      dispatch(updateNotifications(api));\n    }, [api, dispatch]),\n  );\n\n  console.log('Rendering Notification Screen');\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor={ORANGE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"NotificationsScreen\">\n        <TabView\n          navigationState={{ index, routes }}\n          renderScene={renderScene}\n          renderTabBar={renderTabBar}\n          onIndexChange={setIndex}\n          initialLayout={initialLayout}\n        />\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 62,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  badge: {\n    backgroundColor: ORANGE,\n    width: DEVICE_LARGE ? 8 : 6,\n    height: DEVICE_LARGE ? 8 : 6,\n    borderRadius: 4,\n    marginRight: DEVICE_LARGE ? 8 : 6,\n  },\n  tabBar: { backgroundColor: WHITE, paddingLeft: DEVICE_LARGE ? 20 : 18 },\n  tabContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  tabText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n  },\n});\n\nexport default NotificationsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}