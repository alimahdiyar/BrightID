{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _TaskState = require(\"./TaskState\");\n\nvar _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TaskCard.tsx\";\n\nfunction TaskCard(props) {\n  var title = props.title,\n      description = props.description,\n      fulfilled = props.fulfilled,\n      url = props.url,\n      onClick = props.onClick,\n      navigationTarget = props.navigationTarget;\n  var navigation = (0, _native.useNavigation)();\n  var desc = url || navigationTarget ? _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      if (navigationTarget) {\n        navigation.navigate(navigationTarget, {\n          url: url\n        });\n      } else if (url) {\n        _reactNative.Linking.openURL(url);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.linkifiedDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, description)) : _react.default.createElement(_reactNative.Text, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, description);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.taskInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, title), desc), _react.default.createElement(_TaskState.TaskState, {\n    complete: fulfilled,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    paddingTop: _deviceConstants.DEVICE_LARGE ? 15 : 12,\n    paddingRight: 0,\n    paddingBottom: _deviceConstants.DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  taskInfo: {\n    marginRight: 25,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly'\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: _fonts.fontSize[20],\n    color: _colors.BLACK\n  },\n  description: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: _fonts.fontSize[15],\n    color: _colors.BLACK\n  },\n  linkifiedDescription: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: _fonts.fontSize[15],\n    color: _colors.BLUE\n  }\n});\n\nvar _default = TaskCard;\nexports.default = _default;","map":{"version":3,"names":["TaskCard","props","title","description","fulfilled","url","onClick","navigationTarget","navigation","useNavigation","desc","navigate","Linking","openURL","styles","linkifiedDescription","container","taskInfo","StyleSheet","create","paddingTop","DEVICE_LARGE","paddingRight","paddingBottom","flexDirection","justifyContent","marginRight","flex","fontFamily","fontStyle","fontSize","color","BLACK","BLUE"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TaskCard.tsx"],"sourcesContent":["import {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Linking,\n} from 'react-native';\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK, BLUE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { TaskState } from './TaskState';\n\ntype TaskCardProps = {\n  id: string;\n  title: string;\n  description: string;\n  fulfilled: boolean;\n  url: string | null | undefined;\n  navigationTarget: string | null | undefined;\n  onClick: () => any | null | undefined;\n};\n\nfunction TaskCard(props: TaskCardProps) {\n  const { title, description, fulfilled, url, onClick, navigationTarget } =\n    props;\n  const navigation = useNavigation();\n\n  const desc =\n    url || navigationTarget ? (\n      <TouchableOpacity\n        onPress={() => {\n          if (navigationTarget) {\n            navigation.navigate(navigationTarget, { url });\n          } else if (url) {\n            Linking.openURL(url);\n          }\n        }}\n      >\n        <Text style={styles.linkifiedDescription}>{description}</Text>\n      </TouchableOpacity>\n    ) : (\n      <Text style={styles.description}>{description}</Text>\n    );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskInfo}>\n        <Text style={styles.title}>{title}</Text>\n        {desc}\n      </View>\n      <TaskState complete={fulfilled} onClick={onClick} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: DEVICE_LARGE ? 15 : 12,\n    paddingRight: 0,\n    paddingBottom: DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n  },\n  taskInfo: {\n    marginRight: 25,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[20],\n    color: BLACK,\n  },\n  description: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  linkifiedDescription: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[15],\n    color: BLUE,\n  },\n});\n\nexport default TaskCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}