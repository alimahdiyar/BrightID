{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from \"../Dimensions\";\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/DeviceInfo/index.js"],"names":["DeviceInfo","Dimensions","_Dimensions$get","width","height","fontScale","scale","_Dimensions$get2","navigator","canUseDOM"],"mappings":"AAQA,SAAA,SAAA,QAAA,+BAAA;AACA,OAAA,UAAA;AACA,IAAIA,UAAU,GAAG;EACfC,UAAU,EAAE;IACV,IAAA,oBAAA,GAA2B;MACzB,IAAIC,eAAe,GAAGD,UAAU,CAAVA,GAAAA,CAAtB,QAAsBA,CAAtB;MAAA,IACIE,KAAK,GAAGD,eAAe,CAD3B,KAAA;MAAA,IAEIE,MAAM,GAAGF,eAAe,CAF5B,MAAA;MAAA,IAGIG,SAAS,GAAGH,eAAe,CAH/B,SAAA;MAAA,IAIII,KAAK,GAAGJ,eAAe,CAJ3B,KAAA;;MAMA,OAAO;QACLC,KAAK,EAAEA,KAAK,GADP,KAAA;QAELC,MAAM,EAAEA,MAAM,GAFT,KAAA;QAGLE,KAAK,EAHA,KAAA;QAILD,SAAS,EAJX;MAAO,CAAP;IARQ,CAAA;;IAgBV,IAAA,oBAAA,GAA2B;MACzB,IAAIE,gBAAgB,GAAGN,UAAU,CAAVA,GAAAA,CAAvB,QAAuBA,CAAvB;MAAA,IACIE,KAAK,GAAGI,gBAAgB,CAD5B,KAAA;MAAA,IAEIH,MAAM,GAAGG,gBAAgB,CAF7B,MAAA;MAAA,IAGIF,SAAS,GAAGE,gBAAgB,CAHhC,SAAA;MAAA,IAIID,KAAK,GAAGC,gBAAgB,CAJ5B,KAAA;;MAMA,OAAO;QACLJ,KAAK,EAAEA,KAAK,GADP,KAAA;QAELC,MAAM,EAAEA,MAAM,GAFT,KAAA;QAGLE,KAAK,EAHA,KAAA;QAILD,SAAS,EAJX;MAAO,CAAP;IAxBW;;EACH,CADG;;EAkCf,IAAA,MAAA,GAAa;IACX,IAAA,SAAA,EAAe;MACb,IAAIG,SAAS,CAAb,SAAA,EAAyB;QACvB,OAAOA,SAAS,CAATA,SAAAA,CAAP,CAAOA,CAAP;MADF,CAAA,MAEO;QACL,OAAOA,SAAS,CAAhB,QAAA;MAEH;IACF;EA1Cc,CAAA;;EA4Cf,IAAA,WAAA,GAAkB;IAEhB,OAAOC,SAAS,GAAGD,SAAS,CAAZ,YAAA,GAAhB,SAAA;EA9Ca,CAAA;;EAiDf,IAAA,SAAA,GAAgB;IACd,OAAOC,SAAS,GAAGD,SAAS,CAAZ,SAAA,GAAhB,EAAA;EAlDJ;;AAAiB,CAAjB;AAsDA,eAAA,UAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport Dimensions from '../Dimensions';\nvar DeviceInfo = {\n  Dimensions: {\n    get windowPhysicalPixels() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height,\n          fontScale = _Dimensions$get.fontScale,\n          scale = _Dimensions$get.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    },\n\n    get screenPhysicalPixels() {\n      var _Dimensions$get2 = Dimensions.get('screen'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height,\n          fontScale = _Dimensions$get2.fontScale,\n          scale = _Dimensions$get2.scale;\n\n      return {\n        width: width * scale,\n        height: height * scale,\n        scale: scale,\n        fontScale: fontScale\n      };\n    }\n\n  },\n\n  get locale() {\n    if (canUseDOM) {\n      if (navigator.languages) {\n        return navigator.languages[0];\n      } else {\n        return navigator.language;\n      }\n    }\n  },\n\n  get totalMemory() {\n    // $FlowIssue deviceMemory not defined in navigator\n    return canUseDOM ? navigator.deviceMemory : undefined;\n  },\n\n  get userAgent() {\n    return canUseDOM ? navigator.userAgent : '';\n  }\n\n};\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"module"}