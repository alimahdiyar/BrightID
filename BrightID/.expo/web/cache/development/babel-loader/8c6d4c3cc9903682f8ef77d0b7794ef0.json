{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.FindFriendsScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _ContactsProvider = _interopRequireDefault(require(\"../../utils/ContactsProvider\"));\n\nvar _deviceConstants = require(\"../../utils/deviceConstants\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _store = require(\"../../store\");\n\nvar _socialMediaVariationSlice = require(\"../../reducer/socialMediaVariationSlice\");\n\nvar _fonts = require(\"../../theme/fonts\");\n\nvar _socialMediaVariations = require(\"../EditProfile/socialMediaVariations\");\n\nvar _phoneUtils = require(\"../../utils/phoneUtils\");\n\nvar _cryptoHelper = require(\"../../utils/cryptoHelper\");\n\nvar _EmptyList = _interopRequireDefault(require(\"../Helpers/EmptyList\"));\n\nvar _types = require(\"../Apps/types.d\");\n\nvar _socialMediaServiceProvider = _interopRequireDefault(require(\"../../utils/socialMediaServiceProvider\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/FindFriends/FindFriendsScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar FlatListItemSeparator = function FlatListItemSeparator() {\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      height: _reactNative.StyleSheet.hairlineWidth,\n      backgroundColor: _colors.GREY\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n};\n\nfunction removeDuplicates(friendProfiles) {\n  var uniques = [];\n  friendProfiles.forEach(function (friendProfile) {\n    if (!uniques.find(function (item) {\n      return item.profile === friendProfile.profile && item.variation.id === friendProfile.variation.id;\n    })) {\n      uniques.push(friendProfile);\n    }\n  });\n  return uniques;\n}\n\nvar FindFriendsScreen = function FindFriendsScreen() {\n  var _this2 = this;\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var headerHeight = (0, _stack.useHeaderHeight)();\n\n  if (_deviceConstants.DEVICE_IOS && _deviceConstants.DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var isDrawerOpen = (0, _drawer.useIsDrawerOpen)();\n  var emailSocialMediaVariation = (0, _store.useSelector)(function (state) {\n    return (0, _socialMediaVariationSlice.selectSocialMediaVariationById)(state, _socialMediaVariations.SocialMediaVariationIds.EMAIL);\n  });\n  var phoneNumberSocialMediaVariation = (0, _store.useSelector)(function (state) {\n    return (0, _socialMediaVariationSlice.selectSocialMediaVariationById)(state, _socialMediaVariations.SocialMediaVariationIds.PHONE_NUMBER);\n  });\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      friendsRaw = _useState2[0],\n      setFriendsRaw = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      apiError = _useState4[0],\n      setApiError = _useState4[1];\n\n  var _useState5 = (0, _react.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      friends = _useState6[0],\n      setFriends = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var getContacts = (0, _react.useCallback)(function _callee() {\n    var _friendsRaw, permissionStatus, contacts;\n\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _friendsRaw = [];\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.request(_reactNative.PermissionsAndroid.PERMISSIONS.READ_CONTACTS, {\n              title: 'Contacts',\n              message: 'This app would like to view your contacts.',\n              buttonPositive: 'Please accept bare mortal',\n              buttonNegative: 'No, thanks'\n            }));\n\n          case 3:\n            permissionStatus = _context.sent;\n\n            if (!(permissionStatus === 'granted')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regenerator.default.awrap(_ContactsProvider.default.getAll());\n\n          case 7:\n            contacts = _context.sent;\n            contacts.forEach(function (contact) {\n              var contactName = contact.displayName;\n              contact.emailAddresses.forEach(function (emailAddress) {\n                var _profile = emailAddress.email;\n\n                _friendsRaw.push({\n                  name: contactName,\n                  profile: _profile,\n                  profileHash: (0, _cryptoHelper.hashSocialProfile)(_profile),\n                  variation: emailSocialMediaVariation\n                });\n              });\n              contact.phoneNumbers.forEach(function (phoneNumber) {\n                var _profile = (0, _phoneUtils.extractDigits)(phoneNumber.number);\n\n                _friendsRaw.push({\n                  name: contactName,\n                  profile: _profile,\n                  profileHash: (0, _cryptoHelper.hashSocialProfile)(_profile),\n                  variation: phoneNumberSocialMediaVariation\n                });\n              });\n            });\n\n          case 9:\n            _friendsRaw = removeDuplicates(_friendsRaw);\n            setFriendsRaw(_friendsRaw);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [emailSocialMediaVariation, phoneNumberSocialMediaVariation]);\n  (0, _react.useEffect)(function () {\n    getContacts().catch(console.error);\n  }, [getContacts]);\n  var fetchFriends = (0, _react.useCallback)(function _callee2() {\n    var _profileHashes, _filteredProfileHashes;\n\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (friendsRaw.length) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            setApiError(null);\n            _profileHashes = friendsRaw.map(function (friendProfile) {\n              return friendProfile.profileHash;\n            });\n\n            if (!_profileHashes.length) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.prev = 6;\n            _context2.next = 9;\n            return _regenerator.default.awrap(_socialMediaServiceProvider.default.querySocialMedia({\n              profileHashes: _profileHashes,\n              network: __DEV__ ? _types.BrightIdNetwork.TEST : _types.BrightIdNetwork.NODE\n            }));\n\n          case 9:\n            _filteredProfileHashes = _context2.sent;\n            setFriends(friendsRaw.filter(function (friendProfile) {\n              return _filteredProfileHashes.includes(friendProfile.profileHash);\n            }));\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](6);\n            setApiError(t('common.text.noConnection'));\n\n          case 16:\n            _context2.next = 19;\n            break;\n\n          case 18:\n            setFriends([]);\n\n          case 19:\n            setLoading(false);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[6, 13]], Promise);\n  }, [friendsRaw, t]);\n  (0, _react.useEffect)(function () {\n    fetchFriends().catch(console.error);\n  }, [fetchFriends, friendsRaw]);\n\n  function sendInvitation(item) {\n    var subject = \"Let's connect on BrightID\";\n    var connectionLink = 'https://app.brightid.org/connection-code/xxx';\n    var body = \"Hi\\nLet's connect on BrightID!\\n\" + connectionLink;\n\n    if (item.variation.id === _socialMediaVariations.SocialMediaVariationIds.PHONE_NUMBER) {\n      var smsDivider = _reactNative.Platform.OS === 'ios' ? '&' : '?';\n      var phone = item.profile;\n\n      _reactNative.Linking.openURL(\"sms:\" + phone + smsDivider + \"body=\" + body);\n\n      return;\n    }\n\n    if (item.variation.id === _socialMediaVariations.SocialMediaVariationIds.EMAIL) {\n      var email = item.profile;\n\n      _reactNative.Linking.openURL(\"mailto:\" + email + \"?subject=\" + subject + \"&body=\" + body);\n\n      return;\n    }\n\n    var invitationNotAvailableText = t('findFriends.text.invitationNotAvailable');\n\n    if (_reactNative.Platform.OS === 'android') {\n      _reactNative.ToastAndroid.show(invitationNotAvailableText, _reactNative.ToastAndroid.LONG);\n    } else {\n      _reactNative.Alert.alert(invitationNotAvailableText);\n    }\n  }\n\n  var keyExtractor = function keyExtractor(item, idx) {\n    var _item$recordID;\n\n    return (item == null ? void 0 : (_item$recordID = item.recordID) == null ? void 0 : _item$recordID.toString()) || idx.toString();\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.contactCon,\n      testID: item.name + \"-\" + item.variation.name,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.imgCon,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.placeholder,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.txt,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, item.name ? item.name[0] : ''))), _react.default.createElement(_reactNative.View, {\n      style: styles.contactDat,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.name,\n      numberOfLines: 1,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, item.name), _react.default.createElement(_reactNative.Text, {\n      style: styles.profile,\n      numberOfLines: 1,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, item.variation.name), _react.default.createElement(_reactNative.Text, {\n      style: styles.profile,\n      numberOfLines: 1,\n      testID: item.profile,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, item.profile)), _react.default.createElement(_reactNative.View, {\n      style: styles.contactAction,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  function renderFriendsList() {\n    return _react.default.createElement(_reactNative.FlatList, {\n      data: friends,\n      contentContainerStyle: {\n        paddingBottom: 50,\n        flexGrow: 1\n      },\n      keyExtractor: keyExtractor,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      ItemSeparatorComponent: FlatListItemSeparator,\n      renderItem: renderItem,\n      ListEmptyComponent: _react.default.createElement(_EmptyList.default, {\n        iconType: \"account-off-outline\",\n        title: t('findFriends.text.noFriends'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }),\n      refreshControl: _react.default.createElement(_reactNative.RefreshControl, {\n        refreshing: false,\n        onRefresh: fetchFriends,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    });\n  }\n\n  function renderStatus() {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.statusContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    }, apiError ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.Text, {\n      style: styles.apiErrorText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, apiError), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: styles.retryBtn,\n      onPress: fetchFriends,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.retryBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, t('common.button.retry')))) : _react.default.createElement(_reactNative.ActivityIndicator, {\n      size: \"large\",\n      color: _colors.DARKER_GREY,\n      animating: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }, !isDrawerOpen && styles.shadow],\n    testID: \"findFriendsScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, loading || apiError ? renderStatus() : renderFriendsList());\n};\n\nexports.FindFriendsScreen = FindFriendsScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  apiErrorText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    textAlign: 'center',\n    lineHeight: 26,\n    marginBottom: 12\n  },\n  retryBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: _deviceConstants.DEVICE_LARGE ? 160 : 140,\n    height: _deviceConstants.DEVICE_LARGE ? 50 : 45,\n    backgroundColor: _colors.ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: _colors.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  retryBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.WHITE\n  },\n  inviteBtn: {\n    width: '100%',\n    height: 40,\n    borderRadius: 100,\n    borderColor: _colors.ORANGE,\n    borderWidth: 1,\n    backgroundColor: _colors.WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inviteBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.ORANGE\n  },\n  statusContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: -20,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    paddingLeft: 10,\n    paddingRight: 18\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  contactCon: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 5,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#d9d9d9',\n    paddingVertical: 24,\n    paddingHorizontal: 18\n  },\n  imgCon: {},\n  placeholder: {\n    width: 55,\n    height: 55,\n    borderRadius: 30,\n    overflow: 'hidden',\n    backgroundColor: '#d9d9d9',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  contactDat: {\n    flex: 3,\n    justifyContent: 'center',\n    paddingLeft: 10,\n    paddingRight: 5\n  },\n  contactAction: {\n    flex: 1.4,\n    justifyContent: 'center',\n    paddingLeft: 5\n  },\n  txt: {\n    fontSize: 18\n  },\n  name: {\n    fontSize: 16\n  },\n  profile: {\n    color: '#888'\n  }\n});\n\nvar _default = FindFriendsScreen;\nexports.default = _default;","map":{"version":3,"names":["FlatListItemSeparator","height","StyleSheet","hairlineWidth","backgroundColor","GREY","removeDuplicates","friendProfiles","uniques","forEach","friendProfile","find","item","profile","variation","id","push","FindFriendsScreen","useTranslation","t","headerHeight","useHeaderHeight","DEVICE_IOS","DEVICE_LARGE","isDrawerOpen","useIsDrawerOpen","emailSocialMediaVariation","useSelector","state","selectSocialMediaVariationById","SocialMediaVariationIds","EMAIL","phoneNumberSocialMediaVariation","PHONE_NUMBER","useState","friendsRaw","setFriendsRaw","apiError","setApiError","friends","setFriends","loading","setLoading","getContacts","useCallback","_friendsRaw","PermissionsAndroid","request","PERMISSIONS","READ_CONTACTS","title","message","buttonPositive","buttonNegative","permissionStatus","Contacts","getAll","contacts","contact","contactName","displayName","emailAddresses","emailAddress","_profile","email","name","profileHash","hashSocialProfile","phoneNumbers","phoneNumber","extractDigits","number","useEffect","catch","console","error","fetchFriends","length","_profileHashes","map","socialMediaService","querySocialMedia","profileHashes","network","__DEV__","BrightIdNetwork","TEST","NODE","_filteredProfileHashes","filter","includes","sendInvitation","subject","connectionLink","body","smsDivider","Platform","OS","phone","Linking","openURL","invitationNotAvailableText","ToastAndroid","show","LONG","Alert","alert","keyExtractor","idx","recordID","toString","renderItem","styles","contactCon","imgCon","placeholder","txt","contactDat","contactAction","renderFriendsList","paddingBottom","flexGrow","renderStatus","statusContainer","apiErrorText","retryBtn","retryBtnText","DARKER_GREY","container","marginTop","shadow","create","fontFamily","fontSize","textAlign","lineHeight","marginBottom","alignItems","justifyContent","width","ORANGE","borderRadius","elevation","shadowColor","BLACK","shadowOffset","shadowRadius","color","WHITE","inviteBtn","borderColor","borderWidth","flexDirection","inviteBtnText","position","left","right","top","bottom","flex","paddingLeft","paddingRight","shadowOpacity","padding","borderBottomWidth","borderBottomColor","paddingVertical","paddingHorizontal","overflow"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/FindFriends/FindFriendsScreen.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  ActivityIndicator,\n  Alert,\n  FlatList,\n  Linking,\n  PermissionsAndroid,\n  Platform,\n  RefreshControl,\n  StyleSheet,\n  Text,\n  ToastAndroid,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport { useTranslation } from 'react-i18next';\nimport Contacts from '@/utils/ContactsProvider';\nimport { DEVICE_IOS, DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK, DARKER_GREY, GREY, ORANGE, WHITE } from '@/theme/colors';\nimport { useSelector } from '@/store';\nimport { selectSocialMediaVariationById } from '@/reducer/socialMediaVariationSlice';\nimport { fontSize } from '@/theme/fonts';\nimport { SocialMediaVariationIds } from '@/components/EditProfile/socialMediaVariations';\nimport { extractDigits } from '@/utils/phoneUtils';\nimport { hashSocialProfile } from '@/utils/cryptoHelper';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { BrightIdNetwork } from '@/components/Apps/types.d';\nimport socialMediaService from '@/utils/socialMediaServiceProvider';\n\nconst FlatListItemSeparator = () => {\n  return (\n    <View\n      style={{\n        height: StyleSheet.hairlineWidth,\n        backgroundColor: GREY,\n      }}\n    />\n  );\n};\n\ntype FriendProfile = {\n  profile: string;\n  profileHash: string;\n  name: string;\n  variation: SocialMediaVariation;\n};\n\nfunction removeDuplicates(friendProfiles: FriendProfile[]) {\n  const uniques: FriendProfile[] = [];\n  friendProfiles.forEach((friendProfile) => {\n    if (\n      !uniques.find(\n        (item) =>\n          item.profile === friendProfile.profile &&\n          item.variation.id === friendProfile.variation.id,\n      )\n    ) {\n      uniques.push(friendProfile);\n    }\n  });\n  return uniques;\n}\n\nexport const FindFriendsScreen = function () {\n  const { t } = useTranslation();\n\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const isDrawerOpen = useIsDrawerOpen();\n\n  const emailSocialMediaVariation = useSelector((state) =>\n    selectSocialMediaVariationById(state, SocialMediaVariationIds.EMAIL),\n  );\n  const phoneNumberSocialMediaVariation = useSelector((state) =>\n    selectSocialMediaVariationById(state, SocialMediaVariationIds.PHONE_NUMBER),\n  );\n  const [friendsRaw, setFriendsRaw] = useState<FriendProfile[]>([]);\n  const [apiError, setApiError] = useState<string | null>(null);\n  const [friends, setFriends] = useState<FriendProfile[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const getContacts = useCallback(async () => {\n    let _friendsRaw: FriendProfile[] = [];\n    const permissionStatus = await PermissionsAndroid.request(\n      PermissionsAndroid.PERMISSIONS.READ_CONTACTS,\n      {\n        title: 'Contacts',\n        message: 'This app would like to view your contacts.',\n        buttonPositive: 'Please accept bare mortal',\n        buttonNegative: 'No, thanks',\n      },\n    );\n    if (permissionStatus === 'granted') {\n      const contacts = await Contacts.getAll();\n      contacts.forEach((contact) => {\n        const contactName = contact.displayName;\n        contact.emailAddresses.forEach((emailAddress) => {\n          const _profile = emailAddress.email;\n          _friendsRaw.push({\n            name: contactName,\n            profile: _profile,\n            profileHash: hashSocialProfile(_profile),\n            variation: emailSocialMediaVariation,\n          });\n        });\n        contact.phoneNumbers.forEach((phoneNumber) => {\n          const _profile = extractDigits(phoneNumber.number);\n          _friendsRaw.push({\n            name: contactName,\n            profile: _profile,\n            profileHash: hashSocialProfile(_profile),\n            variation: phoneNumberSocialMediaVariation,\n          });\n        });\n      });\n    }\n    _friendsRaw = removeDuplicates(_friendsRaw);\n    setFriendsRaw(_friendsRaw);\n  }, [emailSocialMediaVariation, phoneNumberSocialMediaVariation]);\n\n  useEffect(() => {\n    getContacts().catch(console.error);\n  }, [getContacts]);\n\n  const fetchFriends = useCallback(async () => {\n    if (!friendsRaw.length) {\n      return;\n    }\n    setLoading(true);\n    setApiError(null);\n    const _profileHashes = friendsRaw.map(\n      (friendProfile) => friendProfile.profileHash,\n    );\n    if (_profileHashes.length) {\n      try {\n        const _filteredProfileHashes =\n          await socialMediaService.querySocialMedia({\n            profileHashes: _profileHashes,\n            network: __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE,\n          });\n        setFriends(\n          friendsRaw.filter((friendProfile) =>\n            _filteredProfileHashes.includes(friendProfile.profileHash),\n          ),\n        );\n      } catch (_e) {\n        setApiError(t('common.text.noConnection'));\n      }\n    } else {\n      setFriends([]);\n    }\n    setLoading(false);\n  }, [friendsRaw, t]);\n\n  useEffect(() => {\n    fetchFriends().catch(console.error);\n  }, [fetchFriends, friendsRaw]);\n\n  function sendInvitation(item: FriendProfile) {\n    const subject = \"Let's connect on BrightID\";\n    // TODO: generate connection link\n    const connectionLink = 'https://app.brightid.org/connection-code/xxx';\n    const body = `Hi\\nLet's connect on BrightID!\\n${connectionLink}`;\n    if (item.variation.id === SocialMediaVariationIds.PHONE_NUMBER) {\n      const smsDivider = Platform.OS === 'ios' ? '&' : '?';\n      const phone = item.profile;\n      Linking.openURL(`sms:${phone}${smsDivider}body=${body}`);\n      return;\n    }\n    if (item.variation.id === SocialMediaVariationIds.EMAIL) {\n      const email = item.profile;\n      Linking.openURL(`mailto:${email}?subject=${subject}&body=${body}`);\n      return;\n    }\n    const invitationNotAvailableText = t(\n      'findFriends.text.invitationNotAvailable',\n    );\n    if (Platform.OS === 'android') {\n      ToastAndroid.show(invitationNotAvailableText, ToastAndroid.LONG);\n    } else {\n      Alert.alert(invitationNotAvailableText);\n    }\n  }\n\n  const keyExtractor = (item, idx) => {\n    return item?.recordID?.toString() || idx.toString();\n  };\n\n  const renderItem = ({ item }: { item: FriendProfile }) => {\n    return (\n      <View\n        style={styles.contactCon}\n        testID={`${item.name}-${item.variation.name}`}\n      >\n        <View style={styles.imgCon}>\n          <View style={styles.placeholder}>\n            <Text style={styles.txt}>{item.name ? item.name[0] : ''}</Text>\n          </View>\n        </View>\n        <View style={styles.contactDat}>\n          <Text style={styles.name} numberOfLines={1}>\n            {item.name}\n          </Text>\n          <Text style={styles.profile} numberOfLines={1}>\n            {item.variation.name}\n          </Text>\n          <Text style={styles.profile} numberOfLines={1} testID={item.profile}>\n            {item.profile}\n          </Text>\n        </View>\n        <View style={styles.contactAction}>\n          {/* <TouchableOpacity */}\n          {/*  testID=\"InviteBtn\" */}\n          {/*  style={styles.inviteBtn} */}\n          {/*  onPress={() => sendInvitation(item)} */}\n          {/* > */}\n          {/*  <Text style={styles.inviteBtnText}> */}\n          {/*    {t('findFriends.button.invite')} */}\n          {/*  </Text> */}\n          {/* </TouchableOpacity> */}\n        </View>\n      </View>\n    );\n  };\n\n  function renderFriendsList() {\n    return (\n      <FlatList\n        data={friends}\n        contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n        keyExtractor={keyExtractor}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        ItemSeparatorComponent={FlatListItemSeparator}\n        renderItem={renderItem}\n        ListEmptyComponent={\n          <EmptyList\n            iconType=\"account-off-outline\"\n            title={t('findFriends.text.noFriends')}\n          />\n        }\n        refreshControl={\n          <RefreshControl refreshing={false} onRefresh={fetchFriends} />\n        }\n      />\n    );\n  }\n\n  function renderStatus() {\n    return (\n      <View style={styles.statusContainer}>\n        {apiError ? (\n          <>\n            <Text style={styles.apiErrorText}>{apiError}</Text>\n            <TouchableOpacity style={styles.retryBtn} onPress={fetchFriends}>\n              <Text style={styles.retryBtnText}>\n                {t('common.button.retry')}\n              </Text>\n            </TouchableOpacity>\n          </>\n        ) : (\n          <ActivityIndicator size=\"large\" color={DARKER_GREY} animating />\n        )}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { marginTop: headerHeight },\n        !isDrawerOpen && styles.shadow,\n      ]}\n      testID=\"findFriendsScreen\"\n    >\n      {loading || apiError ? renderStatus() : renderFriendsList()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  apiErrorText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: 26,\n    marginBottom: 12,\n  },\n  retryBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 160 : 140,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  retryBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n  inviteBtn: {\n    width: '100%',\n    height: 40,\n    borderRadius: 100,\n    borderColor: ORANGE,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inviteBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: ORANGE,\n  },\n  statusContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: -20,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    paddingLeft: 10,\n    paddingRight: 18,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  contactCon: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 5,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#d9d9d9',\n    paddingVertical: 24,\n    paddingHorizontal: 18,\n  },\n  imgCon: {},\n  placeholder: {\n    width: 55,\n    height: 55,\n    borderRadius: 30,\n    overflow: 'hidden',\n    backgroundColor: '#d9d9d9',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  contactDat: {\n    flex: 3,\n    justifyContent: 'center',\n    paddingLeft: 10,\n    paddingRight: 5,\n  },\n  contactAction: {\n    flex: 1.4,\n    justifyContent: 'center',\n    paddingLeft: 5,\n  },\n  txt: {\n    fontSize: 18,\n  },\n  name: {\n    fontSize: 16,\n  },\n  profile: {\n    color: '#888',\n  },\n});\n\nexport default FindFriendsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}