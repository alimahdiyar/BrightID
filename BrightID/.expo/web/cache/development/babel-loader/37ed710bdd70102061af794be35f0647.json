{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Spinner from 'react-native-spinkit';\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport { useTranslation } from 'react-i18next';\nimport { fontSize } from \"../../../theme/fonts\";\nimport { BLACK, DARKER_GREY, GREEN, ORANGE, RED } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { AddSigningKeySteps } from \"./AddDeviceScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AddSigningKey = function AddSigningKey(_ref) {\n  var currentStep = _ref.currentStep,\n      errorMessage = _ref.errorMessage;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateDescription = _useState2[0],\n      setStateDescription = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      iconData = _useState4[0],\n      setIconData = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useEffect(function () {\n    switch (currentStep) {\n      case AddSigningKeySteps.WAITING:\n      case AddSigningKeySteps.DOWNLOADING:\n        setIconData(undefined);\n        setStateDescription(t('addSigningKey.steps.downloading', 'Downloading new device data...'));\n        break;\n\n      case AddSigningKeySteps.WAITING_OPERATION:\n        setIconData(undefined);\n        setStateDescription(t('addSigningKey.steps.adding', 'Adding signing key...'));\n        break;\n\n      case AddSigningKeySteps.OPERATION_APPLIED:\n        setIconData({\n          color: GREEN,\n          name: 'checkmark-circle-outline'\n        });\n        setStateDescription(t('addSigningKey.steps.complete', 'Signing key added'));\n        break;\n\n      case AddSigningKeySteps.ERROR:\n        setIconData({\n          color: RED,\n          name: 'alert-circle-outline'\n        });\n        setStateDescription(t('addSigningKey.steps.error', 'Adding signing key failed'));\n        break;\n\n      default:\n        setStateDescription(\"Unhandled state \" + AddSigningKeySteps[currentStep]);\n        break;\n    }\n  }, [currentStep, t]);\n  if (currentStep === AddSigningKeySteps.WAITING) return null;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerTextContainer,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: t('addSigningKey.header.text', {\n          defaultValue: 'Add device info'\n        })\n      }), _jsx(Text, {\n        style: styles.headerInfoText,\n        children: t('addSigningKey.info', {\n          defaultValue: 'Allowing the new device to use your BrightID'\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.statusContainer,\n      children: [_jsx(View, {\n        children: iconData ? _jsx(IonIcons, {\n          style: {\n            alignSelf: 'center'\n          },\n          size: DEVICE_LARGE ? 64 : 44,\n          name: iconData.name,\n          color: iconData.color\n        }) : _jsx(Spinner, {\n          isVisible: true,\n          size: DEVICE_LARGE ? 64 : 44,\n          type: \"Wave\",\n          color: ORANGE\n        })\n      }), _jsxs(View, {\n        style: styles.infoTextContainer,\n        children: [_jsx(Text, {\n          style: styles.infoText,\n          children: stateDescription\n        }), _jsx(Text, {\n          style: styles.infoSubText,\n          children: currentStep === AddSigningKeySteps.ERROR ? errorMessage : null\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  headerTextContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[20],\n    color: BLACK\n  },\n  headerInfoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    color: DARKER_GREY,\n    fontSize: fontSize[12],\n    maxWidth: '90%'\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginLeft: 20,\n    alignItems: 'center'\n  },\n  infoTextContainer: {\n    flex: 1,\n    marginLeft: 10\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK\n  },\n  infoSubText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: BLACK\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddSigningKey.tsx"],"names":["AddSigningKey","currentStep","errorMessage","stateDescription","setStateDescription","useState","iconData","setIconData","t","useTranslation","useEffect","AddSigningKeySteps","color","name","styles","defaultValue","alignSelf","DEVICE_LARGE","StyleSheet","container","justifyContent","alignItems","width","headerTextContainer","headerText","fontFamily","fontSize","headerInfoText","textAlign","maxWidth","statusContainer","flexDirection","marginTop","marginLeft","infoTextContainer","flex","infoText","infoSubText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Spinner from 'react-native-spinkit';\nimport IonIcons from 'react-native-vector-icons/Ionicons';\nimport { useTranslation } from 'react-i18next';\nimport { fontSize } from '@/theme/fonts';\nimport { BLACK, DARKER_GREY, GREEN, ORANGE, RED } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { AddSigningKeySteps } from '@/components/Onboarding/ImportFlow/AddDeviceScreen';\n\n/* Component to track adding of signing key */\ntype AddSigningKeyParams = {\n  currentStep: AddSigningKeySteps;\n  errorMessage: string;\n};\nexport const AddSigningKey = ({\n  currentStep,\n  errorMessage,\n}: AddSigningKeyParams) => {\n  const [stateDescription, setStateDescription] = useState('');\n  const [iconData, setIconData] =\n    useState<{ color: string; name: string }>(undefined);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    switch (currentStep) {\n      case AddSigningKeySteps.WAITING:\n      case AddSigningKeySteps.DOWNLOADING:\n        setIconData(undefined);\n        setStateDescription(\n          t(\n            'addSigningKey.steps.downloading',\n            'Downloading new device data...',\n          ),\n        );\n        break;\n      case AddSigningKeySteps.WAITING_OPERATION:\n        setIconData(undefined);\n        setStateDescription(\n          t('addSigningKey.steps.adding', 'Adding signing key...'),\n        );\n        break;\n      case AddSigningKeySteps.OPERATION_APPLIED:\n        setIconData({ color: GREEN, name: 'checkmark-circle-outline' });\n        setStateDescription(\n          t('addSigningKey.steps.complete', 'Signing key added'),\n        );\n        break;\n      case AddSigningKeySteps.ERROR:\n        setIconData({ color: RED, name: 'alert-circle-outline' });\n        setStateDescription(\n          t('addSigningKey.steps.error', 'Adding signing key failed'),\n        );\n        break;\n      default:\n        setStateDescription(\n          `Unhandled state ${AddSigningKeySteps[currentStep]}`,\n        );\n        break;\n    }\n  }, [currentStep, t]);\n\n  if (currentStep === AddSigningKeySteps.WAITING) return null;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headerTextContainer}>\n        <Text style={styles.headerText}>\n          {t('addSigningKey.header.text', {\n            defaultValue: 'Add device info',\n          })}\n        </Text>\n\n        <Text style={styles.headerInfoText}>\n          {t('addSigningKey.info', {\n            defaultValue: 'Allowing the new device to use your BrightID',\n          })}\n        </Text>\n      </View>\n      <View style={styles.statusContainer}>\n        <View>\n          {iconData ? (\n            <IonIcons\n              style={{ alignSelf: 'center' }}\n              size={DEVICE_LARGE ? 64 : 44}\n              name={iconData.name}\n              color={iconData.color}\n            />\n          ) : (\n            <Spinner\n              isVisible={true}\n              size={DEVICE_LARGE ? 64 : 44}\n              type=\"Wave\"\n              color={ORANGE}\n            />\n          )}\n        </View>\n        <View style={styles.infoTextContainer}>\n          <Text style={styles.infoText}>{stateDescription}</Text>\n          <Text style={styles.infoSubText}>\n            {currentStep === AddSigningKeySteps.ERROR ? errorMessage : null}\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  headerTextContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[20],\n    color: BLACK,\n  },\n  headerInfoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    color: DARKER_GREY,\n    fontSize: fontSize[12],\n    maxWidth: '90%',\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginLeft: 20,\n    alignItems: 'center',\n  },\n  infoTextContainer: {\n    flex: 1,\n    marginLeft: 10,\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  infoSubText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: BLACK,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}