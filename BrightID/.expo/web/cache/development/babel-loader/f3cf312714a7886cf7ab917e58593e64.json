{"ast":null,"code":"module.exports = Stream;\n\nvar EE = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\nStream.Stream = Stream;\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function (dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    dest.end();\n  }\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  function onerror(er) {\n    cleanup();\n\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er;\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n  dest.on('close', cleanup);\n  dest.emit('pipe', source);\n  return dest;\n};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/stream-browserify/index.js"],"names":["module","EE","require","inherits","Stream","source","dest","options","didOnEnd","cleanup"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n"]},"metadata":{},"sourceType":"script"}