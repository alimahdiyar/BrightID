{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { useDispatch, useSelector } from \"../../store\";\nimport { connection_levels } from \"../../utils/constants\";\nimport { ORANGE, BLACK, WHITE, GREEN, DARKER_GREY } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { types } from \"../../utils/sorting\";\nimport { setFilters, setConnectionsSort } from \"../../actions\";\nimport Chevron from \"../Icons/Chevron\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar trustLevels = [connection_levels.SUSPICIOUS, connection_levels.JUST_MET, connection_levels.ALREADY_KNOWN, connection_levels.RECOVERY, connection_levels.REPORTED];\nvar ascending = [types.byNameAscending, types.byDateAddedAscending, types.byTrustLevelAscending];\nvar byName = [types.byNameDescending, types.byNameAscending];\nvar byDate = [types.byDateAddedDescending, types.byDateAddedAscending];\nvar byTrust = [types.byTrustLevelDescending, types.byTrustLevelAscending];\n\nvar SortConnectionsModal = function SortConnectionsModal(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var filters = useSelector(function (state) {\n    return state.connections.filters;\n  });\n  var connectionsSort = useSelector(function (state) {\n    return state.connections.connectionsSort;\n  }) || types.byDateAddedDescending;\n\n  var _useState = useState(filters || []),\n      _useState2 = _slicedToArray(_useState, 2),\n      newFilters = _useState2[0],\n      setNewFilters = _useState2[1];\n\n  var _useState3 = useState(connectionsSort),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newConnectionsSort = _useState4[0],\n      setNewConnectionsSort = _useState4[1];\n\n  var onSubmit = function onSubmit() {\n    dispatch(setFilters(newFilters));\n    dispatch(setConnectionsSort(newConnectionsSort));\n    navigation.goBack();\n  };\n\n  var renderFilterRadioBtn = function renderFilterRadioBtn(trustLevel) {\n    var active = newFilters.includes(trustLevel);\n\n    var updateFilters = function updateFilters() {\n      var updatedFilters = [];\n\n      if (active) {\n        updatedFilters = newFilters.filter(function (filter) {\n          return filter !== trustLevel;\n        });\n      } else {\n        updatedFilters = newFilters.concat(trustLevel);\n      }\n\n      setNewFilters(updatedFilters);\n    };\n\n    return _jsxs(TouchableOpacity, {\n      testID: trustLevel + \"-RadioBtn\",\n      onPress: updateFilters,\n      style: styles.radioButton,\n      children: [_jsx(View, {\n        style: styles.radioSquare,\n        children: active && _jsx(View, {\n          style: styles.radioInnerSquare\n        })\n      }), _jsx(View, {\n        style: styles.radioLabel,\n        children: _jsx(Text, {\n          style: styles.radioLabelText,\n          children: trustLevel\n        })\n      })]\n    }, trustLevel);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    testID: \"SortConnectionsModal\",\n    children: [_jsx(BlurView, {\n      style: styles.blurView,\n      blurType: \"dark\",\n      blurAmount: 5,\n      reducedTransparencyFallbackColor: BLACK\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      children: _jsx(View, {\n        style: styles.blurView\n      })\n    }), _jsxs(View, {\n      style: styles.modalContainer,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(Text, {\n          style: styles.headerText,\n          children: \"Sort By\"\n        })\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsxs(View, {\n        style: styles.sortContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.sortButton,\n          onPress: function onPress() {\n            var sortMethod = byDate.filter(function (n) {\n              return n !== newConnectionsSort;\n            }).shift();\n            setNewConnectionsSort(sortMethod);\n          },\n          children: [_jsx(Text, {\n            style: [styles.sortButtonText, byDate.includes(newConnectionsSort) ? styles.activeButtonText : {}],\n            children: \"Date\"\n          }), _jsx(Chevron, {\n            width: 16,\n            height: 16,\n            strokeWidth: byDate.includes(newConnectionsSort) ? 3 : 1.5,\n            color: byDate.includes(newConnectionsSort) ? ORANGE : BLACK,\n            direction: byDate.includes(newConnectionsSort) && ascending.includes(newConnectionsSort) ? 'up' : 'down'\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.sortButton,\n          onPress: function onPress() {\n            var sortMethod = byName.filter(function (n) {\n              return n !== newConnectionsSort;\n            }).shift();\n            setNewConnectionsSort(sortMethod);\n          },\n          children: [_jsx(Text, {\n            style: [styles.sortButtonText, byName.includes(newConnectionsSort) ? styles.activeButtonText : {}],\n            children: \"Name\"\n          }), _jsx(Chevron, {\n            width: 16,\n            height: 16,\n            strokeWidth: byName.includes(newConnectionsSort) ? 3 : 1.5,\n            color: byName.includes(newConnectionsSort) ? ORANGE : BLACK,\n            direction: byName.includes(newConnectionsSort) && ascending.includes(newConnectionsSort) ? 'up' : 'down'\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.sortButton,\n          onPress: function onPress() {\n            var sortMethod = byTrust.filter(function (n) {\n              return n !== newConnectionsSort;\n            }).shift();\n            setNewConnectionsSort(sortMethod);\n          },\n          children: [_jsx(Text, {\n            style: [styles.sortButtonText, byTrust.includes(newConnectionsSort) ? styles.activeButtonText : {}],\n            children: \"Trust Level\"\n          }), _jsx(Chevron, {\n            width: 16,\n            height: 16,\n            strokeWidth: byTrust.includes(newConnectionsSort) ? 3 : 1.5,\n            color: byTrust.includes(newConnectionsSort) ? ORANGE : BLACK,\n            direction: byTrust.includes(newConnectionsSort) && ascending.includes(newConnectionsSort) ? 'up' : 'down'\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.header,\n        children: _jsx(Text, {\n          style: styles.headerText,\n          children: \"Filter By Trust Level\"\n        })\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsx(View, {\n        style: styles.radioButtonsContainer,\n        children: trustLevels.map(renderFilterRadioBtn)\n      }), _jsx(View, {\n        style: styles.modalButtons,\n        children: _jsx(TouchableOpacity, {\n          testID: \"SubmitReportBtn\",\n          style: [styles.modalButton, styles.submitButton],\n          onPress: onSubmit,\n          children: _jsx(Text, {\n            style: styles.submitButtonText,\n            children: \"Submit\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  blurView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: WHITE,\n    width: '90%',\n    borderRadius: 25,\n    padding: DEVICE_LARGE ? 30 : 25\n  },\n  header: {},\n  headerText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16]\n  },\n  divider: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: ORANGE,\n    width: '105%',\n    height: 1,\n    marginTop: DEVICE_LARGE ? 10 : 8,\n    marginBottom: DEVICE_LARGE ? 10 : 8\n  },\n  sortContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-evenly',\n    marginBottom: DEVICE_LARGE ? 25 : 12\n  },\n  sortButton: {\n    minHeight: 36,\n    borderRadius: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexGrow: 1\n  },\n  sortButtonText: {\n    color: BLACK,\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    marginRight: DEVICE_LARGE ? 5 : 4\n  },\n  activeButtonText: {\n    color: ORANGE,\n    fontFamily: 'Poppins-Bold'\n  },\n  radioButtonsContainer: {\n    marginLeft: 10,\n    marginBottom: 20,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%'\n  },\n  radioButton: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginTop: 4,\n    marginBottom: 4\n  },\n  radioSquare: {\n    height: 16,\n    width: 16,\n    borderRadius: 0.5,\n    borderWidth: 3,\n    borderColor: ORANGE,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radioInnerSquare: {\n    height: 7.5,\n    width: 7.5,\n    backgroundColor: ORANGE\n  },\n  radioLabel: {\n    marginLeft: DEVICE_LARGE ? 12 : 10,\n    marginRight: DEVICE_LARGE ? 12 : 10\n  },\n  radioLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    color: BLACK,\n    textTransform: 'capitalize'\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  modalButton: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  submitButton: {\n    backgroundColor: GREEN,\n    borderRadius: 50,\n    borderColor: GREEN,\n    borderWidth: 1\n  },\n  submitButtonText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: BLACK\n  },\n  submitButtonDisabledText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: DARKER_GREY\n  }\n});\nexport default SortConnectionsModal;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/SortConnectionsModal.tsx"],"names":["trustLevels","connection_levels","ascending","types","byName","byDate","byTrust","SortConnectionsModal","navigation","dispatch","useDispatch","filters","useSelector","state","connectionsSort","newFilters","setNewFilters","useState","newConnectionsSort","setNewConnectionsSort","onSubmit","setFilters","setConnectionsSort","renderFilterRadioBtn","active","updateFilters","updatedFilters","filter","trustLevel","styles","sortMethod","n","StyleSheet","blurView","position","left","right","top","bottom","container","flex","alignItems","justifyContent","modalContainer","backgroundColor","width","borderRadius","padding","DEVICE_LARGE","header","headerText","fontFamily","fontSize","divider","borderTopWidth","borderTopColor","height","marginTop","marginBottom","sortContainer","flexDirection","sortButton","minHeight","flexGrow","sortButtonText","color","marginRight","activeButtonText","radioButtonsContainer","marginLeft","radioButton","radioSquare","borderWidth","borderColor","radioInnerSquare","radioLabel","radioLabelText","textTransform","modalButtons","modalButton","paddingTop","paddingBottom","submitButton","submitButtonText","submitButtonDisabledText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { useDispatch, useSelector } from '@/store';\nimport { connection_levels } from '@/utils/constants';\nimport { ORANGE, BLACK, WHITE, GREEN, DARKER_GREY } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { types } from '@/utils/sorting';\nimport { setFilters, setConnectionsSort } from '@/actions';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport Chevron from '../Icons/Chevron';\n\n/** CONSTANTS */\n\nconst trustLevels = [\n  connection_levels.SUSPICIOUS,\n  connection_levels.JUST_MET,\n  connection_levels.ALREADY_KNOWN,\n  connection_levels.RECOVERY,\n  connection_levels.REPORTED,\n];\n\nconst ascending = [\n  types.byNameAscending,\n  types.byDateAddedAscending,\n  types.byTrustLevelAscending,\n];\n\nconst byName = [types.byNameDescending, types.byNameAscending];\n\nconst byDate = [types.byDateAddedDescending, types.byDateAddedAscending];\n\nconst byTrust = [types.byTrustLevelDescending, types.byTrustLevelAscending];\n\n/** COMPONENT */\n\ntype props = StackScreenProps<ModalStackParamList, 'SortConnections'>;\n\nconst SortConnectionsModal = ({ navigation }: props) => {\n  const dispatch = useDispatch();\n\n  const filters = useSelector((state: State) => state.connections.filters);\n  const connectionsSort =\n    useSelector((state: State) => state.connections.connectionsSort) ||\n    types.byDateAddedDescending;\n\n  const [newFilters, setNewFilters] = useState<ConnectionLevel[]>(\n    filters || [],\n  );\n  const [newConnectionsSort, setNewConnectionsSort] = useState(connectionsSort);\n\n  const onSubmit = () => {\n    dispatch(setFilters(newFilters));\n    dispatch(setConnectionsSort(newConnectionsSort));\n    navigation.goBack();\n  };\n\n  const renderFilterRadioBtn = (trustLevel: ConnectionLevel) => {\n    // const active = btnReason === reason;\n    const active = newFilters.includes(trustLevel);\n    const updateFilters = () => {\n      // start with a new filter array to prevent mutating state\n      let updatedFilters = [];\n      if (active) {\n        // remove filter\n        updatedFilters = newFilters.filter((filter) => filter !== trustLevel);\n      } else {\n        // add filter\n        updatedFilters = newFilters.concat(trustLevel);\n      }\n      setNewFilters(updatedFilters);\n    };\n    return (\n      <TouchableOpacity\n        testID={`${trustLevel}-RadioBtn`}\n        key={trustLevel}\n        onPress={updateFilters}\n        style={styles.radioButton}\n      >\n        <View style={styles.radioSquare}>\n          {active && <View style={styles.radioInnerSquare} />}\n        </View>\n        <View style={styles.radioLabel}>\n          <Text style={styles.radioLabelText}>{trustLevel}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container} testID=\"SortConnectionsModal\">\n      <BlurView\n        style={styles.blurView}\n        blurType=\"dark\"\n        blurAmount={5}\n        reducedTransparencyFallbackColor={BLACK}\n      />\n      <TouchableWithoutFeedback\n        onPress={() => {\n          navigation.goBack();\n        }}\n      >\n        <View style={styles.blurView} />\n      </TouchableWithoutFeedback>\n      <View style={styles.modalContainer}>\n        <View style={styles.header}>\n          <Text style={styles.headerText}>Sort By</Text>\n        </View>\n        <View style={styles.divider} />\n        <View style={styles.sortContainer}>\n          <TouchableOpacity\n            style={styles.sortButton}\n            onPress={() => {\n              // toggles sort method\n              const sortMethod = byDate\n                .filter((n) => n !== newConnectionsSort)\n                .shift();\n              setNewConnectionsSort(sortMethod);\n            }}\n          >\n            <Text\n              style={[\n                styles.sortButtonText,\n                byDate.includes(newConnectionsSort)\n                  ? styles.activeButtonText\n                  : {},\n              ]}\n            >\n              Date\n            </Text>\n            <Chevron\n              width={16}\n              height={16}\n              strokeWidth={byDate.includes(newConnectionsSort) ? 3 : 1.5}\n              color={byDate.includes(newConnectionsSort) ? ORANGE : BLACK}\n              direction={\n                byDate.includes(newConnectionsSort) &&\n                ascending.includes(newConnectionsSort)\n                  ? 'up'\n                  : 'down'\n              }\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.sortButton}\n            onPress={() => {\n              const sortMethod = byName\n                .filter((n) => n !== newConnectionsSort)\n                .shift();\n              setNewConnectionsSort(sortMethod);\n            }}\n          >\n            <Text\n              style={[\n                styles.sortButtonText,\n                byName.includes(newConnectionsSort)\n                  ? styles.activeButtonText\n                  : {},\n              ]}\n            >\n              Name\n            </Text>\n            <Chevron\n              width={16}\n              height={16}\n              strokeWidth={byName.includes(newConnectionsSort) ? 3 : 1.5}\n              color={byName.includes(newConnectionsSort) ? ORANGE : BLACK}\n              direction={\n                byName.includes(newConnectionsSort) &&\n                ascending.includes(newConnectionsSort)\n                  ? 'up'\n                  : 'down'\n              }\n            />\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.sortButton}\n            onPress={() => {\n              const sortMethod = byTrust\n                .filter((n) => n !== newConnectionsSort)\n                .shift();\n              setNewConnectionsSort(sortMethod);\n            }}\n          >\n            <Text\n              style={[\n                styles.sortButtonText,\n                byTrust.includes(newConnectionsSort)\n                  ? styles.activeButtonText\n                  : {},\n              ]}\n            >\n              Trust Level\n            </Text>\n            <Chevron\n              width={16}\n              height={16}\n              strokeWidth={byTrust.includes(newConnectionsSort) ? 3 : 1.5}\n              color={byTrust.includes(newConnectionsSort) ? ORANGE : BLACK}\n              direction={\n                byTrust.includes(newConnectionsSort) &&\n                ascending.includes(newConnectionsSort)\n                  ? 'up'\n                  : 'down'\n              }\n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.header}>\n          <Text style={styles.headerText}>Filter By Trust Level</Text>\n        </View>\n        <View style={styles.divider} />\n        <View style={styles.radioButtonsContainer}>\n          {trustLevels.map(renderFilterRadioBtn)}\n        </View>\n        <View style={styles.modalButtons}>\n          <TouchableOpacity\n            testID=\"SubmitReportBtn\"\n            style={[styles.modalButton, styles.submitButton]}\n            onPress={onSubmit}\n          >\n            <Text style={styles.submitButtonText}>Submit</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  blurView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modalContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: WHITE,\n    width: '90%',\n    borderRadius: 25,\n    padding: DEVICE_LARGE ? 30 : 25,\n  },\n  header: {\n    // marginTop: 5,\n  },\n  headerText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n  },\n\n  divider: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: ORANGE,\n    width: '105%',\n    height: 1,\n    marginTop: DEVICE_LARGE ? 10 : 8,\n    marginBottom: DEVICE_LARGE ? 10 : 8,\n  },\n\n  sortContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-evenly',\n    marginBottom: DEVICE_LARGE ? 25 : 12,\n  },\n\n  sortButton: {\n    // borderWidth: 1,\n    // borderLeftWidth: 1,\n    minHeight: 36,\n    borderRadius: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexGrow: 1,\n  },\n\n  sortButtonText: {\n    color: BLACK,\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    marginRight: DEVICE_LARGE ? 5 : 4,\n  },\n  activeButtonText: {\n    color: ORANGE,\n    fontFamily: 'Poppins-Bold',\n  },\n  radioButtonsContainer: {\n    marginLeft: 10,\n    marginBottom: 20,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%',\n  },\n  radioButton: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginTop: 4,\n    marginBottom: 4,\n  },\n  radioSquare: {\n    height: 16,\n    width: 16,\n    borderRadius: 0.5,\n    borderWidth: 3,\n    borderColor: ORANGE,\n    alignItems: 'center', // To center the checked circle…\n    justifyContent: 'center',\n  },\n  radioInnerSquare: {\n    height: 7.5,\n    width: 7.5,\n    // borderRadius: 10,\n    backgroundColor: ORANGE,\n  },\n  radioLabel: {\n    marginLeft: DEVICE_LARGE ? 12 : 10,\n    marginRight: DEVICE_LARGE ? 12 : 10,\n  },\n  radioLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    color: BLACK,\n    textTransform: 'capitalize',\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10,\n  },\n  modalButton: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  submitButton: {\n    backgroundColor: GREEN,\n    borderRadius: 50,\n    borderColor: GREEN,\n    borderWidth: 1,\n  },\n  submitButtonText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  submitButtonDisabledText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: DARKER_GREY,\n  },\n});\n\nexport default SortConnectionsModal;\n"]},"metadata":{},"sourceType":"module"}