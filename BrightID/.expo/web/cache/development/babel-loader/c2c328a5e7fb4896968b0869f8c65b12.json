{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport RNFetchBlob from 'rn-fetch-blob';\nimport { resetStore } from \"../actions\";\nimport { store } from \"../store\";\nvar defaultStoragePath = RNFetchBlob.fs.dirs.DocumentDir + \"/persistStore\";\nexport var dangerouslyDeleteStorage = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store.dispatch(resetStore());\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(RNFetchBlob.fs.unlink(defaultStoragePath));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var delStorage = function delStorage() {\n  if (__DEV__) {\n    Alert.alert('WARNING', 'Would you like to delete user data and return to the onboarding screen?', [{\n      text: 'Cancel',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Sure',\n      onPress: function onPress() {\n        return _regeneratorRuntime.async(function onPress$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(dangerouslyDeleteStorage());\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                _context2.t0 instanceof Error ? console.warn('delete storage', _context2.t0.message) : console.log('delete storage', _context2.t0);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      }\n    }], {\n      cancelable: true\n    });\n  }\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/dev.ts"],"names":["defaultStoragePath","RNFetchBlob","dangerouslyDeleteStorage","store","resetStore","AsyncStorage","delStorage","Alert","text","onPress","console","style","cancelable"],"mappings":";;AACA,OAAA,YAAA,MAAA,2CAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,SAAA,UAAA;AACA,SAAA,KAAA;AAEA,IAAMA,kBAAkB,GAAMC,WAAW,CAAXA,EAAAA,CAAAA,IAAAA,CAAN,WAAMA,GAA9B,eAAA;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAAA,OAAA,GAAA;EAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;IAAA,OAAA,CAAA,EAAA;MAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;QAAA,KAAA,CAAA;UACtCC,KAAK,CAALA,QAAAA,CAAeC,UAAfD,EAAAA;UADsC,QAAA,CAAA,IAAA,GAAA,CAAA;UAAA,OAAA,mBAAA,CAAA,KAAA,CAEhCE,YAAY,CAFoB,KAEhCA,EAFgC,CAAA;;QAAA,KAAA,CAAA;UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;UAAA,OAAA,mBAAA,CAAA,KAAA,CAGhCJ,WAAW,CAAXA,EAAAA,CAAAA,MAAAA,CAHgC,kBAGhCA,CAHgC,CAAA;;QAAA,KAAA,CAAA;QAAA,KAAA,KAAA;UAAA,OAAA,QAAA,CAAA,IAAA,EAAA;MAAA;IAAA;EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAjC,CAAA;AAMP,OAAO,IAAMK,UAAU,GAAVA,SAAAA,UAAAA,GAAmB;EAC9B,IAAA,OAAA,EAAa;IACXC,KAAK,CAALA,KAAAA,CAAAA,SAAAA,EAAAA,yEAAAA,EAGE,CACE;MACEC,IAAI,EADN,QAAA;MAEEC,OAAO,EAAE,SAAA,OAAA,GAAA;QAAA,OAAMC,OAAO,CAAPA,GAAAA,CAAN,gBAAMA,CAAN;MAFX,CAAA;MAGEC,KAAK,EAJT;IACE,CADF,EAME;MACEH,IAAI,EADN,MAAA;MAEEC,OAAO,EAAE,SAAA,OAAA,GAAA;QAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,SAAA,EAAA;UAAA,OAAA,CAAA,EAAA;YAAA,QAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,OAAA,mBAAA,CAAA,KAAA,CAECP,wBAFD,EAAA,CAAA;;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA;;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;gBAIL,SAAA,CAAA,EAAA,YAAA,KAAA,GACIQ,OAAO,CAAPA,IAAAA,CAAAA,gBAAAA,EAA+B,SAAA,CAAA,EAAA,CADnC,OACIA,CADJ,GAEIA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,EAAAA,SAAAA,CAFJ,EAEIA,CAFJ;;cAJK,KAAA,CAAA;cAAA,KAAA,KAAA;gBAAA,OAAA,SAAA,CAAA,IAAA,EAAA;YAAA;UAAA;QAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA;MAXfH;IASI,CANF,CAHFA,EAsBE;MAAEK,UAAU,EAtBdL;IAsBE,CAtBFA;EAyBH;AA3BM,CAAA","sourcesContent":["import { Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport RNFetchBlob from 'rn-fetch-blob';\nimport { resetStore } from '@/actions';\nimport { store } from '@/store';\n\nconst defaultStoragePath = `${RNFetchBlob.fs.dirs.DocumentDir}/persistStore`;\n\nexport const dangerouslyDeleteStorage = async () => {\n  store.dispatch(resetStore());\n  await AsyncStorage.clear();\n  await RNFetchBlob.fs.unlink(defaultStoragePath);\n};\n\nexport const delStorage = () => {\n  if (__DEV__) {\n    Alert.alert(\n      'WARNING',\n      'Would you like to delete user data and return to the onboarding screen?',\n      [\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Cancel Pressed'),\n          style: 'cancel',\n        },\n        {\n          text: 'Sure',\n          onPress: async () => {\n            try {\n              await dangerouslyDeleteStorage();\n            } catch (err) {\n              err instanceof Error\n                ? console.warn('delete storage', err.message)\n                : console.log('delete storage', err);\n            }\n          },\n        },\n      ],\n      { cancelable: true },\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}