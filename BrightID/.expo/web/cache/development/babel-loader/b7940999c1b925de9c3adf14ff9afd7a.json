{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createSelector, createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nimport { RESET_STORE } from \"../actions/resetStore\";\nvar linkedContextsAdapter = createEntityAdapter({\n  selectId: function selectId(linkedContext) {\n    return linkedContext.contextId;\n  }\n});\nvar sigsAdapter = createEntityAdapter({\n  selectId: function selectId(sig) {\n    return \"\" + sig.uid;\n  }\n});\nvar initialState = {\n  apps: [],\n  linkedContexts: linkedContextsAdapter.getInitialState(),\n  sigs: sigsAdapter.getInitialState()\n};\nvar appsSlice = createSlice({\n  name: 'apps',\n  initialState: initialState,\n  reducers: {\n    setApps: function setApps(state, action) {\n      state.apps = action.payload;\n    },\n    addLinkedContext: function addLinkedContext(state, action) {\n      state.linkedContexts = linkedContextsAdapter.addOne(state.linkedContexts, action);\n    },\n    removeLinkedContext: function removeLinkedContext(state, action) {\n      state.linkedContexts = linkedContextsAdapter.removeOne(state.linkedContexts, action);\n    },\n    updateLinkedContext: function updateLinkedContext(state, action) {\n      var update = {\n        id: action.payload.contextId,\n        changes: action.payload\n      };\n      state.linkedContexts = linkedContextsAdapter.updateOne(state.linkedContexts, update);\n    },\n    upsertSig: function upsertSig(state, action) {\n      state.sigs = sigsAdapter.upsertOne(state.sigs, action);\n    },\n    removeSig: function removeSig(state, action) {\n      state.sigs = sigsAdapter.removeOne(state.sigs, action);\n    },\n    removeAllSigs: function removeAllSigs(state) {\n      state.sigs = sigsAdapter.removeAll(state.sigs);\n    },\n    updateSig: function updateSig(state, action) {\n      state.sigs = sigsAdapter.updateOne(state.sigs, action.payload);\n    }\n  },\n  extraReducers: _defineProperty({}, RESET_STORE, function () {\n    return initialState;\n  })\n});\nvar _appsSlice$actions = appsSlice.actions,\n    setApps = _appsSlice$actions.setApps,\n    addLinkedContext = _appsSlice$actions.addLinkedContext,\n    removeLinkedContext = _appsSlice$actions.removeLinkedContext,\n    updateLinkedContext = _appsSlice$actions.updateLinkedContext,\n    upsertSig = _appsSlice$actions.upsertSig,\n    removeSig = _appsSlice$actions.removeSig,\n    removeAllSigs = _appsSlice$actions.removeAllSigs,\n    updateSig = _appsSlice$actions.updateSig;\nexport { setApps, addLinkedContext, removeLinkedContext, updateLinkedContext, upsertSig, removeSig, removeAllSigs, updateSig };\n\nvar _linkedContextsAdapte = linkedContextsAdapter.getSelectors(function (state) {\n  return state.apps.linkedContexts;\n}),\n    selectLinkedContextById = _linkedContextsAdapte.selectById,\n    selectAllLinkedContexts = _linkedContextsAdapte.selectAll;\n\nexport { selectLinkedContextById, selectAllLinkedContexts };\n\nvar _sigsAdapter$getSelec = sigsAdapter.getSelectors(function (state) {\n  return state.apps.sigs;\n}),\n    selectAllSigs = _sigsAdapter$getSelec.selectAll;\n\nexport { selectAllSigs };\nexport var linkedContextTotal = createSelector(selectAllLinkedContexts, function (contexts) {\n  return contexts.reduce(function (acc, link) {\n    return link.state === 'applied' ? acc + 1 : acc;\n  }, 0);\n});\nexport var selectLinkedContext = createSelector(selectAllLinkedContexts, function (_, context) {\n  return context;\n}, function (contexts, context) {\n  return contexts.find(function (link) {\n    return link.context === context;\n  });\n});\nexport var selectPendingLinkedContext = createSelector(selectAllLinkedContexts, function (contexts) {\n  return contexts.find(function (link) {\n    return link.state === 'pending';\n  });\n});\nexport var selectAllApps = function selectAllApps(state) {\n  return state.apps.apps;\n};\nexport var selectAllLinkedSigs = createSelector(selectAllSigs, function (sigs) {\n  return sigs.filter(function (sig) {\n    return sig.linked;\n  });\n});\nexport var createSelectLinkedSigsForApp = function createSelectLinkedSigsForApp(appId) {\n  return createSelector(selectAllLinkedSigs, function (linkedSigs) {\n    return linkedSigs.filter(function (sig) {\n      return sig.app === appId;\n    });\n  });\n};\nexport var selectBlindSigApps = function selectBlindSigApps(state) {\n  return state.apps.apps.filter(function (app) {\n    return app.usingBlindSig;\n  });\n};\nexport var selectExpireableBlindSigApps = createSelector(selectBlindSigApps, function (apps) {\n  return apps.filter(function (app) {\n    return app.verificationExpirationLength;\n  });\n});\nexport default appsSlice.reducer;","map":{"version":3,"names":["createSelector","createSlice","createEntityAdapter","RESET_STORE","linkedContextsAdapter","selectId","linkedContext","contextId","sigsAdapter","sig","uid","initialState","apps","linkedContexts","getInitialState","sigs","appsSlice","name","reducers","setApps","state","action","payload","addLinkedContext","addOne","removeLinkedContext","removeOne","updateLinkedContext","update","id","changes","updateOne","upsertSig","upsertOne","removeSig","removeAllSigs","removeAll","updateSig","extraReducers","actions","getSelectors","selectLinkedContextById","selectById","selectAllLinkedContexts","selectAll","selectAllSigs","linkedContextTotal","contexts","reduce","acc","link","selectLinkedContext","_","context","find","selectPendingLinkedContext","selectAllApps","selectAllLinkedSigs","filter","linked","createSelectLinkedSigsForApp","appId","linkedSigs","app","selectBlindSigApps","usingBlindSig","selectExpireableBlindSigApps","verificationExpirationLength","reducer"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/reducer/appsSlice.ts"],"sourcesContent":["import {\n  createSelector,\n  createSlice,\n  createEntityAdapter,\n  PayloadAction,\n  Update,\n} from '@reduxjs/toolkit';\nimport { RESET_STORE } from '@/actions/resetStore';\n\n/* ******** INITIAL STATE ************** */\n\nconst linkedContextsAdapter = createEntityAdapter<ContextInfo>({\n  selectId: (linkedContext) => linkedContext.contextId,\n});\n\nconst sigsAdapter = createEntityAdapter<SigInfo>({\n  selectId: (sig) => `${sig.uid}`,\n});\n\nconst initialState: AppsState = {\n  apps: [],\n  linkedContexts: linkedContextsAdapter.getInitialState(),\n  sigs: sigsAdapter.getInitialState(),\n};\n\nconst appsSlice = createSlice({\n  name: 'apps',\n  initialState,\n  reducers: {\n    setApps(state, action: PayloadAction<AppInfo[]>) {\n      state.apps = action.payload;\n    },\n    addLinkedContext(state, action: PayloadAction<ContextInfo>) {\n      state.linkedContexts = linkedContextsAdapter.addOne(\n        state.linkedContexts,\n        action,\n      );\n    },\n    removeLinkedContext(state, action: PayloadAction<string>) {\n      state.linkedContexts = linkedContextsAdapter.removeOne(\n        state.linkedContexts,\n        action,\n      );\n    },\n    updateLinkedContext(state, action: PayloadAction<Partial<ContextInfo>>) {\n      const update: Update<ContextInfo> = {\n        id: action.payload.contextId,\n        changes: action.payload,\n      };\n      state.linkedContexts = linkedContextsAdapter.updateOne(\n        state.linkedContexts,\n        update,\n      );\n    },\n    upsertSig(state, action: PayloadAction<SigInfo>) {\n      state.sigs = sigsAdapter.upsertOne(state.sigs, action);\n    },\n    removeSig(state, action: PayloadAction<string>) {\n      state.sigs = sigsAdapter.removeOne(state.sigs, action);\n    },\n    removeAllSigs(state) {\n      state.sigs = sigsAdapter.removeAll(state.sigs);\n    },\n    updateSig(state, action: PayloadAction<Update<SigInfo>>) {\n      state.sigs = sigsAdapter.updateOne(state.sigs, action.payload);\n    },\n  },\n  extraReducers: {\n    [RESET_STORE]: () => {\n      return initialState;\n    },\n  },\n});\n\n// Export app actions\nexport const {\n  setApps,\n  addLinkedContext,\n  removeLinkedContext,\n  updateLinkedContext,\n  upsertSig,\n  removeSig,\n  removeAllSigs,\n  updateSig,\n} = appsSlice.actions;\n\nexport const {\n  selectById: selectLinkedContextById,\n  selectAll: selectAllLinkedContexts,\n} = linkedContextsAdapter.getSelectors(\n  (state: State) => state.apps.linkedContexts,\n);\n\nexport const { selectAll: selectAllSigs } = sigsAdapter.getSelectors(\n  (state: State) => state.apps.sigs,\n);\n\nexport const linkedContextTotal = createSelector(\n  selectAllLinkedContexts,\n  (contexts) =>\n    contexts.reduce(\n      (acc, link) => (link.state === 'applied' ? acc + 1 : acc),\n      0,\n    ),\n);\n\nexport const selectLinkedContext = createSelector(\n  selectAllLinkedContexts,\n  (_: State, context: string) => context,\n  (contexts, context) => contexts.find((link) => link.context === context),\n);\n\nexport const selectPendingLinkedContext = createSelector(\n  selectAllLinkedContexts,\n  (contexts) => contexts.find((link) => link.state === 'pending'),\n);\n\nexport const selectAllApps = (state: State) => state.apps.apps;\n\nexport const selectAllLinkedSigs = createSelector(selectAllSigs, (sigs) =>\n  sigs.filter((sig) => sig.linked),\n);\n\nexport const createSelectLinkedSigsForApp = (appId) =>\n  createSelector(selectAllLinkedSigs, (linkedSigs) => {\n    // return all linked sigs that belong to provided app\n    return linkedSigs.filter((sig) => sig.app === appId);\n  });\n\nexport const selectBlindSigApps = (state: State) =>\n  state.apps.apps.filter((app) => app.usingBlindSig);\n\nexport const selectExpireableBlindSigApps = createSelector(\n  selectBlindSigApps,\n  (apps) => apps.filter((app) => app.verificationExpirationLength),\n);\n\n// Export reducer\nexport default appsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}