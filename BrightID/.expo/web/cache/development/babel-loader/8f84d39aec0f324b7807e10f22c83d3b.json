{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePlatformMethods;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _UIManager = _interopRequireDefault(require(\"../../exports/UIManager\"));\n\nvar _createDOMProps = _interopRequireDefault(require(\"../createDOMProps\"));\n\nvar _useStable = _interopRequireDefault(require(\"../useStable\"));\n\nvar _react = require(\"react\");\n\nvar emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, classList, pointerEvents, style, previousStyleRef) {\n  if (node != null && nativeProps) {\n    var domProps = (0, _createDOMProps.default)(null, (0, _extends2.default)({\n      pointerEvents: pointerEvents\n    }, nativeProps, {\n      classList: [classList, nativeProps.className],\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n\n    _UIManager.default.updateView(node, domProps);\n  }\n}\n\nfunction usePlatformMethods(_ref) {\n  var classList = _ref.classList,\n      pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var previousStyleRef = (0, _react.useRef)(null);\n  var setNativePropsArgsRef = (0, _react.useRef)(null);\n  setNativePropsArgsRef.current = {\n    classList: classList,\n    pointerEvents: pointerEvents,\n    style: style\n  };\n  var ref = (0, _useStable.default)(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return _UIManager.default.measure(hostNode, callback);\n        };\n\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return _UIManager.default.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n\n        hostNode.measureInWindow = function (callback) {\n          return _UIManager.default.measureInWindow(hostNode, callback);\n        };\n\n        hostNode.setNativeProps = function (nativeProps) {\n          var _ref2 = setNativePropsArgsRef.current || emptyObject,\n              classList = _ref2.classList,\n              style = _ref2.style,\n              pointerEvents = _ref2.pointerEvents;\n\n          setNativeProps(hostNode, nativeProps, classList, pointerEvents, style, previousStyleRef);\n        };\n      }\n    };\n  });\n  return ref;\n}","map":{"version":3,"names":["emptyObject","setNativeProps","node","nativeProps","classList","pointerEvents","style","previousStyleRef","domProps","createDOMProps","className","nextDomStyle","current","styleName","UIManager","updateView","usePlatformMethods","useRef","setNativePropsArgsRef","ref","useStable","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/modules/usePlatformMethods/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { GenericStyleProp } from '../../types';\nimport type { ViewProps } from '../../exports/View';\n\nimport UIManager from '../../exports/UIManager';\nimport createDOMProps from '../createDOMProps';\nimport useStable from '../useStable';\nimport { useRef } from 'react';\n\nconst emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, classList, pointerEvents, style, previousStyleRef) {\n  if (node != null && nativeProps) {\n    const domProps = createDOMProps(null, {\n      pointerEvents,\n      ...nativeProps,\n      classList: [classList, nativeProps.className],\n      style: [style, nativeProps.style]\n    });\n\n    const nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n      for (const styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n\n    UIManager.updateView(node, domProps);\n  }\n}\n\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\nexport default function usePlatformMethods({\n  classList,\n  pointerEvents,\n  style\n}: {\n  classList?: Array<string | boolean>,\n  style?: GenericStyleProp<*>,\n  pointerEvents?: $PropertyType<ViewProps, 'pointerEvents'>\n}): (hostNode: any) => void {\n  const previousStyleRef = useRef(null);\n  const setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = { classList, pointerEvents, style };\n\n  // Avoid creating a new ref on every render. The props only need to be\n  // available to 'setNativeProps' when it is called.\n  const ref = useStable(() => (hostNode: any) => {\n    if (hostNode != null) {\n      hostNode.measure = (callback) => UIManager.measure(hostNode, callback);\n      hostNode.measureLayout = (relativeToNode, success, failure) =>\n        UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n      hostNode.measureInWindow = (callback) => UIManager.measureInWindow(hostNode, callback);\n      hostNode.setNativeProps = (nativeProps) => {\n        const { classList, style, pointerEvents } = setNativePropsArgsRef.current || emptyObject;\n        setNativeProps(hostNode, nativeProps, classList, pointerEvents, style, previousStyleRef);\n      };\n    }\n  });\n\n  return ref;\n}\n"],"mappings":";;;;;;;;;AAYA;;AACA;;AACA;;AACA;;AAEA,IAAMA,WAAW,GAAG,EAApB;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsDC,aAAtD,EAAqEC,KAArE,EAA4EC,gBAA5E,EAA8F;EAC5F,IAAIL,IAAI,IAAI,IAAR,IAAgBC,WAApB,EAAiC;IAC/B,IAAMK,QAAQ,GAAG,IAAAC,uBAAA,EAAe,IAAf;MACfJ,aAAa,EAAbA;IADe,GAEZF,WAFY;MAGfC,SAAS,EAAE,CAACA,SAAD,EAAYD,WAAW,CAACO,SAAxB,CAHI;MAIfJ,KAAK,EAAE,CAACA,KAAD,EAAQH,WAAW,CAACG,KAApB;IAJQ,GAAjB;IAOA,IAAMK,YAAY,GAAGH,QAAQ,CAACF,KAA9B;;IAEA,IAAIC,gBAAgB,CAACK,OAAjB,IAA4B,IAAhC,EAAsC;MACpC,IAAIJ,QAAQ,CAACF,KAAT,IAAkB,IAAtB,EAA4B;QAC1BE,QAAQ,CAACF,KAAT,GAAiB,EAAjB;MACD;;MACD,KAAK,IAAMO,SAAX,IAAwBN,gBAAgB,CAACK,OAAzC,EAAkD;QAChD,IAAIJ,QAAQ,CAACF,KAAT,CAAeO,SAAf,KAA6B,IAAjC,EAAuC;UACrCL,QAAQ,CAACF,KAAT,CAAeO,SAAf,IAA4B,EAA5B;QACD;MACF;IACF;;IAEDN,gBAAgB,CAACK,OAAjB,GAA2BD,YAA3B;;IAEAG,kBAAA,CAAUC,UAAV,CAAqBb,IAArB,EAA2BM,QAA3B;EACD;AACF;;AAMc,SAASQ,kBAAT,OAQa;EAAA,IAP1BZ,SAO0B,QAP1BA,SAO0B;EAAA,IAN1BC,aAM0B,QAN1BA,aAM0B;EAAA,IAL1BC,KAK0B,QAL1BA,KAK0B;EAC1B,IAAMC,gBAAgB,GAAG,IAAAU,aAAA,EAAO,IAAP,CAAzB;EACA,IAAMC,qBAAqB,GAAG,IAAAD,aAAA,EAAO,IAAP,CAA9B;EACAC,qBAAqB,CAACN,OAAtB,GAAgC;IAAER,SAAS,EAATA,SAAF;IAAaC,aAAa,EAAbA,aAAb;IAA4BC,KAAK,EAALA;EAA5B,CAAhC;EAIA,IAAMa,GAAG,GAAG,IAAAC,kBAAA,EAAU;IAAA,OAAM,UAACC,QAAD,EAAmB;MAC7C,IAAIA,QAAQ,IAAI,IAAhB,EAAsB;QACpBA,QAAQ,CAACC,OAAT,GAAmB,UAACC,QAAD;UAAA,OAAcT,kBAAA,CAAUQ,OAAV,CAAkBD,QAAlB,EAA4BE,QAA5B,CAAd;QAAA,CAAnB;;QACAF,QAAQ,CAACG,aAAT,GAAyB,UAACC,cAAD,EAAiBC,OAAjB,EAA0BC,OAA1B;UAAA,OACvBb,kBAAA,CAAUU,aAAV,CAAwBH,QAAxB,EAAkCI,cAAlC,EAAkDE,OAAlD,EAA2DD,OAA3D,CADuB;QAAA,CAAzB;;QAEAL,QAAQ,CAACO,eAAT,GAA2B,UAACL,QAAD;UAAA,OAAcT,kBAAA,CAAUc,eAAV,CAA0BP,QAA1B,EAAoCE,QAApC,CAAd;QAAA,CAA3B;;QACAF,QAAQ,CAACpB,cAAT,GAA0B,UAACE,WAAD,EAAiB;UACzC,YAA4Ce,qBAAqB,CAACN,OAAtB,IAAiCZ,WAA7E;UAAA,IAAQI,SAAR,SAAQA,SAAR;UAAA,IAAmBE,KAAnB,SAAmBA,KAAnB;UAAA,IAA0BD,aAA1B,SAA0BA,aAA1B;;UACAJ,cAAc,CAACoB,QAAD,EAAWlB,WAAX,EAAwBC,SAAxB,EAAmCC,aAAnC,EAAkDC,KAAlD,EAAyDC,gBAAzD,CAAd;QACD,CAHD;MAID;IACF,CAXqB;EAAA,CAAV,CAAZ;EAaA,OAAOY,GAAP;AACD"},"metadata":{},"sourceType":"script"}