{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rnFetchBlob = _interopRequireDefault(require(\"rn-fetch-blob\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar createStoragePathIfNeeded = function createStoragePathIfNeeded(path) {\n  return _rnFetchBlob.default.fs.exists(path).then(function (exists) {\n    return exists ? new Promise(function (resolve) {\n      return resolve(true);\n    }) : _rnFetchBlob.default.fs.mkdir(path);\n  });\n};\n\nvar onStorageReadyFactory = function onStorageReadyFactory(storagePath) {\n  return function (func) {\n    var storage = createStoragePathIfNeeded(storagePath);\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return storage.then(function () {\n        return func.apply(void 0, args);\n      });\n    };\n  };\n};\n\nvar defaultStoragePath = function defaultStoragePath() {\n  return _rnFetchBlob.default.fs.dirs.DocumentDir + \"/persistStore\";\n};\n\nvar onStorageReady = onStorageReadyFactory(defaultStoragePath());\nvar encoding = 'utf8';\n\nvar toFileName = function toFileName(key) {\n  return key.replace(/[^a-z0-9.\\-_]/gi, '-');\n};\n\nvar pathForKey = function pathForKey(key) {\n  return defaultStoragePath() + \"/\" + toFileName(key);\n};\n\nvar FilesystemStorage = {\n  setItem: function setItem(key, value) {\n    return new Promise(function (resolve) {\n      _reactNative.InteractionManager.runAfterInteractions(function () {\n        resolve(_rnFetchBlob.default.fs.writeFile(pathForKey(key), value, encoding));\n      });\n    });\n  },\n  getItem: onStorageReady(function (key) {\n    var filePath = pathForKey(key);\n    return _rnFetchBlob.default.fs.readFile(filePath, encoding).then(function (data) {\n      if (data) {\n        return data;\n      } else {\n        throw new Error('key does not exist in fsStorage');\n      }\n    });\n  }),\n  removeItem: function removeItem(key) {\n    return _rnFetchBlob.default.fs.unlink(pathForKey(key));\n  },\n  clear: function clear() {\n    return _rnFetchBlob.default.fs.unlink(defaultStoragePath());\n  }\n};\nvar _default = FilesystemStorage;\nexports.default = _default;","map":{"version":3,"names":["createStoragePathIfNeeded","path","RNFetchBlob","fs","exists","then","Promise","resolve","mkdir","onStorageReadyFactory","storagePath","func","storage","args","defaultStoragePath","dirs","DocumentDir","onStorageReady","encoding","toFileName","key","replace","pathForKey","FilesystemStorage","setItem","value","InteractionManager","runAfterInteractions","writeFile","getItem","filePath","readFile","data","Error","removeItem","unlink","clear"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/store/storage/fsStorageAdapter.ts"],"sourcesContent":["/**\n * @flow\n */\n\nimport RNFetchBlob, { Encoding } from 'rn-fetch-blob';\nimport { InteractionManager } from 'react-native';\n\nconst createStoragePathIfNeeded = (path: string) =>\n  RNFetchBlob.fs\n    .exists(path)\n    .then((exists) =>\n      exists\n        ? new Promise((resolve) => resolve(true))\n        : RNFetchBlob.fs.mkdir(path),\n    );\n\nconst onStorageReadyFactory = (storagePath: string) => (\n  func: (...args: Array<any>) => any,\n) => {\n  const storage = createStoragePathIfNeeded(storagePath);\n  return (...args: Array<any>) => storage.then(() => func(...args));\n};\n\nconst defaultStoragePath = () =>\n  `${RNFetchBlob.fs.dirs.DocumentDir}/persistStore`;\n\nconst onStorageReady = onStorageReadyFactory(defaultStoragePath());\n\nconst encoding: Encoding = 'utf8';\n\nconst toFileName = (key: string) => key.replace(/[^a-z0-9.\\-_]/gi, '-');\n\nconst pathForKey = (key: string) =>\n  `${defaultStoragePath()}/${toFileName(key)}`;\n\nconst FilesystemStorage = {\n  setItem: (key: string, value: string) => {\n    return new Promise((resolve) => {\n      InteractionManager.runAfterInteractions(() => {\n        resolve(RNFetchBlob.fs.writeFile(pathForKey(key), value, encoding));\n      });\n    });\n  },\n\n  getItem: onStorageReady((key: string) => {\n    const filePath = pathForKey(key);\n\n    return RNFetchBlob.fs.readFile(filePath, encoding).then((data) => {\n      if (data) {\n        return data;\n      } else {\n        throw new Error('key does not exist in fsStorage');\n      }\n    });\n  }),\n\n  removeItem: (key: string) => {\n    return RNFetchBlob.fs.unlink(pathForKey(key));\n  },\n  clear: () => {\n    return RNFetchBlob.fs.unlink(defaultStoragePath());\n  },\n};\n\nexport default FilesystemStorage;\n"],"mappings":";;;;;;;AAIA;;AACA;;AAEA,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,IAAD;EAAA,OAChCC,oBAAA,CAAYC,EAAZ,CACGC,MADH,CACUH,IADV,EAEGI,IAFH,CAEQ,UAACD,MAAD;IAAA,OACJA,MAAM,GACF,IAAIE,OAAJ,CAAY,UAACC,OAAD;MAAA,OAAaA,OAAO,CAAC,IAAD,CAApB;IAAA,CAAZ,CADE,GAEFL,oBAAA,CAAYC,EAAZ,CAAeK,KAAf,CAAqBP,IAArB,CAHA;EAAA,CAFR,CADgC;AAAA,CAAlC;;AASA,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,WAAD;EAAA,OAAyB,UACrDC,IADqD,EAElD;IACH,IAAMC,OAAO,GAAGZ,yBAAyB,CAACU,WAAD,CAAzC;IACA,OAAO;MAAA,kCAAIG,IAAJ;QAAIA,IAAJ;MAAA;;MAAA,OAAyBD,OAAO,CAACP,IAAR,CAAa;QAAA,OAAMM,IAAI,MAAJ,SAAQE,IAAR,CAAN;MAAA,CAAb,CAAzB;IAAA,CAAP;EACD,CAL6B;AAAA,CAA9B;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OACtBZ,oBAAA,CAAYC,EAAZ,CAAeY,IAAf,CAAoBC,WADE;AAAA,CAA3B;;AAGA,IAAMC,cAAc,GAAGR,qBAAqB,CAACK,kBAAkB,EAAnB,CAA5C;AAEA,IAAMI,QAAkB,GAAG,MAA3B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD;EAAA,OAAiBA,GAAG,CAACC,OAAJ,CAAY,iBAAZ,EAA+B,GAA/B,CAAjB;AAAA,CAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACF,GAAD;EAAA,OACdN,kBAAkB,EADJ,SACUK,UAAU,CAACC,GAAD,CADpB;AAAA,CAAnB;;AAGA,IAAMG,iBAAiB,GAAG;EACxBC,OAAO,EAAE,iBAACJ,GAAD,EAAcK,KAAd,EAAgC;IACvC,OAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAa;MAC9BmB,+BAAA,CAAmBC,oBAAnB,CAAwC,YAAM;QAC5CpB,OAAO,CAACL,oBAAA,CAAYC,EAAZ,CAAeyB,SAAf,CAAyBN,UAAU,CAACF,GAAD,CAAnC,EAA0CK,KAA1C,EAAiDP,QAAjD,CAAD,CAAP;MACD,CAFD;IAGD,CAJM,CAAP;EAKD,CAPuB;EASxBW,OAAO,EAAEZ,cAAc,CAAC,UAACG,GAAD,EAAiB;IACvC,IAAMU,QAAQ,GAAGR,UAAU,CAACF,GAAD,CAA3B;IAEA,OAAOlB,oBAAA,CAAYC,EAAZ,CAAe4B,QAAf,CAAwBD,QAAxB,EAAkCZ,QAAlC,EAA4Cb,IAA5C,CAAiD,UAAC2B,IAAD,EAAU;MAChE,IAAIA,IAAJ,EAAU;QACR,OAAOA,IAAP;MACD,CAFD,MAEO;QACL,MAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;MACD;IACF,CANM,CAAP;EAOD,CAVsB,CATC;EAqBxBC,UAAU,EAAE,oBAACd,GAAD,EAAiB;IAC3B,OAAOlB,oBAAA,CAAYC,EAAZ,CAAegC,MAAf,CAAsBb,UAAU,CAACF,GAAD,CAAhC,CAAP;EACD,CAvBuB;EAwBxBgB,KAAK,EAAE,iBAAM;IACX,OAAOlC,oBAAA,CAAYC,EAAZ,CAAegC,MAAf,CAAsBrB,kBAAkB,EAAxC,CAAP;EACD;AA1BuB,CAA1B;eA6BeS,iB"},"metadata":{},"sourceType":"script"}