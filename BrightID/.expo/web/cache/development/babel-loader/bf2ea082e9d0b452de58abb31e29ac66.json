{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Clipboard from '@react-native-community/clipboard';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport { useTranslation } from 'react-i18next';\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useDispatch, useSelector } from \"../store\";\nimport { fetchApps, setActiveNotification, updateBlindSigs, selectActiveDevices } from \"../actions\";\nimport { linkedContextTotal } from \"../reducer/appsSlice\";\nimport { verifiedConnectionsSelector } from \"../reducer/connectionsSlice\";\nimport { retrieveImage } from \"../utils/filesystem\";\nimport { WHITE, ORANGE, BLACK, BLUE, DARKER_GREY } from \"../theme/colors\";\nimport fetchUserInfo from \"../actions/fetchUserInfo\";\nimport ChatBox from \"./Icons/ChatBox\";\nimport UnverifiedSticker from \"./Icons/UnverifiedSticker\";\nimport Camera from \"./Icons/Camera\";\nimport { DEVICE_LARGE } from \"../utils/deviceConstants\";\nimport { fontSize } from \"../theme/fonts\";\nimport { setHeaderHeight } from \"../reducer/walkthroughSlice\";\nimport { selectBaseUrl, selectIsPrimaryDevice, removeCurrentNodeUrl } from \"../reducer/settingsSlice\";\nimport { NodeApiContext } from \"./NodeApiGate\";\nimport { getVerificationPatches } from \"../utils/verifications\";\nimport { selectTaskIds, selectCompletedTaskIds } from \"./Tasks/TasksSlice\";\nimport { version as app_version } from \"../../package.json\";\nimport { uInt8ArrayToB64 } from \"../utils/encoding\";\nimport { syncAndLinkSocialMedias, updateSocialMediaVariations } from \"./EditProfile/socialMediaThunks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar discordUrl = 'https://discord.gg/nTtuB2M';\nexport var verificationPatchesSelector = createSelector(function (state) {\n  return state.user.verifications;\n}, getVerificationPatches);\nexport var HomeScreen = function HomeScreen(props) {\n  var navigation = props.navigation;\n  var dispatch = useDispatch();\n  var headerHeight = useHeaderHeight();\n  var name = useSelector(function (state) {\n    return state.user.name;\n  });\n  var taskIds = useSelector(selectTaskIds);\n  var completedTaskIds = useSelector(selectCompletedTaskIds);\n  var verificationPatches = useSelector(verificationPatchesSelector);\n  var isPrimaryDevice = useSelector(selectIsPrimaryDevice);\n  var activeDevices = useSelector(selectActiveDevices);\n  var photoFilename = useSelector(function (state) {\n    return state.user.photo.filename;\n  });\n  var connectionsCount = useSelector(verifiedConnectionsSelector).length;\n  var linkedContextsCount = useSelector(linkedContextTotal);\n  var baseUrl = useSelector(selectBaseUrl);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      profilePhoto = _useState2[0],\n      setProfilePhoto = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var api = useContext(NodeApiContext);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      id = _useSelector.id;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.keypair;\n  }),\n      secretKey = _useSelector2.secretKey,\n      publicKey = _useSelector2.publicKey;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useFocusEffect(useCallback(function () {\n    retrieveImage(photoFilename).then(setProfilePhoto);\n    setLoading(true);\n\n    if (isPrimaryDevice) {\n      dispatch(updateBlindSigs());\n    }\n\n    dispatch(fetchUserInfo(api)).then(function () {\n      setLoading(false);\n    });\n    dispatch(updateSocialMediaVariations());\n    dispatch(syncAndLinkSocialMedias());\n    var timeoutId = setTimeout(function () {\n      setLoading(false);\n    }, 3000);\n    return function () {\n      clearTimeout(timeoutId);\n    };\n  }, [api, dispatch, isPrimaryDevice, photoFilename]));\n  useEffect(function () {\n    if (api) {\n      console.log(\"updating apps...\");\n      dispatch(fetchApps(api));\n    }\n  }, [api, dispatch]);\n  useEffect(function () {\n    if (activeDevices.length) {\n      console.log(\"checking signing key...\");\n      var invalidSigingKey = !activeDevices.find(function (d) {\n        return d.signingKey === publicKey;\n      });\n\n      if (invalidSigingKey) {\n        return Alert.alert(t('common.alert.title.invalidSigningKey'), t('common.alert.text.invalidSigningKey'), [{\n          text: 'Switch to different node',\n          onPress: function onPress() {\n            dispatch(removeCurrentNodeUrl());\n          }\n        }]);\n      }\n    }\n  }, [activeDevices, dispatch, publicKey, t]);\n  useEffect(function () {\n    dispatch(setHeaderHeight(headerHeight));\n  }, [dispatch, headerHeight]);\n\n  var _useActionSheet = useActionSheet(),\n      showActionSheetWithOptions = _useActionSheet.showActionSheetWithOptions;\n\n  var handleChat = function handleChat() {\n    if (__DEV__) {\n      var _require = require(\"../utils/dev\"),\n          delStorage = _require.delStorage;\n\n      delStorage();\n    } else {\n      showActionSheetWithOptions({\n        options: [t('home.chatActionSheet.discord'), t('common.actionSheet.cancel')],\n        cancelButtonIndex: 1,\n        title: t('home.chatActionSheet.title'),\n        showSeparators: true,\n        textStyle: {\n          color: BLUE,\n          textAlign: 'center',\n          width: '100%'\n        },\n        titleTextStyle: {\n          textAlign: 'center',\n          width: '100%'\n        }\n      }, function (index) {\n        if (index === 0) {\n          Linking.openURL(discordUrl).catch(function (err) {\n            return console.log('An error occurred', err);\n          });\n        }\n      });\n    }\n  };\n\n  var DeepPasteLink = function DeepPasteLink() {\n    if (__DEV__) {\n      return _jsx(TouchableOpacity, {\n        testID: \"pasteDeeplink\",\n        style: {\n          position: 'absolute',\n          left: 10,\n          bottom: 10\n        },\n        onPress: function _callee() {\n          var url;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(Clipboard.getString());\n\n                case 2:\n                  url = _context.sent;\n\n                  if (url.startsWith('https://app.brightid.org/connection-code/')) {\n                    url = url.replace('https://app.brightid.org/connection-code/', '');\n                    navigation.navigate('ScanCode', {\n                      qrcode: url\n                    });\n                  } else {\n                    url = url.replace('https://app.brightid.org', 'brightid://');\n                    console.log(\"Linking.openURL with \" + url);\n                    Linking.openURL(url);\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        children: _jsx(Material, {\n          name: \"content-paste\",\n          size: DEVICE_LARGE ? 28 : 23,\n          color: WHITE\n        })\n      });\n    } else {\n      return null;\n    }\n  };\n\n  var userBrightId = __DEV__ ? _jsxs(View, {\n    children: [_jsx(Text, {\n      testID: \"userBrightId\",\n      style: {\n        fontSize: 6,\n        color: WHITE\n      },\n      children: id\n    }), _jsx(Text, {\n      testID: \"userPublicKey\",\n      style: {\n        fontSize: 6,\n        color: WHITE\n      },\n      children: publicKey\n    }), _jsx(Text, {\n      testID: \"userSecretKey\",\n      style: {\n        fontSize: 6,\n        color: WHITE\n      },\n      children: uInt8ArrayToB64(secretKey)\n    })]\n  }) : null;\n  console.log('RENDERING HOME PAGE');\n  return _jsxs(View, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }],\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: \"#fff\",\n      animated: true\n    }), _jsxs(View, {\n      style: styles.profileContainer,\n      testID: \"PhotoContainer\",\n      children: [profilePhoto ? _jsx(Image, {\n        source: {\n          uri: profilePhoto\n        },\n        style: styles.photo,\n        resizeMode: \"cover\",\n        onError: function onError(e) {\n          console.log(e);\n        },\n        accessible: true,\n        accessibilityLabel: t('common.accessibilityLabel.profilePhoto')\n      }) : null, _jsxs(View, {\n        style: styles.verifyNameContainer,\n        testID: \"homeScreen\",\n        children: [_jsx(View, {\n          style: styles.nameContainer,\n          children: _jsx(Text, {\n            testID: \"EditNameBtn\",\n            style: styles.name,\n            numberOfLines: 1,\n            children: name\n          })\n        }), _jsx(View, {\n          style: styles.profileDivider\n        }), _jsx(View, {\n          style: styles.verificationsContainer,\n          children: verificationPatches.length > 0 ? verificationPatches.map(function (patch, i) {\n            return _jsx(TouchableOpacity, {\n              style: styles.verificationBox,\n              onPress: function onPress() {\n                var _patch$task;\n\n                if (patch != null && (_patch$task = patch.task) != null && _patch$task.navigationTarget) {\n                  navigation.navigate(patch.task.navigationTarget, {\n                    url: patch.task.url\n                  });\n                }\n              },\n              children: _jsx(Text, {\n                style: styles.verificationText,\n                children: patch.text\n              }, \"verificationText-\" + i)\n            }, \"verificationPatch-\" + i);\n          }) : loading ? _jsx(View, {\n            style: styles.verificationBox,\n            children: _jsx(ActivityIndicator, {\n              size: \"small\",\n              color: DARKER_GREY,\n              animating: true\n            })\n          }) : _jsx(View, {\n            style: styles.verificationBox,\n            children: _jsx(UnverifiedSticker, {\n              width: 100,\n              height: 19\n            })\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.countsContainer,\n      children: [_jsxs(TouchableOpacity, {\n        testID: \"connectionsBtn\",\n        style: styles.countsCard,\n        onPress: function onPress() {\n          dispatch(setActiveNotification(null));\n          navigation.navigate('Connections');\n        },\n        children: [_jsx(Text, {\n          testID: \"ConnectionsCount\",\n          style: styles.countsNumberText,\n          children: connectionsCount\n        }), _jsx(View, {\n          style: styles.countsBorder\n        }), _jsx(Text, {\n          style: styles.countsDescriptionText,\n          children: t('home.button.connections')\n        })]\n      }), _jsxs(TouchableOpacity, {\n        testID: \"achievementsBtn\",\n        style: styles.countsCard,\n        onPress: function onPress() {\n          navigation.navigate('Achievements');\n        },\n        children: [_jsxs(Text, {\n          testID: \"AchievementsCount\",\n          style: styles.countsNumberText,\n          children: [completedTaskIds.length, ' ', _jsxs(Text, {\n            style: styles.totalCountsNumberText,\n            children: [' ', \"/ \", taskIds.length, ' ']\n          })]\n        }), _jsx(View, {\n          style: styles.countsBorder\n        }), _jsx(Text, {\n          style: styles.countsDescriptionText,\n          children: t('home.button.achievements')\n        })]\n      }), _jsxs(TouchableOpacity, {\n        testID: \"appsBtn\",\n        style: styles.countsCard,\n        onPress: function onPress() {\n          dispatch(setActiveNotification(null));\n          navigation.navigate('Apps', {\n            baseUrl: '',\n            context: '',\n            contextId: ''\n          });\n        },\n        children: [_jsx(Text, {\n          testID: \"AppsCount\",\n          style: styles.countsNumberText,\n          children: linkedContextsCount\n        }), _jsx(View, {\n          style: styles.countsBorder\n        }), _jsx(Text, {\n          style: styles.countsDescriptionText,\n          children: t('home.button.apps')\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.bottomOrangeContainer,\n      children: [_jsxs(View, {\n        style: styles.connectContainer,\n        children: [_jsx(Text, {\n          style: styles.newConnectionText,\n          children: t('home.label.createNewConnection')\n        }), _jsxs(TouchableOpacity, {\n          testID: \"MyCodeBtn\",\n          style: styles.connectButton,\n          onPress: function onPress() {\n            dispatch(setActiveNotification(null));\n            navigation.navigate('MyCode');\n          },\n          accessible: true,\n          accessibilityLabel: t('home.accessibilityLabel.connect'),\n          children: [_jsx(Material, {\n            name: \"qrcode\",\n            color: BLACK,\n            size: DEVICE_LARGE ? 25 : 20\n          }), _jsx(Text, {\n            style: styles.connectText,\n            children: t('home.button.myCode')\n          })]\n        }), _jsxs(TouchableOpacity, {\n          testID: \"ScanCodeBtn\",\n          style: styles.connectButton,\n          onPress: function onPress() {\n            dispatch(setActiveNotification(null));\n            navigation.navigate('ScanCode');\n          },\n          accessible: true,\n          accessibilityLabel: t('home.accessibilityLabel.connect'),\n          children: [_jsx(Camera, {\n            width: DEVICE_LARGE ? 25 : 20,\n            height: DEVICE_LARGE ? 25 : 20\n          }), _jsx(Text, {\n            style: styles.connectText,\n            children: t('home.button.scanCode')\n          })]\n        }), _jsxs(TouchableOpacity, {\n          testID: \"JoinCommunityBtn\",\n          style: styles.communityContainer,\n          onPress: handleChat,\n          children: [_jsx(ChatBox, {\n            width: DEVICE_LARGE ? 22 : 20,\n            height: DEVICE_LARGE ? 22 : 20,\n            color: WHITE\n          }), _jsx(View, {\n            style: {\n              borderBottomWidth: 1,\n              borderBottomColor: WHITE,\n              marginLeft: 5\n            },\n            children: _jsx(Text, {\n              style: styles.communityLink,\n              children: t('home.link.community')\n            })\n          })]\n        })]\n      }), _jsx(DeepPasteLink, {}), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.nodeLinkContainer,\n          onPress: function onPress() {\n            return navigation.navigate('NodeModal');\n          },\n          children: _jsxs(Text, {\n            style: styles.nodeLink,\n            children: [baseUrl ? baseUrl.split('://')[1] : 'disconnected', \" - v\", ' ', app_version]\n          })\n        })\n      }), userBrightId]\n    })]\n  });\n};\nvar PHOTO_WIDTH = DEVICE_LARGE ? 90 : 78;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    backgroundColor: ORANGE\n  },\n  profileContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingLeft: DEVICE_LARGE ? '15%' : '12%',\n    backgroundColor: WHITE,\n    paddingTop: DEVICE_LARGE ? 10 : 0\n  },\n  verifyNameContainer: {\n    flexDirection: 'column',\n    marginLeft: DEVICE_LARGE ? 40 : 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: WHITE,\n    maxWidth: '50%'\n  },\n  nameContainer: {\n    flexDirection: 'row'\n  },\n  profileDivider: {\n    borderBottomWidth: 2,\n    borderBottomColor: ORANGE,\n    paddingBottom: 3,\n    width: '118%'\n  },\n  photo: {\n    width: PHOTO_WIDTH,\n    height: PHOTO_WIDTH,\n    borderRadius: 71,\n    shadowColor: 'rgba(0, 0, 0, 0.5)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[18],\n    color: BLACK\n  },\n  verificationsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: DEVICE_LARGE ? 10 : 0,\n    width: '100%',\n    backgroundColor: WHITE\n  },\n  verificationBox: {\n    margin: 2\n  },\n  verificationText: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    paddingTop: 4,\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: BLUE,\n    borderColor: BLUE,\n    borderWidth: 1,\n    borderRadius: 8,\n    textAlign: 'center'\n  },\n  countsCard: {\n    backgroundColor: WHITE,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 90 : 82,\n    height: DEVICE_LARGE ? 100 : 90,\n    borderRadius: 10,\n    elevation: 5,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOpacity: 1,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 10\n  },\n  countsContainer: {\n    justifyContent: 'space-evenly',\n    flexDirection: 'row',\n    width: '100%',\n    borderBottomLeftRadius: 58,\n    borderBottomRightRadius: 58,\n    backgroundColor: WHITE,\n    flexGrow: 1,\n    paddingTop: DEVICE_LARGE ? 10 : 0\n  },\n  countsBorder: {\n    borderBottomWidth: 1,\n    borderBottomColor: ORANGE,\n    width: 55\n  },\n  countsDescriptionText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[12],\n    marginTop: 6\n  },\n  countsNumberText: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[25],\n    marginBottom: 3\n  },\n  totalCountsNumberText: {\n    fontSize: fontSize[12]\n  },\n  bottomOrangeContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: ORANGE,\n    marginTop: DEVICE_LARGE ? 17 : 15,\n    zIndex: 10,\n    flexGrow: 1\n  },\n  connectContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  newConnectionText: {\n    color: WHITE,\n    fontSize: fontSize[18],\n    fontFamily: 'Poppins-Medium',\n    marginBottom: DEVICE_LARGE ? 16 : 11\n  },\n  connectButton: {\n    paddingTop: DEVICE_LARGE ? 11 : 7,\n    paddingBottom: DEVICE_LARGE ? 10 : 6,\n    width: DEVICE_LARGE ? '80%' : 260,\n    borderRadius: 60,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 1,\n    marginBottom: DEVICE_LARGE ? 16 : 11\n  },\n  connectText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[17],\n    color: BLACK,\n    marginLeft: DEVICE_LARGE ? 10 : 8\n  },\n  communityIcon: {\n    marginTop: 1,\n    marginRight: 5\n  },\n  communityContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: DEVICE_LARGE ? 20 : 12\n  },\n  communityLink: {\n    color: WHITE,\n    fontSize: fontSize[14],\n    fontFamily: 'Poppins-Bold'\n  },\n  infoContainer: {\n    position: 'absolute',\n    right: DEVICE_LARGE ? 12 : 7,\n    bottom: DEVICE_LARGE ? 12 : 7,\n    flexDirection: 'row'\n  },\n  nodeLinkContainer: {},\n  nodeLink: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: WHITE\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/HomeScreen.tsx"],"names":["version","discordUrl","verificationPatchesSelector","createSelector","state","HomeScreen","navigation","props","dispatch","useDispatch","headerHeight","useHeaderHeight","name","useSelector","taskIds","completedTaskIds","verificationPatches","isPrimaryDevice","activeDevices","photoFilename","connectionsCount","linkedContextsCount","baseUrl","profilePhoto","setProfilePhoto","useState","loading","setLoading","api","useContext","id","secretKey","publicKey","t","useTranslation","useFocusEffect","useCallback","retrieveImage","updateBlindSigs","fetchUserInfo","updateSocialMediaVariations","syncAndLinkSocialMedias","timeoutId","setTimeout","clearTimeout","useEffect","console","fetchApps","invalidSigingKey","d","Alert","text","onPress","removeCurrentNodeUrl","setHeaderHeight","showActionSheetWithOptions","useActionSheet","handleChat","delStorage","require","options","cancelButtonIndex","title","showSeparators","textStyle","color","textAlign","width","titleTextStyle","index","Linking","DeepPasteLink","position","left","bottom","url","Clipboard","qrcode","DEVICE_LARGE","userBrightId","__DEV__","fontSize","uInt8ArrayToB64","styles","marginTop","uri","patch","setActiveNotification","context","contextId","borderBottomWidth","borderBottomColor","marginLeft","PHOTO_WIDTH","StyleSheet","container","flex","alignItems","flexDirection","justifyContent","backgroundColor","profileContainer","flexGrow","paddingLeft","paddingTop","verifyNameContainer","maxWidth","nameContainer","profileDivider","paddingBottom","photo","height","borderRadius","shadowColor","shadowOffset","shadowRadius","fontFamily","verificationsContainer","marginBottom","verificationBox","margin","verificationText","paddingRight","borderColor","borderWidth","countsCard","elevation","shadowOpacity","countsContainer","borderBottomLeftRadius","borderBottomRightRadius","countsBorder","countsDescriptionText","countsNumberText","totalCountsNumberText","bottomOrangeContainer","zIndex","connectContainer","newConnectionText","connectButton","connectText","communityIcon","marginRight","communityContainer","padding","communityLink","infoContainer","right","nodeLinkContainer","nodeLink"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  ActivityIndicator,\n  Image,\n  Linking,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  StatusBar,\n  Alert,\n} from 'react-native';\nimport Clipboard from '@react-native-community/clipboard';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport { useTranslation } from 'react-i18next';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  fetchApps,\n  setActiveNotification,\n  updateBlindSigs,\n  selectActiveDevices,\n} from '@/actions';\nimport { linkedContextTotal } from '@/reducer/appsSlice';\nimport { verifiedConnectionsSelector } from '@/reducer/connectionsSlice';\nimport { retrieveImage } from '@/utils/filesystem';\nimport { WHITE, ORANGE, BLACK, BLUE, DARKER_GREY } from '@/theme/colors';\nimport fetchUserInfo from '@/actions/fetchUserInfo';\nimport ChatBox from '@/components/Icons/ChatBox';\nimport UnverifiedSticker from '@/components/Icons/UnverifiedSticker';\nimport Camera from '@/components/Icons/Camera';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { setHeaderHeight } from '@/reducer/walkthroughSlice';\nimport {\n  selectBaseUrl,\n  selectIsPrimaryDevice,\n  removeCurrentNodeUrl,\n} from '@/reducer/settingsSlice';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { getVerificationPatches } from '@/utils/verifications';\nimport {\n  selectTaskIds,\n  selectCompletedTaskIds,\n} from '@/components/Tasks/TasksSlice';\n\nimport { version as app_version } from '../../package.json';\nimport { uInt8ArrayToB64 } from '@/utils/encoding';\nimport {\n  syncAndLinkSocialMedias,\n  updateSocialMediaVariations,\n} from '@/components/EditProfile/socialMediaThunks';\n\n/**\n * Home screen of BrightID\n * ==========================\n */\nconst discordUrl = 'https://discord.gg/nTtuB2M';\n\n/** Selectors */\n\nexport const verificationPatchesSelector = createSelector(\n  (state: State) => state.user.verifications,\n  getVerificationPatches,\n);\n\n/** HomeScreen Component */\n\nexport const HomeScreen = (props) => {\n  const { navigation } = props;\n  const dispatch = useDispatch();\n  const headerHeight = useHeaderHeight();\n  const name = useSelector((state: State) => state.user.name);\n  const taskIds = useSelector(selectTaskIds);\n  const completedTaskIds = useSelector(selectCompletedTaskIds);\n  const verificationPatches = useSelector(verificationPatchesSelector);\n  const isPrimaryDevice = useSelector(selectIsPrimaryDevice);\n  const activeDevices = useSelector(selectActiveDevices);\n  const photoFilename = useSelector(\n    (state: State) => state.user.photo.filename,\n  );\n  const connectionsCount = useSelector(verifiedConnectionsSelector).length;\n  const linkedContextsCount = useSelector(linkedContextTotal);\n  const baseUrl = useSelector(selectBaseUrl);\n  const [profilePhoto, setProfilePhoto] = useState('');\n  const [loading, setLoading] = useState(true);\n  const api = useContext(NodeApiContext);\n  const { id } = useSelector((state: State) => state.user);\n  const { secretKey, publicKey } = useSelector((state) => state.keypair);\n\n  const { t } = useTranslation();\n\n  useFocusEffect(\n    useCallback(() => {\n      retrieveImage(photoFilename).then(setProfilePhoto);\n      setLoading(true);\n      if (isPrimaryDevice) {\n        dispatch(updateBlindSigs());\n      }\n      dispatch(fetchUserInfo(api)).then(() => {\n        setLoading(false);\n      });\n      dispatch(updateSocialMediaVariations());\n      dispatch(syncAndLinkSocialMedias());\n      const timeoutId = setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }, [api, dispatch, isPrimaryDevice, photoFilename]),\n  );\n\n  useEffect(() => {\n    if (api) {\n      console.log(`updating apps...`);\n      dispatch(fetchApps(api));\n    }\n  }, [api, dispatch]);\n\n  useEffect(() => {\n    if (activeDevices.length) {\n      console.log(`checking signing key...`);\n      const invalidSigingKey = !activeDevices.find(\n        (d) => d.signingKey === publicKey,\n      );\n      if (invalidSigingKey) {\n        return Alert.alert(\n          t('common.alert.title.invalidSigningKey'),\n          t('common.alert.text.invalidSigningKey'),\n          [\n            {\n              text: 'Switch to different node',\n              onPress: () => {\n                dispatch(removeCurrentNodeUrl());\n              },\n            },\n          ],\n        );\n      }\n    }\n  }, [activeDevices, dispatch, publicKey, t]);\n\n  useEffect(() => {\n    dispatch(setHeaderHeight(headerHeight));\n  }, [dispatch, headerHeight]);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const handleChat = () => {\n    if (__DEV__) {\n      const { delStorage } = require('@/utils/dev');\n      delStorage();\n    } else {\n      showActionSheetWithOptions(\n        {\n          options: [\n            t('home.chatActionSheet.discord'),\n            t('common.actionSheet.cancel'),\n          ],\n          cancelButtonIndex: 1,\n          title: t('home.chatActionSheet.title'),\n          showSeparators: true,\n          textStyle: {\n            color: BLUE,\n            textAlign: 'center',\n            width: '100%',\n          },\n          titleTextStyle: {\n            textAlign: 'center',\n            width: '100%',\n          },\n        },\n        (index) => {\n          if (index === 0) {\n            Linking.openURL(discordUrl).catch((err) =>\n              console.log('An error occurred', err),\n            );\n          }\n        },\n      );\n    }\n  };\n\n  const DeepPasteLink = () => {\n    if (__DEV__) {\n      return (\n        <TouchableOpacity\n          testID=\"pasteDeeplink\"\n          style={{\n            position: 'absolute',\n            left: 10,\n            bottom: 10,\n          }}\n          onPress={async () => {\n            let url = await Clipboard.getString();\n            if (url.startsWith('https://app.brightid.org/connection-code/')) {\n              url = url.replace(\n                'https://app.brightid.org/connection-code/',\n                '',\n              );\n\n              navigation.navigate('ScanCode', { qrcode: url });\n            } else {\n              url = url.replace('https://app.brightid.org', 'brightid://');\n              console.log(`Linking.openURL with ${url}`);\n              Linking.openURL(url);\n            }\n          }}\n        >\n          <Material\n            name=\"content-paste\"\n            size={DEVICE_LARGE ? 28 : 23}\n            color={WHITE}\n          />\n        </TouchableOpacity>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const userBrightId = __DEV__ ? (\n    <View>\n      <Text testID=\"userBrightId\" style={{ fontSize: 6, color: WHITE }}>\n        {id}\n      </Text>\n      <Text testID=\"userPublicKey\" style={{ fontSize: 6, color: WHITE }}>\n        {publicKey}\n      </Text>\n      <Text testID=\"userSecretKey\" style={{ fontSize: 6, color: WHITE }}>\n        {uInt8ArrayToB64(secretKey)}\n      </Text>\n    </View>\n  ) : null;\n\n  console.log('RENDERING HOME PAGE');\n\n  return (\n    <View style={[styles.container, { marginTop: headerHeight }]}>\n      <StatusBar\n        barStyle=\"dark-content\"\n        backgroundColor=\"#fff\"\n        animated={true}\n      />\n      <View style={styles.profileContainer} testID=\"PhotoContainer\">\n        {profilePhoto ? (\n          <Image\n            source={{\n              uri: profilePhoto,\n            }}\n            style={styles.photo}\n            resizeMode=\"cover\"\n            onError={(e) => {\n              console.log(e);\n            }}\n            accessible={true}\n            accessibilityLabel={t('common.accessibilityLabel.profilePhoto')}\n          />\n        ) : null}\n        <View style={styles.verifyNameContainer} testID=\"homeScreen\">\n          <View style={styles.nameContainer}>\n            <Text testID=\"EditNameBtn\" style={styles.name} numberOfLines={1}>\n              {name}\n            </Text>\n          </View>\n          <View style={styles.profileDivider} />\n          <View style={styles.verificationsContainer}>\n            {verificationPatches.length > 0 ? (\n              verificationPatches.map((patch, i) => (\n                <TouchableOpacity\n                  key={`verificationPatch-${i}`}\n                  style={styles.verificationBox}\n                  onPress={() => {\n                    if (patch?.task?.navigationTarget) {\n                      navigation.navigate(patch.task.navigationTarget, {\n                        url: patch.task.url,\n                      });\n                    }\n                  }}\n                >\n                  <Text\n                    key={`verificationText-${i}`}\n                    style={styles.verificationText}\n                  >\n                    {patch.text}\n                  </Text>\n                </TouchableOpacity>\n              ))\n            ) : loading ? (\n              <View style={styles.verificationBox}>\n                <ActivityIndicator size=\"small\" color={DARKER_GREY} animating />\n              </View>\n            ) : (\n              <View style={styles.verificationBox}>\n                <UnverifiedSticker width={100} height={19} />\n              </View>\n            )}\n          </View>\n        </View>\n      </View>\n\n      <View style={styles.countsContainer}>\n        <TouchableOpacity\n          testID=\"connectionsBtn\"\n          style={styles.countsCard}\n          onPress={() => {\n            dispatch(setActiveNotification(null));\n            navigation.navigate('Connections');\n          }}\n        >\n          <Text testID=\"ConnectionsCount\" style={styles.countsNumberText}>\n            {connectionsCount}\n          </Text>\n          <View style={styles.countsBorder} />\n          <Text style={styles.countsDescriptionText}>\n            {t('home.button.connections')}\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          testID=\"achievementsBtn\"\n          style={styles.countsCard}\n          onPress={() => {\n            navigation.navigate('Achievements');\n          }}\n        >\n          <Text testID=\"AchievementsCount\" style={styles.countsNumberText}>\n            {completedTaskIds.length}{' '}\n            <Text style={styles.totalCountsNumberText}>\n              {' '}\n              / {taskIds.length}{' '}\n            </Text>\n          </Text>\n\n          <View style={styles.countsBorder} />\n          <Text style={styles.countsDescriptionText}>\n            {t('home.button.achievements')}\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          testID=\"appsBtn\"\n          style={styles.countsCard}\n          onPress={() => {\n            dispatch(setActiveNotification(null));\n            navigation.navigate('Apps', {\n              baseUrl: '',\n              context: '',\n              contextId: '',\n            });\n          }}\n        >\n          <Text testID=\"AppsCount\" style={styles.countsNumberText}>\n            {linkedContextsCount}\n          </Text>\n          <View style={styles.countsBorder} />\n          <Text style={styles.countsDescriptionText}>\n            {t('home.button.apps')}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.bottomOrangeContainer}>\n        <View style={styles.connectContainer}>\n          <Text style={styles.newConnectionText}>\n            {t('home.label.createNewConnection')}\n          </Text>\n          <TouchableOpacity\n            testID=\"MyCodeBtn\"\n            style={styles.connectButton}\n            onPress={() => {\n              dispatch(setActiveNotification(null));\n              navigation.navigate('MyCode');\n            }}\n            accessible={true}\n            accessibilityLabel={t('home.accessibilityLabel.connect')}\n          >\n            <Material\n              name=\"qrcode\"\n              color={BLACK}\n              size={DEVICE_LARGE ? 25 : 20}\n            />\n            <Text style={styles.connectText}>{t('home.button.myCode')}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            testID=\"ScanCodeBtn\"\n            style={styles.connectButton}\n            onPress={() => {\n              dispatch(setActiveNotification(null));\n              navigation.navigate('ScanCode');\n            }}\n            accessible={true}\n            accessibilityLabel={t('home.accessibilityLabel.connect')}\n          >\n            <Camera\n              width={DEVICE_LARGE ? 25 : 20}\n              height={DEVICE_LARGE ? 25 : 20}\n            />\n            <Text style={styles.connectText}>{t('home.button.scanCode')}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            testID=\"JoinCommunityBtn\"\n            style={styles.communityContainer}\n            onPress={handleChat}\n          >\n            <ChatBox\n              width={DEVICE_LARGE ? 22 : 20}\n              height={DEVICE_LARGE ? 22 : 20}\n              color={WHITE}\n            />\n            <View\n              style={{\n                borderBottomWidth: 1,\n                borderBottomColor: WHITE,\n                marginLeft: 5,\n              }}\n            >\n              <Text style={styles.communityLink}>\n                {t('home.link.community')}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <DeepPasteLink />\n        <View style={styles.infoContainer}>\n          <TouchableOpacity\n            style={styles.nodeLinkContainer}\n            onPress={() => navigation.navigate('NodeModal')}\n          >\n            <Text style={styles.nodeLink}>\n              {baseUrl ? baseUrl.split('://')[1] : 'disconnected'} - v{' '}\n              {app_version}\n            </Text>\n          </TouchableOpacity>\n        </View>\n        {userBrightId}\n      </View>\n    </View>\n  );\n};\n\nconst PHOTO_WIDTH = DEVICE_LARGE ? 90 : 78;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    backgroundColor: ORANGE,\n  },\n  profileContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingLeft: DEVICE_LARGE ? '15%' : '12%',\n    backgroundColor: WHITE,\n    paddingTop: DEVICE_LARGE ? 10 : 0,\n  },\n  verifyNameContainer: {\n    flexDirection: 'column',\n    marginLeft: DEVICE_LARGE ? 40 : 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: WHITE,\n    maxWidth: '50%',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n  },\n  profileDivider: {\n    borderBottomWidth: 2,\n    borderBottomColor: ORANGE,\n    paddingBottom: 3,\n    width: '118%',\n  },\n  photo: {\n    width: PHOTO_WIDTH,\n    height: PHOTO_WIDTH,\n    borderRadius: 71,\n    shadowColor: 'rgba(0, 0, 0, 0.5)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[18],\n    color: BLACK,\n  },\n  verificationsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: DEVICE_LARGE ? 10 : 0,\n    width: '100%',\n    backgroundColor: WHITE,\n  },\n  verificationBox: {\n    margin: 2,\n  },\n  verificationText: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    paddingTop: 4,\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: BLUE,\n    borderColor: BLUE,\n    borderWidth: 1,\n    borderRadius: 8,\n    textAlign: 'center',\n  },\n  countsCard: {\n    backgroundColor: WHITE,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 90 : 82,\n    height: DEVICE_LARGE ? 100 : 90,\n    borderRadius: 10,\n    elevation: 5,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOpacity: 1,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowRadius: 10,\n  },\n  countsContainer: {\n    justifyContent: 'space-evenly',\n    flexDirection: 'row',\n    width: '100%',\n    borderBottomLeftRadius: 58,\n    borderBottomRightRadius: 58,\n    backgroundColor: WHITE,\n    flexGrow: 1,\n    paddingTop: DEVICE_LARGE ? 10 : 0,\n  },\n  countsBorder: {\n    borderBottomWidth: 1,\n    borderBottomColor: ORANGE,\n    width: 55,\n  },\n  countsDescriptionText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[12],\n    marginTop: 6,\n  },\n  countsNumberText: {\n    fontFamily: 'Poppins-Bold',\n    textAlign: 'center',\n    fontSize: fontSize[25],\n    marginBottom: 3,\n  },\n  totalCountsNumberText: {\n    fontSize: fontSize[12],\n  },\n  bottomOrangeContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: ORANGE,\n    marginTop: DEVICE_LARGE ? 17 : 15,\n    zIndex: 10,\n    flexGrow: 1,\n  },\n  connectContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  newConnectionText: {\n    color: WHITE,\n    fontSize: fontSize[18],\n    fontFamily: 'Poppins-Medium',\n    marginBottom: DEVICE_LARGE ? 16 : 11,\n  },\n  connectButton: {\n    paddingTop: DEVICE_LARGE ? 11 : 7,\n    paddingBottom: DEVICE_LARGE ? 10 : 6,\n    width: DEVICE_LARGE ? '80%' : 260,\n    borderRadius: 60,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    elevation: 1,\n    marginBottom: DEVICE_LARGE ? 16 : 11,\n  },\n  connectText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[17],\n    color: BLACK,\n    marginLeft: DEVICE_LARGE ? 10 : 8,\n  },\n  communityIcon: {\n    marginTop: 1,\n    marginRight: 5,\n  },\n  communityContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: DEVICE_LARGE ? 20 : 12,\n  },\n  communityLink: {\n    color: WHITE,\n    fontSize: fontSize[14],\n    fontFamily: 'Poppins-Bold',\n  },\n  infoContainer: {\n    position: 'absolute',\n    right: DEVICE_LARGE ? 12 : 7,\n    bottom: DEVICE_LARGE ? 12 : 7,\n    flexDirection: 'row',\n  },\n  nodeLinkContainer: {},\n  nodeLink: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: WHITE,\n  },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}