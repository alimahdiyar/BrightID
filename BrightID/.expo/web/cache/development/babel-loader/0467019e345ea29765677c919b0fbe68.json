{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _keyboardTypes, _textContentTypes;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Picker } from '@react-native-picker/picker';\nimport BlurWidget from \"../BlurWidget/BlurWidget.web\";\nimport { useTranslation } from 'react-i18next';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport PhoneInput from 'react-native-phone-number-input';\nimport { DEVICE_LARGE, DEVICE_IOS, DEVICE_ANDROID, WIDTH } from \"../../utils/deviceConstants\";\nimport { DARK_ORANGE, DARKER_GREY, WHITE, BLACK, GREEN } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { useDispatch, useSelector } from \"../../store\";\nimport { selectExistingSocialMediaIds, selectSocialMediaById } from \"../../reducer/socialMediaSlice\";\nimport { selectAllSocialMediaVariations } from \"../../reducer/socialMediaVariationSlice\";\nimport { SocialMediaShareType, SocialMediaVariationIds } from \"./socialMediaVariations\";\nimport { isPhoneNumberValid, parsePhoneNumber } from \"../../utils/phoneUtils\";\nimport { saveAndLinkSocialMedia } from \"./socialMediaThunks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar toPickerItem = function toPickerItem(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      value = _ref2[0],\n      name = _ref2[1].name;\n\n  return _jsx(Picker.Item, {\n    value: value,\n    label: name\n  }, value);\n};\n\nvar keyboardTypes = (_keyboardTypes = {}, _defineProperty(_keyboardTypes, SocialMediaShareType.USERNAME, 'default'), _defineProperty(_keyboardTypes, SocialMediaShareType.TELEPHONE, 'phone-pad'), _defineProperty(_keyboardTypes, SocialMediaShareType.EMAIL, 'email-address'), _defineProperty(_keyboardTypes, SocialMediaShareType.URL, DEVICE_IOS ? 'url' : 'default'), _keyboardTypes);\nvar textContentTypes = (_textContentTypes = {}, _defineProperty(_textContentTypes, SocialMediaShareType.USERNAME, 'username'), _defineProperty(_textContentTypes, SocialMediaShareType.TELEPHONE, 'telephoneNumber'), _defineProperty(_textContentTypes, SocialMediaShareType.EMAIL, 'emailAddress'), _defineProperty(_textContentTypes, SocialMediaShareType.URL, 'URL'), _textContentTypes);\n\nvar SelectMediaModal = function SelectMediaModal(_ref3) {\n  var _route$params, _route$params2, _prevProfile$profile;\n\n  var route = _ref3.route;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var prevId = (_route$params = route.params) == null ? void 0 : _route$params.prevId;\n  var initialPage = (_route$params2 = route.params) == null ? void 0 : _route$params2.page;\n  var existingSocialMediaIds = useSelector(selectExistingSocialMediaIds);\n  var socialMediaVariations = useSelector(selectAllSocialMediaVariations);\n  var socialMediaKeyValues = socialMediaVariations.filter(function (item) {\n    var _route$params3;\n\n    return item.type === ((_route$params3 = route.params) == null ? void 0 : _route$params3.type);\n  }).map(function (item) {\n    return [item.id, item];\n  });\n  var socialMediaToDisplay = useMemo(function () {\n    return prevId ? socialMediaKeyValues : socialMediaKeyValues.filter(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 1),\n          id = _ref5[0];\n\n      return !existingSocialMediaIds.includes(id);\n    });\n  }, [existingSocialMediaIds, prevId, socialMediaKeyValues]);\n  var PickerItems = useMemo(function () {\n    return socialMediaToDisplay.map(toPickerItem);\n  }, [socialMediaToDisplay]);\n  var defaultItem = socialMediaToDisplay[0] && socialMediaToDisplay[0][0];\n  var firstItem = prevId != null ? prevId : defaultItem;\n\n  var _useState = useState(firstItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var _useState3 = useState(socialMediaVariations.find(function (item) {\n    return item.id === selectedId;\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      socialMediaVariation = _useState4[0],\n      setSocialMediaVariation = _useState4[1];\n\n  useEffect(function () {\n    setSocialMediaVariation(socialMediaVariations.find(function (item) {\n      return item.id === selectedId;\n    }));\n  }, [selectedId, socialMediaVariations]);\n  var prevProfile = useSelector(function (state) {\n    return selectSocialMediaById(state, selectedId);\n  });\n\n  var _useState5 = useState((_prevProfile$profile = prevProfile == null ? void 0 : prevProfile.profile) != null ? _prevProfile$profile : ''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      profile = _useState6[0],\n      setProfile = _useState6[1];\n\n  var _useState7 = useState(parsePhoneNumber(prevProfile == null ? void 0 : prevProfile.profile)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phoneNumberObject = _useState8[0],\n      setPhoneNumberObject = _useState8[1];\n\n  useEffect(function () {\n    var _prevProfile$profile2;\n\n    setProfile((_prevProfile$profile2 = prevProfile == null ? void 0 : prevProfile.profile) != null ? _prevProfile$profile2 : '');\n    setPhoneNumberObject(parsePhoneNumber(prevProfile == null ? void 0 : prevProfile.profile));\n  }, [prevProfile]);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      invalidPhoneNumber = _useState10[0],\n      setInvalidPhoneNumber = _useState10[1];\n\n  var _useState11 = useState(initialPage != null ? initialPage : 0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      page = _useState12[0],\n      setPage = _useState12[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  useFocusEffect(useCallback(function () {\n    setSelectedId(firstItem);\n  }, [firstItem]));\n\n  var saveProfile = function saveProfile() {\n    var _route$params$order, _route$params4;\n\n    if (socialMediaVariation.id === SocialMediaVariationIds.PHONE_NUMBER) {\n      if (!isPhoneNumberValid(profile)) {\n        setInvalidPhoneNumber(true);\n        return;\n      }\n    }\n\n    var socialMedia = _objectSpread(_objectSpread({}, prevProfile), {}, {\n      id: selectedId,\n      company: socialMediaVariation,\n      order: (_route$params$order = (_route$params4 = route.params) == null ? void 0 : _route$params4.order) != null ? _route$params$order : 0,\n      profile: profile\n    });\n\n    dispatch(saveAndLinkSocialMedia(socialMedia));\n    navigation.navigate('Edit Profile');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BlurWidget, {\n      style: styles.blurView,\n      blurType: \"dark\",\n      blurAmount: 5,\n      reducedTransparencyFallbackColor: BLACK\n    }), _jsxs(KeyboardAvoidingView, {\n      style: styles.modalContainer,\n      children: [page === 0 ? _jsx(Picker, {\n        selectedValue: selectedId,\n        style: styles.pickerStyle,\n        itemStyle: styles.pickerItemStyle,\n        onValueChange: function onValueChange(itemValue) {\n          setSelectedId(itemValue);\n        },\n        children: PickerItems\n      }) : _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: socialMediaVariation.shareTypeDisplay\n        }), socialMediaVariation.id === SocialMediaVariationIds.PHONE_NUMBER ? _jsxs(_Fragment, {\n          children: [_jsx(PhoneInput, {\n            defaultCode: phoneNumberObject.country,\n            defaultValue: phoneNumberObject.number,\n            containerStyle: styles.phoneInputContainerStyle,\n            textContainerStyle: styles.phoneInputTextContainerStyle,\n            textInputStyle: styles.phoneInputTextInputStyle,\n            countryPickerButtonStyle: styles.phoneInputCountryPickerButtonStyle,\n            layout: \"second\",\n            autoFocus: true,\n            placeholder: \"add \" + socialMediaVariation.shareTypeDisplay,\n            onChangeFormattedText: setProfile\n          }), invalidPhoneNumber ? _jsx(Text, {\n            style: styles.label,\n            children: t('profile.alert.text.invalidPhoneNumber')\n          }) : null]\n        }) : _jsx(TextInput, {\n          style: styles.socialMediaInput,\n          autoCapitalize: \"none\",\n          autoComplete: \"off\",\n          autoCorrect: false,\n          autoFocus: true,\n          blurOnSubmit: true,\n          keyboardType: keyboardTypes[socialMediaVariation.shareType],\n          placeholder: \"add \" + socialMediaVariation.shareTypeDisplay,\n          placeholderTextColor: DARKER_GREY,\n          textContentType: textContentTypes[socialMediaVariation.shareType],\n          onChangeText: setProfile,\n          value: profile\n        })]\n      }), _jsxs(View, {\n        style: styles.saveContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.saveButton, {\n            opacity: page === 1 && profile.length === 0 ? 0.5 : 1\n          }],\n          onPress: function onPress() {\n            page === 1 ? saveProfile() : setPage(1);\n          },\n          disabled: page === 1 && profile.length === 0,\n          children: _jsx(Text, {\n            style: styles.saveButtonText,\n            children: page === 1 ? t('common.button.save') : t('profile.button.socialNext')\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.cancelButton,\n          onPress: function onPress() {\n            navigation.navigate('Eula');\n            page === 1 && initialPage !== 1 ? setPage(0) : navigation.navigate('Edit Profile');\n          },\n          children: _jsx(Text, {\n            style: styles.cancelButtonText,\n            children: page === 1 && initialPage !== 1 ? t('profile.button.socialPrevious') : t('common.button.cancel')\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  phoneInputContainerStyle: {\n    width: '100%',\n    height: 50\n  },\n  phoneInputTextContainerStyle: {\n    flexGrow: 1\n  },\n  phoneInputCountryPickerButtonStyle: {\n    width: 'auto',\n    paddingRight: 10\n  },\n  phoneInputTextInputStyle: {\n    fontFamily: 'Poppins-Light',\n    fontSize: fontSize[14],\n    color: BLACK,\n    width: '100%',\n    padding: 0,\n    height: 30\n  },\n  blurView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: WHITE,\n    width: WIDTH * 0.75,\n    borderRadius: 25,\n    paddingHorizontal: DEVICE_LARGE ? 36 : 30,\n    paddingBottom: DEVICE_LARGE ? 36 : 30,\n    paddingTop: DEVICE_ANDROID ? DEVICE_LARGE ? 36 : 30 : 0\n  },\n  pickerStyle: {\n    width: '100%'\n  },\n  pickerItemStyle: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15]\n  },\n  saveContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 18 : 15\n  },\n  saveButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: GREEN,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    marginRight: DEVICE_LARGE ? 22 : 18\n  },\n  saveButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12]\n  },\n  cancelButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: DARKER_GREY\n  },\n  cancelButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARKER_GREY\n  },\n  socialMediaInput: {\n    flexGrow: 1,\n    fontFamily: 'Poppins-Light',\n    fontSize: fontSize[14],\n    color: BLACK\n  },\n  inputContainer: {\n    width: '100%',\n    paddingTop: DEVICE_IOS ? DEVICE_LARGE ? 36 : 30 : 0\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: DARK_ORANGE,\n    marginBottom: DEVICE_LARGE ? 5 : 3\n  }\n});\nexport default SelectMediaModal;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/EditProfile/SelectSocialMediaModal.tsx"],"names":["toPickerItem","value","name","keyboardTypes","SocialMediaShareType","DEVICE_IOS","textContentTypes","SelectMediaModal","route","dispatch","useDispatch","navigation","useNavigation","prevId","initialPage","existingSocialMediaIds","useSelector","socialMediaVariations","socialMediaKeyValues","item","socialMediaToDisplay","useMemo","id","PickerItems","defaultItem","firstItem","selectedId","setSelectedId","useState","socialMediaVariation","setSocialMediaVariation","useEffect","prevProfile","selectSocialMediaById","profile","setProfile","phoneNumberObject","setPhoneNumberObject","parsePhoneNumber","invalidPhoneNumber","setInvalidPhoneNumber","page","setPage","t","useTranslation","useFocusEffect","useCallback","saveProfile","SocialMediaVariationIds","isPhoneNumberValid","socialMedia","company","order","saveAndLinkSocialMedia","styles","opacity","StyleSheet","phoneInputContainerStyle","width","height","phoneInputTextContainerStyle","flexGrow","phoneInputCountryPickerButtonStyle","paddingRight","phoneInputTextInputStyle","fontFamily","fontSize","color","padding","blurView","position","left","right","top","bottom","container","flex","alignItems","justifyContent","modalContainer","backgroundColor","WIDTH","borderRadius","paddingHorizontal","DEVICE_LARGE","paddingBottom","paddingTop","DEVICE_ANDROID","pickerStyle","pickerItemStyle","saveContainer","flexDirection","marginTop","saveButton","marginRight","saveButtonText","cancelButton","borderWidth","borderColor","cancelButtonText","socialMediaInput","inputContainer","label","marginBottom"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  KeyboardTypeOptions,\n  TextInputProps,\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport { useTranslation } from 'react-i18next';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport PhoneInput from 'react-native-phone-number-input';\nimport {\n  DEVICE_LARGE,\n  DEVICE_IOS,\n  DEVICE_ANDROID,\n  WIDTH,\n} from '@/utils/deviceConstants';\nimport { DARK_ORANGE, DARKER_GREY, WHITE, BLACK, GREEN } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  selectExistingSocialMediaIds,\n  selectSocialMediaById,\n} from '../../reducer/socialMediaSlice';\nimport { selectAllSocialMediaVariations } from '@/reducer/socialMediaVariationSlice';\nimport {\n  SocialMediaShareType,\n  SocialMediaVariationIds,\n} from './socialMediaVariations';\nimport { isPhoneNumberValid, parsePhoneNumber } from '@/utils/phoneUtils';\nimport { saveAndLinkSocialMedia } from '@/components/EditProfile/socialMediaThunks';\n\n/** Helper functions */\n\n// value is the social media id, label is the name\nconst toPickerItem = ([value, { name }]) => (\n  <Picker.Item key={value} value={value} label={name} />\n);\n\nconst keyboardTypes: { [id: string]: KeyboardTypeOptions } = {\n  [SocialMediaShareType.USERNAME]: 'default',\n  [SocialMediaShareType.TELEPHONE]: 'phone-pad',\n  [SocialMediaShareType.EMAIL]: 'email-address',\n  [SocialMediaShareType.URL]: DEVICE_IOS ? 'url' : 'default',\n};\n\nconst textContentTypes: { [id: string]: TextInputProps['textContentType'] } = {\n  [SocialMediaShareType.USERNAME]: 'username',\n  [SocialMediaShareType.TELEPHONE]: 'telephoneNumber',\n  [SocialMediaShareType.EMAIL]: 'emailAddress',\n  [SocialMediaShareType.URL]: 'URL',\n};\n\n/** Main Component */\ntype props = StackScreenProps<ModalStackParamList, 'SelectSocialMedia'>;\n\nconst SelectMediaModal = ({ route }: props) => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const prevId = route.params?.prevId;\n  const initialPage = route.params?.page;\n\n  const existingSocialMediaIds = useSelector(\n    selectExistingSocialMediaIds,\n  ) as SocialMediaId[];\n\n  const socialMediaVariations = useSelector(selectAllSocialMediaVariations);\n\n  const socialMediaKeyValues = socialMediaVariations\n    .filter((item) => item.type === route.params?.type)\n    .map((item) => [item.id, item]) as [SocialMediaId, SocialMediaVariation][];\n\n  // only display social media not already selected by user when adding a new one to the list\n  // or allow the user to switch order if editing the social media from the list\n  const socialMediaToDisplay = useMemo(\n    () =>\n      prevId\n        ? socialMediaKeyValues\n        : socialMediaKeyValues.filter(\n            ([id]) => !existingSocialMediaIds.includes(id),\n          ),\n    [existingSocialMediaIds, prevId, socialMediaKeyValues],\n  );\n\n  const PickerItems = useMemo(\n    () => socialMediaToDisplay.map(toPickerItem),\n    [socialMediaToDisplay],\n  );\n\n  const defaultItem = (socialMediaToDisplay[0] &&\n    socialMediaToDisplay[0][0]) as SocialMediaId;\n\n  // if the user is clicking on an existing social media, select that first\n  // or display the first item in the picker if the user is adding a new social media\n  const firstItem = prevId ?? defaultItem;\n\n  // selectedId tracks state of the picker, will always be an id from socialMediaVariations.js\n  const [selectedId, setSelectedId] = useState<SocialMediaId>(firstItem);\n  const [socialMediaVariation, setSocialMediaVariation] =\n    useState<SocialMediaVariation>(\n      socialMediaVariations.find((item) => item.id === selectedId),\n    );\n\n  useEffect(() => {\n    setSocialMediaVariation(\n      socialMediaVariations.find((item) => item.id === selectedId),\n    );\n  }, [selectedId, socialMediaVariations]);\n\n  const prevProfile = useSelector((state: State) =>\n    selectSocialMediaById(state, selectedId),\n  );\n\n  // social media profile value\n  const [profile, setProfile] = useState(prevProfile?.profile ?? '');\n\n  const [phoneNumberObject, setPhoneNumberObject] = useState<PhoneNumberObject>(\n    parsePhoneNumber(prevProfile?.profile),\n  );\n\n  // update profile when modal is re-opened or new profile selected\n  useEffect(() => {\n    setProfile(prevProfile?.profile ?? '');\n    setPhoneNumberObject(parsePhoneNumber(prevProfile?.profile));\n  }, [prevProfile]);\n\n  const [invalidPhoneNumber, setInvalidPhoneNumber] = useState(false);\n\n  // which page of the modal are we on\n  // user can directly start editing profile if they click on their profile\n  const [page, setPage] = useState(initialPage ?? 0);\n\n  const { t } = useTranslation();\n\n  // refresh state when the modal opens\n  useFocusEffect(\n    useCallback(() => {\n      setSelectedId(firstItem);\n    }, [firstItem]),\n  );\n\n  const saveProfile = () => {\n    if (socialMediaVariation.id === SocialMediaVariationIds.PHONE_NUMBER) {\n      if (!isPhoneNumberValid(profile)) {\n        setInvalidPhoneNumber(true);\n        return;\n      }\n    }\n    const socialMedia: SocialMedia = {\n      ...prevProfile,\n      id: selectedId,\n      company: socialMediaVariation,\n      order: route.params?.order ?? 0,\n      profile,\n    };\n    dispatch(saveAndLinkSocialMedia(socialMedia));\n    navigation.navigate('Edit Profile');\n  };\n\n  return (\n    <View style={styles.container}>\n      <BlurWidget\n        style={styles.blurView}\n        blurType=\"dark\"\n        blurAmount={5}\n        reducedTransparencyFallbackColor={BLACK}\n      />\n      <KeyboardAvoidingView style={styles.modalContainer}>\n        {page === 0 ? (\n          <Picker\n            selectedValue={selectedId}\n            style={styles.pickerStyle}\n            itemStyle={styles.pickerItemStyle}\n            onValueChange={(itemValue: SocialMediaId) => {\n              setSelectedId(itemValue);\n            }}\n          >\n            {PickerItems}\n          </Picker>\n        ) : (\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>\n              {socialMediaVariation.shareTypeDisplay}\n            </Text>\n            {socialMediaVariation.id ===\n            SocialMediaVariationIds.PHONE_NUMBER ? (\n              <>\n                <PhoneInput\n                  defaultCode={phoneNumberObject.country}\n                  defaultValue={phoneNumberObject.number}\n                  containerStyle={styles.phoneInputContainerStyle}\n                  textContainerStyle={styles.phoneInputTextContainerStyle}\n                  textInputStyle={styles.phoneInputTextInputStyle}\n                  countryPickerButtonStyle={\n                    styles.phoneInputCountryPickerButtonStyle\n                  }\n                  layout=\"second\"\n                  autoFocus={true}\n                  placeholder={`add ${socialMediaVariation.shareTypeDisplay}`}\n                  onChangeFormattedText={setProfile}\n                />\n                {invalidPhoneNumber ? (\n                  <Text style={styles.label}>\n                    {t('profile.alert.text.invalidPhoneNumber')}\n                  </Text>\n                ) : null}\n              </>\n            ) : (\n              <TextInput\n                style={styles.socialMediaInput}\n                autoCapitalize=\"none\"\n                autoComplete=\"off\"\n                autoCorrect={false}\n                autoFocus={true}\n                blurOnSubmit={true}\n                keyboardType={keyboardTypes[socialMediaVariation.shareType]}\n                placeholder={`add ${socialMediaVariation.shareTypeDisplay}`}\n                placeholderTextColor={DARKER_GREY}\n                textContentType={\n                  textContentTypes[socialMediaVariation.shareType]\n                }\n                onChangeText={setProfile}\n                value={profile}\n              />\n            )}\n          </View>\n        )}\n        <View style={styles.saveContainer}>\n          <TouchableOpacity\n            style={[\n              styles.saveButton,\n              { opacity: page === 1 && profile.length === 0 ? 0.5 : 1 },\n            ]}\n            onPress={() => {\n              page === 1 ? saveProfile() : setPage(1);\n            }}\n            disabled={page === 1 && profile.length === 0}\n          >\n            <Text style={styles.saveButtonText}>\n              {page === 1\n                ? t('common.button.save')\n                : t('profile.button.socialNext')}\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.cancelButton}\n            onPress={() => {\n              navigation.navigate('Eula');\n              // if initial page is 1, users only want to edit text\n              page === 1 && initialPage !== 1\n                ? setPage(0)\n                : navigation.navigate('Edit Profile');\n            }}\n          >\n            <Text style={styles.cancelButtonText}>\n              {page === 1 && initialPage !== 1\n                ? t('profile.button.socialPrevious')\n                : t('common.button.cancel')}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  phoneInputContainerStyle: {\n    width: '100%',\n    height: 50,\n  },\n  phoneInputTextContainerStyle: {\n    flexGrow: 1,\n  },\n  phoneInputCountryPickerButtonStyle: {\n    width: 'auto',\n    paddingRight: 10,\n  },\n  phoneInputTextInputStyle: {\n    fontFamily: 'Poppins-Light',\n    fontSize: fontSize[14],\n    color: BLACK,\n    width: '100%',\n    padding: 0,\n    height: 30,\n  },\n  blurView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modalContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: WHITE,\n    width: WIDTH * 0.75,\n    borderRadius: 25,\n    paddingHorizontal: DEVICE_LARGE ? 36 : 30,\n    paddingBottom: DEVICE_LARGE ? 36 : 30,\n    paddingTop: DEVICE_ANDROID ? (DEVICE_LARGE ? 36 : 30) : 0,\n  },\n  pickerStyle: { width: '100%' },\n  pickerItemStyle: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n  },\n  saveContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 18 : 15,\n  },\n  saveButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: GREEN,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    marginRight: DEVICE_LARGE ? 22 : 18,\n  },\n  saveButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n  },\n  cancelButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: DARKER_GREY,\n  },\n  cancelButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARKER_GREY,\n  },\n  socialMediaInput: {\n    flexGrow: 1,\n    fontFamily: 'Poppins-Light',\n    fontSize: fontSize[14],\n    color: BLACK,\n  },\n  inputContainer: {\n    width: '100%',\n    paddingTop: DEVICE_IOS ? (DEVICE_LARGE ? 36 : 30) : 0,\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: DARK_ORANGE,\n    marginBottom: DEVICE_LARGE ? 5 : 3,\n  },\n});\n\nexport default SelectMediaModal;\n"]},"metadata":{},"sourceType":"module"}