{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { selectAllConnections } from \"../reducer/connectionsSlice\";\nimport { toSearchString } from \"./strings\";\nimport { sortConnectionsBy } from \"./sorting\";\n\nvar searchParamSelector = function searchParamSelector(state) {\n  return state.connections.searchParam;\n};\n\nvar connSortSelector = function connSortSelector(state) {\n  return state.connections.connectionsSort;\n};\n\nvar filtersSelector = function filtersSelector(state) {\n  return state.connections.filters;\n};\n\nexport var connectionsSelector = createSelector([selectAllConnections, searchParamSelector, filtersSelector, connSortSelector, function (_, excluded) {\n  return excluded;\n}], function (connections, searchParam, filters, connectionsSort, excluded) {\n  var searchString = toSearchString(searchParam);\n  return connections.filter(function (conn) {\n    return toSearchString(\"\" + (conn == null ? void 0 : conn.name)).includes(searchString) && filters.includes(conn == null ? void 0 : conn.level) && !(excluded != null && excluded.includes(conn.id));\n  }).sort(sortConnectionsBy(connectionsSort));\n});","map":{"version":3,"names":["createSelector","selectAllConnections","toSearchString","sortConnectionsBy","searchParamSelector","state","connections","searchParam","connSortSelector","connectionsSort","filtersSelector","filters","connectionsSelector","_","excluded","searchString","filter","conn","name","includes","level","id","sort"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/connectionsSelector.ts"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\nimport { toSearchString } from '@/utils/strings';\nimport { sortConnectionsBy } from '@/utils/sorting';\n\nconst searchParamSelector = (state: State) => state.connections.searchParam;\nconst connSortSelector = (state: State) => state.connections.connectionsSort;\nconst filtersSelector = (state: State) => state.connections.filters;\n\nexport const connectionsSelector = createSelector(\n  [\n    selectAllConnections,\n    searchParamSelector,\n    filtersSelector,\n    connSortSelector,\n    (_: State, excluded: string[] | undefined) => excluded,\n  ],\n  (connections, searchParam, filters, connectionsSort, excluded) => {\n    const searchString = toSearchString(searchParam);\n    return connections\n      .filter(\n        (conn) =>\n          toSearchString(`${conn?.name}`).includes(searchString) &&\n          filters.includes(conn?.level) &&\n          !excluded?.includes(conn.id),\n      )\n      .sort(sortConnectionsBy(connectionsSort));\n  },\n);\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,oBAAT;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;EAAA,OAAkBA,KAAK,CAACC,WAAN,CAAkBC,WAApC;AAAA,CAA5B;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD;EAAA,OAAkBA,KAAK,CAACC,WAAN,CAAkBG,eAApC;AAAA,CAAzB;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD;EAAA,OAAkBA,KAAK,CAACC,WAAN,CAAkBK,OAApC;AAAA,CAAxB;;AAEA,OAAO,IAAMC,mBAAmB,GAAGZ,cAAc,CAC/C,CACEC,oBADF,EAEEG,mBAFF,EAGEM,eAHF,EAIEF,gBAJF,EAKE,UAACK,CAAD,EAAWC,QAAX;EAAA,OAA8CA,QAA9C;AAAA,CALF,CAD+C,EAQ/C,UAACR,WAAD,EAAcC,WAAd,EAA2BI,OAA3B,EAAoCF,eAApC,EAAqDK,QAArD,EAAkE;EAChE,IAAMC,YAAY,GAAGb,cAAc,CAACK,WAAD,CAAnC;EACA,OAAOD,WAAW,CACfU,MADI,CAEH,UAACC,IAAD;IAAA,OACEf,cAAc,OAAIe,IAAJ,oBAAIA,IAAI,CAAEC,IAAV,EAAd,CAAgCC,QAAhC,CAAyCJ,YAAzC,KACAJ,OAAO,CAACQ,QAAR,CAAiBF,IAAjB,oBAAiBA,IAAI,CAAEG,KAAvB,CADA,IAEA,EAACN,QAAD,YAACA,QAAQ,CAAEK,QAAV,CAAmBF,IAAI,CAACI,EAAxB,CAAD,CAHF;EAAA,CAFG,EAOJC,IAPI,CAOCnB,iBAAiB,CAACM,eAAD,CAPlB,CAAP;AAQD,CAlB8C,CAA1C"},"metadata":{},"sourceType":"module"}