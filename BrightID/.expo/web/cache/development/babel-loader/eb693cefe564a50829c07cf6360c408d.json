{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport store, { useDispatch, useSelector } from \"../../../store\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { addDevice, addOperation, selectOperationByHash } from \"../../../actions\";\nimport ChannelAPI from \"../../../api/channelService\";\nimport { uploadAllInfoAfter } from \"./thunks/channelUploadThunks\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { operation_states } from \"../../../utils/constants\";\nimport { AddSigningKey } from \"./AddSigningKey\";\nimport { UploadData } from \"./UploadData\";\nimport { loadRecoveryData } from \"../../../utils/recovery\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AddSigningKeySteps;\n\n(function (AddSigningKeySteps) {\n  AddSigningKeySteps[AddSigningKeySteps[\"WAITING\"] = 0] = \"WAITING\";\n  AddSigningKeySteps[AddSigningKeySteps[\"DOWNLOADING\"] = 1] = \"DOWNLOADING\";\n  AddSigningKeySteps[AddSigningKeySteps[\"WAITING_OPERATION\"] = 2] = \"WAITING_OPERATION\";\n  AddSigningKeySteps[AddSigningKeySteps[\"OPERATION_APPLIED\"] = 3] = \"OPERATION_APPLIED\";\n  AddSigningKeySteps[AddSigningKeySteps[\"ERROR\"] = 4] = \"ERROR\";\n})(AddSigningKeySteps || (AddSigningKeySteps = {}));\n\nexport var UploadDataSteps;\n\n(function (UploadDataSteps) {\n  UploadDataSteps[UploadDataSteps[\"WAITING\"] = 0] = \"WAITING\";\n  UploadDataSteps[UploadDataSteps[\"UPLOADING\"] = 1] = \"UPLOADING\";\n  UploadDataSteps[UploadDataSteps[\"COMPLETE\"] = 2] = \"COMPLETE\";\n  UploadDataSteps[UploadDataSteps[\"ERROR\"] = 3] = \"ERROR\";\n})(UploadDataSteps || (UploadDataSteps = {}));\n\nexport var AddDeviceScreen = function AddDeviceScreen() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var url = useSelector(function (state) {\n    var _state$recoveryData$c;\n\n    return (_state$recoveryData$c = state.recoveryData.channel) == null ? void 0 : _state$recoveryData$c.url;\n  });\n  var aesKey = useSelector(function (state) {\n    return state.recoveryData.aesKey;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      deviceName = _useState2[0],\n      setDeviceName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      signingKey = _useState4[0],\n      setSigningKey = _useState4[1];\n\n  var api = useContext(NodeApiContext);\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addSigningKeyOpHash = _useState6[0],\n      setSigningKeyOpHash = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addSigningKeyError = _useState8[0],\n      setAddSigningKeyError = _useState8[1];\n\n  var addSigningKeyOp = useSelector(function (state) {\n    return selectOperationByHash(state, addSigningKeyOpHash);\n  });\n\n  var _useState9 = useState(AddSigningKeySteps.WAITING),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addSigningKeyStep = _useState10[0],\n      setAddSigningKeyStep = _useState10[1];\n\n  var _useState11 = useState(UploadDataSteps.WAITING),\n      _useState12 = _slicedToArray(_useState11, 2),\n      uploadDataStep = _useState12[0],\n      setUploadDataStep = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      uploadDataError = _useState14[0],\n      setUploadDataError = _useState14[1];\n\n  var handleSubmit = function _callee() {\n    var channelApi, _await$loadRecoveryDa, _signingKey, op;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setAddSigningKeyStep(AddSigningKeySteps.DOWNLOADING);\n            channelApi = new ChannelAPI(url.href);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(loadRecoveryData(channelApi, aesKey));\n\n          case 5:\n            _await$loadRecoveryDa = _context.sent;\n            _signingKey = _await$loadRecoveryDa.signingKey;\n            console.log(\"adding new signing key\");\n            setSigningKey(_signingKey);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(api.addSigningKey(_signingKey));\n\n          case 11:\n            op = _context.sent;\n            store.dispatch(addOperation(op));\n            setSigningKeyOpHash(op.hash);\n            setAddSigningKeyStep(AddSigningKeySteps.WAITING_OPERATION);\n            _context.next = 22;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error setting signing key: \" + _context.t0.message);\n            setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n            setAddSigningKeyError(_context.t0.message);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  useEffect(function () {\n    var runEffect = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Starting upload of local info\");\n              _context2.prev = 1;\n              setUploadDataStep(UploadDataSteps.UPLOADING);\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(uploadAllInfoAfter(0));\n\n            case 5:\n              setUploadDataStep(UploadDataSteps.COMPLETE);\n              console.log(\"Finished upload of local info\");\n              _context2.next = 14;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"Error uploading data: \" + _context2.t0.message);\n              setUploadDataStep(UploadDataSteps.ERROR);\n              setUploadDataError(_context2.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    };\n\n    if (addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED && uploadDataStep === UploadDataSteps.WAITING) {\n      runEffect();\n    }\n  }, [addSigningKeyStep, uploadDataStep]);\n  useEffect(function () {\n    if (addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED && uploadDataStep === UploadDataSteps.COMPLETE) {\n      console.log(\"Completed add device workflow!\");\n      dispatch(addDevice({\n        name: deviceName,\n        signingKey: signingKey,\n        active: true\n      }));\n      navigation.navigate('Devices');\n    }\n  }, [addSigningKeyStep, deviceName, dispatch, navigation, signingKey, uploadDataStep]);\n  useEffect(function () {\n    if (addSigningKeyOp && addSigningKeyStep === AddSigningKeySteps.WAITING_OPERATION) {\n      switch (addSigningKeyOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          break;\n\n        case operation_states.APPLIED:\n          setAddSigningKeyStep(AddSigningKeySteps.OPERATION_APPLIED);\n          setSigningKeyOpHash('');\n          break;\n\n        case operation_states.FAILED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation could not be applied');\n          setSigningKeyOpHash('');\n          break;\n\n        case operation_states.EXPIRED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation timed out');\n          setSigningKeyOpHash('');\n          break;\n\n        default:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Unhandled operation state');\n          setSigningKeyOpHash('');\n      }\n    }\n  }, [addSigningKeyOp, addSigningKeyStep]);\n  useEffect(function () {\n    var showConfirmDialog = function showConfirmDialog() {\n      return Alert.alert(t('common.alert.title.pleaseConfirm'), t('devices.alert.confirmAdd'), [{\n        text: t('common.alert.yes'),\n        onPress: function onPress() {\n          resetFlow();\n        }\n      }, {\n        text: t('common.alert.no'),\n        onPress: function onPress() {\n          navigation.navigate('Home');\n        }\n      }]);\n    };\n\n    showConfirmDialog();\n  }, []);\n\n  var resetFlow = function resetFlow() {\n    setAddSigningKeyStep(AddSigningKeySteps.WAITING);\n    setUploadDataStep(UploadDataSteps.WAITING);\n    setAddSigningKeyError('');\n    setUploadDataError('');\n  };\n\n  var submitEnabled = deviceName.length >= 3 && addSigningKeyStep === AddSigningKeySteps.WAITING && uploadDataStep === UploadDataSteps.WAITING;\n  var pendingSubmit = addSigningKeyStep === AddSigningKeySteps.WAITING && uploadDataStep === UploadDataSteps.WAITING;\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: WHITE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(View, {\n      style: styles.container,\n      testID: \"AddDeviceScreen\",\n      children: [pendingSubmit && _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: styles.descContainer,\n          children: _jsx(Text, {\n            style: styles.registerText,\n            children: t('devices.text.whatsDeviceName')\n          })\n        }), _jsx(View, {\n          style: styles.midContainer,\n          children: _jsx(TextInput, {\n            testID: \"editDeviceName\",\n            onChangeText: setDeviceName,\n            value: deviceName,\n            placeholder: t('devices.placeholder.deviceName'),\n            placeholderTextColor: DARKER_GREY,\n            style: styles.textInput,\n            autoCapitalize: \"words\",\n            autoCorrect: false,\n            textContentType: \"name\",\n            underlineColorAndroid: \"transparent\",\n            blurOnSubmit: true\n          })\n        }), _jsx(View, {\n          style: styles.submitContainer,\n          children: _jsx(TouchableOpacity, {\n            style: [styles.submitBtn, {\n              opacity: submitEnabled ? 1 : 0.7\n            }],\n            onPress: handleSubmit,\n            accessibilityLabel: t('devices.button.submit'),\n            disabled: !submitEnabled,\n            testID: \"submitDeviceName\",\n            children: _jsx(Text, {\n              style: styles.submitBtnText,\n              children: t('devices.button.submit')\n            })\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.progressContainer,\n        children: addSigningKeyStep !== AddSigningKeySteps.WAITING && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.addSigningKeyContainer,\n            children: _jsx(AddSigningKey, {\n              currentStep: addSigningKeyStep,\n              errorMessage: addSigningKeyError\n            })\n          }), _jsx(View, {\n            style: styles.divider\n          }), _jsx(View, {\n            style: styles.uploadDataContainer,\n            children: _jsx(UploadData, {\n              currentStep: uploadDataStep,\n              errorMessage: uploadDataError\n            })\n          })]\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2\n  },\n  waitingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85\n  },\n  midContainer: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  addSigningKeyContainer: {},\n  uploadDataContainer: {},\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK\n  },\n  progressContainer: {\n    marginTop: DEVICE_LARGE ? 50 : 40\n  }\n});\nexport default AddDeviceScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","useTranslation","useNavigation","store","useDispatch","useSelector","fontSize","WHITE","BLACK","DARKER_GREY","ORANGE","DEVICE_LARGE","addDevice","addOperation","selectOperationByHash","ChannelAPI","uploadAllInfoAfter","NodeApiContext","operation_states","AddSigningKey","UploadData","loadRecoveryData","AddSigningKeySteps","UploadDataSteps","AddDeviceScreen","dispatch","navigation","t","url","state","recoveryData","channel","aesKey","deviceName","setDeviceName","signingKey","setSigningKey","api","addSigningKeyOpHash","setSigningKeyOpHash","addSigningKeyError","setAddSigningKeyError","addSigningKeyOp","WAITING","addSigningKeyStep","setAddSigningKeyStep","uploadDataStep","setUploadDataStep","uploadDataError","setUploadDataError","handleSubmit","DOWNLOADING","channelApi","href","console","log","addSigningKey","op","hash","WAITING_OPERATION","message","ERROR","runEffect","UPLOADING","COMPLETE","OPERATION_APPLIED","name","active","navigate","UNKNOWN","INIT","SENT","APPLIED","FAILED","EXPIRED","showConfirmDialog","Alert","alert","text","onPress","resetFlow","submitEnabled","length","pendingSubmit","styles","orangeTop","container","descContainer","registerText","midContainer","textInput","submitContainer","submitBtn","opacity","submitBtnText","progressContainer","addSigningKeyContainer","divider","uploadDataContainer","StyleSheet","create","backgroundColor","height","width","zIndex","flex","borderTopLeftRadius","marginTop","overflow","waitingContainer","alignItems","justifyContent","fontFamily","textAlign","lineHeight","color","borderBottomWidth","borderBottomColor","paddingBottom","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","marginBottom","hairlineWidth","borderColor"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddDeviceScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  Alert,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport store, { useDispatch, useSelector } from '@/store';\nimport { fontSize } from '@/theme/fonts';\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { addDevice, addOperation, selectOperationByHash } from '@/actions';\nimport ChannelAPI from '@/api/channelService';\nimport { uploadAllInfoAfter } from './thunks/channelUploadThunks';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { operation_states } from '@/utils/constants';\nimport { AddSigningKey } from '@/components/Onboarding/ImportFlow/AddSigningKey';\nimport { UploadData } from '@/components/Onboarding/ImportFlow/UploadData';\nimport { loadRecoveryData } from '@/utils/recovery';\n\n/**\n * Screen for adding a new device\n */\n\nexport enum AddSigningKeySteps {\n  WAITING, // not yet started\n  DOWNLOADING, // open channel and download signing key data from other device/client\n  WAITING_OPERATION, // Op to add signing key submitted to backend but not yet applied\n  OPERATION_APPLIED, // op successfully applied in backend\n  ERROR,\n}\n\nexport enum UploadDataSteps {\n  WAITING, // upload not yet started\n  UPLOADING, // upload of data in progress\n  COMPLETE, // all data uploaded\n  ERROR,\n}\n\nexport const AddDeviceScreen = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const url = useSelector((state) => state.recoveryData.channel?.url);\n  const aesKey = useSelector((state) => state.recoveryData.aesKey);\n  const [deviceName, setDeviceName] = useState('');\n  const [signingKey, setSigningKey] = useState('');\n  const api = useContext(NodeApiContext);\n  const [addSigningKeyOpHash, setSigningKeyOpHash] = useState<string>('');\n  const [addSigningKeyError, setAddSigningKeyError] = useState('');\n  const addSigningKeyOp = useSelector((state) =>\n    selectOperationByHash(state, addSigningKeyOpHash),\n  );\n  const [addSigningKeyStep, setAddSigningKeyStep] = useState(\n    AddSigningKeySteps.WAITING,\n  );\n  const [uploadDataStep, setUploadDataStep] = useState(UploadDataSteps.WAITING);\n  const [uploadDataError, setUploadDataError] = useState('');\n\n  const handleSubmit = async () => {\n    try {\n      setAddSigningKeyStep(AddSigningKeySteps.DOWNLOADING);\n      const channelApi = new ChannelAPI(url.href);\n      const { signingKey } = await loadRecoveryData(channelApi, aesKey);\n      console.log(`adding new signing key`);\n      setSigningKey(signingKey);\n      const op = await api.addSigningKey(signingKey);\n      store.dispatch(addOperation(op));\n      setSigningKeyOpHash(op.hash);\n      setAddSigningKeyStep(AddSigningKeySteps.WAITING_OPERATION);\n    } catch (err) {\n      console.log(`Error setting signing key: ${err.message}`);\n      setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n      setAddSigningKeyError(err.message);\n    }\n  };\n\n  // start data upload as soon as signing keys have been added\n  useEffect(() => {\n    const runEffect = async () => {\n      console.log(`Starting upload of local info`);\n      try {\n        setUploadDataStep(UploadDataSteps.UPLOADING);\n        await uploadAllInfoAfter(0);\n        setUploadDataStep(UploadDataSteps.COMPLETE);\n        console.log(`Finished upload of local info`);\n      } catch (err) {\n        console.log(`Error uploading data: ${err.message}`);\n        setUploadDataStep(UploadDataSteps.ERROR);\n        setUploadDataError(err.message);\n      }\n    };\n    if (\n      addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED &&\n      uploadDataStep === UploadDataSteps.WAITING\n    ) {\n      runEffect();\n    }\n  }, [addSigningKeyStep, uploadDataStep]);\n\n  // track overall progress\n  useEffect(() => {\n    if (\n      addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED &&\n      uploadDataStep === UploadDataSteps.COMPLETE\n    ) {\n      console.log(`Completed add device workflow!`);\n      // add new device to local storage and navigate to device screen\n      dispatch(addDevice({ name: deviceName, signingKey, active: true }));\n      navigation.navigate('Devices');\n    }\n  }, [\n    addSigningKeyStep,\n    deviceName,\n    dispatch,\n    navigation,\n    signingKey,\n    uploadDataStep,\n  ]);\n\n  // track addSigningKey operation status\n  useEffect(() => {\n    if (\n      addSigningKeyOp &&\n      addSigningKeyStep === AddSigningKeySteps.WAITING_OPERATION\n    ) {\n      switch (addSigningKeyOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          // op being processed. do nothing.\n          break;\n        case operation_states.APPLIED:\n          setAddSigningKeyStep(AddSigningKeySteps.OPERATION_APPLIED);\n          setSigningKeyOpHash('');\n          break;\n        case operation_states.FAILED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation could not be applied');\n          setSigningKeyOpHash('');\n          break;\n        case operation_states.EXPIRED:\n          // operation did not get applied within time window. Abort and show error.\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation timed out');\n          setSigningKeyOpHash('');\n          break;\n        default:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Unhandled operation state');\n          setSigningKeyOpHash('');\n      }\n    }\n  }, [addSigningKeyOp, addSigningKeyStep]);\n\n  useEffect(() => {\n    const showConfirmDialog = () => {\n      return Alert.alert(\n        t('common.alert.title.pleaseConfirm'),\n        t('devices.alert.confirmAdd'),\n        [\n          {\n            text: t('common.alert.yes'),\n            onPress: () => {\n              resetFlow();\n            },\n          },\n          {\n            text: t('common.alert.no'),\n            onPress: () => {\n              navigation.navigate('Home');\n            },\n          },\n        ],\n      );\n    };\n    showConfirmDialog();\n  }, []);\n\n  const resetFlow = () => {\n    setAddSigningKeyStep(AddSigningKeySteps.WAITING);\n    setUploadDataStep(UploadDataSteps.WAITING);\n    setAddSigningKeyError('');\n    setUploadDataError('');\n  };\n\n  const submitEnabled =\n    deviceName.length >= 3 &&\n    addSigningKeyStep === AddSigningKeySteps.WAITING &&\n    uploadDataStep === UploadDataSteps.WAITING;\n\n  const pendingSubmit =\n    addSigningKeyStep === AddSigningKeySteps.WAITING &&\n    uploadDataStep === UploadDataSteps.WAITING;\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"dark-content\"\n        backgroundColor={WHITE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"AddDeviceScreen\">\n        {pendingSubmit && (\n          <>\n            <View style={styles.descContainer}>\n              <Text style={styles.registerText}>\n                {t('devices.text.whatsDeviceName')}\n              </Text>\n            </View>\n            <View style={styles.midContainer}>\n              <TextInput\n                testID=\"editDeviceName\"\n                onChangeText={setDeviceName}\n                value={deviceName}\n                placeholder={t('devices.placeholder.deviceName')}\n                placeholderTextColor={DARKER_GREY}\n                style={styles.textInput}\n                autoCapitalize=\"words\"\n                autoCorrect={false}\n                textContentType=\"name\"\n                underlineColorAndroid=\"transparent\"\n                blurOnSubmit={true}\n              />\n            </View>\n            <View style={styles.submitContainer}>\n              <TouchableOpacity\n                style={[styles.submitBtn, { opacity: submitEnabled ? 1 : 0.7 }]}\n                onPress={handleSubmit}\n                accessibilityLabel={t('devices.button.submit')}\n                disabled={!submitEnabled}\n                testID=\"submitDeviceName\"\n              >\n                <Text style={styles.submitBtnText}>\n                  {t('devices.button.submit')}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </>\n        )}\n        <View style={styles.progressContainer}>\n          {addSigningKeyStep !== AddSigningKeySteps.WAITING && (\n            <>\n              <View style={styles.addSigningKeyContainer}>\n                <AddSigningKey\n                  currentStep={addSigningKeyStep}\n                  errorMessage={addSigningKeyError}\n                />\n              </View>\n              <View style={styles.divider} />\n              <View style={styles.uploadDataContainer}>\n                <UploadData\n                  currentStep={uploadDataStep}\n                  errorMessage={uploadDataError}\n                />\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2,\n  },\n  waitingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85,\n  },\n  midContainer: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24,\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10,\n  },\n  addSigningKeyContainer: {\n    // marginTop: DEVICE_LARGE ? 25 : 20,\n    // minHeight: '25%',\n  },\n  uploadDataContainer: {\n    // height: '50%',\n  },\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK,\n  },\n  progressContainer: {\n    marginTop: DEVICE_LARGE ? 50 : 40,\n  },\n});\n\nexport default AddDeviceScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}