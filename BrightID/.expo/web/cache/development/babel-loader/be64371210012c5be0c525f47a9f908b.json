{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\n\nvar Linking = function () {\n  function Linking() {\n    var _this = this;\n\n    this._eventCallbacks = {};\n\n    this.addEventListener = function (event, callback) {\n      if (!_this._eventCallbacks[event]) {\n        _this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      _this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = function (event, callback) {\n      var callbacks = _this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      _this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  var _proto = Linking.prototype;\n\n  _proto._dispatchEvent = function _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(function (listener) {\n        listener.apply(void 0, data);\n      });\n    }\n  };\n\n  _proto.canOpenURL = function canOpenURL() {\n    return Promise.resolve(true);\n  };\n\n  _proto.getInitialURL = function getInitialURL() {\n    return Promise.resolve(initialURL);\n  };\n\n  _proto.openURL = function openURL(url) {\n    try {\n      open(url);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto._validateURL = function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  };\n\n  return Linking;\n}();\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, '_blank', 'noopener');\n    }\n  }\n};\n\nexport default new Linking();","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/Linking/index.js"],"names":["initialURL","canUseDOM","window","Linking","_this","callbacks","filteredCallbacks","c","callback","_proto","_len","arguments","data","_key","listeners","Array","listener","Promise","open","invariant","urlToOpen"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\n\nvar Linking = /*#__PURE__*/function () {\n  function Linking() {\n    var _this = this;\n\n    this._eventCallbacks = {};\n\n    this.addEventListener = function (event, callback) {\n      if (!_this._eventCallbacks[event]) {\n        _this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      _this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = function (event, callback) {\n      var callbacks = _this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(function (c) {\n        return c.toString() !== callback.toString();\n      });\n      _this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  var _proto = Linking.prototype;\n\n  _proto._dispatchEvent = function _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(function (listener) {\n        listener.apply(void 0, data);\n      });\n    }\n  }\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n  ;\n\n  _proto.canOpenURL = function canOpenURL() {\n    return Promise.resolve(true);\n  };\n\n  _proto.getInitialURL = function getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully\n   */\n  ;\n\n  _proto.openURL = function openURL(url) {\n    try {\n      open(url);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto._validateURL = function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  };\n\n  return Linking;\n}();\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, '_blank', 'noopener');\n    }\n  }\n};\n\nexport default new Linking();"]},"metadata":{},"sourceType":"module"}