{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport CryptoJS from 'crypto-js';\nimport { retrieveImage } from \"../../../../utils/filesystem\";\nimport backupApi from \"../../../../api/backupService\";\nimport { hash } from \"../../../../utils/encoding\";\nimport { selectAllConnections } from \"../../../../reducer/connectionsSlice\";\n\nvar hashId = function hashId(id, password) {\n  var h = hash(id + password);\n  return h;\n};\n\nexport var encryptAndBackup = function encryptAndBackup(key, data) {\n  return function _callee(_, getState) {\n    var _getState, _getState$user, id, password, hashedId, encrypted;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _getState = getState(), _getState$user = _getState.user, id = _getState$user.id, password = _getState$user.password;\n            hashedId = hashId(id, password);\n            _context.prev = 2;\n            encrypted = CryptoJS.AES.encrypt(data, password).toString();\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(backupApi.putRecovery(hashedId, key, encrypted));\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            _context.t0 instanceof Error ? console.warn(_context.t0.message) : console.warn(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 8]], Promise);\n  };\n};\nexport var backupPhoto = function backupPhoto(id, filename) {\n  return function _callee2(dispatch) {\n    var data;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(retrieveImage(filename));\n\n          case 3:\n            data = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(encryptAndBackup(id, data)));\n\n          case 6:\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.t0 instanceof Error ? console.warn(_context2.t0.message) : console.warn(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\n\nvar backupPhotos = function backupPhotos() {\n  return function _callee3(dispatch, getState) {\n    var _getState2, groups, _getState2$user, id, photo, connections, _iterator, _step, _item$photo, item, _iterator2, _step2, _item$photo2, _item;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _getState2 = getState(), groups = _getState2.groups.groups, _getState2$user = _getState2.user, id = _getState2$user.id, photo = _getState2$user.photo;\n            connections = selectAllConnections(getState());\n            _iterator = _createForOfIteratorHelperLoose(connections);\n\n          case 4:\n            if ((_step = _iterator()).done) {\n              _context3.next = 11;\n              break;\n            }\n\n            item = _step.value;\n\n            if (!((_item$photo = item.photo) != null && _item$photo.filename)) {\n              _context3.next = 9;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(item.id, item.photo.filename)));\n\n          case 9:\n            _context3.next = 4;\n            break;\n\n          case 11:\n            _iterator2 = _createForOfIteratorHelperLoose(groups);\n\n          case 12:\n            if ((_step2 = _iterator2()).done) {\n              _context3.next = 19;\n              break;\n            }\n\n            _item = _step2.value;\n\n            if (!((_item$photo2 = _item.photo) != null && _item$photo2.filename)) {\n              _context3.next = 17;\n              break;\n            }\n\n            _context3.next = 17;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(_item.id, _item.photo.filename)));\n\n          case 17:\n            _context3.next = 12;\n            break;\n\n          case 19:\n            _context3.next = 21;\n            return _regeneratorRuntime.awrap(dispatch(backupPhoto(id, photo.filename)));\n\n          case 21:\n            _context3.next = 26;\n            break;\n\n          case 23:\n            _context3.prev = 23;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.t0 instanceof Error ? console.warn(_context3.t0.message) : console.warn(_context3.t0);\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 23]], Promise);\n  };\n};\n\nexport var backupUser = function backupUser() {\n  return function _callee4(dispatch, getState) {\n    var _getState3, _getState3$user, id, name, photo, groups, connections, userData, dataStr;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _getState3 = getState(), _getState3$user = _getState3.user, id = _getState3$user.id, name = _getState3$user.name, photo = _getState3$user.photo, groups = _getState3.groups.groups;\n            connections = selectAllConnections(getState());\n            userData = {\n              id: id,\n              name: name,\n              photo: photo\n            };\n            dataStr = JSON.stringify({\n              userData: userData,\n              connections: connections,\n              groups: groups\n            });\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(dispatch(encryptAndBackup('data', dataStr)));\n\n          case 7:\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            _context4.t0 instanceof Error ? console.warn(_context4.t0.message) : console.warn(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var backupAppData = function backupAppData() {\n  return function _callee5(dispatch) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(dispatch(backupUser()));\n\n          case 3:\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(backupPhotos()));\n\n          case 5:\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            _context5.t0 instanceof Error ? console.warn(_context5.t0.message) : console.warn(_context5.t0);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var fetchBackupData = function _callee6(key, id, pass) {\n  var hashedId, res;\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          hashedId = hashId(id, pass);\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(backupApi.getRecovery(hashedId, key));\n\n        case 4:\n          res = _context6.sent;\n          return _context6.abrupt(\"return\", CryptoJS.AES.decrypt(res.data, pass).toString(CryptoJS.enc.Utf8));\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(\"Error while fetching backup data '\" + key + \"': \" + _context6.t0.message);\n\n          if (!(_context6.t0.message === 'CLIENT_ERROR')) {\n            _context6.next = 15;\n            break;\n          }\n\n          throw new Error('bad password');\n\n        case 15:\n          throw new Error('unknown error');\n\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/thunks/backupThunks.ts"],"names":["hashId","h","hash","id","encryptAndBackup","password","getState","hashedId","encrypted","CryptoJS","backupApi","console","backupPhoto","data","retrieveImage","dispatch","backupPhotos","groups","photo","connections","selectAllConnections","item","backupUser","name","userData","dataStr","JSON","backupAppData","fetchBackupData","res"],"mappings":"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","sourcesContent":["import CryptoJS from 'crypto-js';\nimport { retrieveImage } from '@/utils/filesystem';\nimport backupApi from '@/api/backupService';\nimport { hash } from '@/utils/encoding';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\n\nconst hashId = (id: string, password: string) => {\n  const h = hash(id + password);\n  return h;\n};\n\nexport const encryptAndBackup = (key: string, data: string) => async (\n  _: dispatch,\n  getState: getState,\n) => {\n  const {\n    user: { id, password },\n  } = getState();\n  const hashedId = hashId(id, password);\n  try {\n    const encrypted = CryptoJS.AES.encrypt(data, password).toString();\n    await backupApi.putRecovery(hashedId, key, encrypted);\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const backupPhoto = (id: string, filename: string) => async (\n  dispatch: dispatch,\n) => {\n  try {\n    const data = await retrieveImage(filename);\n    await dispatch(encryptAndBackup(id, data));\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nconst backupPhotos = () => async (dispatch: dispatch, getState: getState) => {\n  try {\n    const {\n      groups: { groups },\n      user: { id, photo },\n    } = getState();\n    const connections = selectAllConnections(getState());\n    for (const item of connections) {\n      if (item.photo?.filename) {\n        await dispatch(backupPhoto(item.id, item.photo.filename));\n      }\n    }\n    for (const item of groups) {\n      if (item.photo?.filename) {\n        await dispatch(backupPhoto(item.id, item.photo.filename));\n      }\n    }\n    await dispatch(backupPhoto(id, photo.filename));\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const backupUser = () => async (\n  dispatch: dispatch,\n  getState: getState,\n) => {\n  try {\n    const {\n      user: { id, name, photo },\n      groups: { groups },\n    } = getState();\n    const connections = selectAllConnections(getState());\n\n    const userData = {\n      id,\n      name,\n      photo,\n    };\n\n    const dataStr = JSON.stringify({\n      userData,\n      connections,\n      groups,\n    });\n    await dispatch(encryptAndBackup('data', dataStr));\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const backupAppData = () => async (dispatch: dispatch) => {\n  try {\n    // backup user\n    await dispatch(backupUser());\n    // backup connection photos\n    await dispatch(backupPhotos());\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const fetchBackupData = async (\n  key: string,\n  id: string,\n  pass: string,\n) => {\n  try {\n    const hashedId = hashId(id, pass);\n    const res = await backupApi.getRecovery(hashedId, key);\n    return CryptoJS.AES.decrypt(res.data, pass).toString(CryptoJS.enc.Utf8);\n  } catch (err) {\n    console.log(`Error while fetching backup data '${key}': ${err.message}`);\n    if (err.message === 'CLIENT_ERROR') {\n      // Any 4xx http code will end up as CLIENT_ERROR\n      // We can not tell if\n      //  - the data has vanished by itself on the backup server or\n      //  - the user provided a wrong password (this will lead to trying non-existing file, as\n      //    the password hash is part of the filename).\n      // Assume user entered wrong password, hoping the backup server will never lose data.\n      throw new Error('bad password');\n    } else {\n      // TODO Better error handling\n      throw new Error('unknown error');\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}