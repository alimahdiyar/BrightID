{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport moment from 'moment';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from \"../../store\";\nimport { CONNECTION_STALE_AGE, ORANGE } from \"../../utils/constants\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { staleConnection } from \"../../actions\";\nimport { DEVICE_LARGE, WIDTH } from \"../../utils/deviceConstants\";\nimport { WHITE, LIGHT_ORANGE, DARK_ORANGE, RED, BLUE } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport Pencil from \"../Icons/Pencil\";\nimport { ConnectionStatus } from \"../Helpers/ConnectionStatus\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RecoveryConnectionCard = function RecoveryConnectionCard(props) {\n  var stale_check_timer = useRef(null);\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  var status = props.status,\n      connectionDate = props.connectionDate,\n      id = props.id,\n      name = props.name,\n      photo = props.photo,\n      reportReason = props.reportReason,\n      index = props.index,\n      level = props.level,\n      isModify = props.isModify,\n      isSelectionActive = props.isSelectionActive,\n      onSelect = props.onSelect,\n      isSelected = props.isSelected,\n      activeAfter = props.activeAfter,\n      activeBefore = props.activeBefore;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgErr = _useState2[0],\n      setImgErr = _useState2[1];\n\n  useFocusEffect(useCallback(function () {\n    if (status === 'initiated') {\n      var checkStale = function checkStale() {\n        var ageMs = Date.now() - connectionDate;\n\n        if (ageMs > CONNECTION_STALE_AGE) {\n          console.log(\"Connection \" + name + \" is stale (age: \" + ageMs + \" ms)\");\n          return true;\n        }\n\n        return false;\n      };\n\n      if (checkStale()) {\n        dispatch(staleConnection(id));\n      } else {\n        var checkTime = connectionDate + CONNECTION_STALE_AGE + 5000 - Date.now();\n\n        if (checkTime < 0) {\n          console.log(\"Warning - checkTime in past: \" + checkTime);\n          checkTime = 1000;\n        }\n\n        if (stale_check_timer.current) {\n          clearTimeout(stale_check_timer.current);\n        }\n\n        console.log(\"Marking connection as stale in \" + checkTime + \"ms.\");\n        stale_check_timer.current = setTimeout(function () {\n          if (checkStale()) {\n            dispatch(staleConnection(id));\n          }\n        }, checkTime);\n      }\n    }\n\n    return function () {\n      if (stale_check_timer.current) {\n        clearTimeout(stale_check_timer.current);\n        stale_check_timer.current = null;\n      }\n    };\n  }, [connectionDate, dispatch, id, name, status]));\n  useEffect(function () {\n    if (stale_check_timer.current && status === 'verified') {\n      console.log(\"Connection \" + name + \" changed 'initiated' -> 'verified'. Stopping stale_check_timer ID \" + stale_check_timer.current + \".\");\n      clearTimeout(stale_check_timer.current);\n      stale_check_timer.current = null;\n    }\n  }, [name, status]);\n\n  var ModifyConnection = function ModifyConnection() {\n    return _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: function onPress() {\n        navigation.navigate('SetTrustlevel', {\n          connectionId: id\n        });\n      },\n      children: _jsx(Pencil, {\n        highlight: WHITE,\n        color: BLUE\n      })\n    });\n  };\n\n  var Selection = function Selection() {\n    return _jsx(TouchableOpacity, {\n      style: {\n        flexGrow: 1,\n        paddingRight: DEVICE_LARGE ? 15 : 13.5,\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        alignSelf: 'center'\n      },\n      onPress: function onPress() {\n        return onSelect(id);\n      },\n      children: _jsx(IonIcons, {\n        name: isSelected ? 'checkbox' : 'md-square-outline',\n        color: ORANGE,\n        size: DEVICE_LARGE ? 26 : 24\n      })\n    });\n  };\n\n  var imageSource = photo != null && photo.filename && !imgErr ? {\n    uri: \"file://\" + photoDirectory() + \"/\" + (photo == null ? void 0 : photo.filename)\n  } : require(\"../../static/default_profile.jpg\");\n  var s1 = activeAfter ? \"activates in \" + moment.duration(activeAfter, 'milliseconds').humanize() : '';\n  var s2 = activeBefore ? \"deactivates in \" + moment.duration(activeBefore, 'milliseconds').humanize() : '';\n  var activeTime = s1 + \" \" + s2;\n  return _jsx(View, {\n    style: styles.container,\n    testID: \"connectionCardContainer\",\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('FullScreenPhoto', {\n            photo: photo\n          });\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewPhoto'),\n        accessibilityRole: \"imagebutton\",\n        children: _jsx(Image, {\n          source: imageSource,\n          style: styles.photo,\n          accessibilityLabel: t('connections.accessibilityLabel.connectionPhoto'),\n          onError: function onError() {\n            console.log('settingImgErr');\n            setImgErr(true);\n          }\n        })\n      }), _jsx(TouchableOpacity, {\n        testID: \"ConnectionCard-\" + index,\n        onPress: function onPress() {\n          navigation.navigate('Connection', {\n            connectionId: id\n          });\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewConnectionDetails'),\n        children: _jsxs(View, {\n          style: [styles.info, {\n            maxWidth: WIDTH * 0.56,\n            flexGrow: 1\n          }],\n          children: [_jsx(View, {\n            style: [styles.nameContainer],\n            testID: \"connection_name-\" + index,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.name,\n              testID: \"connectionCardText-\" + index,\n              children: name\n            })\n          }), _jsx(ConnectionStatus, {\n            index: index,\n            status: status,\n            reportReason: reportReason,\n            infoText: activeTime,\n            level: level\n          })]\n        })\n      }), isSelectionActive && _jsx(Selection, {}), isModify && _jsx(ModifyConnection, {})]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16]\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[12],\n    marginTop: DEVICE_LARGE ? 3 : 1\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: DARK_ORANGE\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: LIGHT_ORANGE,\n    marginTop: DEVICE_LARGE ? 2 : 0\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: RED,\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize'\n  },\n  editButton: {\n    width: DEVICE_LARGE ? 60 : 56,\n    position: 'absolute',\n    right: 0\n  },\n  activeText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: RED,\n    fontStyle: 'italic'\n  }\n});\nexport default RecoveryConnectionCard;","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","IonIcons","moment","useFocusEffect","useNavigation","useTranslation","useDispatch","CONNECTION_STALE_AGE","ORANGE","photoDirectory","staleConnection","DEVICE_LARGE","WIDTH","WHITE","LIGHT_ORANGE","DARK_ORANGE","RED","BLUE","fontSize","Pencil","ConnectionStatus","RecoveryConnectionCard","props","stale_check_timer","navigation","dispatch","status","connectionDate","id","name","photo","reportReason","index","level","isModify","isSelectionActive","onSelect","isSelected","activeAfter","activeBefore","t","imgErr","setImgErr","checkStale","ageMs","Date","now","console","log","checkTime","current","clearTimeout","setTimeout","ModifyConnection","styles","editButton","navigate","connectionId","Selection","flexGrow","paddingRight","alignItems","justifyContent","alignSelf","imageSource","filename","uri","require","s1","duration","humanize","s2","activeTime","container","card","info","maxWidth","nameContainer","StyleSheet","create","flexDirection","height","backgroundColor","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","marginLeft","marginTop","flex","fontFamily","statusContainer","connectionLevel","connectionTime","color","moreIcon","marginRight","waitingMessage","deletedMessage","textTransform","position","right","activeText","fontStyle"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/RecoveryConnections/RecoverConnectionsCard.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport IonIcons from 'react-native-vector-icons/Ionicons';\nimport moment from 'moment';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from '@/store';\nimport { CONNECTION_STALE_AGE, ORANGE } from '@/utils/constants';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { staleConnection } from '@/actions';\nimport { DEVICE_LARGE, WIDTH } from '@/utils/deviceConstants';\nimport { WHITE, LIGHT_ORANGE, DARK_ORANGE, RED, BLUE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport Pencil from '@/components/Icons/Pencil';\nimport { ConnectionStatus } from '@/components/Helpers/ConnectionStatus';\n\n/**\n * Connection Card in the Connections Screen\n * is created from an array of connections\n * each connection should have:\n * @prop name\n * @prop connectionTime\n * @prop photo\n */\n\ntype Props = Connection & {\n  isSelectionActive?: boolean;\n  onSelect?: (id: string) => void;\n  isSelected?: boolean;\n  isModify?: boolean;\n  index: number;\n  activeBefore: number;\n  activeAfter: number;\n};\n\nconst RecoveryConnectionCard = (props: Props) => {\n  const stale_check_timer = useRef<TimeoutId>(null);\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const {\n    status,\n    connectionDate,\n    id,\n    name,\n    photo,\n    reportReason,\n    index,\n    level,\n    isModify,\n    isSelectionActive,\n    onSelect,\n    isSelected,\n    activeAfter,\n    activeBefore,\n  } = props;\n  const { t } = useTranslation();\n\n  const [imgErr, setImgErr] = useState(false);\n\n  useFocusEffect(\n    useCallback(() => {\n      // if we have a \"waiting\" connection, start timer to handle stale connection requests\n      if (status === 'initiated') {\n        const checkStale = () => {\n          const ageMs = Date.now() - connectionDate;\n          if (ageMs > CONNECTION_STALE_AGE) {\n            console.log(`Connection ${name} is stale (age: ${ageMs} ms)`);\n            return true;\n          }\n          return false;\n        };\n        if (checkStale()) {\n          // this is already old. Immediately mark as \"stale\", no need for a timer.\n          dispatch(staleConnection(id));\n        } else {\n          // start timer to check if connection got verified after maximum channel lifetime\n          let checkTime =\n            connectionDate + CONNECTION_STALE_AGE + 5000 - Date.now(); // add 5 seconds buffer\n          if (checkTime < 0) {\n            console.log(`Warning - checkTime in past: ${checkTime}`);\n            checkTime = 1000; // check in 1 second\n          }\n\n          if (stale_check_timer.current) {\n            clearTimeout(stale_check_timer.current);\n          }\n          console.log(`Marking connection as stale in ${checkTime}ms.`);\n          stale_check_timer.current = setTimeout(() => {\n            if (checkStale()) {\n              dispatch(staleConnection(id));\n            }\n          }, checkTime);\n        }\n      }\n      return () => {\n        // clear timer if it is set\n        if (stale_check_timer.current) {\n          clearTimeout(stale_check_timer.current);\n          stale_check_timer.current = null;\n        }\n      };\n    }, [connectionDate, dispatch, id, name, status]),\n  );\n\n  useEffect(() => {\n    if (stale_check_timer.current && status === 'verified') {\n      console.log(\n        `Connection ${name} changed 'initiated' -> 'verified'. Stopping stale_check_timer ID ${stale_check_timer.current}.`,\n      );\n      clearTimeout(stale_check_timer.current);\n      stale_check_timer.current = null;\n    }\n  }, [name, status]);\n\n  const ModifyConnection = () => (\n    <TouchableOpacity\n      style={styles.editButton}\n      onPress={() => {\n        navigation.navigate('SetTrustlevel', {\n          connectionId: id,\n        });\n      }}\n    >\n      <Pencil highlight={WHITE} color={BLUE} />\n    </TouchableOpacity>\n  );\n\n  const Selection = () => {\n    return (\n      <TouchableOpacity\n        style={{\n          flexGrow: 1,\n          paddingRight: DEVICE_LARGE ? 15 : 13.5,\n          alignItems: 'flex-end',\n          justifyContent: 'center',\n          alignSelf: 'center',\n        }}\n        onPress={() => onSelect(id)}\n      >\n        <IonIcons\n          name={isSelected ? 'checkbox' : 'md-square-outline'}\n          color={ORANGE}\n          size={DEVICE_LARGE ? 26 : 24}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  const imageSource =\n    photo?.filename && !imgErr\n      ? {\n          uri: `file://${photoDirectory()}/${photo?.filename}`,\n        }\n      : require('@/static/default_profile.jpg');\n\n  const s1 = activeAfter\n    ? `activates in ${moment.duration(activeAfter, 'milliseconds').humanize()}`\n    : '';\n  const s2 = activeBefore\n    ? `deactivates in ${moment\n        .duration(activeBefore, 'milliseconds')\n        .humanize()}`\n    : '';\n  const activeTime = `${s1} ${s2}`;\n  return (\n    <View style={styles.container} testID=\"connectionCardContainer\">\n      <View style={styles.card}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('FullScreenPhoto', { photo });\n          }}\n          accessibilityLabel={t('connections.accessibilityLabel.viewPhoto')}\n          accessibilityRole=\"imagebutton\"\n        >\n          <Image\n            source={imageSource}\n            style={styles.photo}\n            accessibilityLabel={t(\n              'connections.accessibilityLabel.connectionPhoto',\n            )}\n            onError={() => {\n              console.log('settingImgErr');\n              setImgErr(true);\n            }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          testID={`ConnectionCard-${index}`}\n          onPress={() => {\n            navigation.navigate('Connection', { connectionId: id });\n          }}\n          accessibilityLabel={t(\n            'connections.accessibilityLabel.viewConnectionDetails',\n          )}\n        >\n          <View style={[styles.info, { maxWidth: WIDTH * 0.56, flexGrow: 1 }]}>\n            <View\n              style={[styles.nameContainer]}\n              testID={`connection_name-${index}`}\n            >\n              <Text\n                numberOfLines={1}\n                style={styles.name}\n                testID={`connectionCardText-${index}`}\n              >\n                {name}\n              </Text>\n            </View>\n            <ConnectionStatus\n              index={index}\n              status={status}\n              reportReason={reportReason}\n              infoText={activeTime}\n              level={level}\n            />\n          </View>\n        </TouchableOpacity>\n        {isSelectionActive && <Selection />}\n        {isModify && <ModifyConnection />}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10,\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30,\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[12],\n    marginTop: DEVICE_LARGE ? 3 : 1,\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: DARK_ORANGE,\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23,\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: LIGHT_ORANGE,\n    marginTop: DEVICE_LARGE ? 2 : 0,\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: RED,\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize',\n  },\n  editButton: {\n    width: DEVICE_LARGE ? 60 : 56,\n    position: 'absolute',\n    right: 0,\n  },\n  activeText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: RED,\n    fontStyle: 'italic',\n  },\n});\n\nexport default RecoveryConnectionCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}