{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Spinner from 'react-native-spinkit';\nimport { useTranslation } from 'react-i18next';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { selectPendingOperations } from \"../../reducer/operationsSlice\";\nimport { selectAllConnections } from \"../../reducer/connectionsSlice\";\nimport { useSelector } from \"../../store\";\nimport { DEVICE_LARGE, DEVICE_IOS, DEVICE_ANDROID } from \"../../utils/deviceConstants\";\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport { ORANGE, WHITE, BLUE, GREY } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport RecoveryConnectionCard from \"./RecoverConnectionsCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EmptyList = function EmptyList() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingHorizontal: '10%'\n    },\n    children: [_jsx(MaterialCommunityIcons, {\n      size: DEVICE_LARGE ? 48 : 38,\n      name: \"alert-outline\",\n      color: GREY\n    }), _jsx(Text, {\n      style: styles.emptyText,\n      children: t('recoveryConnections.text.emptyList')\n    })]\n  });\n};\n\nexport var RecoveryConnectionsScreen = function RecoveryConnectionsScreen(props) {\n  var navigation = props.navigation;\n  var headerHeight = useHeaderHeight();\n\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  var me = useSelector(function (state) {\n    return state.user;\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recoveryConnections = _useState4[0],\n      setRecoveryConnections = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      connectionProfile = _useState6[0],\n      setConnectionProfile = _useState6[1];\n\n  var myConnections = useSelector(selectAllConnections);\n  var pendingOpsCount = useSelector(selectPendingOperations).length;\n  var api = useContext(NodeApiContext);\n  useFocusEffect(useCallback(function () {\n    var fetchData = function _callee() {\n      var profile, recoveryConnections;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              if (!(pendingOpsCount > 0)) {\n                _context.next = 4;\n                break;\n              }\n\n              console.log('waiting for pending operations to apply');\n              return _context.abrupt(\"return\");\n\n            case 4:\n              console.log(\"fetching own recovery connections\");\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(api.getProfile(me.id));\n\n            case 7:\n              profile = _context.sent;\n              setConnectionProfile(profile);\n              recoveryConnections = profile.recoveryConnections.map(function (rc) {\n                var conn = myConnections.find(function (c) {\n                  return rc.id === c.id;\n                });\n                return conn || {\n                  id: rc.id\n                };\n              });\n              setRecoveryConnections(recoveryConnections);\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [api, me.id, myConnections, pendingOpsCount]));\n\n  var getActiveTime = function getActiveTime(item) {\n    if (!connectionProfile) {\n      return {\n        activeBefore: 0,\n        activeAfter: 0\n      };\n    }\n\n    var rc = connectionProfile.recoveryConnections.find(function (rc) {\n      return rc.id === item.id;\n    });\n    return {\n      activeBefore: rc.activeBefore,\n      activeAfter: rc.activeAfter\n    };\n  };\n\n  var Loading = function Loading() {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(Spinner, {\n        size: DEVICE_LARGE ? 48 : 42,\n        type: \"Wave\",\n        color: BLUE\n      })\n    });\n  };\n\n  var RecoveryConnectionList = function RecoveryConnectionList() {\n    return _jsx(FlatList, {\n      data: recoveryConnections,\n      style: styles.recoveryConnectionContainer,\n      contentContainerStyle: {\n        paddingBottom: '35%',\n        paddingTop: 20,\n        flexGrow: 1\n      },\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsx(RecoveryConnectionCard, _objectSpread(_objectSpread(_objectSpread({}, item), getActiveTime(item)), {}, {\n          index: index,\n          isModify: true\n        }));\n      },\n      ListEmptyComponent: _jsx(EmptyList, {})\n    });\n  };\n\n  return _jsxs(View, {\n    style: [styles.container, styles.shadow, {\n      marginTop: headerHeight\n    }],\n    testID: \"RecoveryConnectionsScreen\",\n    children: [recoveryConnections.length > 0 && _jsx(View, {\n      style: styles.titleContainer,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: t('recoveryConnections.text.currentRecoveryConnections')\n      })\n    }), loading ? _jsx(Loading, {}) : _jsx(RecoveryConnectionList, {}), _jsx(View, {\n      style: styles.buttonContainer,\n      children: recoveryConnections.length === 0 ? _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('RecoveryConnectionsList');\n        },\n        style: styles.orangeButton,\n        children: _jsx(Text, {\n          style: styles.orangeButtonLabel,\n          children: t('recoveryConnections.text.addRecoveryConnections')\n        })\n      }) : _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('RecoveryConnectionsList');\n        },\n        style: styles.transparentBtn,\n        children: _jsx(Text, {\n          style: styles.transparentBtnText,\n          children: t('recoveryConnections.text.addMoreRecovery')\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    width: '100%',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '20%',\n    marginBottom: '5%'\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16]\n  },\n  recoveryConnectionContainer: {\n    flex: 1,\n    width: '100%'\n  },\n  buttonContainer: {\n    position: 'absolute',\n    zIndex: 10,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    paddingTop: '8%',\n    paddingBottom: DEVICE_ANDROID ? '9%' : '11%',\n    backgroundColor: WHITE\n  },\n  transparentBtn: {\n    backgroundColor: WHITE,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    width: '100%',\n    paddingLeft: '10%'\n  },\n  transparentBtnText: {\n    fontFamily: 'Poppins-Medium',\n    color: BLUE,\n    fontSize: fontSize[16]\n  },\n  orangeButton: {\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    backgroundColor: ORANGE,\n    width: '85%'\n  },\n  orangeButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    color: WHITE,\n    fontSize: fontSize[15]\n  },\n  hollowButton: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: GREY,\n    backgroundColor: WHITE\n  },\n  hollowButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: GREY\n  },\n  emptyText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: fontSize[18],\n    color: GREY,\n    marginVertical: 15\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingBottom: 20\n  }\n});\nexport default RecoveryConnectionsScreen;","map":{"version":3,"names":["React","useCallback","useContext","useState","Spinner","useTranslation","MaterialCommunityIcons","useHeaderHeight","useFocusEffect","selectPendingOperations","selectAllConnections","useSelector","DEVICE_LARGE","DEVICE_IOS","DEVICE_ANDROID","NodeApiContext","ORANGE","WHITE","BLUE","GREY","fontSize","RecoveryConnectionCard","EmptyList","t","flex","height","width","alignItems","justifyContent","paddingHorizontal","styles","emptyText","RecoveryConnectionsScreen","props","navigation","headerHeight","me","state","user","loading","setLoading","recoveryConnections","setRecoveryConnections","undefined","connectionProfile","setConnectionProfile","myConnections","pendingOpsCount","length","api","fetchData","console","log","getProfile","id","profile","map","rc","conn","find","c","getActiveTime","item","activeBefore","activeAfter","Loading","loadingContainer","RecoveryConnectionList","recoveryConnectionContainer","paddingBottom","paddingTop","flexGrow","index","container","shadow","marginTop","titleContainer","title","buttonContainer","navigate","orangeButton","orangeButtonLabel","transparentBtn","transparentBtnText","StyleSheet","create","backgroundColor","borderTopLeftRadius","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","marginBottom","fontFamily","position","zIndex","bottom","left","right","flexDirection","paddingLeft","color","borderRadius","hollowButton","borderWidth","borderColor","hollowButtonLabel","textAlign","fontWeight","marginVertical"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/RecoveryConnections/RecoveryConnectionsScreen.tsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n} from 'react-native';\n// Redux\nimport Spinner from 'react-native-spinkit';\nimport { useTranslation } from 'react-i18next';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { selectPendingOperations } from '@/reducer/operationsSlice';\nimport { selectAllConnections } from '@/reducer/connectionsSlice';\nimport { useSelector } from '@/store';\nimport {\n  DEVICE_LARGE,\n  DEVICE_IOS,\n  DEVICE_ANDROID,\n} from '@/utils/deviceConstants';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { ORANGE, WHITE, BLUE, GREY } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\n\n// Import Components Local\nimport RecoveryConnectionCard from './RecoverConnectionsCard';\n\n// Create Custom Local Components\nconst EmptyList = () => {\n  const { t } = useTranslation();\n  return (\n    <View\n      style={{\n        flex: 1,\n        height: '100%',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingHorizontal: '10%',\n      }}\n    >\n      <MaterialCommunityIcons\n        size={DEVICE_LARGE ? 48 : 38}\n        name=\"alert-outline\"\n        color={GREY}\n      />\n      <Text style={styles.emptyText}>\n        {t('recoveryConnections.text.emptyList')}\n      </Text>\n    </View>\n  );\n};\n\nexport const RecoveryConnectionsScreen = (props) => {\n  const { navigation } = props;\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const { t } = useTranslation();\n  const me = useSelector((state: State) => state.user);\n  const [loading, setLoading] = useState(true);\n  const [recoveryConnections, setRecoveryConnections] = useState<\n    Array<Connection>\n  >([]);\n  const [connectionProfile, setConnectionProfile] = useState<\n    ProfileInfo | undefined\n  >(undefined);\n  const myConnections = useSelector(selectAllConnections);\n  const pendingOpsCount = useSelector(selectPendingOperations).length;\n  const api = useContext(NodeApiContext);\n\n  useFocusEffect(\n    useCallback(() => {\n      const fetchData = async () => {\n        setLoading(true);\n        if (pendingOpsCount > 0) {\n          console.log('waiting for pending operations to apply');\n          return;\n        }\n        console.log(`fetching own recovery connections`);\n        const profile: ProfileInfo = await api.getProfile(me.id);\n        setConnectionProfile(profile);\n        const recoveryConnections = profile.recoveryConnections.map((rc) => {\n          const conn = myConnections.find((c) => rc.id === c.id);\n          return conn || { id: rc.id };\n        });\n        setRecoveryConnections(recoveryConnections);\n        setLoading(false);\n      };\n      fetchData();\n    }, [api, me.id, myConnections, pendingOpsCount]),\n  );\n\n  const getActiveTime = (item) => {\n    if (!connectionProfile) {\n      return { activeBefore: 0, activeAfter: 0 };\n    }\n    const rc = connectionProfile.recoveryConnections.find(\n      (rc) => rc.id === item.id,\n    );\n    return { activeBefore: rc.activeBefore, activeAfter: rc.activeAfter };\n  };\n\n  const Loading = () => (\n    <View style={styles.loadingContainer}>\n      <Spinner size={DEVICE_LARGE ? 48 : 42} type=\"Wave\" color={BLUE} />\n    </View>\n  );\n\n  const RecoveryConnectionList = () => (\n    <FlatList\n      data={recoveryConnections}\n      style={styles.recoveryConnectionContainer}\n      contentContainerStyle={{\n        paddingBottom: '35%',\n        paddingTop: 20,\n        flexGrow: 1,\n      }}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      renderItem={({ item, index }) => (\n        <RecoveryConnectionCard\n          {...item}\n          {...getActiveTime(item)}\n          index={index}\n          isModify={true}\n        />\n      )}\n      ListEmptyComponent={<EmptyList />}\n    />\n  );\n\n  return (\n    <View\n      style={[styles.container, styles.shadow, { marginTop: headerHeight }]}\n      testID=\"RecoveryConnectionsScreen\"\n    >\n      {recoveryConnections.length > 0 && (\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>\n            {t('recoveryConnections.text.currentRecoveryConnections')}\n          </Text>\n        </View>\n      )}\n      {loading ? <Loading /> : <RecoveryConnectionList />}\n\n      <View style={styles.buttonContainer}>\n        {recoveryConnections.length === 0 ? (\n          <TouchableOpacity\n            onPress={() => navigation.navigate('RecoveryConnectionsList')}\n            style={styles.orangeButton}\n          >\n            <Text style={styles.orangeButtonLabel}>\n              {t('recoveryConnections.text.addRecoveryConnections')}\n            </Text>\n          </TouchableOpacity>\n        ) : (\n          <TouchableOpacity\n            onPress={() => navigation.navigate('RecoveryConnectionsList')}\n            style={styles.transparentBtn}\n          >\n            <Text style={styles.transparentBtnText}>\n              {t('recoveryConnections.text.addMoreRecovery')}\n            </Text>\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    width: '100%',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    // flex: 1,\n    marginTop: '20%',\n    marginBottom: '5%',\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n  },\n  recoveryConnectionContainer: {\n    flex: 1,\n    // flexGrow: 1,\n    width: '100%',\n  },\n  buttonContainer: {\n    position: 'absolute',\n    zIndex: 10,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    paddingTop: '8%',\n    paddingBottom: DEVICE_ANDROID ? '9%' : '11%',\n    backgroundColor: WHITE,\n  },\n  transparentBtn: {\n    backgroundColor: WHITE,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    width: '100%',\n    paddingLeft: '10%',\n  },\n  transparentBtnText: {\n    fontFamily: 'Poppins-Medium',\n    color: BLUE,\n    fontSize: fontSize[16],\n  },\n  orangeButton: {\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    backgroundColor: ORANGE,\n    width: '85%',\n  },\n  orangeButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    color: WHITE,\n    fontSize: fontSize[15],\n  },\n  hollowButton: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: GREY,\n    backgroundColor: WHITE,\n  },\n  hollowButtonLabel: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[15],\n    color: GREY,\n  },\n  emptyText: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: fontSize[18],\n    color: GREY,\n    marginVertical: 15,\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingBottom: 20,\n  },\n});\n\nexport default RecoveryConnectionsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}