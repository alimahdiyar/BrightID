{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport FullScreenPhoto from '@/components/Helpers/FullScreenPhoto';\nimport ChangePasswordModal from '@/components/EditProfile/ChangePasswordModal';\nimport TrustlevelModal from '@/components/Connections/TrustlevelModal';\nimport SelectSocialMediaModal from '@/components/EditProfile/SelectSocialMediaModal';\nimport ReportReasonModal from '@/components/Connections/ReportReasonModal';\nimport SortConnectionsModal from '@/components/Helpers/SortConnectionsModal';\nimport ViewPassword from '@/components/Onboarding/Walkthroughs/ViewPassword';\nimport RecoveryCooldownInfoModal from '@/components/Recovery/RecoveryCooldownInfoModal';\nimport NodeModal from '@/components/Helpers/NodeModal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar modalOptions = _objectSpread(_objectSpread({\n  headerShown: false,\n  cardOverlayEnabled: true,\n  gestureEnabled: true\n}, TransitionPresets.FadeFromBottomAndroid), {}, {\n  cardStyle: {\n    backgroundColor: 'transparent'\n  }\n});\n\nvar Modals = function Modals() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Screen, {\n      name: \"FullScreenPhoto\",\n      component: FullScreenPhoto,\n      options: modalOptions\n    }), _jsx(Stack.Screen, {\n      name: \"ChangePassword\",\n      options: modalOptions,\n      component: ChangePasswordModal\n    }), _jsx(Stack.Screen, {\n      name: \"SelectSocialMedia\",\n      options: modalOptions,\n      component: SelectSocialMediaModal\n    }), _jsx(Stack.Screen, {\n      name: \"SetTrustlevel\",\n      options: modalOptions,\n      component: TrustlevelModal\n    }), _jsx(Stack.Screen, {\n      name: \"ReportReason\",\n      options: modalOptions,\n      component: ReportReasonModal\n    }), _jsx(Stack.Screen, {\n      name: \"SortConnections\",\n      options: modalOptions,\n      component: SortConnectionsModal\n    }), _jsx(Stack.Screen, {\n      name: \"ViewPasswordWalkthrough\",\n      options: modalOptions,\n      component: ViewPassword\n    }), _jsx(Stack.Screen, {\n      name: \"RecoveryCooldownInfo\",\n      options: modalOptions,\n      component: RecoveryCooldownInfoModal\n    }), _jsx(Stack.Screen, {\n      name: \"NodeModal\",\n      options: modalOptions,\n      component: NodeModal\n    })]\n  });\n};\n\nexport default Modals;","map":{"version":3,"names":["React","createStackNavigator","TransitionPresets","FullScreenPhoto","ChangePasswordModal","TrustlevelModal","SelectSocialMediaModal","ReportReasonModal","SortConnectionsModal","ViewPassword","RecoveryCooldownInfoModal","NodeModal","Stack","modalOptions","headerShown","cardOverlayEnabled","gestureEnabled","FadeFromBottomAndroid","cardStyle","backgroundColor","Modals"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Modals.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n  TransitionPresets,\n} from '@react-navigation/stack';\nimport FullScreenPhoto from '@/components/Helpers/FullScreenPhoto';\nimport ChangePasswordModal from '@/components/EditProfile/ChangePasswordModal';\nimport TrustlevelModal from '@/components/Connections/TrustlevelModal';\nimport SelectSocialMediaModal from '@/components/EditProfile/SelectSocialMediaModal';\nimport ReportReasonModal from '@/components/Connections/ReportReasonModal';\nimport SortConnectionsModal from '@/components/Helpers/SortConnectionsModal';\nimport ViewPassword from '@/components/Onboarding/Walkthroughs/ViewPassword';\nimport RecoveryCooldownInfoModal from '@/components/Recovery/RecoveryCooldownInfoModal';\nimport NodeModal from '@/components/Helpers/NodeModal';\n\nconst Stack = createStackNavigator<ModalStackParamList>();\n\nconst modalOptions: StackNavigationOptions = {\n  headerShown: false,\n  cardOverlayEnabled: true,\n  gestureEnabled: true,\n  ...TransitionPresets.FadeFromBottomAndroid,\n  cardStyle: { backgroundColor: 'transparent' },\n};\n\nconst Modals = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"FullScreenPhoto\"\n        component={FullScreenPhoto}\n        options={modalOptions}\n      />\n      <Stack.Screen\n        name=\"ChangePassword\"\n        options={modalOptions}\n        component={ChangePasswordModal}\n      />\n      <Stack.Screen\n        name=\"SelectSocialMedia\"\n        options={modalOptions}\n        component={SelectSocialMediaModal}\n      />\n      <Stack.Screen\n        name=\"SetTrustlevel\"\n        options={modalOptions}\n        component={TrustlevelModal}\n      />\n      <Stack.Screen\n        name=\"ReportReason\"\n        options={modalOptions}\n        component={ReportReasonModal}\n      />\n      <Stack.Screen\n        name=\"SortConnections\"\n        options={modalOptions}\n        component={SortConnectionsModal}\n      />\n      <Stack.Screen\n        name=\"ViewPasswordWalkthrough\"\n        options={modalOptions}\n        component={ViewPassword}\n      />\n      <Stack.Screen\n        name=\"RecoveryCooldownInfo\"\n        options={modalOptions}\n        component={RecoveryCooldownInfoModal}\n      />\n      <Stack.Screen\n        name=\"NodeModal\"\n        options={modalOptions}\n        component={NodeModal}\n      />\n    </>\n  );\n};\n\nexport default Modals;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAGEC,iBAHF,QAIO,yBAJP;AAKA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,sBAAP,MAAmC,iDAAnC;AACA,OAAOC,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,oBAAP,MAAiC,2CAAjC;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,yBAAP,MAAsC,iDAAtC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;;;AAEA,IAAMC,KAAK,GAAGX,oBAAoB,EAAlC;;AAEA,IAAMY,YAAoC;EACxCC,WAAW,EAAE,KAD2B;EAExCC,kBAAkB,EAAE,IAFoB;EAGxCC,cAAc,EAAE;AAHwB,GAIrCd,iBAAiB,CAACe,qBAJmB;EAKxCC,SAAS,EAAE;IAAEC,eAAe,EAAE;EAAnB;AAL6B,EAA1C;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;EACnB,OACE;IAAA,WACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,iBADP;MAEE,SAAS,EAAEjB,eAFb;MAGE,OAAO,EAAEU;IAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,gBADP;MAEE,OAAO,EAAEA,YAFX;MAGE,SAAS,EAAET;IAHb,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,mBADP;MAEE,OAAO,EAAES,YAFX;MAGE,SAAS,EAAEP;IAHb,EAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,eADP;MAEE,OAAO,EAAEO,YAFX;MAGE,SAAS,EAAER;IAHb,EAhBF,EAqBE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,cADP;MAEE,OAAO,EAAEQ,YAFX;MAGE,SAAS,EAAEN;IAHb,EArBF,EA0BE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,iBADP;MAEE,OAAO,EAAEM,YAFX;MAGE,SAAS,EAAEL;IAHb,EA1BF,EA+BE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,yBADP;MAEE,OAAO,EAAEK,YAFX;MAGE,SAAS,EAAEJ;IAHb,EA/BF,EAoCE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,sBADP;MAEE,OAAO,EAAEI,YAFX;MAGE,SAAS,EAAEH;IAHb,EApCF,EAyCE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,WADP;MAEE,OAAO,EAAEG,YAFX;MAGE,SAAS,EAAEF;IAHb,EAzCF;EAAA,EADF;AAiDD,CAlDD;;AAoDA,eAAeS,MAAf"},"metadata":{},"sourceType":"module"}