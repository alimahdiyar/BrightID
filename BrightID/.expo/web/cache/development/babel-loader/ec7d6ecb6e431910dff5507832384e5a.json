{"ast":null,"code":"import { createStackNavigator } from '@react-navigation/stack';\nimport { useSelector } from \"../store\";\nimport NodeApiGate from \"../components/NodeApiGate\";\nimport Apps from \"./Apps\";\nimport RecoveringConnection from \"./RecoveringConnection\";\nimport Devices from \"./Devices\";\nimport Connections from \"./Connections\";\nimport RecoveryConnections from \"./RecoveryConnections\";\nimport Eula from \"./Eula\";\nimport Groups from \"./Groups\";\nimport Home from \"./Home\";\nimport Modals from \"./Modals\";\nimport PendingConnections from \"./PendingConnections\";\nimport Notifications from \"./Notifications\";\nimport Onboarding from \"./Onboarding\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TopStack = createStackNavigator();\nvar Stack = createStackNavigator();\n\nvar MainTabs = function MainTabs() {\n  return _jsxs(Stack.Navigator, {\n    headerMode: \"screen\",\n    children: [Home(), PendingConnections(), Connections(), RecoveryConnections(), Groups(), Notifications(), Devices(), Apps(), Modals(), RecoveringConnection()]\n  });\n};\n\nvar MainApp = function MainApp() {\n  var id = useSelector(function (state) {\n    return state.user.id;\n  });\n  var eula = useSelector(function (state) {\n    return state.user.eula;\n  });\n  return _jsx(NodeApiGate, {\n    children: _jsx(TopStack.Navigator, {\n      children: !eula ? _jsx(TopStack.Screen, {\n        name: \"Eula\",\n        component: Eula,\n        options: {\n          headerShown: false\n        }\n      }) : !id ? _jsx(TopStack.Screen, {\n        name: \"Onboarding\",\n        component: Onboarding,\n        options: {\n          headerShown: false\n        }\n      }) : _jsx(TopStack.Screen, {\n        name: \"App\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n};\n\nexport default MainApp;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/index.tsx"],"names":["TopStack","createStackNavigator","Stack","MainTabs","Home","PendingConnections","Connections","RecoveryConnections","Groups","Notifications","Devices","Apps","Modals","RecoveringConnection","MainApp","id","useSelector","state","eula","headerShown"],"mappings":"AACA,SAAA,oBAAA,QAAA,yBAAA;AACA,SAAA,WAAA;AACA,OAAA,WAAA;AACA,OAAA,IAAA;AACA,OAAA,oBAAA;AACA,OAAA,OAAA;AACA,OAAA,WAAA;AACA,OAAA,mBAAA;AACA,OAAA,IAAA;AACA,OAAA,MAAA;AACA,OAAA,IAAA;AACA,OAAA,MAAA;AACA,OAAA,kBAAA;AACA,OAAA,aAAA;AACA,OAAA,UAAA;;;AAEA,IAAMA,QAAQ,GAAGC,oBAAjB,EAAA;AACA,IAAMC,KAAK,GAAGD,oBAAd,EAAA;;AAEA,IAAME,QAAQ,GAARA,SAAAA,QAAAA,GAAiB;EACrB,OACE,KAAA,CAAC,KAAD,CAAA,SAAA,EAAA;IAAiB,UAAU,EAA3B,QAAA;IAAA,QAAA,EAAA,CACGC,IADH,EAAA,EAEGC,kBAFH,EAAA,EAGGC,WAHH,EAAA,EAIGC,mBAJH,EAAA,EAKGC,MALH,EAAA,EAMGC,aANH,EAAA,EAOGC,OAPH,EAAA,EAQGC,IARH,EAAA,EASGC,MATH,EAAA,EAUGC,oBAXL,EACE;EAAA,CAAA,CADF;AADF,CAAA;;AAiBA,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,GAAgB;EACpB,IAAMC,EAAE,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAAkBC,KAAK,CAALA,IAAAA,CAAlB,EAAA;EAAvB,CAAsB,CAAtB;EACA,IAAMC,IAAI,GAAGF,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAAkBC,KAAK,CAALA,IAAAA,CAAlB,IAAA;EAAzB,CAAwB,CAAxB;EACA,OACE,IAAA,CAAA,WAAA,EAAA;IAAA,QAAA,EACE,IAAA,CAAC,QAAD,CAAA,SAAA,EAAA;MAAA,QAAA,EACG,CAAA,IAAA,GACC,IAAA,CAAC,QAAD,CAAA,MAAA,EAAA;QACE,IAAI,EADN,MAAA;QAEE,SAAS,EAFX,IAAA;QAGE,OAAO,EAAE;UAAEE,WAAW,EAJzB;QAIY;MAHX,CAAA,CADD,GAMG,CAAA,EAAA,GACF,IAAA,CAAC,QAAD,CAAA,MAAA,EAAA;QACE,IAAI,EADN,YAAA;QAEE,SAAS,EAFX,UAAA;QAGE,OAAO,EAAE;UAAEA,WAAW,EAJtB;QAIS;MAHX,CAAA,CADE,GAOF,IAAA,CAAC,QAAD,CAAA,MAAA,EAAA;QACE,IAAI,EADN,KAAA;QAEE,SAAS,EAFX,QAAA;QAGE,OAAO,EAAE;UAAEA,WAAW,EAnBhC;QAmBmB;MAHX,CAAA;IAdJ,CAAA;EADF,CAAA,CADF;AAHF,CAAA;;AA8BA,eAAA,OAAA","sourcesContent":["import * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useSelector } from '@/store';\nimport NodeApiGate from '@/components/NodeApiGate';\nimport Apps from './Apps';\nimport RecoveringConnection from './RecoveringConnection';\nimport Devices from './Devices';\nimport Connections from './Connections';\nimport RecoveryConnections from './RecoveryConnections';\nimport Eula from './Eula';\nimport Groups from './Groups';\nimport Home from './Home';\nimport Modals from './Modals';\nimport PendingConnections from './PendingConnections';\nimport Notifications from './Notifications';\nimport Onboarding from './Onboarding';\n\nconst TopStack = createStackNavigator();\nconst Stack = createStackNavigator();\n\nconst MainTabs = () => {\n  return (\n    <Stack.Navigator headerMode=\"screen\">\n      {Home()}\n      {PendingConnections()}\n      {Connections()}\n      {RecoveryConnections()}\n      {Groups()}\n      {Notifications()}\n      {Devices()}\n      {Apps()}\n      {Modals()}\n      {RecoveringConnection()}\n    </Stack.Navigator>\n  );\n};\n\nconst MainApp = () => {\n  const id = useSelector((state: State) => state.user.id);\n  const eula = useSelector((state: State) => state.user.eula);\n  return (\n    <NodeApiGate>\n      <TopStack.Navigator>\n        {!eula ? (\n          <TopStack.Screen\n            name=\"Eula\"\n            component={Eula}\n            options={{ headerShown: false }}\n          />\n        ) : !id ? (\n          <TopStack.Screen\n            name=\"Onboarding\"\n            component={Onboarding}\n            options={{ headerShown: false }}\n          />\n        ) : (\n          <TopStack.Screen\n            name=\"App\"\n            component={MainTabs}\n            options={{ headerShown: false }}\n          />\n        )}\n      </TopStack.Navigator>\n    </NodeApiGate>\n  );\n};\n\nexport default MainApp;\n"]},"metadata":{},"sourceType":"module"}