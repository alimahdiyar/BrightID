{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _apisauce = require(\"apisauce\");\n\nvar _encoding = require(\"../utils/encoding\");\n\nvar recoveryUrl = 'https://recovery.brightid.org';\n\nvar BackupService = function () {\n  function BackupService() {\n    (0, _classCallCheck2.default)(this, BackupService);\n    this.recoveryApi = (0, _apisauce.create)({\n      baseURL: recoveryUrl\n    });\n  }\n\n  (0, _createClass2.default)(BackupService, [{\n    key: \"getRecovery\",\n    value: function getRecovery(key1, key2) {\n      var res;\n      return _regenerator.default.async(function getRecovery$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(this.recoveryApi.get(\"/backups/\" + (0, _encoding.b64ToUrlSafeB64)(key1) + \"/\" + (0, _encoding.b64ToUrlSafeB64)(key2)));\n\n            case 2:\n              res = _context.sent;\n              BackupService.throwOnError(res);\n              return _context.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"putRecovery\",\n    value: function putRecovery(key1, key2, data) {\n      var res;\n      return _regenerator.default.async(function putRecovery$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(this.recoveryApi.put(\"/backups/\" + (0, _encoding.b64ToUrlSafeB64)(key1) + \"/\" + (0, _encoding.b64ToUrlSafeB64)(key2), {\n                data: data\n              }));\n\n            case 2:\n              res = _context2.sent;\n              BackupService.throwOnError(res);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"throwOnError\",\n    value: function throwOnError(response) {\n      if (response.ok) {\n        return;\n      }\n\n      if (response.data && response.data.errorMessage) {\n        throw new Error(response.data.errorMessage);\n      }\n\n      console.log(\"backupApi response error: \" + response.status + \" - \" + response.problem);\n      throw new Error(response.problem);\n    }\n  }]);\n  return BackupService;\n}();\n\nvar backupService = new BackupService();\nvar _default = backupService;\nexports.default = _default;","map":{"version":3,"names":["recoveryUrl","BackupService","recoveryApi","create","baseURL","key1","key2","get","b64ToUrlSafeB64","res","throwOnError","data","put","response","ok","errorMessage","Error","console","log","status","problem","backupService"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/api/backupService.ts"],"sourcesContent":["import { create, ApisauceInstance, ApiResponse } from 'apisauce';\nimport { b64ToUrlSafeB64 } from '@/utils/encoding';\n\nconst recoveryUrl = 'https://recovery.brightid.org';\n\nclass BackupService {\n  recoveryApi: ApisauceInstance;\n\n  constructor() {\n    this.recoveryApi = create({\n      baseURL: recoveryUrl,\n    });\n  }\n\n  static throwOnError(response: ApiResponse<any>) {\n    if (response.ok) {\n      return;\n    }\n    if (response.data && response.data.errorMessage) {\n      throw new Error(response.data.errorMessage);\n    }\n    console.log(\n      `backupApi response error: ${response.status} - ${response.problem}`,\n    );\n    throw new Error(response.problem);\n  }\n\n  async getRecovery(key1: string, key2: string) {\n    const res = await this.recoveryApi.get<GetRecoveryRes, ErrRes>(\n      `/backups/${b64ToUrlSafeB64(key1)}/${b64ToUrlSafeB64(key2)}`,\n    );\n    BackupService.throwOnError(res);\n    return res as unknown as GetRecoveryRes;\n  }\n\n  async putRecovery(key1: string, key2: string, data: string) {\n    const res = await this.recoveryApi.put(\n      `/backups/${b64ToUrlSafeB64(key1)}/${b64ToUrlSafeB64(key2)}`,\n      {\n        data,\n      },\n    );\n    BackupService.throwOnError(res);\n  }\n}\n\nconst backupService = new BackupService();\n\nexport default backupService;\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,WAAW,GAAG,+BAApB;;IAEMC,a;EAGJ,yBAAc;IAAA;IACZ,KAAKC,WAAL,GAAmB,IAAAC,gBAAA,EAAO;MACxBC,OAAO,EAAEJ;IADe,CAAP,CAAnB;EAGD;;;;WAeD,qBAAkBK,IAAlB,EAAgCC,IAAhC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,kCACoB,KAAKJ,WAAL,CAAiBK,GAAjB,eACJ,IAAAC,yBAAA,EAAgBH,IAAhB,CADI,SACqB,IAAAG,yBAAA,EAAgBF,IAAhB,CADrB,CADpB;;YAAA;cACQG,GADR;cAIER,aAAa,CAACS,YAAd,CAA2BD,GAA3B;cAJF,iCAKSA,GALT;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAQA,qBAAkBJ,IAAlB,EAAgCC,IAAhC,EAA8CK,IAA9C;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,kCACoB,KAAKT,WAAL,CAAiBU,GAAjB,eACJ,IAAAJ,yBAAA,EAAgBH,IAAhB,CADI,SACqB,IAAAG,yBAAA,EAAgBF,IAAhB,CADrB,EAEhB;gBACEK,IAAI,EAAJA;cADF,CAFgB,CADpB;;YAAA;cACQF,GADR;cAOER,aAAa,CAACS,YAAd,CAA2BD,GAA3B;;YAPF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WArBA,sBAAoBI,QAApB,EAAgD;MAC9C,IAAIA,QAAQ,CAACC,EAAb,EAAiB;QACf;MACD;;MACD,IAAID,QAAQ,CAACF,IAAT,IAAiBE,QAAQ,CAACF,IAAT,CAAcI,YAAnC,EAAiD;QAC/C,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACF,IAAT,CAAcI,YAAxB,CAAN;MACD;;MACDE,OAAO,CAACC,GAAR,gCAC+BL,QAAQ,CAACM,MADxC,WACoDN,QAAQ,CAACO,OAD7D;MAGA,MAAM,IAAIJ,KAAJ,CAAUH,QAAQ,CAACO,OAAnB,CAAN;IACD;;;;;AAqBH,IAAMC,aAAa,GAAG,IAAIpB,aAAJ,EAAtB;eAEeoB,a"},"metadata":{},"sourceType":"script"}