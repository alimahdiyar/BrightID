{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var connectFakeUsers = function _callee(fakeUser1, fakeUser2, api, level) {\n  var timestamp, reportReason, requestProof, user1Promise, user2Promise, ops;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          timestamp = Date.now();\n          user1Promise = api.addConnection(fakeUser1.id, fakeUser2.id, level, timestamp, reportReason, requestProof, fakeUser1);\n          user2Promise = api.addConnection(fakeUser2.id, fakeUser1.id, level, timestamp, reportReason, requestProof, fakeUser2);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all([user1Promise, user2Promise]));\n\n        case 5:\n          ops = _context.sent;\n          return _context.abrupt(\"return\", ops);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/fakeHelper.ts"],"names":["connectFakeUsers","timestamp","Date","user1Promise","api","fakeUser1","fakeUser2","user2Promise","ops","Promise"],"mappings":";AAEA,OAAO,IAAMA,gBAAgB,GAAG,SAAA,OAAA,CAAA,SAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA;EAAA,IAAA,SAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,GAAA;EAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;IAAA,OAAA,CAAA,EAAA;MAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;QAAA,KAAA,CAAA;UAMxBC,SANwB,GAMZC,IAAI,CANQ,GAMZA,EAAZD;UAMAE,YAZwB,GAYTC,GAAG,CAAHA,aAAAA,CACnBC,SAAS,CADUD,EAAAA,EAEnBE,SAAS,CAFUF,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,EAAAA,YAAAA,EAAAA,YAAAA,EAZS,SAYTA,CAAfD;UAWAI,YAvBwB,GAuBTH,GAAG,CAAHA,aAAAA,CACnBE,SAAS,CADUF,EAAAA,EAEnBC,SAAS,CAFUD,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,EAAAA,YAAAA,EAAAA,YAAAA,EAvBS,SAuBTA,CAAfG;UAvBwB,QAAA,CAAA,IAAA,GAAA,CAAA;UAAA,OAAA,mBAAA,CAAA,KAAA,CAiCZE,OAAO,CAAPA,GAAAA,CAAY,CAAA,YAAA,EAjCA,YAiCA,CAAZA,CAjCY,CAAA;;QAAA,KAAA,CAAA;UAiCxBD,GAjCwB,GAAA,QAAA,CAAA,IAiCxBA;UAjCwB,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,GAAA,CAAA;;QAAA,KAAA,CAAA;QAAA,KAAA,KAAA;UAAA,OAAA,QAAA,CAAA,IAAA,EAAA;MAAA;IAAA;EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAzB,CAAA","sourcesContent":["import { NodeApi } from '@/api/brightId';\n\nexport const connectFakeUsers = async (\n  fakeUser1: FakeUser,\n  fakeUser2: FakeUser,\n  api: NodeApi,\n  level: ConnectionLevel,\n) => {\n  const timestamp = Date.now();\n\n  let reportReason;\n  let requestProof;\n\n  // Connect user1 -> user2\n  const user1Promise = api.addConnection(\n    fakeUser1.id,\n    fakeUser2.id,\n    level,\n    timestamp,\n    reportReason,\n    requestProof,\n    fakeUser1,\n  );\n\n  // Connect user2 -> user1\n  const user2Promise = api.addConnection(\n    fakeUser2.id,\n    fakeUser1.id,\n    level,\n    timestamp,\n    reportReason,\n    requestProof,\n    fakeUser2,\n  );\n\n  const ops = await Promise.all([user1Promise, user2Promise]);\n  return ops;\n};\n"]},"metadata":{},"sourceType":"module"}