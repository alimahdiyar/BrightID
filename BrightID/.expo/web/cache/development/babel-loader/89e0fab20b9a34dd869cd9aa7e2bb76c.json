{"ast":null,"code":"if (module.hot) {\n  var lastHash;\n\n  var upToDate = function upToDate() {\n    return lastHash.indexOf(__webpack_hash__) >= 0;\n  };\n\n  var log = require(\"./log\");\n\n  var check = function check() {\n    module.hot.check(true).then(function (updatedModules) {\n      if (!updatedModules) {\n        log(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\n        log(\"warning\", \"[HMR] (Probably because of restarting the webpack-dev-server)\");\n        window.location.reload();\n        return;\n      }\n\n      if (!upToDate()) {\n        check();\n      }\n\n      require(\"./log-apply-result\")(updatedModules, updatedModules);\n\n      if (upToDate()) {\n        log(\"info\", \"[HMR] App is up to date.\");\n      }\n    }).catch(function (err) {\n      var status = module.hot.status();\n\n      if ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n        log(\"warning\", \"[HMR] Cannot apply update. Need to do a full reload!\");\n        log(\"warning\", \"[HMR] \" + log.formatError(err));\n        window.location.reload();\n      } else {\n        log(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n      }\n    });\n  };\n\n  var hotEmitter = require(\"./emitter\");\n\n  hotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n    lastHash = currentHash;\n\n    if (!upToDate() && module.hot.status() === \"idle\") {\n      log(\"info\", \"[HMR] Checking for updates on the server...\");\n      check();\n    }\n  });\n  log(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n  throw new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/webpack/hot/dev-server.js"],"names":["module","upToDate","lastHash","log","require","check","window","status","hotEmitter"],"mappings":"AAKA,IAAIA,MAAM,CAAV,GAAA,EAAgB;EACf,IAAA,QAAA;;EACA,IAAIC,QAAQ,GAAG,SAAA,QAAA,GAAoB;IAClC,OAAOC,QAAQ,CAARA,OAAAA,CAAAA,gBAAAA,KAAP,CAAA;EADD,CAAA;;EAGA,IAAIC,GAAG,GAAGC,OAAV,SAAA;;EACA,IAAIC,KAAK,GAAG,SAAA,KAAA,GAAiB;IAC5BL,MAAM,CAANA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAEO,UAAA,cAAA,EAAyB;MAC9B,IAAI,CAAJ,cAAA,EAAqB;QACpBG,GAAG,CAAA,SAAA,EAAHA,qDAAG,CAAHA;QACAA,GAAG,CAAA,SAAA,EAAHA,+DAAG,CAAHA;QAIAG,MAAM,CAANA,QAAAA,CAAAA,MAAAA;QACA;MAGD;;MAAA,IAAI,CAACL,QAAL,EAAA,EAAiB;QAChBI,KAAK;MAGND;;MAAAA,OAAAA,sBAAAA,CAAAA,cAAAA,EAAAA,cAAAA;;MAEA,IAAIH,QAAJ,EAAA,EAAgB;QACfE,GAAG,CAAA,MAAA,EAAHA,0BAAG,CAAHA;MAED;IAtBFH,CAAAA,EAAAA,KAAAA,CAuBQ,UAAA,GAAA,EAAc;MACpB,IAAIO,MAAM,GAAGP,MAAM,CAANA,GAAAA,CAAb,MAAaA,EAAb;;MACA,IAAI,CAAA,OAAA,EAAA,MAAA,EAAA,OAAA,CAAA,MAAA,KAAJ,CAAA,EAA4C;QAC3CG,GAAG,CAAA,SAAA,EAAHA,sDAAG,CAAHA;QAIAA,GAAG,CAAA,SAAA,EAAY,WAAWA,GAAG,CAAHA,WAAAA,CAA1BA,GAA0BA,CAAvB,CAAHA;QACAG,MAAM,CAANA,QAAAA,CAAAA,MAAAA;MAND,CAAA,MAOO;QACNH,GAAG,CAAA,SAAA,EAAY,0BAA0BA,GAAG,CAAHA,WAAAA,CAAzCA,GAAyCA,CAAtC,CAAHA;MAED;IAnCFH,CAAAA;EADD,CAAA;;EAsCA,IAAIQ,UAAU,GAAGJ,OAAjB,aAAA;;EACAI,UAAU,CAAVA,EAAAA,CAAAA,kBAAAA,EAAkC,UAAA,WAAA,EAAsB;IACvDN,QAAQ,GAARA,WAAAA;;IACA,IAAI,CAACD,QAAD,EAAA,IAAeD,MAAM,CAANA,GAAAA,CAAAA,MAAAA,OAAnB,MAAA,EAAmD;MAClDG,GAAG,CAAA,MAAA,EAAHA,6CAAG,CAAHA;MACAE,KAAK;IAEN;EANDG,CAAAA;EAOAL,GAAG,CAAA,MAAA,EAAHA,6CAAG,CAAHA;AApDD,CAAA,MAqDO;EACN,MAAM,IAAA,KAAA,CAAN,2CAAM,CAAN;AACA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals window __webpack_hash__ */\nif (module.hot) {\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check(true)\n\t\t\t.then(function(updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot apply update. Need to do a full reload!\"\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function(currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n"]},"metadata":{},"sourceType":"script"}