{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { SvgXml } from 'react-native-svg';\nimport { DARK_ORANGE, BLUE, WHITE, BLACK } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { DEVICE_LARGE, DEVICE_IOS } from \"../../utils/deviceConstants\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport keybaseLogo from \"../../static/keybase_logo.svg\";\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SocialItem = function SocialItem(_ref) {\n  var icon = _ref.icon,\n      color = _ref.color,\n      url = _ref.url;\n  return _jsx(TouchableOpacity, {\n    style: styles.socialItem,\n    onPress: function onPress() {\n      return Linking.openURL(url);\n    },\n    children: _jsx(Material, {\n      name: icon,\n      size: DEVICE_LARGE ? 36 : 32,\n      color: color\n    })\n  });\n};\n\nvar KeybaseItem = function KeybaseItem() {\n  return _jsx(TouchableOpacity, {\n    style: styles.socialItem,\n    onPress: function onPress() {\n      return Linking.openURL('https://keybase.io/team/brightid');\n    },\n    children: _jsx(SvgXml, {\n      xml: keybaseLogo,\n      width: DEVICE_LARGE ? 36 : 32,\n      height: DEVICE_LARGE ? 36 : 32\n    })\n  });\n};\n\nexport var ContactUsScreen = function ContactUsScreen() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var headerHeight = useHeaderHeight();\n\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  var isDrawerOpen = useIsDrawerOpen();\n  return _jsxs(View, {\n    style: [styles.container, {\n      marginTop: headerHeight\n    }, !isDrawerOpen && styles.shadow],\n    testID: \"contactUsScreen\",\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: t('contact.title.contactUs')\n    }), _jsxs(View, {\n      style: styles.itemList,\n      children: [_jsx(Text, {\n        style: styles.listHeader,\n        children: t('contact.label.email')\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL('mailto:support@brightid.org');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"support@brightid.org\"\n        })\n      }), _jsx(Text, {\n        style: styles.listHeader,\n        children: t('contact.label.website')\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return Linking.openURL('https://brightid.org');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"https://brightid.org\"\n        })\n      }), _jsx(Text, {\n        style: styles.listHeader,\n        children: t('contact.label.meet')\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          Linking.openURL('https://www.brightid.org/meet');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: t('contact.text.meet')\n        })\n      }), _jsx(Text, {\n        style: styles.listHeader,\n        children: t('contact.label.socialMedia')\n      }), _jsxs(View, {\n        style: styles.socialMedia,\n        children: [_jsx(SocialItem, {\n          icon: \"github\",\n          color: BLACK,\n          url: \"https://github.com/brightid\"\n        }), _jsx(KeybaseItem, {}), _jsx(SocialItem, {\n          icon: \"discord\",\n          color: \"#6E84D3\",\n          url: \"https://discord.gg/GkYM5Jy\"\n        }), _jsx(SocialItem, {\n          icon: \"telegram\",\n          color: \"#39A0DA\",\n          url: \"https://t.me/brightidofficial\"\n        }), _jsx(SocialItem, {\n          icon: \"twitter\",\n          color: \"#52A7E7\",\n          url: \"https://twitter.com/BrightIDProject\"\n        })]\n      }), _jsxs(Text, {\n        style: styles.bottomText,\n        children: [t('contact.text.weAre'), _jsx(Text, {\n          onPress: function onPress() {\n            Linking.openURL('https://github.com/BrightID/BrightID/releases');\n          },\n          style: styles.link,\n          children: t('contact.text.openSource')\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    marginTop: DEVICE_LARGE ? 23 : 20\n  },\n  itemList: {\n    marginHorizontal: 'auto',\n    flex: 1,\n    marginTop: DEVICE_LARGE ? 20 : 15,\n    width: '100%',\n    paddingLeft: DEVICE_LARGE ? 50 : 40\n  },\n  socialItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginBottom: DEVICE_LARGE ? 8 : 6,\n    marginRight: 10\n  },\n  socialName: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    marginLeft: DEVICE_LARGE ? 15 : 12\n  },\n  listHeader: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARK_ORANGE,\n    marginVertical: DEVICE_LARGE ? 20 : 18\n  },\n  socialMedia: {\n    flexDirection: 'row',\n    width: '100%'\n  },\n  bottomText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    marginVertical: DEVICE_LARGE ? 20 : 18\n  },\n  link: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: BLUE\n  }\n});\nexport default ContactUsScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/SideMenu/ContactUsScreen.tsx"],"names":["SocialItem","icon","color","url","styles","Linking","DEVICE_LARGE","KeybaseItem","ContactUsScreen","t","useTranslation","headerHeight","useHeaderHeight","DEVICE_IOS","isDrawerOpen","useIsDrawerOpen","marginTop","StyleSheet","container","backgroundColor","flex","alignItems","justifyContent","borderTopLeftRadius","shadow","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","width","height","title","fontFamily","fontSize","itemList","marginHorizontal","paddingLeft","socialItem","flexDirection","marginBottom","marginRight","socialName","marginLeft","listHeader","marginVertical","socialMedia","bottomText","link"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Linking,\n} from 'react-native';\nimport { SvgXml } from 'react-native-svg';\nimport { DARK_ORANGE, BLUE, WHITE, BLACK } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE, DEVICE_IOS } from '@/utils/deviceConstants';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport keybaseLogo from '@/static/keybase_logo.svg';\nimport { useTranslation } from 'react-i18next';\n\nconst SocialItem = ({ icon, color, url }) => {\n  return (\n    <TouchableOpacity\n      style={styles.socialItem}\n      onPress={() => Linking.openURL(url)}\n    >\n      <Material name={icon} size={DEVICE_LARGE ? 36 : 32} color={color} />\n    </TouchableOpacity>\n  );\n};\n\nconst KeybaseItem = () => (\n  <TouchableOpacity\n    style={styles.socialItem}\n    onPress={() => Linking.openURL('https://keybase.io/team/brightid')}\n  >\n    <SvgXml\n      xml={keybaseLogo}\n      width={DEVICE_LARGE ? 36 : 32}\n      height={DEVICE_LARGE ? 36 : 32}\n    />\n  </TouchableOpacity>\n);\n\nexport const ContactUsScreen = function () {\n  const { t } = useTranslation();\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n  const isDrawerOpen = useIsDrawerOpen();\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { marginTop: headerHeight },\n        !isDrawerOpen && styles.shadow,\n      ]}\n      testID=\"contactUsScreen\"\n    >\n      <Text style={styles.title}>{t('contact.title.contactUs')}</Text>\n      <View style={styles.itemList}>\n        <Text style={styles.listHeader}>{t('contact.label.email')}</Text>\n        <TouchableOpacity\n          onPress={() => Linking.openURL('mailto:support@brightid.org')}\n        >\n          <Text style={styles.link}>support@brightid.org</Text>\n        </TouchableOpacity>\n        <Text style={styles.listHeader}>{t('contact.label.website')}</Text>\n        <TouchableOpacity\n          onPress={() => Linking.openURL('https://brightid.org')}\n        >\n          <Text style={styles.link}>https://brightid.org</Text>\n        </TouchableOpacity>\n        <Text style={styles.listHeader}>{t('contact.label.meet')}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            Linking.openURL('https://www.brightid.org/meet');\n          }}\n        >\n          <Text style={styles.link}>{t('contact.text.meet')}</Text>\n        </TouchableOpacity>\n        <Text style={styles.listHeader}>{t('contact.label.socialMedia')}</Text>\n        <View style={styles.socialMedia}>\n          <SocialItem\n            icon=\"github\"\n            color={BLACK}\n            url=\"https://github.com/brightid\"\n          />\n          <KeybaseItem />\n          <SocialItem\n            icon=\"discord\"\n            color=\"#6E84D3\"\n            url=\"https://discord.gg/GkYM5Jy\"\n          />\n          <SocialItem\n            icon=\"telegram\"\n            color=\"#39A0DA\"\n            url=\"https://t.me/brightidofficial\"\n          />\n          <SocialItem\n            icon=\"twitter\"\n            color=\"#52A7E7\"\n            url=\"https://twitter.com/BrightIDProject\"\n          />\n        </View>\n\n        <Text style={styles.bottomText}>\n          {t('contact.text.weAre')}\n          <Text\n            onPress={() => {\n              Linking.openURL('https://github.com/BrightID/BrightID/releases');\n            }}\n            style={styles.link}\n          >\n            {t('contact.text.openSource')}\n          </Text>\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: WHITE,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    borderTopLeftRadius: DEVICE_LARGE ? 50 : 40,\n  },\n  shadow: {\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    marginTop: DEVICE_LARGE ? 23 : 20,\n  },\n  itemList: {\n    marginHorizontal: 'auto',\n    flex: 1,\n    marginTop: DEVICE_LARGE ? 20 : 15,\n    width: '100%',\n    paddingLeft: DEVICE_LARGE ? 50 : 40,\n  },\n  socialItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginBottom: DEVICE_LARGE ? 8 : 6,\n    marginRight: 10,\n  },\n  socialName: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    marginLeft: DEVICE_LARGE ? 15 : 12,\n  },\n  listHeader: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARK_ORANGE,\n    marginVertical: DEVICE_LARGE ? 20 : 18,\n  },\n  socialMedia: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottomText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    marginVertical: DEVICE_LARGE ? 20 : 18,\n  },\n  link: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: BLUE,\n  },\n});\n\nexport default ContactUsScreen;\n"]},"metadata":{},"sourceType":"module"}