{"ast":null,"code":"import useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Svg, { Path } from 'react-native-svg';\nimport { DARKER_GREY } from \"../../theme/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FullScreenHighlightBox = function FullScreenHighlightBox(_ref) {\n  var onPress = _ref.onPress,\n      br = _ref.br,\n      innerHeight = _ref.innerHeight,\n      innerWidth = _ref.innerWidth,\n      innerX = _ref.innerX,\n      innerY = _ref.innerY;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var outerGreyBox = \"M0 0 V\" + height + \" H\" + width + \" V0Z\";\n  var urc = \"a\" + br + \",\" + br + \" 0 0 1 \" + br + \",\" + br;\n  var lrc = \"a\" + br + \",\" + br + \" 0 0 1 -\" + br + \",\" + br;\n  var llc = \"a\" + br + \",\" + br + \" 0 0 1 -\" + br + \",-\" + br;\n  var ulc = \"a\" + br + \",\" + br + \" 0 0 1 \" + br + \",-\" + br;\n  var innerHighlightBox = \"M\" + innerX + \" \" + innerY + \" h\" + innerWidth + \" \" + urc + \" v\" + innerHeight + \" \" + lrc + \" h\" + -innerWidth + \" \" + llc + \" v\" + -innerHeight + \" \" + ulc + \" z\";\n  return _jsx(Svg, {\n    testID: \"FullScreenHighlightBox\",\n    width: width,\n    height: height,\n    viewBox: \"0 0 \" + width + \" \" + height,\n    fill: \"none\",\n    onPress: onPress,\n    children: _jsx(Path, {\n      d: outerGreyBox + \" \" + innerHighlightBox,\n      fill: DARKER_GREY,\n      fillOpacity: 0.8,\n      fillRule: \"evenodd\"\n    })\n  });\n};\n\nexport default FullScreenHighlightBox;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/FullScreenHighlightBox.tsx"],"names":["FullScreenHighlightBox","onPress","br","innerHeight","innerWidth","innerX","innerY","width","height","useWindowDimensions","outerGreyBox","urc","lrc","llc","ulc","innerHighlightBox"],"mappings":";AAEA,OAAA,GAAA,IAAA,IAAA,QAAA,kBAAA;AAEA,SAAA,WAAA;;;AAEA,IAAMA,sBAAsB,GAAtBA,SAAAA,sBAAAA,CAAyB,IAAzBA,EAOA;EANJC,IAAAA,OAMI,GAAA,IAAA,CANJA,OAAAA;EAAAA,IACAC,EAKI,GAAA,IAAA,CALJA,EADAD;EAAAA,IAEAE,WAII,GAAA,IAAA,CAJJA,WAFAF;EAAAA,IAGAG,UAGI,GAAA,IAAA,CAHJA,UAHAH;EAAAA,IAIAI,MAEI,GAAA,IAAA,CAFJA,MAJAJ;EAAAA,IAKAK,MACI,GAAA,IAAA,CADJA,MALAL;;EAYA,IAAA,oBAAA,GAA0BQ,mBAA1B,EAAA;EAAA,IAAQF,KAAR,GAAA,oBAAA,CAAA,KAAA;EAAA,IAAeC,MAAf,GAAA,oBAAA,CAAA,MAAA;;EACA,IAAME,YAAY,GAAA,WAAA,MAAA,GAAA,IAAA,GAAA,KAAA,GAAlB,MAAA;EASA,IAAMC,GAAG,GAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,GAAA,GAAT,EAAA;EAEA,IAAMC,GAAG,GAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,UAAA,GAAA,EAAA,GAAA,GAAA,GAAT,EAAA;EAEA,IAAMC,GAAG,GAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,UAAA,GAAA,EAAA,GAAA,IAAA,GAAT,EAAA;EAEA,IAAMC,GAAG,GAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,IAAA,GAAT,EAAA;EAEA,IAAMC,iBAAiB,GAAA,MAAA,MAAA,GAAA,GAAA,GAAA,MAAA,GAAA,IAAA,GAAA,UAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAyE,CAAzE,UAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAgG,CAAhG,WAAA,GAAA,GAAA,GAAA,GAAA,GAAvB,IAAA;EAEA,OACE,IAAA,CAAA,GAAA,EAAA;IACE,MAAM,EADR,wBAAA;IAEE,KAAK,EAFP,KAAA;IAGE,MAAM,EAHR,MAAA;IAIE,OAAO,EAAA,SAAA,KAAA,GAAA,GAAA,GAJT,MAAA;IAKE,IAAI,EALN,MAAA;IAME,OAAO,EANT,OAAA;IAAA,QAAA,EAQE,IAAA,CAAA,IAAA,EAAA;MACE,CAAC,EAAKL,YAAL,GAAA,GAAKA,GADR,iBAAA;MAEE,IAAI,EAFN,WAAA;MAGE,WAAW,EAHb,GAAA;MAIE,QAAQ,EAbd;IASI,CAAA;EARF,CAAA,CADF;AAjCF,CAAA;;AAoDA,eAAA,sBAAA","sourcesContent":["import React from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport Svg, { Path } from 'react-native-svg';\n\nimport { DARKER_GREY } from '@/theme/colors';\n\nconst FullScreenHighlightBox = ({\n  onPress,\n  br,\n  innerHeight,\n  innerWidth,\n  innerX,\n  innerY,\n}) => {\n  /**\n   * Path for full height / width dark grey box that fills entire screen\n   * drawn counter clockwise\n   */\n\n  const { width, height } = useWindowDimensions();\n  const outerGreyBox = `M0 0 V${height} H${width} V0Z`;\n\n  /**\n   * Path for the transparent highlight box\n   * drawn clockwise to cut a hole in the outer container\n   *  For additional info on how to cut shapes out of shapes with SVG:\n   * https://stackoverflow.com/questions/1983256/how-can-i-cut-one-shape-inside-another/7716523#7716523\n   */\n  // upper right corner border radius\n  const urc = `a${br},${br} 0 0 1 ${br},${br}`;\n  // lower right corner border radius\n  const lrc = `a${br},${br} 0 0 1 -${br},${br}`;\n  // lower left corner border radius\n  const llc = `a${br},${br} 0 0 1 -${br},-${br}`;\n  // lower left corner border radius\n  const ulc = `a${br},${br} 0 0 1 ${br},-${br}`;\n\n  const innerHighlightBox = `M${innerX} ${innerY} h${innerWidth} ${urc} v${innerHeight} ${lrc} h${-innerWidth} ${llc} v${-innerHeight} ${ulc} z`;\n\n  return (\n    <Svg\n      testID=\"FullScreenHighlightBox\"\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n      fill=\"none\"\n      onPress={onPress}\n    >\n      <Path\n        d={`${outerGreyBox} ${innerHighlightBox}`}\n        fill={DARKER_GREY}\n        fillOpacity={0.8}\n        fillRule=\"evenodd\"\n      />\n    </Svg>\n  );\n};\n\nexport default FullScreenHighlightBox;\n"]},"metadata":{},"sourceType":"module"}