{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect, useContext } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport store, { useDispatch, useSelector } from \"../../../store\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { addDevice, addOperation, selectOperationByHash } from \"../../../actions\";\nimport ChannelAPI from \"../../../api/channelService\";\nimport { uploadAllInfoAfter } from \"./thunks/channelUploadThunks\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { operation_states } from \"../../../utils/constants\";\nimport { AddSigningKey } from \"./AddSigningKey\";\nimport { UploadData } from \"./UploadData\";\nimport { loadRecoveryData } from \"../../../utils/recovery\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AddSigningKeySteps;\n\n(function (AddSigningKeySteps) {\n  AddSigningKeySteps[AddSigningKeySteps[\"WAITING\"] = 0] = \"WAITING\";\n  AddSigningKeySteps[AddSigningKeySteps[\"DOWNLOADING\"] = 1] = \"DOWNLOADING\";\n  AddSigningKeySteps[AddSigningKeySteps[\"WAITING_OPERATION\"] = 2] = \"WAITING_OPERATION\";\n  AddSigningKeySteps[AddSigningKeySteps[\"OPERATION_APPLIED\"] = 3] = \"OPERATION_APPLIED\";\n  AddSigningKeySteps[AddSigningKeySteps[\"ERROR\"] = 4] = \"ERROR\";\n})(AddSigningKeySteps || (AddSigningKeySteps = {}));\n\nexport var UploadDataSteps;\n\n(function (UploadDataSteps) {\n  UploadDataSteps[UploadDataSteps[\"WAITING\"] = 0] = \"WAITING\";\n  UploadDataSteps[UploadDataSteps[\"UPLOADING\"] = 1] = \"UPLOADING\";\n  UploadDataSteps[UploadDataSteps[\"COMPLETE\"] = 2] = \"COMPLETE\";\n  UploadDataSteps[UploadDataSteps[\"ERROR\"] = 3] = \"ERROR\";\n})(UploadDataSteps || (UploadDataSteps = {}));\n\nexport var AddDeviceScreen = function AddDeviceScreen() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var url = useSelector(function (state) {\n    var _state$recoveryData$c;\n\n    return (_state$recoveryData$c = state.recoveryData.channel) == null ? void 0 : _state$recoveryData$c.url;\n  });\n  var aesKey = useSelector(function (state) {\n    return state.recoveryData.aesKey;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      deviceName = _useState2[0],\n      setDeviceName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      signingKey = _useState4[0],\n      setSigningKey = _useState4[1];\n\n  var api = useContext(NodeApiContext);\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addSigningKeyOpHash = _useState6[0],\n      setSigningKeyOpHash = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addSigningKeyError = _useState8[0],\n      setAddSigningKeyError = _useState8[1];\n\n  var addSigningKeyOp = useSelector(function (state) {\n    return selectOperationByHash(state, addSigningKeyOpHash);\n  });\n\n  var _useState9 = useState(AddSigningKeySteps.WAITING),\n      _useState10 = _slicedToArray(_useState9, 2),\n      addSigningKeyStep = _useState10[0],\n      setAddSigningKeyStep = _useState10[1];\n\n  var _useState11 = useState(UploadDataSteps.WAITING),\n      _useState12 = _slicedToArray(_useState11, 2),\n      uploadDataStep = _useState12[0],\n      setUploadDataStep = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      uploadDataError = _useState14[0],\n      setUploadDataError = _useState14[1];\n\n  var handleSubmit = function _callee() {\n    var channelApi, _await$loadRecoveryDa, _signingKey, op;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setAddSigningKeyStep(AddSigningKeySteps.DOWNLOADING);\n            channelApi = new ChannelAPI(url.href);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(loadRecoveryData(channelApi, aesKey));\n\n          case 5:\n            _await$loadRecoveryDa = _context.sent;\n            _signingKey = _await$loadRecoveryDa.signingKey;\n            console.log(\"adding new signing key\");\n            setSigningKey(_signingKey);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(api.addSigningKey(_signingKey));\n\n          case 11:\n            op = _context.sent;\n            store.dispatch(addOperation(op));\n            setSigningKeyOpHash(op.hash);\n            setAddSigningKeyStep(AddSigningKeySteps.WAITING_OPERATION);\n            _context.next = 22;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error setting signing key: \" + _context.t0.message);\n            setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n            setAddSigningKeyError(_context.t0.message);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  useEffect(function () {\n    var runEffect = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"Starting upload of local info\");\n              _context2.prev = 1;\n              setUploadDataStep(UploadDataSteps.UPLOADING);\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(uploadAllInfoAfter(0));\n\n            case 5:\n              setUploadDataStep(UploadDataSteps.COMPLETE);\n              console.log(\"Finished upload of local info\");\n              _context2.next = 14;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"Error uploading data: \" + _context2.t0.message);\n              setUploadDataStep(UploadDataSteps.ERROR);\n              setUploadDataError(_context2.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    };\n\n    if (addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED && uploadDataStep === UploadDataSteps.WAITING) {\n      runEffect();\n    }\n  }, [addSigningKeyStep, uploadDataStep]);\n  useEffect(function () {\n    if (addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED && uploadDataStep === UploadDataSteps.COMPLETE) {\n      console.log(\"Completed add device workflow!\");\n      dispatch(addDevice({\n        name: deviceName,\n        signingKey: signingKey,\n        active: true\n      }));\n      navigation.navigate('Devices');\n    }\n  }, [addSigningKeyStep, deviceName, dispatch, navigation, signingKey, uploadDataStep]);\n  useEffect(function () {\n    if (addSigningKeyOp && addSigningKeyStep === AddSigningKeySteps.WAITING_OPERATION) {\n      switch (addSigningKeyOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          break;\n\n        case operation_states.APPLIED:\n          setAddSigningKeyStep(AddSigningKeySteps.OPERATION_APPLIED);\n          setSigningKeyOpHash('');\n          break;\n\n        case operation_states.FAILED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation could not be applied');\n          setSigningKeyOpHash('');\n          break;\n\n        case operation_states.EXPIRED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation timed out');\n          setSigningKeyOpHash('');\n          break;\n\n        default:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Unhandled operation state');\n          setSigningKeyOpHash('');\n      }\n    }\n  }, [addSigningKeyOp, addSigningKeyStep]);\n  useEffect(function () {\n    var showConfirmDialog = function showConfirmDialog() {\n      return Alert.alert(t('common.alert.title.pleaseConfirm'), t('devices.alert.confirmAdd'), [{\n        text: t('common.alert.yes'),\n        onPress: function onPress() {\n          resetFlow();\n        }\n      }, {\n        text: t('common.alert.no'),\n        onPress: function onPress() {\n          navigation.navigate('Home');\n        }\n      }]);\n    };\n\n    showConfirmDialog();\n  }, []);\n\n  var resetFlow = function resetFlow() {\n    setAddSigningKeyStep(AddSigningKeySteps.WAITING);\n    setUploadDataStep(UploadDataSteps.WAITING);\n    setAddSigningKeyError('');\n    setUploadDataError('');\n  };\n\n  var submitEnabled = deviceName.length >= 3 && addSigningKeyStep === AddSigningKeySteps.WAITING && uploadDataStep === UploadDataSteps.WAITING;\n  var pendingSubmit = addSigningKeyStep === AddSigningKeySteps.WAITING && uploadDataStep === UploadDataSteps.WAITING;\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: WHITE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(View, {\n      style: styles.container,\n      testID: \"AddDeviceScreen\",\n      children: [pendingSubmit && _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: styles.descContainer,\n          children: _jsx(Text, {\n            style: styles.registerText,\n            children: t('devices.text.whatsDeviceName')\n          })\n        }), _jsx(View, {\n          style: styles.midContainer,\n          children: _jsx(TextInput, {\n            testID: \"editDeviceName\",\n            onChangeText: setDeviceName,\n            value: deviceName,\n            placeholder: t('devices.placeholder.deviceName'),\n            placeholderTextColor: DARKER_GREY,\n            style: styles.textInput,\n            autoCapitalize: \"words\",\n            autoCorrect: false,\n            textContentType: \"name\",\n            underlineColorAndroid: \"transparent\",\n            blurOnSubmit: true\n          })\n        }), _jsx(View, {\n          style: styles.submitContainer,\n          children: _jsx(TouchableOpacity, {\n            style: [styles.submitBtn, {\n              opacity: submitEnabled ? 1 : 0.7\n            }],\n            onPress: handleSubmit,\n            accessibilityLabel: t('devices.button.submit'),\n            disabled: !submitEnabled,\n            testID: \"submitDeviceName\",\n            children: _jsx(Text, {\n              style: styles.submitBtnText,\n              children: t('devices.button.submit')\n            })\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.progressContainer,\n        children: addSigningKeyStep !== AddSigningKeySteps.WAITING && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.addSigningKeyContainer,\n            children: _jsx(AddSigningKey, {\n              currentStep: addSigningKeyStep,\n              errorMessage: addSigningKeyError\n            })\n          }), _jsx(View, {\n            style: styles.divider\n          }), _jsx(View, {\n            style: styles.uploadDataContainer,\n            children: _jsx(UploadData, {\n              currentStep: uploadDataStep,\n              errorMessage: uploadDataError\n            })\n          })]\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2\n  },\n  waitingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85\n  },\n  midContainer: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  addSigningKeyContainer: {},\n  uploadDataContainer: {},\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK\n  },\n  progressContainer: {\n    marginTop: DEVICE_LARGE ? 50 : 40\n  }\n});\nexport default AddDeviceScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddDeviceScreen.tsx"],"names":["AddSigningKeySteps","UploadDataSteps","AddDeviceScreen","dispatch","useDispatch","navigation","useNavigation","t","useTranslation","url","useSelector","state","aesKey","deviceName","setDeviceName","useState","signingKey","setSigningKey","api","useContext","addSigningKeyOpHash","setSigningKeyOpHash","addSigningKeyError","setAddSigningKeyError","addSigningKeyOp","selectOperationByHash","addSigningKeyStep","setAddSigningKeyStep","uploadDataStep","setUploadDataStep","uploadDataError","setUploadDataError","handleSubmit","channelApi","loadRecoveryData","console","op","store","addOperation","useEffect","runEffect","uploadAllInfoAfter","addDevice","name","active","operation_states","showConfirmDialog","Alert","text","onPress","resetFlow","submitEnabled","pendingSubmit","styles","opacity","StyleSheet","orangeTop","backgroundColor","height","DEVICE_LARGE","width","zIndex","container","flex","borderTopLeftRadius","marginTop","overflow","waitingContainer","alignItems","justifyContent","descContainer","midContainer","registerText","fontFamily","fontSize","textAlign","lineHeight","textInput","color","borderBottomWidth","borderBottomColor","paddingBottom","addSigningKeyContainer","uploadDataContainer","submitContainer","submitBtn","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","submitBtnText","divider","marginBottom","borderColor","progressContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n  Alert,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation } from '@react-navigation/native';\nimport store, { useDispatch, useSelector } from '@/store';\nimport { fontSize } from '@/theme/fonts';\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { addDevice, addOperation, selectOperationByHash } from '@/actions';\nimport ChannelAPI from '@/api/channelService';\nimport { uploadAllInfoAfter } from './thunks/channelUploadThunks';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { operation_states } from '@/utils/constants';\nimport { AddSigningKey } from '@/components/Onboarding/ImportFlow/AddSigningKey';\nimport { UploadData } from '@/components/Onboarding/ImportFlow/UploadData';\nimport { loadRecoveryData } from '@/utils/recovery';\n\n/**\n * Screen for adding a new device\n */\n\nexport enum AddSigningKeySteps {\n  WAITING, // not yet started\n  DOWNLOADING, // open channel and download signing key data from other device/client\n  WAITING_OPERATION, // Op to add signing key submitted to backend but not yet applied\n  OPERATION_APPLIED, // op successfully applied in backend\n  ERROR,\n}\n\nexport enum UploadDataSteps {\n  WAITING, // upload not yet started\n  UPLOADING, // upload of data in progress\n  COMPLETE, // all data uploaded\n  ERROR,\n}\n\nexport const AddDeviceScreen = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n  const url = useSelector((state) => state.recoveryData.channel?.url);\n  const aesKey = useSelector((state) => state.recoveryData.aesKey);\n  const [deviceName, setDeviceName] = useState('');\n  const [signingKey, setSigningKey] = useState('');\n  const api = useContext(NodeApiContext);\n  const [addSigningKeyOpHash, setSigningKeyOpHash] = useState<string>('');\n  const [addSigningKeyError, setAddSigningKeyError] = useState('');\n  const addSigningKeyOp = useSelector((state) =>\n    selectOperationByHash(state, addSigningKeyOpHash),\n  );\n  const [addSigningKeyStep, setAddSigningKeyStep] = useState(\n    AddSigningKeySteps.WAITING,\n  );\n  const [uploadDataStep, setUploadDataStep] = useState(UploadDataSteps.WAITING);\n  const [uploadDataError, setUploadDataError] = useState('');\n\n  const handleSubmit = async () => {\n    try {\n      setAddSigningKeyStep(AddSigningKeySteps.DOWNLOADING);\n      const channelApi = new ChannelAPI(url.href);\n      const { signingKey } = await loadRecoveryData(channelApi, aesKey);\n      console.log(`adding new signing key`);\n      setSigningKey(signingKey);\n      const op = await api.addSigningKey(signingKey);\n      store.dispatch(addOperation(op));\n      setSigningKeyOpHash(op.hash);\n      setAddSigningKeyStep(AddSigningKeySteps.WAITING_OPERATION);\n    } catch (err) {\n      console.log(`Error setting signing key: ${err.message}`);\n      setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n      setAddSigningKeyError(err.message);\n    }\n  };\n\n  // start data upload as soon as signing keys have been added\n  useEffect(() => {\n    const runEffect = async () => {\n      console.log(`Starting upload of local info`);\n      try {\n        setUploadDataStep(UploadDataSteps.UPLOADING);\n        await uploadAllInfoAfter(0);\n        setUploadDataStep(UploadDataSteps.COMPLETE);\n        console.log(`Finished upload of local info`);\n      } catch (err) {\n        console.log(`Error uploading data: ${err.message}`);\n        setUploadDataStep(UploadDataSteps.ERROR);\n        setUploadDataError(err.message);\n      }\n    };\n    if (\n      addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED &&\n      uploadDataStep === UploadDataSteps.WAITING\n    ) {\n      runEffect();\n    }\n  }, [addSigningKeyStep, uploadDataStep]);\n\n  // track overall progress\n  useEffect(() => {\n    if (\n      addSigningKeyStep === AddSigningKeySteps.OPERATION_APPLIED &&\n      uploadDataStep === UploadDataSteps.COMPLETE\n    ) {\n      console.log(`Completed add device workflow!`);\n      // add new device to local storage and navigate to device screen\n      dispatch(addDevice({ name: deviceName, signingKey, active: true }));\n      navigation.navigate('Devices');\n    }\n  }, [\n    addSigningKeyStep,\n    deviceName,\n    dispatch,\n    navigation,\n    signingKey,\n    uploadDataStep,\n  ]);\n\n  // track addSigningKey operation status\n  useEffect(() => {\n    if (\n      addSigningKeyOp &&\n      addSigningKeyStep === AddSigningKeySteps.WAITING_OPERATION\n    ) {\n      switch (addSigningKeyOp.state) {\n        case operation_states.UNKNOWN:\n        case operation_states.INIT:\n        case operation_states.SENT:\n          // op being processed. do nothing.\n          break;\n        case operation_states.APPLIED:\n          setAddSigningKeyStep(AddSigningKeySteps.OPERATION_APPLIED);\n          setSigningKeyOpHash('');\n          break;\n        case operation_states.FAILED:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation could not be applied');\n          setSigningKeyOpHash('');\n          break;\n        case operation_states.EXPIRED:\n          // operation did not get applied within time window. Abort and show error.\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Operation timed out');\n          setSigningKeyOpHash('');\n          break;\n        default:\n          setAddSigningKeyStep(AddSigningKeySteps.ERROR);\n          setAddSigningKeyError('Unhandled operation state');\n          setSigningKeyOpHash('');\n      }\n    }\n  }, [addSigningKeyOp, addSigningKeyStep]);\n\n  useEffect(() => {\n    const showConfirmDialog = () => {\n      return Alert.alert(\n        t('common.alert.title.pleaseConfirm'),\n        t('devices.alert.confirmAdd'),\n        [\n          {\n            text: t('common.alert.yes'),\n            onPress: () => {\n              resetFlow();\n            },\n          },\n          {\n            text: t('common.alert.no'),\n            onPress: () => {\n              navigation.navigate('Home');\n            },\n          },\n        ],\n      );\n    };\n    showConfirmDialog();\n  }, []);\n\n  const resetFlow = () => {\n    setAddSigningKeyStep(AddSigningKeySteps.WAITING);\n    setUploadDataStep(UploadDataSteps.WAITING);\n    setAddSigningKeyError('');\n    setUploadDataError('');\n  };\n\n  const submitEnabled =\n    deviceName.length >= 3 &&\n    addSigningKeyStep === AddSigningKeySteps.WAITING &&\n    uploadDataStep === UploadDataSteps.WAITING;\n\n  const pendingSubmit =\n    addSigningKeyStep === AddSigningKeySteps.WAITING &&\n    uploadDataStep === UploadDataSteps.WAITING;\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"dark-content\"\n        backgroundColor={WHITE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"AddDeviceScreen\">\n        {pendingSubmit && (\n          <>\n            <View style={styles.descContainer}>\n              <Text style={styles.registerText}>\n                {t('devices.text.whatsDeviceName')}\n              </Text>\n            </View>\n            <View style={styles.midContainer}>\n              <TextInput\n                testID=\"editDeviceName\"\n                onChangeText={setDeviceName}\n                value={deviceName}\n                placeholder={t('devices.placeholder.deviceName')}\n                placeholderTextColor={DARKER_GREY}\n                style={styles.textInput}\n                autoCapitalize=\"words\"\n                autoCorrect={false}\n                textContentType=\"name\"\n                underlineColorAndroid=\"transparent\"\n                blurOnSubmit={true}\n              />\n            </View>\n            <View style={styles.submitContainer}>\n              <TouchableOpacity\n                style={[styles.submitBtn, { opacity: submitEnabled ? 1 : 0.7 }]}\n                onPress={handleSubmit}\n                accessibilityLabel={t('devices.button.submit')}\n                disabled={!submitEnabled}\n                testID=\"submitDeviceName\"\n              >\n                <Text style={styles.submitBtnText}>\n                  {t('devices.button.submit')}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </>\n        )}\n        <View style={styles.progressContainer}>\n          {addSigningKeyStep !== AddSigningKeySteps.WAITING && (\n            <>\n              <View style={styles.addSigningKeyContainer}>\n                <AddSigningKey\n                  currentStep={addSigningKeyStep}\n                  errorMessage={addSigningKeyError}\n                />\n              </View>\n              <View style={styles.divider} />\n              <View style={styles.uploadDataContainer}>\n                <UploadData\n                  currentStep={uploadDataStep}\n                  errorMessage={uploadDataError}\n                />\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2,\n  },\n  waitingContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85,\n  },\n  midContainer: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24,\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10,\n  },\n  addSigningKeyContainer: {\n    // marginTop: DEVICE_LARGE ? 25 : 20,\n    // minHeight: '25%',\n  },\n  uploadDataContainer: {\n    // height: '50%',\n  },\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n  divider: {\n    marginTop: DEVICE_LARGE ? 40 : 20,\n    marginBottom: DEVICE_LARGE ? 30 : 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: BLACK,\n  },\n  progressContainer: {\n    marginTop: DEVICE_LARGE ? 50 : 40,\n  },\n});\n\nexport default AddDeviceScreen;\n"]},"metadata":{},"sourceType":"module"}