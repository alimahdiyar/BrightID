{"ast":null,"code":"import invariant from 'fbjs/lib/invariant';\n\nvar twoArgumentPooler = function twoArgumentPooler(a1, a2) {\n  var Klass = this;\n\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar standardReleaser = function standardReleaser(instance) {\n  var Klass = this;\n  instance.destructor();\n\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = twoArgumentPooler;\n\nvar addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  twoArgumentPooler: twoArgumentPooler\n};\nexport default PooledClass;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/vendor/react-native/PooledClass/index.js"],"names":["twoArgumentPooler","Klass","instance","standardReleaser","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","NewKlass","pooler","PooledClass"],"mappings":"AAUA,OAAA,SAAA,MAAA,oBAAA;;AAEA,IAAIA,iBAAiB,GAAG,SAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,EAAmC;EACzD,IAAIC,KAAK,GAAT,IAAA;;EAEA,IAAIA,KAAK,CAALA,YAAAA,CAAJ,MAAA,EAA+B;IAC7B,IAAIC,QAAQ,GAAGD,KAAK,CAALA,YAAAA,CAAf,GAAeA,EAAf;IACAA,KAAK,CAALA,IAAAA,CAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA;IACA,OAAA,QAAA;EAHF,CAAA,MAIO;IACL,OAAO,IAAA,KAAA,CAAA,EAAA,EAAP,EAAO,CAAP;EAEH;AAVD,CAAA;;AAYA,IAAIE,gBAAgB,GAAG,SAAA,gBAAA,CAAA,QAAA,EAAoC;EACzD,IAAIF,KAAK,GAAT,IAAA;EACAC,QAAQ,CAARA,UAAAA;;EAEA,IAAID,KAAK,CAALA,YAAAA,CAAAA,MAAAA,GAA4BA,KAAK,CAArC,QAAA,EAAgD;IAC9CA,KAAK,CAALA,YAAAA,CAAAA,IAAAA,CAAAA,QAAAA;EAEH;AAPD,CAAA;;AASA,IAAIG,iBAAiB,GAArB,EAAA;AACA,IAAIC,cAAc,GAAlB,iBAAA;;AAWA,IAAIC,YAAY,GAAG,SAAA,YAAA,CAAA,eAAA,EAAA,MAAA,EAA+C;EAGhE,IAAIC,QAAQ,GAAZ,eAAA;EACAA,QAAQ,CAARA,YAAAA,GAAAA,EAAAA;EACAA,QAAQ,CAARA,SAAAA,GAAqBC,MAAM,IAA3BD,cAAAA;;EAEA,IAAI,CAACA,QAAQ,CAAb,QAAA,EAAwB;IACtBA,QAAQ,CAARA,QAAAA,GAAAA,iBAAAA;EAGFA;;EAAAA,QAAQ,CAARA,OAAAA,GAAAA,gBAAAA;EACA,OAAA,QAAA;AAZF,CAAA;;AAeA,IAAIE,WAAW,GAAG;EAChBH,YAAY,EADI,YAAA;EAEhBN,iBAAiB,EAFnB;AAAkB,CAAlB;AAIA,eAAA,WAAA","sourcesContent":["/* eslint-disable */\n\n/**\n * Copyright 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.0.0\n */\nimport invariant from 'fbjs/lib/invariant';\n\nvar twoArgumentPooler = function twoArgumentPooler(a1, a2) {\n  var Klass = this;\n\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar standardReleaser = function standardReleaser(instance) {\n  var Klass = this;\n  instance.destructor();\n\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = twoArgumentPooler;\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\n\nvar addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  twoArgumentPooler: twoArgumentPooler\n};\nexport default PooledClass;"]},"metadata":{},"sourceType":"module"}