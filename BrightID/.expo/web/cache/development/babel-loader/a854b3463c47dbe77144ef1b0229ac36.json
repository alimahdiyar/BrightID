{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserTasks = void 0;\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _connectionsSlice = require(\"../../reducer/connectionsSlice\");\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _appsSlice = require(\"../../reducer/appsSlice\");\n\nvar UserTasks = {\n  make_first_connection: {\n    id: 'make_first_connection',\n    sortValue: 10,\n    title: _i18next.default.t(\"achievements.makeFirstConnection.title\"),\n    description: _i18next.default.t(\"achievements.makeFirstConnection.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn: function checkFn(state) {\n      return (0, _connectionsSlice.connectionTotal)(state) > 0;\n    }\n  },\n  link_app: {\n    id: 'link_app',\n    sortValue: 20,\n    title: _i18next.default.t(\"achievements.linkApp.title\"),\n    description: _i18next.default.t(\"achievements.linkApp.description\"),\n    url: 'https://apps.brightid.org/',\n    checkFn: function checkFn(state) {\n      var linkedContexts = (0, _appsSlice.linkedContextTotal)(state);\n      return linkedContexts > 0;\n    }\n  },\n  get_sponsored: {\n    id: 'get_sponsored',\n    sortValue: 30,\n    title: _i18next.default.t(\"achievements.getSponsored.title\"),\n    description: _i18next.default.t(\"achievements.getSponsored.description\"),\n    url: 'https://apps.brightid.org/',\n    checkFn: function checkFn(state) {\n      return state.user.isSponsored || state.user.isSponsoredv6;\n    }\n  },\n  make_two_connection: {\n    id: 'make_two_connection',\n    sortValue: 50,\n    title: _i18next.default.t(\"achievements.makeTwoConnection.title\"),\n    description: _i18next.default.t(\"achievements.makeTwoConnection.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn: function checkFn(state) {\n      return (0, _connectionsSlice.connectionTotal)(state) > 1;\n    }\n  },\n  make_three_connection: {\n    id: 'make_three_connection',\n    sortValue: 60,\n    title: _i18next.default.t(\"achievements.makeThreeConnection.title\"),\n    description: _i18next.default.t(\"achievements.makeThreeConnection.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn: function checkFn(state) {\n      return (0, _connectionsSlice.connectionTotal)(state) > 2;\n    }\n  },\n  setup_backup: {\n    id: 'setup_backup',\n    sortValue: 65,\n    title: _i18next.default.t(\"achievements.setupBackup.title\", 'Set backup password'),\n    description: _i18next.default.t(\"achievements.setupBackup.description\", 'Set password to enable encrypted backup of your data'),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn: function checkFn(state) {\n      return !!state.user.password;\n    }\n  },\n  setup_recovery_connections: {\n    id: 'setup_recovery_connections',\n    sortValue: 70,\n    title: _i18next.default.t(\"achievements.setupRecoveryConnections.title\"),\n    description: _i18next.default.t(\"achievements.setupRecoveryConnections.description\"),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn: function checkFn(state) {\n      return (0, _connectionsSlice.recoveryConnectionsSelector)(state).length >= _constants.MIN_RECOVERY_CONNECTIONS;\n    }\n  },\n  join_meet: {\n    id: 'join_meet',\n    sortValue: 110,\n    title: _i18next.default.t(\"achievements.joinMeet.title\"),\n    description: _i18next.default.t(\"achievements.joinMeet.description\"),\n    url: 'https://www.brightid.org/meet',\n    checkFn: function checkFn(state) {\n      return Boolean(state.user.verifications.find(function (verification) {\n        return verification.name === 'SeedConnected' && verification.rank > 0;\n      }));\n    }\n  },\n  bitu_verification: {\n    id: 'bitu_verification',\n    sortValue: 120,\n    title: _i18next.default.t(\"achievements.bituVerification.title\"),\n    description: _i18next.default.t(\"achievements.bituVerification.description\"),\n    url: 'https://brightid.gitbook.io/brightid/getting-verified/bitu-verification',\n    navigationTarget: 'BituVerification',\n    checkFn: function checkFn(state) {\n      return Boolean(state.user.verifications.find(function (verification) {\n        return verification.name === 'Bitu' && verification.score > 0;\n      }));\n    }\n  }\n};\nexports.UserTasks = UserTasks;","map":{"version":3,"names":["UserTasks","make_first_connection","id","sortValue","title","i18next","t","description","url","checkFn","state","connectionTotal","link_app","linkedContexts","linkedContextTotal","get_sponsored","user","isSponsored","isSponsoredv6","make_two_connection","make_three_connection","setup_backup","password","setup_recovery_connections","recoveryConnectionsSelector","length","MIN_RECOVERY_CONNECTIONS","join_meet","Boolean","verifications","find","verification","name","rank","bitu_verification","navigationTarget","score"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/UserTasks.ts"],"sourcesContent":["import i18next from 'i18next';\nimport {\n  connectionTotal,\n  recoveryConnectionsSelector,\n} from '@/reducer/connectionsSlice';\nimport { MIN_RECOVERY_CONNECTIONS } from '@/utils/constants';\nimport { linkedContextTotal } from '@/reducer/appsSlice';\n\nexport const UserTasks = {\n  make_first_connection: {\n    id: 'make_first_connection',\n    sortValue: 10,\n    title: i18next.t(`achievements.makeFirstConnection.title`),\n    description: i18next.t(`achievements.makeFirstConnection.description`),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn(state: State) {\n      return connectionTotal(state) > 0;\n    },\n  },\n  link_app: {\n    id: 'link_app',\n    sortValue: 20,\n    title: i18next.t(`achievements.linkApp.title`),\n    description: i18next.t(`achievements.linkApp.description`),\n    url: 'https://apps.brightid.org/',\n    checkFn(state: State) {\n      // is there at least one linked context?\n      const linkedContexts = linkedContextTotal(state);\n      return linkedContexts > 0;\n    },\n  },\n  get_sponsored: {\n    id: 'get_sponsored',\n    sortValue: 30,\n    title: i18next.t(`achievements.getSponsored.title`),\n    description: i18next.t(`achievements.getSponsored.description`),\n    url: 'https://apps.brightid.org/',\n    checkFn(state: State) {\n      return state.user.isSponsored || state.user.isSponsoredv6;\n    },\n  },\n  make_two_connection: {\n    id: 'make_two_connection',\n    sortValue: 50,\n    title: i18next.t(`achievements.makeTwoConnection.title`),\n    description: i18next.t(`achievements.makeTwoConnection.description`),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn(state: State) {\n      return connectionTotal(state) > 1;\n    },\n  },\n  make_three_connection: {\n    id: 'make_three_connection',\n    sortValue: 60,\n    title: i18next.t(`achievements.makeThreeConnection.title`),\n    description: i18next.t(`achievements.makeThreeConnection.description`),\n    url: 'https://brightid.gitbook.io/brightid/#making-connections',\n    checkFn(state: State) {\n      return connectionTotal(state) > 2;\n    },\n  },\n  setup_backup: {\n    id: 'setup_backup',\n    sortValue: 65,\n    title: i18next.t(`achievements.setupBackup.title`, 'Set backup password'),\n    description: i18next.t(\n      `achievements.setupBackup.description`,\n      'Set password to enable encrypted backup of your data',\n    ),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn(state: State) {\n      return !!state.user.password;\n    },\n  },\n  setup_recovery_connections: {\n    id: 'setup_recovery_connections',\n    sortValue: 70,\n    title: i18next.t(`achievements.setupRecoveryConnections.title`),\n    description: i18next.t(`achievements.setupRecoveryConnections.description`),\n    url: 'https://brightid.gitbook.io/brightid/#backup-your-brightid',\n    checkFn(state: State) {\n      return (\n        recoveryConnectionsSelector(state).length >= MIN_RECOVERY_CONNECTIONS\n      );\n    },\n  },\n  join_meet: {\n    id: 'join_meet',\n    sortValue: 110,\n    title: i18next.t(`achievements.joinMeet.title`),\n    description: i18next.t(`achievements.joinMeet.description`),\n    url: 'https://www.brightid.org/meet',\n    checkFn(state: State) {\n      return Boolean(\n        state.user.verifications.find(\n          (verification) =>\n            verification.name === 'SeedConnected' &&\n            (verification as SeedConnectedVerification).rank > 0,\n        ),\n      );\n    },\n  },\n  bitu_verification: {\n    id: 'bitu_verification',\n    sortValue: 120,\n    title: i18next.t(`achievements.bituVerification.title`),\n    description: i18next.t(`achievements.bituVerification.description`),\n    url: 'https://brightid.gitbook.io/brightid/getting-verified/bitu-verification',\n    navigationTarget: 'BituVerification',\n    checkFn(state: State) {\n      return Boolean(\n        state.user.verifications.find(\n          (verification) =>\n            verification.name === 'Bitu' &&\n            (verification as BituVerification).score > 0,\n        ),\n      );\n    },\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}