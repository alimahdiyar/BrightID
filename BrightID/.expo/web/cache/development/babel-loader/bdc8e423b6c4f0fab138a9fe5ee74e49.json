{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from \"./TouchableItem\";\nexport var getDefaultHeaderHeight = function getDefaultHeaderHeight(layout, statusBarHeight) {\n  var isLandscape = layout.width > layout.height;\n  var headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\nexport default function HeaderSegment(_ref) {\n  var scene = _ref.scene,\n      layout = _ref.layout;\n  var insets = useSafeAreaInsets();\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _scene$descriptor$opt = scene.descriptor.options,\n      title = _scene$descriptor$opt.title,\n      headerTitle = _scene$descriptor$opt.headerTitle,\n      _scene$descriptor$opt2 = _scene$descriptor$opt.headerTitleAlign,\n      headerTitleAlign = _scene$descriptor$opt2 === void 0 ? Platform.select({\n    ios: 'center',\n    default: 'left'\n  }) : _scene$descriptor$opt2,\n      headerLeft = _scene$descriptor$opt.headerLeft,\n      headerLeftAccessibilityLabel = _scene$descriptor$opt.headerLeftAccessibilityLabel,\n      headerRight = _scene$descriptor$opt.headerRight,\n      headerTitleAllowFontScaling = _scene$descriptor$opt.headerTitleAllowFontScaling,\n      headerTitleStyle = _scene$descriptor$opt.headerTitleStyle,\n      headerTintColor = _scene$descriptor$opt.headerTintColor,\n      headerPressColorAndroid = _scene$descriptor$opt.headerPressColorAndroid,\n      headerStyle = _scene$descriptor$opt.headerStyle,\n      _scene$descriptor$opt3 = _scene$descriptor$opt.headerStatusBarHeight,\n      headerStatusBarHeight = _scene$descriptor$opt3 === void 0 ? insets.top : _scene$descriptor$opt3;\n  var currentTitle = typeof headerTitle !== 'function' && headerTitle !== undefined ? headerTitle : title !== undefined ? title : scene.route.name;\n  var defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n  var leftButton = headerLeft ? headerLeft({\n    tintColor: headerTintColor\n  }) : React.createElement(TouchableItem, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: headerLeftAccessibilityLabel,\n    accessibilityTraits: \"button\",\n    delayPressIn: 0,\n    onPress: function onPress() {\n      return scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    pressColor: headerPressColorAndroid,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(Image, {\n    style: [styles.icon, headerTintColor ? {\n      tintColor: headerTintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n  var rightButton = headerRight ? headerRight({\n    tintColor: headerTintColor\n  }) : null;\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [{\n      height: defaultHeight,\n      backgroundColor: colors.card,\n      borderBottomColor: colors.border,\n      shadowColor: colors.border\n    }, styles.container, headerStyle]\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: {\n      height: headerStatusBarHeight\n    }\n  }), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.content\n  }, leftButton ? React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.left, {\n      left: insets.left\n    }]\n  }, leftButton) : null, React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [headerTitleAlign === 'left' ? {\n      position: 'absolute',\n      left: (leftButton ? 72 : 16) + insets.left,\n      right: (rightButton ? 72 : 16) + insets.right\n    } : {\n      marginHorizontal: (leftButton ? 32 : 16) + Math.max(insets.left, insets.right)\n    }]\n  }, typeof headerTitle === 'function' ? headerTitle({\n    children: currentTitle,\n    allowFontScaling: headerTitleAllowFontScaling,\n    tintColor: headerTintColor,\n    style: headerTitleStyle\n  }) : React.createElement(Text, {\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1,\n    allowFontScaling: headerTitleAllowFontScaling,\n    style: [styles.title, {\n      color: headerTintColor !== null && headerTintColor !== void 0 ? headerTintColor : colors.text\n    }, styles.title, headerTitleStyle]\n  }, currentTitle)), rightButton ? React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.right, {\n      right: insets.right\n    }]\n  }, rightButton) : null));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, Platform.select({\n    android: {\n      elevation: 4\n    },\n    ios: {\n      shadowOpacity: 0.85,\n      shadowRadius: 0,\n      shadowOffset: {\n        width: 0,\n        height: StyleSheet.hairlineWidth\n      }\n    },\n    default: {\n      borderBottomWidth: StyleSheet.hairlineWidth\n    }\n  })), {}, {\n    zIndex: 1\n  }),\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  }\n});","map":{"version":3,"sources":["Header.tsx"],"names":["getDefaultHeaderHeight","isLandscape","layout","Platform","headerHeight","scene","insets","useSafeAreaInsets","colors","useTheme","title","headerTitle","headerTitleAlign","ios","default","headerLeft","headerLeftAccessibilityLabel","headerRight","headerTitleAllowFontScaling","headerTitleStyle","headerTintColor","headerPressColorAndroid","headerStyle","headerStatusBarHeight","currentTitle","defaultHeight","leftButton","tintColor","React","accessible","accessibilityRole","accessibilityComponentType","accessibilityLabel","accessibilityTraits","delayPressIn","onPress","DrawerActions","style","styles","pressColor","hitSlop","top","right","bottom","left","borderless","source","require","fadeDuration","rightButton","pointerEvents","height","backgroundColor","borderBottomColor","shadowColor","position","marginHorizontal","Math","children","allowFontScaling","numberOfLines","color","StyleSheet","container","android","elevation","shadowOpacity","shadowRadius","shadowOffset","width","borderBottomWidth","zIndex","content","flex","flexDirection","alignItems","justifyContent","fontSize","fontWeight","fontFamily","icon","margin","resizeMode","touchable"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, Image, StyleSheet, Platform } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from './TouchableItem';\nimport type { Layout, DrawerHeaderProps } from '../types';\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport default function HeaderSegment({ scene, layout }: DrawerHeaderProps) {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n\n  const {\n    title,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftAccessibilityLabel,\n    headerRight,\n    headerTitleAllowFontScaling,\n    headerTitleStyle,\n    headerTintColor,\n    headerPressColorAndroid,\n    headerStyle,\n    headerStatusBarHeight = insets.top,\n  } = scene.descriptor.options;\n\n  const currentTitle =\n    typeof headerTitle !== 'function' && headerTitle !== undefined\n      ? headerTitle\n      : title !== undefined\n      ? title\n      : scene.route.name;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const leftButton = headerLeft ? (\n    headerLeft({ tintColor: headerTintColor })\n  ) : (\n    <TouchableItem\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={headerLeftAccessibilityLabel}\n      accessibilityTraits=\"button\"\n      delayPressIn={0}\n      onPress={() =>\n        scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer())\n      }\n      style={styles.touchable}\n      pressColor={headerPressColorAndroid}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <Image\n        style={[\n          styles.icon,\n          headerTintColor ? { tintColor: headerTintColor } : null,\n        ]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </TouchableItem>\n  );\n  const rightButton = headerRight\n    ? headerRight({ tintColor: headerTintColor })\n    : null;\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[\n        {\n          height: defaultHeight,\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        styles.container,\n        headerStyle,\n      ]}\n    >\n      <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n      <View pointerEvents=\"box-none\" style={styles.content}>\n        {leftButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.left, { left: insets.left }]}\n          >\n            {leftButton}\n          </View>\n        ) : null}\n        <View\n          pointerEvents=\"box-none\"\n          style={[\n            headerTitleAlign === 'left'\n              ? {\n                  position: 'absolute',\n                  left: (leftButton ? 72 : 16) + insets.left,\n                  right: (rightButton ? 72 : 16) + insets.right,\n                }\n              : {\n                  marginHorizontal:\n                    (leftButton ? 32 : 16) +\n                    Math.max(insets.left, insets.right),\n                },\n          ]}\n        >\n          {typeof headerTitle === 'function' ? (\n            headerTitle({\n              children: currentTitle,\n              allowFontScaling: headerTitleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: headerTitleStyle,\n            })\n          ) : (\n            <Text\n              accessibilityRole=\"header\"\n              aria-level=\"1\"\n              numberOfLines={1}\n              allowFontScaling={headerTitleAllowFontScaling}\n              style={[\n                styles.title,\n                { color: headerTintColor ?? colors.text },\n                styles.title,\n                headerTitleStyle,\n              ]}\n            >\n              {currentTitle}\n            </Text>\n          )}\n        </View>\n        {rightButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.right, { right: insets.right }]}\n          >\n            {rightButton}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n    zIndex: 1,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}