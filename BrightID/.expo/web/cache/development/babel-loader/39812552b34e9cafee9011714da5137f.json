{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport { DEFAULT_IMAGE_DIMENSIONS, IS_ANDROID, IS_IOS_BELOW_11, TYPE, ACTION, HEIGHT, getDefaultStatusBarStyle, getDefaultStatusBarBackgroundColor } from \"./Utils\";\nimport Queue from \"./Queue\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownAlert = function (_Component) {\n  _inherits(DropdownAlert, _Component);\n\n  var _super = _createSuper(DropdownAlert);\n\n  function DropdownAlert(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownAlert);\n\n    _this = _super.call(this, props);\n\n    _this.getPanResponder = function () {\n      return PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {\n          return _this._onShouldStartPan(event, gestureState);\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gestureState) {\n          return _this._onShouldMovePan(event, gestureState);\n        },\n        onPanResponderMove: function onPanResponderMove(event, gestureState) {\n          return _this._onMovePan(event, gestureState);\n        },\n        onPanResponderRelease: function onPanResponderRelease(event, gestureState) {\n          return _this._onDonePan(event, gestureState);\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(event, gestureState) {\n          return _this._onDonePan(event, gestureState);\n        }\n      });\n    };\n\n    _this._onShouldStartPan = function () {\n      return _this.props.panResponderEnabled;\n    };\n\n    _this._onShouldMovePan = function (event, gestureState) {\n      var _this$props = _this.props,\n          sensitivity = _this$props.sensitivity,\n          panResponderEnabled = _this$props.panResponderEnabled;\n      var dx = Math.abs(gestureState.dx);\n      var dy = Math.abs(gestureState.dy);\n      var isDxSensitivity = dx < sensitivity;\n      var isDySensitivity = dy >= sensitivity;\n      return isDxSensitivity && isDySensitivity && panResponderEnabled;\n    };\n\n    _this._onMovePan = function (event, gestureState) {\n      if (gestureState.dy < 0) {\n        _this.setState({\n          topValue: gestureState.dy\n        });\n      }\n    };\n\n    _this._onDonePan = function (event, gestureState) {\n      var start = _this.getStartDelta(_this.state.height, _this.props.startDelta);\n\n      var delta = start / 5;\n\n      if (gestureState.dy < delta) {\n        _this.closeAction(ACTION.pan);\n      }\n    };\n\n    _this.getStringValue = function (value) {\n      try {\n        if (typeof value !== 'string') {\n          if (Array.isArray(value)) {\n            return value.join(' ');\n          }\n\n          if (typeof value === 'object') {\n            return \"\" + JSON.stringify(value);\n          }\n\n          return \"\" + value;\n        }\n\n        return value;\n      } catch (error) {\n        return error.toString();\n      }\n    };\n\n    _this.alertWithType = function _callee() {\n      var type,\n          title,\n          message,\n          payload,\n          interval,\n          closeInterval,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              type = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n              title = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n              message = _args.length > 2 && _args[2] !== undefined ? _args[2] : '';\n              payload = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n              interval = _args.length > 4 ? _args[4] : undefined;\n              closeInterval = _this.props.closeInterval;\n              data = {\n                type: type,\n                title: _this.getStringValue(title),\n                message: _this.getStringValue(message),\n                payload: payload,\n                interval: closeInterval\n              };\n\n              if (interval && typeof interval === 'number') {\n                data.interval = interval;\n              }\n\n              _this.queue.enqueue(data);\n\n              if (_this.getQueueSize() === 1) {\n                _this._processQueue();\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.clearQueue = function () {\n      _this.queue.clear();\n    };\n\n    _this.getQueueSize = function () {\n      return _this.queue.size;\n    };\n\n    _this._processQueue = function () {\n      var data = _this.queue.firstItem;\n\n      if (data) {\n        _this.open(data);\n      }\n    };\n\n    _this.open = function () {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _this.alertData = data;\n\n      _this.setState({\n        isOpen: true\n      });\n\n      _this.animate(1, 450, function () {\n        if (data.interval > 0) {\n          _this.closeAutomatic(data.interval);\n        }\n      });\n    };\n\n    _this.closeAction = function () {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ACTION.programmatic;\n      var onDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      if (_this.state.isOpen) {\n        _this.clearCloseTimeoutID();\n\n        _this.close(action, onDone);\n      }\n    };\n\n    _this.closeAutomatic = function (interval) {\n      _this.clearCloseTimeoutID();\n\n      _this.closeTimeoutID = setTimeout(function () {\n        _this.close(ACTION.automatic);\n      }, interval);\n    };\n\n    _this.close = function (action) {\n      var onDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      _this.animate(0, 250, function () {\n        var _this$props2 = _this.props,\n            onClose = _this$props2.onClose,\n            updateStatusBar = _this$props2.updateStatusBar,\n            onCancel = _this$props2.onCancel,\n            onTap = _this$props2.onTap;\n        _this.alertData.action = action;\n\n        _this.queue.dequeue();\n\n        if (action === ACTION.cancel) {\n          onCancel(_this.alertData);\n        } else {\n          if (action === ACTION.tap) {\n            onTap(_this.alertData);\n          }\n\n          onClose(_this.alertData);\n        }\n\n        _this.setState({\n          isOpen: false,\n          topValue: 0,\n          height: 0\n        });\n\n        _this.updateStatusBar(updateStatusBar, false);\n\n        _this._processQueue();\n\n        onDone();\n      });\n    };\n\n    _this.updateStatusBar = function () {\n      var shouldUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var active = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (shouldUpdate) {\n        if (IS_ANDROID) {\n          var _this$props3 = _this.props,\n              inactiveStatusBarBackgroundColor = _this$props3.inactiveStatusBarBackgroundColor,\n              activeStatusBarBackgroundColor = _this$props3.activeStatusBarBackgroundColor,\n              translucent = _this$props3.translucent;\n\n          if (active) {\n            var backgroundColor = activeStatusBarBackgroundColor;\n            var type = _this.alertData.type;\n\n            if (type !== TYPE.custom) {\n              backgroundColor = _this.getBackgroundColorForType(type);\n            }\n\n            StatusBar.setBackgroundColor(backgroundColor, true);\n            StatusBar.setTranslucent(translucent);\n          } else {\n            StatusBar.setBackgroundColor(inactiveStatusBarBackgroundColor, true);\n          }\n        }\n\n        var _this$props4 = _this.props,\n            inactiveStatusBarStyle = _this$props4.inactiveStatusBarStyle,\n            activeStatusBarStyle = _this$props4.activeStatusBarStyle;\n\n        if (active) {\n          StatusBar.setBarStyle(activeStatusBarStyle, true);\n        } else {\n          StatusBar.setBarStyle(inactiveStatusBarStyle, true);\n        }\n      }\n    };\n\n    _this.clearCloseTimeoutID = function () {\n      if (_this.closeTimeoutID) {\n        clearTimeout(_this.closeTimeoutID);\n      }\n    };\n\n    _this.animate = function (toValue) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 450;\n      var onComplete = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n      var _this$props5 = _this.props,\n          useNativeDriver = _this$props5.useNativeDriver,\n          isInteraction = _this$props5.isInteraction;\n      Animated.spring(_this.animationValue, {\n        toValue: toValue,\n        duration: duration,\n        friction: 9,\n        useNativeDriver: useNativeDriver,\n        isInteraction: isInteraction\n      }).start(onComplete);\n    };\n\n    _this.getStartDelta = function (height, start) {\n      var windowHeight = HEIGHT;\n      var startMin = 0 - height;\n      var startMax = windowHeight + height;\n\n      if (start < 0 && start !== startMin) {\n        return startMin;\n      } else if (start > startMax) {\n        return startMax;\n      }\n\n      return start;\n    };\n\n    _this.getEndDelta = function (height, end) {\n      var windowHeight = HEIGHT;\n      var endMin = 0;\n      var endMax = windowHeight;\n\n      if (end < endMin) {\n        return endMin;\n      } else if (end >= endMax) {\n        return endMax - height;\n      }\n\n      return end;\n    };\n\n    _this.getOutputRange = function (height, startDelta, endDelta) {\n      if (!height) {\n        return [startDelta, endDelta];\n      }\n\n      var start = _this.getStartDelta(height, startDelta);\n\n      var end = _this.getEndDelta(height, endDelta);\n\n      return [start, end];\n    };\n\n    _this.getStyleForType = function (type) {\n      var defaultContainer = _this.props.defaultContainer;\n\n      switch (type) {\n        case TYPE.info:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: _this.props.infoColor\n          }];\n\n        case TYPE.warn:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: _this.props.warnColor\n          }];\n\n        case TYPE.error:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: _this.props.errorColor\n          }];\n\n        case TYPE.success:\n          return [StyleSheet.flatten(defaultContainer), {\n            backgroundColor: _this.props.successColor\n          }];\n\n        default:\n          return [StyleSheet.flatten(defaultContainer), StyleSheet.flatten(_this.props.containerStyle)];\n      }\n    };\n\n    _this.getSourceForType = function (type) {\n      switch (type) {\n        case TYPE.info:\n          return _this.props.infoImageSrc;\n\n        case TYPE.warn:\n          return _this.props.warnImageSrc;\n\n        case TYPE.error:\n          return _this.props.errorImageSrc;\n\n        case TYPE.success:\n          return _this.props.successImageSrc;\n\n        default:\n          return _this.props.imageSrc;\n      }\n    };\n\n    _this.getBackgroundColorForType = function (type) {\n      switch (type) {\n        case TYPE.info:\n          return _this.props.infoColor;\n\n        case TYPE.warn:\n          return _this.props.warnColor;\n\n        case TYPE.error:\n          return _this.props.errorColor;\n\n        case TYPE.success:\n          return _this.props.successColor;\n\n        default:\n          return _this.props.containerStyle.backgroundColor;\n      }\n    };\n\n    _this._onLayoutEvent = function (event) {\n      var height = event.nativeEvent.layout.height;\n\n      if (height > _this.state.height) {\n        var _this$props6 = _this.props,\n            startDelta = _this$props6.startDelta,\n            endDelta = _this$props6.endDelta;\n\n        var start = _this.getStartDelta(height, startDelta);\n\n        var end = _this.getEndDelta(height, endDelta);\n\n        if (startDelta !== start || endDelta !== end) {\n          _this.setState({\n            height: height\n          });\n        }\n      }\n    };\n\n    _this._renderImage = function (source, imageStyle) {\n      var renderImage = _this.props.renderImage;\n\n      if (renderImage) {\n        return renderImage(_this.props, _this.alertData);\n      }\n\n      if (!source) {\n        return null;\n      }\n\n      var style = imageStyle;\n\n      if (!style.width) {\n        style.width = DEFAULT_IMAGE_DIMENSIONS;\n      }\n\n      if (!style.height) {\n        style.height = DEFAULT_IMAGE_DIMENSIONS;\n      }\n\n      var isRemote = typeof source === 'string';\n      var src = isRemote ? {\n        uri: source\n      } : source;\n      return _jsx(Image, {\n        style: style,\n        source: src\n      });\n    };\n\n    _this._renderTitle = function (title) {\n      if (_this.props.renderTitle) {\n        return _this.props.renderTitle(_this.props, _this.alertData);\n      }\n\n      if (!title || title.length === 0) {\n        return null;\n      }\n\n      var _this$props7 = _this.props,\n          titleTextProps = _this$props7.titleTextProps,\n          titleStyle = _this$props7.titleStyle,\n          titleNumOfLines = _this$props7.titleNumOfLines;\n      return _jsx(Text, _objectSpread(_objectSpread({}, titleTextProps), {}, {\n        style: titleStyle,\n        numberOfLines: titleNumOfLines,\n        children: title\n      }));\n    };\n\n    _this._renderMessage = function (message) {\n      if (_this.props.renderMessage) {\n        return _this.props.renderMessage(_this.props, _this.alertData);\n      }\n\n      if (!message || message.length === 0) {\n        return null;\n      }\n\n      var _this$props8 = _this.props,\n          messageTextProps = _this$props8.messageTextProps,\n          messageStyle = _this$props8.messageStyle,\n          messageNumOfLines = _this$props8.messageNumOfLines;\n      return _jsx(Text, _objectSpread(_objectSpread({}, messageTextProps), {}, {\n        style: messageStyle,\n        numberOfLines: messageNumOfLines,\n        children: message\n      }));\n    };\n\n    _this._renderCancel = function () {\n      var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!show) {\n        return null;\n      }\n\n      var _this$props9 = _this.props,\n          renderCancel = _this$props9.renderCancel,\n          cancelBtnStyle = _this$props9.cancelBtnStyle,\n          cancelBtnImageSrc = _this$props9.cancelBtnImageSrc,\n          cancelBtnImageStyle = _this$props9.cancelBtnImageStyle;\n\n      if (renderCancel) {\n        return renderCancel(_this.props, _this.alertData);\n      }\n\n      return _jsx(TouchableOpacity, {\n        style: cancelBtnStyle,\n        onPress: function onPress() {\n          return _this.closeAction(ACTION.cancel);\n        },\n        children: _this._renderImage(cancelBtnImageSrc, cancelBtnImageStyle)\n      });\n    };\n\n    _this.state = {\n      isOpen: false,\n      topValue: 0,\n      height: 0\n    };\n    _this.alertData = {\n      type: '',\n      message: '',\n      title: '',\n      payload: {},\n      interval: props.closeInterval,\n      action: ''\n    };\n    _this.panResponder = _this.getPanResponder();\n    _this.queue = new Queue();\n    _this.animationValue = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(DropdownAlert, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.isOpen) {\n        this.closeAction(ACTION.programmatic);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isOpen = this.state.isOpen;\n\n      if (!isOpen) {\n        return null;\n      }\n\n      var _this$props10 = this.props,\n          elevation = _this$props10.elevation,\n          zIndex = _this$props10.zIndex,\n          wrapperStyle = _this$props10.wrapperStyle,\n          tapToCloseEnabled = _this$props10.tapToCloseEnabled,\n          accessibilityLabel = _this$props10.accessibilityLabel,\n          testID = _this$props10.testID,\n          accessible = _this$props10.accessible,\n          contentContainerStyle = _this$props10.contentContainerStyle,\n          defaultTextContainer = _this$props10.defaultTextContainer,\n          startDelta = _this$props10.startDelta,\n          endDelta = _this$props10.endDelta,\n          translucent = _this$props10.translucent,\n          updateStatusBar = _this$props10.updateStatusBar,\n          showCancel = _this$props10.showCancel,\n          imageStyle = _this$props10.imageStyle;\n      var _this$state = this.state,\n          topValue = _this$state.topValue,\n          height = _this$state.height;\n      var _this$alertData = this.alertData,\n          type = _this$alertData.type,\n          payload = _this$alertData.payload,\n          title = _this$alertData.title,\n          message = _this$alertData.message;\n      var style = this.getStyleForType(type);\n      var imageSrc = this.getSourceForType(type);\n\n      if (payload && payload.hasOwnProperty('source') && payload.source && typeof payload.source !== 'object') {\n        imageSrc = payload.source;\n      }\n\n      if (IS_ANDROID && translucent) {\n        style = [style, {\n          paddingTop: StatusBar.currentHeight\n        }];\n      }\n\n      this.updateStatusBar(updateStatusBar, true);\n      var outputRange = this.getOutputRange(height, startDelta, endDelta);\n      var wrapperAnimStyle = {\n        transform: [{\n          translateY: this.animationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: outputRange\n          })\n        }],\n        position: 'absolute',\n        top: topValue,\n        left: 0,\n        right: 0,\n        elevation: elevation\n      };\n\n      if (zIndex != null) {\n        wrapperAnimStyle.zIndex = zIndex;\n      }\n\n      var ContentView = SafeAreaView;\n\n      if (IS_IOS_BELOW_11 || IS_ANDROID) {\n        ContentView = View;\n      }\n\n      var activeOpacity = !tapToCloseEnabled || showCancel ? 1 : 0.95;\n      var onPress = !tapToCloseEnabled ? null : function () {\n        return _this2.closeAction(ACTION.tap);\n      };\n      return _jsx(Animated.View, _objectSpread(_objectSpread({\n        ref: function ref(_ref) {\n          return _this2.mainView = _ref;\n        }\n      }, this.panResponder.panHandlers), {}, {\n        style: [wrapperAnimStyle, wrapperStyle],\n        children: _jsx(TouchableOpacity, {\n          activeOpacity: activeOpacity,\n          onPress: onPress,\n          disabled: !tapToCloseEnabled,\n          onLayout: function onLayout(event) {\n            return _this2._onLayoutEvent(event);\n          },\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          accessible: accessible,\n          children: _jsx(View, {\n            style: style,\n            children: _jsxs(ContentView, {\n              style: StyleSheet.flatten(contentContainerStyle),\n              children: [this._renderImage(imageSrc, imageStyle), _jsxs(View, {\n                style: StyleSheet.flatten(defaultTextContainer),\n                children: [this._renderTitle(title), this._renderMessage(message)]\n              }), this._renderCancel(showCancel)]\n            })\n          })\n        })\n      }));\n    }\n  }]);\n\n  return DropdownAlert;\n}(Component);\n\nDropdownAlert.propTypes = {\n  imageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  infoImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  warnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  errorImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  successImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  cancelBtnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  infoColor: PropTypes.string,\n  warnColor: PropTypes.string,\n  errorColor: PropTypes.string,\n  successColor: PropTypes.string,\n  closeInterval: PropTypes.number,\n  startDelta: PropTypes.number,\n  endDelta: PropTypes.number,\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  contentContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelBtnImageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  titleNumOfLines: PropTypes.number,\n  messageNumOfLines: PropTypes.number,\n  onClose: PropTypes.func,\n  onCancel: PropTypes.func,\n  showCancel: PropTypes.bool,\n  tapToCloseEnabled: PropTypes.bool,\n  panResponderEnabled: PropTypes.bool,\n  translucent: PropTypes.bool,\n  useNativeDriver: PropTypes.bool,\n  isInteraction: PropTypes.bool,\n  activeStatusBarStyle: PropTypes.string,\n  activeStatusBarBackgroundColor: PropTypes.string,\n  inactiveStatusBarStyle: PropTypes.string,\n  inactiveStatusBarBackgroundColor: PropTypes.string,\n  updateStatusBar: PropTypes.bool,\n  elevation: PropTypes.number,\n  zIndex: PropTypes.number,\n  sensitivity: PropTypes.number,\n  defaultContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  defaultTextContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  renderImage: PropTypes.func,\n  renderCancel: PropTypes.func,\n  renderTitle: PropTypes.func,\n  renderMessage: PropTypes.func,\n  testID: PropTypes.string,\n  accessibilityLabel: PropTypes.string,\n  accessible: PropTypes.bool,\n  titleTextProps: PropTypes.object,\n  messageTextProps: PropTypes.object,\n  onTap: PropTypes.func\n};\nDropdownAlert.defaultProps = {\n  onClose: function onClose() {},\n  onCancel: function onCancel() {},\n  closeInterval: 4000,\n  startDelta: -100,\n  endDelta: 0,\n  titleNumOfLines: 1,\n  messageNumOfLines: 3,\n  imageSrc: null,\n  infoImageSrc: require(\"./assets/info.png\"),\n  warnImageSrc: require(\"./assets/warn.png\"),\n  errorImageSrc: require(\"./assets/error.png\"),\n  successImageSrc: require(\"./assets/success.png\"),\n  cancelBtnImageSrc: require(\"./assets/cancel.png\"),\n  infoColor: '#2B73B6',\n  warnColor: '#cd853f',\n  errorColor: '#cc3232',\n  successColor: '#32A54A',\n  showCancel: false,\n  tapToCloseEnabled: true,\n  panResponderEnabled: true,\n  wrapperStyle: null,\n  containerStyle: {\n    flexDirection: 'row',\n    backgroundColor: '#202020'\n  },\n  contentContainerStyle: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  titleStyle: {\n    fontSize: 16,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  messageStyle: {\n    fontSize: 14,\n    textAlign: 'left',\n    fontWeight: 'normal',\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  imageStyle: {\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS,\n    alignSelf: 'center'\n  },\n  cancelBtnImageStyle: {\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS\n  },\n  cancelBtnStyle: {\n    alignSelf: 'center'\n  },\n  defaultContainer: {\n    flexDirection: 'row',\n    padding: 8\n  },\n  defaultTextContainer: {\n    flex: 1,\n    padding: 8\n  },\n  translucent: false,\n  activeStatusBarStyle: 'light-content',\n  activeStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n  inactiveStatusBarStyle: getDefaultStatusBarStyle(),\n  inactiveStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n  updateStatusBar: true,\n  isInteraction: true,\n  useNativeDriver: true,\n  elevation: 1,\n  zIndex: null,\n  sensitivity: 20,\n  renderImage: undefined,\n  renderCancel: undefined,\n  renderTitle: undefined,\n  renderMessage: undefined,\n  testID: undefined,\n  accessibilityLabel: undefined,\n  accessible: false,\n  titleTextProps: undefined,\n  messageTextProps: undefined,\n  onTap: function onTap() {}\n};\nexport { DropdownAlert as default };","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-dropdownalert/DropdownAlert.js"],"names":["DropdownAlert","Component","propTypes","imageSrc","PropTypes","infoImageSrc","warnImageSrc","errorImageSrc","successImageSrc","cancelBtnImageSrc","infoColor","warnColor","errorColor","successColor","closeInterval","startDelta","endDelta","wrapperStyle","containerStyle","contentContainerStyle","titleStyle","messageStyle","imageStyle","cancelBtnImageStyle","titleNumOfLines","messageNumOfLines","onClose","onCancel","showCancel","tapToCloseEnabled","panResponderEnabled","translucent","useNativeDriver","isInteraction","activeStatusBarStyle","activeStatusBarBackgroundColor","inactiveStatusBarStyle","inactiveStatusBarBackgroundColor","updateStatusBar","elevation","zIndex","sensitivity","defaultContainer","defaultTextContainer","renderImage","renderCancel","renderTitle","renderMessage","testID","accessibilityLabel","accessible","titleTextProps","messageTextProps","onTap","defaultProps","require","flexDirection","backgroundColor","flex","fontSize","textAlign","fontWeight","color","width","height","alignSelf","cancelBtnStyle","padding","getDefaultStatusBarBackgroundColor","getDefaultStatusBarStyle","isOpen","topValue","type","message","title","payload","interval","props","action","Animated","ACTION","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","dx","Math","gestureState","dy","isDxSensitivity","isDySensitivity","start","delta","Array","value","JSON","error","data","programmatic","onDone","setTimeout","shouldUpdate","active","TYPE","StatusBar","clearTimeout","duration","onComplete","toValue","friction","windowHeight","startMin","startMax","endMin","endMax","end","StyleSheet","event","style","isRemote","src","uri","show","IS_ANDROID","paddingTop","outputRange","wrapperAnimStyle","transform","translateY","inputRange","position","top","left","right","ContentView","IS_IOS_BELOW_11","activeOpacity","onPress"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  StyleSheet,\n  SafeAreaView,\n  View,\n  TouchableOpacity,\n  Animated,\n  StatusBar,\n  PanResponder,\n  Image,\n  Text,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  DEFAULT_IMAGE_DIMENSIONS,\n  IS_ANDROID,\n  IS_IOS_BELOW_11,\n  TYPE,\n  ACTION,\n  HEIGHT,\n  getDefaultStatusBarStyle,\n  getDefaultStatusBarBackgroundColor,\n} from './Utils';\nimport Queue from './Queue';\n\nexport default class DropdownAlert extends Component {\n  static propTypes = {\n    imageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    infoImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    warnImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    errorImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    successImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    cancelBtnImageSrc: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ]),\n    infoColor: PropTypes.string,\n    warnColor: PropTypes.string,\n    errorColor: PropTypes.string,\n    successColor: PropTypes.string,\n    closeInterval: PropTypes.number,\n    startDelta: PropTypes.number,\n    endDelta: PropTypes.number,\n    wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    contentContainerStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number,\n    ]),\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    cancelBtnImageStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number,\n    ]),\n    titleNumOfLines: PropTypes.number,\n    messageNumOfLines: PropTypes.number,\n    onClose: PropTypes.func,\n    onCancel: PropTypes.func,\n    showCancel: PropTypes.bool,\n    tapToCloseEnabled: PropTypes.bool,\n    panResponderEnabled: PropTypes.bool,\n    translucent: PropTypes.bool,\n    useNativeDriver: PropTypes.bool,\n    isInteraction: PropTypes.bool,\n    activeStatusBarStyle: PropTypes.string,\n    activeStatusBarBackgroundColor: PropTypes.string,\n    inactiveStatusBarStyle: PropTypes.string,\n    inactiveStatusBarBackgroundColor: PropTypes.string,\n    updateStatusBar: PropTypes.bool,\n    elevation: PropTypes.number,\n    zIndex: PropTypes.number,\n    sensitivity: PropTypes.number,\n    defaultContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    defaultTextContainer: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number,\n    ]),\n    renderImage: PropTypes.func,\n    renderCancel: PropTypes.func,\n    renderTitle: PropTypes.func,\n    renderMessage: PropTypes.func,\n    testID: PropTypes.string,\n    accessibilityLabel: PropTypes.string,\n    accessible: PropTypes.bool,\n    titleTextProps: PropTypes.object,\n    messageTextProps: PropTypes.object,\n    onTap: PropTypes.func,\n  };\n  static defaultProps = {\n    onClose: () => {},\n    onCancel: () => {},\n    closeInterval: 4000,\n    startDelta: -100,\n    endDelta: 0,\n    titleNumOfLines: 1,\n    messageNumOfLines: 3,\n    imageSrc: null,\n    infoImageSrc: require('./assets/info.png'),\n    warnImageSrc: require('./assets/warn.png'),\n    errorImageSrc: require('./assets/error.png'),\n    successImageSrc: require('./assets/success.png'),\n    cancelBtnImageSrc: require('./assets/cancel.png'),\n    infoColor: '#2B73B6',\n    warnColor: '#cd853f',\n    errorColor: '#cc3232',\n    successColor: '#32A54A',\n    showCancel: false,\n    tapToCloseEnabled: true,\n    panResponderEnabled: true,\n    wrapperStyle: null,\n    containerStyle: {\n      flexDirection: 'row',\n      backgroundColor: '#202020',\n    },\n    contentContainerStyle: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    titleStyle: {\n      fontSize: 16,\n      textAlign: 'left',\n      fontWeight: 'bold',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n    messageStyle: {\n      fontSize: 14,\n      textAlign: 'left',\n      fontWeight: 'normal',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n    imageStyle: {\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n      alignSelf: 'center',\n    },\n    cancelBtnImageStyle: {\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n    },\n    cancelBtnStyle: {\n      alignSelf: 'center',\n    },\n    defaultContainer: {\n      flexDirection: 'row',\n      padding: 8,\n    },\n    defaultTextContainer: {\n      flex: 1,\n      padding: 8,\n    },\n    translucent: false,\n    activeStatusBarStyle: 'light-content',\n    activeStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n    inactiveStatusBarStyle: getDefaultStatusBarStyle(),\n    inactiveStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n    updateStatusBar: true,\n    isInteraction: true,\n    useNativeDriver: true,\n    elevation: 1,\n    zIndex: null,\n    sensitivity: 20,\n    renderImage: undefined,\n    renderCancel: undefined,\n    renderTitle: undefined,\n    renderMessage: undefined,\n    testID: undefined,\n    accessibilityLabel: undefined,\n    accessible: false,\n    titleTextProps: undefined,\n    messageTextProps: undefined,\n    onTap: () => {},\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      topValue: 0,\n      height: 0,\n    };\n    this.alertData = {\n      type: '',\n      message: '',\n      title: '',\n      payload: {},\n      interval: props.closeInterval,\n      action: '',\n    };\n    this.panResponder = this.getPanResponder();\n    this.queue = new Queue();\n    this.animationValue = new Animated.Value(0);\n  }\n  componentWillUnmount() {\n    if (this.state.isOpen) {\n      this.closeAction(ACTION.programmatic);\n    }\n  }\n  getPanResponder = () => {\n    return PanResponder.create({\n      onStartShouldSetPanResponder: (event, gestureState) =>\n        this._onShouldStartPan(event, gestureState),\n      onMoveShouldSetPanResponder: (event, gestureState) =>\n        this._onShouldMovePan(event, gestureState),\n      onPanResponderMove: (event, gestureState) =>\n        this._onMovePan(event, gestureState),\n      onPanResponderRelease: (event, gestureState) =>\n        this._onDonePan(event, gestureState),\n      onPanResponderTerminate: (event, gestureState) =>\n        this._onDonePan(event, gestureState),\n    });\n  };\n  _onShouldStartPan = () => {\n    return this.props.panResponderEnabled;\n  };\n  _onShouldMovePan = (event, gestureState) => {\n    const {sensitivity, panResponderEnabled} = this.props;\n    const dx = Math.abs(gestureState.dx);\n    const dy = Math.abs(gestureState.dy);\n    const isDxSensitivity = dx < sensitivity;\n    const isDySensitivity = dy >= sensitivity;\n    return isDxSensitivity && isDySensitivity && panResponderEnabled;\n  };\n  _onMovePan = (event, gestureState) => {\n    if (gestureState.dy < 0) {\n      this.setState({topValue: gestureState.dy});\n    }\n  };\n  _onDonePan = (event, gestureState) => {\n    const start = this.getStartDelta(this.state.height, this.props.startDelta);\n    const delta = start / 5;\n    if (gestureState.dy < delta) {\n      this.closeAction(ACTION.pan);\n    }\n  };\n  getStringValue = (value) => {\n    try {\n      if (typeof value !== 'string') {\n        if (Array.isArray(value)) {\n          return value.join(' ');\n        }\n        if (typeof value === 'object') {\n          return `${JSON.stringify(value)}`;\n        }\n        return `${value}`;\n      }\n      return value;\n    } catch (error) {\n      return error.toString();\n    }\n  };\n  alertWithType = async (\n    type = '',\n    title = '',\n    message = '',\n    payload = {},\n    interval,\n  ) => {\n    // type is not validated so unexpected types will render alert with default styles.\n    // these default styles can be overridden with style props. (for example, containerStyle)\n    const {closeInterval} = this.props;\n    // title and message are converted to strings\n    const data = {\n      type,\n      title: this.getStringValue(title),\n      message: this.getStringValue(message),\n      payload,\n      interval: closeInterval,\n    };\n    // closeInterval prop is overridden if interval is provided\n    if (interval && typeof interval === 'number') {\n      data.interval = interval;\n    }\n    this.queue.enqueue(data);\n    // start processing queue when it has at least one\n    if (this.getQueueSize() === 1) {\n      this._processQueue();\n    }\n  };\n  clearQueue = () => {\n    this.queue.clear();\n  };\n  getQueueSize = () => {\n    return this.queue.size;\n  };\n  _processQueue = () => {\n    const data = this.queue.firstItem;\n    if (data) {\n      this.open(data);\n    }\n  };\n  open = (data = {}) => {\n    this.alertData = data;\n    this.setState({isOpen: true});\n    this.animate(1, 450, () => {\n      if (data.interval > 0) {\n        this.closeAutomatic(data.interval);\n      }\n    });\n  };\n  closeAction = (action = ACTION.programmatic, onDone = () => {}) => {\n    // action is how the alert was closed.\n    // alert currently closes itself by:\n    // tap, pan, cancel, programmatic or automatic\n    if (this.state.isOpen) {\n      this.clearCloseTimeoutID();\n      this.close(action, onDone);\n    }\n  };\n  closeAutomatic = (interval) => {\n    this.clearCloseTimeoutID();\n    this.closeTimeoutID = setTimeout(() => {\n      this.close(ACTION.automatic);\n    }, interval);\n  };\n  close = (action, onDone = () => {}) => {\n    this.animate(0, 250, () => {\n      const {onClose, updateStatusBar, onCancel, onTap} = this.props;\n      this.alertData.action = action;\n      this.queue.dequeue();\n      if (action === ACTION.cancel) {\n        onCancel(this.alertData);\n      } else {\n        if (action === ACTION.tap) {\n          onTap(this.alertData);\n        }\n        onClose(this.alertData);\n      }\n      this.setState({isOpen: false, topValue: 0, height: 0});\n      this.updateStatusBar(updateStatusBar, false);\n      this._processQueue();\n      onDone();\n    });\n  };\n  updateStatusBar = (shouldUpdate = true, active = false) => {\n    if (shouldUpdate) {\n      if (IS_ANDROID) {\n        const {\n          inactiveStatusBarBackgroundColor,\n          activeStatusBarBackgroundColor,\n          translucent,\n        } = this.props;\n        if (active) {\n          let backgroundColor = activeStatusBarBackgroundColor;\n          const type = this.alertData.type;\n          if (type !== TYPE.custom) {\n            backgroundColor = this.getBackgroundColorForType(type);\n          }\n          StatusBar.setBackgroundColor(backgroundColor, true);\n          StatusBar.setTranslucent(translucent);\n        } else {\n          StatusBar.setBackgroundColor(inactiveStatusBarBackgroundColor, true);\n        }\n      }\n      const {inactiveStatusBarStyle, activeStatusBarStyle} = this.props;\n      if (active) {\n        StatusBar.setBarStyle(activeStatusBarStyle, true);\n      } else {\n        StatusBar.setBarStyle(inactiveStatusBarStyle, true);\n      }\n    }\n  };\n  clearCloseTimeoutID = () => {\n    if (this.closeTimeoutID) {\n      clearTimeout(this.closeTimeoutID);\n    }\n  };\n  animate = (toValue, duration = 450, onComplete = () => {}) => {\n    const {useNativeDriver, isInteraction} = this.props;\n    Animated.spring(this.animationValue, {\n      toValue: toValue,\n      duration: duration,\n      friction: 9,\n      useNativeDriver,\n      isInteraction,\n    }).start(onComplete);\n  };\n  getStartDelta = (height, start) => {\n    const windowHeight = HEIGHT;\n    const startMin = 0 - height;\n    const startMax = windowHeight + height;\n    if (start < 0 && start !== startMin) {\n      return startMin;\n    } else if (start > startMax) {\n      return startMax;\n    }\n    return start;\n  };\n  getEndDelta = (height, end) => {\n    const windowHeight = HEIGHT;\n    const endMin = 0;\n    const endMax = windowHeight;\n    if (end < endMin) {\n      return endMin;\n    } else if (end >= endMax) {\n      return endMax - height;\n    }\n    return end;\n  };\n  getOutputRange = (height, startDelta, endDelta) => {\n    if (!height) {\n      return [startDelta, endDelta];\n    }\n    const start = this.getStartDelta(height, startDelta);\n    const end = this.getEndDelta(height, endDelta);\n    return [start, end];\n  };\n  getStyleForType = (type) => {\n    const {defaultContainer} = this.props;\n    switch (type) {\n      case TYPE.info:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.infoColor},\n        ];\n      case TYPE.warn:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.warnColor},\n        ];\n      case TYPE.error:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.errorColor},\n        ];\n      case TYPE.success:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          {backgroundColor: this.props.successColor},\n        ];\n      default:\n        return [\n          StyleSheet.flatten(defaultContainer),\n          StyleSheet.flatten(this.props.containerStyle),\n        ];\n    }\n  };\n  getSourceForType = (type) => {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoImageSrc;\n      case TYPE.warn:\n        return this.props.warnImageSrc;\n      case TYPE.error:\n        return this.props.errorImageSrc;\n      case TYPE.success:\n        return this.props.successImageSrc;\n      default:\n        return this.props.imageSrc;\n    }\n  };\n  getBackgroundColorForType = (type) => {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoColor;\n      case TYPE.warn:\n        return this.props.warnColor;\n      case TYPE.error:\n        return this.props.errorColor;\n      case TYPE.success:\n        return this.props.successColor;\n      default:\n        return this.props.containerStyle.backgroundColor;\n    }\n  };\n  _onLayoutEvent = (event) => {\n    const {height} = event.nativeEvent.layout;\n    if (height > this.state.height) {\n      const {startDelta, endDelta} = this.props;\n      const start = this.getStartDelta(height, startDelta);\n      const end = this.getEndDelta(height, endDelta);\n      if (startDelta !== start || endDelta !== end) {\n        this.setState({height});\n      }\n    }\n  };\n  _renderImage = (source, imageStyle) => {\n    const {renderImage} = this.props;\n    if (renderImage) {\n      return renderImage(this.props, this.alertData);\n    }\n    if (!source) {\n      return null;\n    }\n    let style = imageStyle;\n    if (!style.width) {\n      style.width = DEFAULT_IMAGE_DIMENSIONS;\n    }\n    if (!style.height) {\n      style.height = DEFAULT_IMAGE_DIMENSIONS;\n    }\n    const isRemote = typeof source === 'string';\n    const src = isRemote ? {uri: source} : source;\n    return <Image style={style} source={src} />;\n  };\n  _renderTitle = (title) => {\n    if (this.props.renderTitle) {\n      return this.props.renderTitle(this.props, this.alertData);\n    }\n    if (!title || title.length === 0) {\n      return null;\n    }\n    const {titleTextProps, titleStyle, titleNumOfLines} = this.props;\n    return (\n      <Text\n        {...titleTextProps}\n        style={titleStyle}\n        numberOfLines={titleNumOfLines}>\n        {title}\n      </Text>\n    );\n  };\n  _renderMessage = (message) => {\n    if (this.props.renderMessage) {\n      return this.props.renderMessage(this.props, this.alertData);\n    }\n    if (!message || message.length === 0) {\n      return null;\n    }\n    const {messageTextProps, messageStyle, messageNumOfLines} = this.props;\n    return (\n      <Text\n        {...messageTextProps}\n        style={messageStyle}\n        numberOfLines={messageNumOfLines}>\n        {message}\n      </Text>\n    );\n  };\n  _renderCancel = (show = false) => {\n    if (!show) {\n      return null;\n    }\n    const {\n      renderCancel,\n      cancelBtnStyle,\n      cancelBtnImageSrc,\n      cancelBtnImageStyle,\n    } = this.props;\n    if (renderCancel) {\n      return renderCancel(this.props, this.alertData);\n    }\n    return (\n      <TouchableOpacity\n        style={cancelBtnStyle}\n        onPress={() => this.closeAction(ACTION.cancel)}>\n        {this._renderImage(cancelBtnImageSrc, cancelBtnImageStyle)}\n      </TouchableOpacity>\n    );\n  };\n  render() {\n    const {isOpen} = this.state;\n    if (!isOpen) {\n      return null;\n    }\n    const {\n      elevation,\n      zIndex,\n      wrapperStyle,\n      tapToCloseEnabled,\n      accessibilityLabel,\n      testID,\n      accessible,\n      contentContainerStyle,\n      defaultTextContainer,\n      startDelta,\n      endDelta,\n      translucent,\n      updateStatusBar,\n      showCancel,\n      imageStyle,\n    } = this.props;\n    const {topValue, height} = this.state;\n    const {type, payload, title, message} = this.alertData;\n    let style = this.getStyleForType(type);\n    let imageSrc = this.getSourceForType(type);\n    // imageSrc is overridden when payload has source property\n    // other than it existing and not an object there is no validation to ensure it is image source expected by Image\n    if (\n      payload &&\n      payload.hasOwnProperty('source') &&\n      payload.source &&\n      typeof payload.source !== 'object'\n    ) {\n      imageSrc = payload.source;\n    }\n    if (IS_ANDROID && translucent) {\n      style = [style, {paddingTop: StatusBar.currentHeight}];\n    }\n    this.updateStatusBar(updateStatusBar, true);\n    const outputRange = this.getOutputRange(height, startDelta, endDelta);\n    let wrapperAnimStyle = {\n      transform: [\n        {\n          translateY: this.animationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange,\n          }),\n        },\n      ],\n      position: 'absolute',\n      top: topValue,\n      left: 0,\n      right: 0,\n      elevation: elevation,\n    };\n    if (zIndex != null) {\n      wrapperAnimStyle.zIndex = zIndex;\n    }\n    let ContentView = SafeAreaView;\n    if (IS_IOS_BELOW_11 || IS_ANDROID) {\n      ContentView = View;\n    }\n    const activeOpacity = !tapToCloseEnabled || showCancel ? 1 : 0.95;\n    const onPress = !tapToCloseEnabled\n      ? null\n      : () => this.closeAction(ACTION.tap);\n    return (\n      <Animated.View\n        ref={(ref) => (this.mainView = ref)}\n        {...this.panResponder.panHandlers}\n        style={[wrapperAnimStyle, wrapperStyle]}>\n        <TouchableOpacity\n          activeOpacity={activeOpacity}\n          onPress={onPress}\n          disabled={!tapToCloseEnabled}\n          onLayout={(event) => this._onLayoutEvent(event)}\n          testID={testID}\n          accessibilityLabel={accessibilityLabel}\n          accessible={accessible}>\n          <View style={style}>\n            <ContentView style={StyleSheet.flatten(contentContainerStyle)}>\n              {this._renderImage(imageSrc, imageStyle)}\n              <View style={StyleSheet.flatten(defaultTextContainer)}>\n                {this._renderTitle(title)}\n                {this._renderMessage(message)}\n              </View>\n              {this._renderCancel(showCancel)}\n            </ContentView>\n          </View>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}