{"ast":null,"code":"import React, { useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector } from \"../../../store\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { WHITE } from \"../../../theme/colors\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { openDrawer } from \"../../../NavigationService\";\nimport { useTranslation } from 'react-i18next';\nimport FullScreenHighlightBox from \"../../Helpers/FullScreenHighlightBox\";\nimport Arrow from \"../../Icons/Arrow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BR = 20;\n\nvar ViewPassword = function ViewPassword(_ref) {\n  var navigation = _ref.navigation;\n  useFocusEffect(useCallback(function () {\n    openDrawer();\n  }, []));\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var password = useSelector(function (state) {\n    return state.user.password;\n  });\n  var editProfileMenuLayout = useSelector(function (state) {\n    return state.walkthrough.editProfileMenuLayout;\n  });\n  var editProfileTextLayout = useSelector(function (state) {\n    return state.walkthrough.editProfileTextLayout;\n  });\n  var headerHeight = useSelector(function (state) {\n    return state.walkthrough.headerHeight;\n  });\n  var editProfileX = (editProfileMenuLayout == null ? void 0 : editProfileMenuLayout.x) + BR + 20;\n  var editProfileY = (editProfileMenuLayout == null ? void 0 : editProfileMenuLayout.y) + headerHeight;\n  var editProfileWidth = (editProfileTextLayout == null ? void 0 : editProfileTextLayout.width) + (editProfileTextLayout == null ? void 0 : editProfileTextLayout.x) + 10 - BR * 2;\n  var heightPadding = DEVICE_LARGE ? 10 : 18;\n  var editProfileHeight = (editProfileMenuLayout == null ? void 0 : editProfileMenuLayout.height) + heightPadding - BR * 2;\n  var arrowLeft = editProfileX + editProfileWidth - 105;\n  var arrowTop = editProfileY + (editProfileMenuLayout == null ? void 0 : editProfileMenuLayout.height) / 2;\n  var infoBoxLeft = arrowLeft - 10 + 169 / 2;\n  var infoBoxTop = arrowTop + 250 - 48;\n  return _jsxs(View, {\n    style: styles.container,\n    testID: \"ViewPasswordWalkthrough\",\n    children: [_jsx(FullScreenHighlightBox, {\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      br: BR,\n      innerWidth: editProfileWidth,\n      innerHeight: editProfileHeight,\n      innerX: editProfileX,\n      innerY: editProfileY\n    }), _jsx(View, {\n      style: {\n        position: 'absolute',\n        left: arrowLeft,\n        top: arrowTop\n      },\n      children: _jsx(Arrow, {\n        color: WHITE,\n        height: 250\n      })\n    }), _jsx(View, {\n      style: [styles.infoBox, {\n        left: infoBoxLeft,\n        top: infoBoxTop\n      }],\n      children: _jsx(Text, {\n        style: styles.infoText,\n        children: password ? t('walkthroughs.text.viewPassword') : t('walkthroughs.text.setPassword')\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.bottomBtn, {\n        top: infoBoxTop + 120\n      }],\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      testID: \"ViewPasswordGotIt\",\n      children: _jsx(View, {\n        style: styles.gotItBorder,\n        children: _jsx(Text, {\n          style: styles.gotIt,\n          children: t('walkthroughs.text.gotIt')\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent'\n  },\n  infoBox: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: WHITE,\n    borderRadius: 10,\n    padding: 15\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    fontSize: fontSize[14],\n    lineHeight: 25\n  },\n  bottomBtn: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: '100%',\n    height: 100,\n    alignItems: 'center'\n  },\n  gotIt: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[18],\n    lineHeight: 25,\n    color: WHITE\n  },\n  gotItBorder: {\n    borderBottomWidth: 2,\n    borderBottomColor: WHITE\n  }\n});\nexport default ViewPassword;","map":{"version":3,"names":["React","useCallback","useSelector","useFocusEffect","WHITE","fontSize","DEVICE_LARGE","openDrawer","useTranslation","FullScreenHighlightBox","Arrow","BR","ViewPassword","navigation","t","password","state","user","editProfileMenuLayout","walkthrough","editProfileTextLayout","headerHeight","editProfileX","x","editProfileY","y","editProfileWidth","width","heightPadding","editProfileHeight","height","arrowLeft","arrowTop","infoBoxLeft","infoBoxTop","styles","container","goBack","position","left","top","infoBox","infoText","bottomBtn","gotItBorder","gotIt","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","borderRadius","padding","fontFamily","textAlign","lineHeight","bottom","right","color","borderBottomWidth","borderBottomColor"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/Walkthroughs/ViewPassword.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { useSelector } from '@/store';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { openDrawer } from '@/NavigationService';\nimport { useTranslation } from 'react-i18next';\nimport FullScreenHighlightBox from '@/components/Helpers/FullScreenHighlightBox';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport Arrow from '../../Icons/Arrow';\n\n// border radius for edit profile box\nconst BR = 20;\n\ntype props = StackScreenProps<ModalStackParamList, 'ViewPasswordWalkthrough'>;\n\nconst ViewPassword = ({ navigation }: props) => {\n  useFocusEffect(\n    useCallback(() => {\n      openDrawer();\n    }, []),\n  );\n  const { t } = useTranslation();\n\n  const password = useSelector((state: State) => state.user.password);\n\n  /**\n   * dimensions of edit profile button on the side bar\n   * {x, y, width, height}\n   */\n  const editProfileMenuLayout = useSelector(\n    (state: State) => state.walkthrough.editProfileMenuLayout,\n  );\n  const editProfileTextLayout = useSelector(\n    (state: State) => state.walkthrough.editProfileTextLayout,\n  );\n  const headerHeight = useSelector(\n    (state: State) => state.walkthrough.headerHeight,\n  );\n\n  /**\n   * Dimensions for the transparent box around Edit Profile in the side menu\n   */\n  // added 20 for padding, br for border radius\n  const editProfileX = editProfileMenuLayout?.x + BR + 20;\n  // added header height from home page\n  const editProfileY = editProfileMenuLayout?.y + headerHeight;\n  // use edit profile text to make sure the box fits all device sizes\n  const editProfileWidth =\n    editProfileTextLayout?.width + editProfileTextLayout?.x + 10 - BR * 2;\n  // added 10 for padding\n  const heightPadding = DEVICE_LARGE ? 10 : 18;\n  const editProfileHeight =\n    editProfileMenuLayout?.height + heightPadding - BR * 2;\n\n  // subtract 120 because the arrow point is 120 px left inside the svg\n  const arrowLeft = editProfileX + editProfileWidth - 105;\n\n  const arrowTop = editProfileY + editProfileMenuLayout?.height / 2;\n\n  /**\n   * Dimensions for the box with text about the password\n   */\n  const infoBoxLeft = arrowLeft - 10 + 169 / 2;\n  const infoBoxTop = arrowTop + 250 - 48;\n  return (\n    <View style={styles.container} testID=\"ViewPasswordWalkthrough\">\n      <FullScreenHighlightBox\n        onPress={() => {\n          navigation.goBack();\n        }}\n        br={BR}\n        innerWidth={editProfileWidth}\n        innerHeight={editProfileHeight}\n        innerX={editProfileX}\n        innerY={editProfileY}\n      />\n      <View\n        style={{\n          position: 'absolute',\n          left: arrowLeft,\n          top: arrowTop,\n        }}\n      >\n        <Arrow color={WHITE} height={250} />\n      </View>\n      <View style={[styles.infoBox, { left: infoBoxLeft, top: infoBoxTop }]}>\n        <Text style={styles.infoText}>\n          {password\n            ? t('walkthroughs.text.viewPassword')\n            : t('walkthroughs.text.setPassword')}\n        </Text>\n      </View>\n      <TouchableOpacity\n        style={[styles.bottomBtn, { top: infoBoxTop + 120 }]}\n        onPress={() => {\n          navigation.goBack();\n        }}\n        testID=\"ViewPasswordGotIt\"\n      >\n        <View style={styles.gotItBorder}>\n          <Text style={styles.gotIt}>{t('walkthroughs.text.gotIt')}</Text>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n\n  infoBox: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: WHITE,\n    borderRadius: 10,\n    padding: 15,\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    fontSize: fontSize[14],\n    lineHeight: 25,\n  },\n  bottomBtn: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: '100%',\n    height: 100,\n    alignItems: 'center',\n  },\n  gotIt: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[18],\n    lineHeight: 25,\n    color: WHITE,\n  },\n  gotItBorder: {\n    borderBottomWidth: 2,\n    borderBottomColor: WHITE,\n  },\n});\n\nexport default ViewPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}