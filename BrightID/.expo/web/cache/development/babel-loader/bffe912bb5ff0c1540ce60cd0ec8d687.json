{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport View from \"../../exports/View\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UnimplementedView = function (_React$Component) {\n  _inherits(UnimplementedView, _React$Component);\n\n  var _super = _createSuper(UnimplementedView);\n\n  function UnimplementedView() {\n    _classCallCheck(this, UnimplementedView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UnimplementedView, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: [unimplementedViewStyles, this.props.style],\n        children: this.props.children\n      });\n    }\n  }]);\n\n  return UnimplementedView;\n}(React.Component);\n\nvar unimplementedViewStyles = process.env.NODE_ENV !== 'production' ? {\n  alignSelf: 'flex-start',\n  borderColor: 'red',\n  borderWidth: 1\n} : {};\nexport default UnimplementedView;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/modules/UnimplementedView/index.js"],"names":["UnimplementedView","React","Component","unimplementedViewStyles","process","alignSelf","borderColor","borderWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;AAAA,OAAA,IAAA;AACA,OAAA,KAAA,MAAA,OAAA;;;AAKMA,IAAAA,iB;;;;;;;;;;;;;WACJ,SAAA,cAAA,GAAiB,C;;;WAIjB,SAAA,MAAA,GAAe;MACb,OAAO,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAE,CAAA,uBAAA,EAA0B,KAAA,KAAA,CAAvC,KAAa,CAAb;QAAA,QAAA,EAA2D,KAAA,KAAA,CAAlE;MAAO,CAAA,CAAP;;;;;EAN4BC,KAAK,CAACC,S,CAAhCF;;AAUN,IAAMG,uBAAuB,GAC3BC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GACI;EACEC,SAAS,EADX,YAAA;EAEEC,WAAW,EAFb,KAAA;EAGEC,WAAW,EAJjBH;AACI,CADJA,GADF,EAAA;AASA,eAAA,iBAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Node } from 'React';\n\nimport View from '../../exports/View';\nimport React from 'react';\n\n/**\n * Common implementation for a simple stubbed view.\n */\nclass UnimplementedView extends React.Component<*, *> {\n  setNativeProps() {\n    // Do nothing.\n  }\n\n  render(): Node {\n    return <View style={[unimplementedViewStyles, this.props.style]}>{this.props.children}</View>;\n  }\n}\n\nconst unimplementedViewStyles =\n  process.env.NODE_ENV !== 'production'\n    ? {\n        alignSelf: 'flex-start',\n        borderColor: 'red',\n        borderWidth: 1\n      }\n    : {};\n\nexport default UnimplementedView;\n"]},"metadata":{},"sourceType":"module"}