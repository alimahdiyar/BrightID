{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _apisauce = require(\"apisauce\");\n\nvar _deviceConstants = require(\"../utils/deviceConstants\");\n\nvar notificationUrl = 'https://notify.brightid.org';\n\nif (__DEV__) {\n  notificationUrl = 'https://notify-test.brightid.org';\n}\n\nvar NotificationService = function () {\n  function NotificationService() {\n    (0, _classCallCheck2.default)(this, NotificationService);\n    this.notifyApi = (0, _apisauce.create)({\n      baseURL: notificationUrl\n    });\n  }\n\n  (0, _createClass2.default)(NotificationService, [{\n    key: \"getToken\",\n    value: function getToken(_ref) {\n      var deviceToken, notificationToken, oldDeviceToken, res;\n      return _regenerator.default.async(function getToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              deviceToken = _ref.deviceToken, notificationToken = _ref.notificationToken, oldDeviceToken = _ref.oldDeviceToken;\n              _context.next = 3;\n              return _regenerator.default.awrap(this.notifyApi.post(\"/token\", {\n                deviceToken: deviceToken,\n                deviceOS: _deviceConstants.DEVICE_OS,\n                notificationToken: notificationToken,\n                oldDeviceToken: oldDeviceToken\n              }));\n\n            case 3:\n              res = _context.sent;\n              NotificationService.throwOnError(res);\n              return _context.abrupt(\"return\", res.data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"sendNotification\",\n    value: function sendNotification(_ref2) {\n      var notificationToken, type, payload, notificationTokens, res;\n      return _regenerator.default.async(function sendNotification$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              notificationToken = _ref2.notificationToken, type = _ref2.type, payload = _ref2.payload;\n              notificationTokens = [notificationToken];\n              _context2.next = 4;\n              return _regenerator.default.awrap(this.notifyApi.post(\"/push\", {\n                notificationTokens: notificationTokens,\n                type: type,\n                payload: payload\n              }));\n\n            case 4:\n              res = _context2.sent;\n              console.log(res.data);\n              NotificationService.throwOnError(res);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"throwOnError\",\n    value: function throwOnError(response) {\n      if (response.ok) {\n        return;\n      }\n\n      if (response.data && response.data.errorMessage) {\n        throw new Error(response.data.errorMessage);\n      }\n\n      throw new Error(response.problem);\n    }\n  }]);\n  return NotificationService;\n}();\n\nvar notificationService = new NotificationService();\nvar _default = notificationService;\nexports.default = _default;","map":{"version":3,"names":["notificationUrl","__DEV__","NotificationService","notifyApi","create","baseURL","deviceToken","notificationToken","oldDeviceToken","post","deviceOS","DEVICE_OS","res","throwOnError","data","type","payload","notificationTokens","console","log","response","ok","errorMessage","Error","problem","notificationService"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/api/notificationService.ts"],"sourcesContent":["import { create, ApisauceInstance, ApiResponse } from 'apisauce';\nimport { DEVICE_OS } from '@/utils/deviceConstants';\n\nlet notificationUrl = 'https://notify.brightid.org';\nif (__DEV__) {\n  notificationUrl = 'https://notify-test.brightid.org';\n}\n\nclass NotificationService {\n  notifyApi: ApisauceInstance;\n\n  constructor() {\n    this.notifyApi = create({\n      baseURL: notificationUrl,\n    });\n  }\n\n  static throwOnError(response: ApiResponse<any>) {\n    if (response.ok) {\n      return;\n    }\n    if (response.data && response.data.errorMessage) {\n      throw new Error(response.data.errorMessage);\n    }\n    throw new Error(response.problem);\n  }\n\n  async getToken({ deviceToken, notificationToken, oldDeviceToken }) {\n    const res = await this.notifyApi.post(`/token`, {\n      deviceToken,\n      deviceOS: DEVICE_OS,\n      notificationToken,\n      oldDeviceToken,\n    });\n    NotificationService.throwOnError(res);\n    return res.data;\n  }\n\n  async sendNotification({\n    notificationToken,\n    type,\n    payload,\n  }: {\n    notificationToken: string;\n    type: string;\n    payload: {\n      [val: string]: string;\n    };\n  }) {\n    const notificationTokens = [notificationToken];\n    const res = await this.notifyApi.post(`/push`, {\n      notificationTokens,\n      type,\n      payload,\n    });\n\n    console.log(res.data);\n\n    NotificationService.throwOnError(res);\n    // return res.data;\n  }\n}\n\nconst notificationService = new NotificationService();\n\nexport default notificationService;\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAIA,eAAe,GAAG,6BAAtB;;AACA,IAAIC,OAAJ,EAAa;EACXD,eAAe,GAAG,kCAAlB;AACD;;IAEKE,mB;EAGJ,+BAAc;IAAA;IACZ,KAAKC,SAAL,GAAiB,IAAAC,gBAAA,EAAO;MACtBC,OAAO,EAAEL;IADa,CAAP,CAAjB;EAGD;;;;WAYD;MAAA;MAAA;QAAA;UAAA;YAAA;cAAiBM,WAAjB,QAAiBA,WAAjB,EAA8BC,iBAA9B,QAA8BA,iBAA9B,EAAiDC,cAAjD,QAAiDA,cAAjD;cAAA;cAAA,kCACoB,KAAKL,SAAL,CAAeM,IAAf,WAA8B;gBAC9CH,WAAW,EAAXA,WAD8C;gBAE9CI,QAAQ,EAAEC,0BAFoC;gBAG9CJ,iBAAiB,EAAjBA,iBAH8C;gBAI9CC,cAAc,EAAdA;cAJ8C,CAA9B,CADpB;;YAAA;cACQI,GADR;cAOEV,mBAAmB,CAACW,YAApB,CAAiCD,GAAjC;cAPF,iCAQSA,GAAG,CAACE,IARb;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WAWA;MAAA;MAAA;QAAA;UAAA;YAAA;cACEP,iBADF,SACEA,iBADF,EAEEQ,IAFF,SAEEA,IAFF,EAGEC,OAHF,SAGEA,OAHF;cAWQC,kBAXR,GAW6B,CAACV,iBAAD,CAX7B;cAAA;cAAA,kCAYoB,KAAKJ,SAAL,CAAeM,IAAf,UAA6B;gBAC7CQ,kBAAkB,EAAlBA,kBAD6C;gBAE7CF,IAAI,EAAJA,IAF6C;gBAG7CC,OAAO,EAAPA;cAH6C,CAA7B,CAZpB;;YAAA;cAYQJ,GAZR;cAkBEM,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACE,IAAhB;cAEAZ,mBAAmB,CAACW,YAApB,CAAiCD,GAAjC;;YApBF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;WArBA,sBAAoBQ,QAApB,EAAgD;MAC9C,IAAIA,QAAQ,CAACC,EAAb,EAAiB;QACf;MACD;;MACD,IAAID,QAAQ,CAACN,IAAT,IAAiBM,QAAQ,CAACN,IAAT,CAAcQ,YAAnC,EAAiD;QAC/C,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACN,IAAT,CAAcQ,YAAxB,CAAN;MACD;;MACD,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,OAAnB,CAAN;IACD;;;;;AAsCH,IAAMC,mBAAmB,GAAG,IAAIvB,mBAAJ,EAA5B;eAEeuB,mB"},"metadata":{},"sourceType":"script"}