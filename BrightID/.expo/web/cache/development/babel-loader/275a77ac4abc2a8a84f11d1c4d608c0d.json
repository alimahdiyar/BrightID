{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StackActions } from '@react-navigation/native';\nimport HeaderSegment from \"./HeaderSegment\";\nimport HeaderTitle from \"./HeaderTitle\";\nimport debounce from \"../../utils/debounce\";\nexport default React.memo(function Header(props) {\n  var scene = props.scene,\n      previous = props.previous,\n      layout = props.layout,\n      insets = props.insets,\n      navigation = props.navigation,\n      styleInterpolator = props.styleInterpolator;\n  var options = scene.descriptor.options;\n  var title = typeof options.headerTitle !== 'function' && options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.name;\n  var leftLabel;\n\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    var o = previous.descriptor.options;\n    leftLabel = typeof o.headerTitle !== 'function' && o.headerTitle !== undefined ? o.headerTitle : o.title !== undefined ? o.title : previous.route.name;\n  }\n\n  var goBack = React.useCallback(debounce(function () {\n    if (navigation.isFocused() && navigation.canGoBack()) {\n      navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n        source: scene.route.key\n      }));\n    }\n  }, 50), [navigation, scene.route.key]);\n  return React.createElement(HeaderSegment, _extends({}, options, {\n    insets: insets,\n    layout: layout,\n    scene: scene,\n    title: title,\n    leftLabel: leftLabel,\n    headerTitle: typeof options.headerTitle !== 'function' ? function (props) {\n      return React.createElement(HeaderTitle, props);\n    } : options.headerTitle,\n    onGoBack: previous ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});","map":{"version":3,"sources":["Header.tsx"],"names":["React","scene","previous","layout","insets","navigation","styleInterpolator","props","options","title","leftLabel","o","goBack","debounce","StackActions","source","headerTitle","onGoBack"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AAEA,OAAA,aAAA;AACA,OAAA,WAAA;AACA,OAAA,QAAA;AAGA,eAAeA,KAAK,CAALA,IAAAA,CAAW,SAAA,MAAA,CAAA,KAAA,EAAyC;EACjE,IACEC,KADF,GAOIM,KAPJ,CAAA,KAAA;EAAA,IAEEL,QAFF,GAOIK,KAPJ,CAAA,QAAA;EAAA,IAGEJ,MAHF,GAOII,KAPJ,CAAA,MAAA;EAAA,IAIEH,MAJF,GAOIG,KAPJ,CAAA,MAAA;EAAA,IAKEF,UALF,GAOIE,KAPJ,CAAA,UAAA;EAAA,IAMED,iBANF,GAOIC,KAPJ,CAAA,iBAAA;EAQA,IAAQC,OAAR,GAAoBP,KAAK,CAAzB,UAAoBA,CAApB,OAAA;EACA,IAAMQ,KAAK,GACT,OAAOD,OAAO,CAAd,WAAA,KAAA,UAAA,IACAA,OAAO,CAAPA,WAAAA,KADA,SAAA,GAEIA,OAAO,CAFX,WAAA,GAGIA,OAAO,CAAPA,KAAAA,KAAAA,SAAAA,GACAA,OAAO,CADPA,KAAAA,GAEAP,KAAK,CAALA,KAAAA,CANN,IAAA;EAQA,IAAA,SAAA;;EAIA,IAAIO,OAAO,CAAPA,eAAAA,KAAJ,SAAA,EAA2C;IACzCE,SAAS,GAAGF,OAAO,CADrB,eACEE;EADF,CAAA,MAEO,IAAA,QAAA,EAAc;IACnB,IAAMC,CAAC,GAAGT,QAAQ,CAARA,UAAAA,CAAV,OAAA;IAEAQ,SAAS,GACP,OAAOC,CAAC,CAAR,WAAA,KAAA,UAAA,IAAuCA,CAAC,CAADA,WAAAA,KAAvC,SAAA,GACIA,CAAC,CADL,WAAA,GAEIA,CAAC,CAADA,KAAAA,KAAAA,SAAAA,GACAA,CAAC,CADDA,KAAAA,GAEAT,QAAQ,CAARA,KAAAA,CAhCyD,IA2B/DQ;EASF;;EAAA,IAAME,MAAM,GAAGZ,KAAK,CAALA,WAAAA,CACba,QAAQ,CAAC,YAAM;IACb,IAAIR,UAAU,CAAVA,SAAAA,MAA0BA,UAAU,CAAxC,SAA8BA,EAA9B,EAAsD;MACpDA,UAAU,CAAVA,QAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKS,YAAY,CADjBT,GACKS,EADLT,CAAAA,EAAAA,EAAAA,EAAAA;QAEEU,MAAM,EAAEd,KAAK,CAALA,KAAAA,CAFVI;MAAAA,CAAAA,CAAAA;IAFI;EAAA,CAAA,EADKL,EACL,CADKA,EASb,CAAA,UAAA,EAAaC,KAAK,CAALA,KAAAA,CATf,GASE,CATaD,CAAf;EAYA,OACEA,KAAAA,CAAAA,aAAAA,CAAAA,aAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,OAAAA,EAAAA;IAEEI,MAAM,EAFRJ,MAAAA;IAGEG,MAAM,EAHRH,MAAAA;IAIEC,KAAK,EAJPD,KAAAA;IAKES,KAAK,EALPT,KAAAA;IAMEU,SAAS,EANXV,SAAAA;IAOEgB,WAAW,EACT,OAAOR,OAAO,CAAd,WAAA,KAAA,UAAA,GACKD,UAAD,KAACA,EAAD;MAAA,OAAkCP,KAAAA,CAAAA,aAAAA,CAAAA,WAAAA,EAAlC,KAAkCA,CAAlC;IADJ,CAAA,GAEIQ,OAAO,CAVfR,WAAAA;IAYEiB,QAAQ,EAAEf,QAAQ,GAAA,MAAA,GAZpBF,SAAAA;IAaEM,iBAAiB,EA9DRN;EAiDXA,CAAAA,CAAAA,CADF;AAhDF,CAAeA,CAAf","sourcesContent":["import * as React from 'react';\nimport { StackActions } from '@react-navigation/native';\n\nimport HeaderSegment from './HeaderSegment';\nimport HeaderTitle from './HeaderTitle';\nimport debounce from '../../utils/debounce';\nimport type { StackHeaderProps, StackHeaderTitleProps } from '../../types';\n\nexport default React.memo(function Header(props: StackHeaderProps) {\n  const {\n    scene,\n    previous,\n    layout,\n    insets,\n    navigation,\n    styleInterpolator,\n  } = props;\n  const { options } = scene.descriptor;\n  const title =\n    typeof options.headerTitle !== 'function' &&\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.name;\n\n  let leftLabel;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    const o = previous.descriptor.options;\n\n    leftLabel =\n      typeof o.headerTitle !== 'function' && o.headerTitle !== undefined\n        ? o.headerTitle\n        : o.title !== undefined\n        ? o.title\n        : previous.route.name;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      if (navigation.isFocused() && navigation.canGoBack()) {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: scene.route.key,\n        });\n      }\n    }, 50),\n    [navigation, scene.route.key]\n  );\n\n  return (\n    <HeaderSegment\n      {...options}\n      insets={insets}\n      layout={layout}\n      scene={scene}\n      title={title}\n      leftLabel={leftLabel}\n      headerTitle={\n        typeof options.headerTitle !== 'function'\n          ? (props: StackHeaderTitleProps) => <HeaderTitle {...props} />\n          : options.headerTitle\n      }\n      onGoBack={previous ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}