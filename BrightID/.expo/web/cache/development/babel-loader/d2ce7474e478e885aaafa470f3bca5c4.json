{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from \"./CurrentRenderContext\";\nexport default function useCurrentRender(_ref) {\n  var state = _ref.state,\n      navigation = _ref.navigation,\n      descriptors = _ref.descriptors;\n  var current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"sources":["useCurrentRender.tsx"],"names":["state","navigation","descriptors","current","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,oBAAA;AAeA,eAAe,SAAA,gBAAA,CAAA,IAAA,EAIH;EAHVA,IAAAA,KAGU,GAAA,IAAA,CAHVA,KAAAA;EAAAA,IACAC,UAEU,GAAA,IAAA,CAFVA,UADAD;EAAAA,IAEAE,WACU,GAAA,IAAA,CADVA,WAFAF;EAIA,IAAMG,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAhB,oBAAgBA,CAAhB;;EAEA,IAAID,OAAO,IAAIF,UAAU,CAAzB,SAAeA,EAAf,EAAuC;IACrCE,OAAO,CAAPA,OAAAA,GAAkBD,WAAW,CAACF,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAZE,GAAW,CAAXA,CAAlBC,OAAAA;EAEH;AAAA","sourcesContent":["import * as React from 'react';\nimport type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}