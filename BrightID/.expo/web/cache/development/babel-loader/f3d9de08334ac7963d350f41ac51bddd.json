{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { GREEN, WHITE } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var TasksProgress = function TasksProgress(_ref) {\n  var totalSteps = _ref.totalSteps,\n      currentSteps = _ref.currentSteps,\n      label = _ref.label;\n  var percentMissing = 100 - 100 / totalSteps * currentSteps;\n  return _jsxs(View, {\n    style: styles.progressContainer,\n    children: [_jsx(Text, {\n      style: styles.label,\n      adjustsFontSizeToFit: true,\n      children: \"\" + label\n    }), _jsx(View, {\n      style: styles.progressBar,\n      children: _jsx(View, {\n        style: styles.barFilled,\n        children: percentMissing > 0 ? _jsx(View, {\n          style: _objectSpread(_objectSpread({}, styles.barCleared), {}, {\n            width: percentMissing + \"%\"\n          })\n        }) : null\n      })\n    }), _jsx(Text, {\n      style: styles.steps,\n      children: currentSteps + \"/\" + totalSteps\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  progressContainer: {\n    paddingTop: DEVICE_LARGE ? 20 : 16,\n    paddingRight: 0,\n    paddingBottom: DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center'\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[13]\n  },\n  progressBar: {\n    flexGrow: 1,\n    marginLeft: DEVICE_LARGE ? 12 : 10,\n    marginRight: DEVICE_LARGE ? 12 : 10,\n    justifyContent: 'flex-end'\n  },\n  barFilled: {\n    height: DEVICE_LARGE ? 16 : 14,\n    backgroundColor: GREEN,\n    borderRadius: 10,\n    width: '100%'\n  },\n  barCleared: {\n    height: DEVICE_LARGE ? 16 : 14,\n    backgroundColor: WHITE,\n    borderRadius: 10,\n    borderColor: GREEN,\n    borderWidth: 1,\n    alignSelf: 'flex-end'\n  },\n  steps: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[14]\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TasksProgress.tsx"],"names":["TasksProgress","totalSteps","currentSteps","label","percentMissing","styles","width","StyleSheet","progressContainer","paddingTop","DEVICE_LARGE","paddingRight","paddingBottom","flexDirection","justifyContent","alignItems","fontFamily","fontStyle","fontSize","progressBar","flexGrow","marginLeft","marginRight","barFilled","height","backgroundColor","borderRadius","barCleared","borderColor","borderWidth","alignSelf","steps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAEA,SAAA,YAAA;AACA,SAAA,KAAA,EAAA,KAAA;AACA,SAAA,QAAA;;;AAQA,OAAO,IAAMA,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,IAAhBA,EAIU;EAHrBC,IAAAA,UAGqB,GAAA,IAAA,CAHrBA,UAAAA;EAAAA,IACAC,YAEqB,GAAA,IAAA,CAFrBA,YADAD;EAAAA,IAEAE,KACqB,GAAA,IAAA,CADrBA,KAFAF;EAIA,IAAMG,cAAc,GAAG,MAAO,MAAD,UAAC,GAA9B,YAAA;EACA,OACE,KAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAEC,MAAM,CAAnB,iBAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,KAAA;MAA2B,oBAAoB,EAA/C,IAAA;MAAA,QAAA,EAAA,KADF;IACE,CAAA,CADF,EAEE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,WAAA;MAAA,QAAA,EACE,IAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEA,MAAM,CAAnB,SAAA;QAAA,QAAA,EACGD,cAAc,GAAdA,CAAAA,GACC,IAAA,CAAA,IAAA,EAAA;UACE,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAOC,MAAM,CAAb,UAAA,CAAA,EAAA,EAAA,EAAA;YAA0BC,KAAK,EAAKF,cAAL,GAFvCA;UAEQ,CAAA;QADP,CAAA,CADDA,GAJP;MAGI,CAAA;IADF,CAAA,CAFF,EAWE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEC,MAAM,CAAnB,KAAA;MAAA,QAAA,EAA+BH,YAA/B,GAAA,GAA+BA,GAZnC;IAYI,CAAA,CAXF;EAAA,CAAA,CADF;AANK,CAAA;AAuBP,IAAMG,MAAM,GAAGE,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,iBAAiB,EAAE;IACjBC,UAAU,EAAEC,YAAY,GAAA,EAAA,GADP,EAAA;IAEjBC,YAAY,EAFK,CAAA;IAGjBC,aAAa,EAAEF,YAAY,GAAA,EAAA,GAHV,EAAA;IAIjBG,aAAa,EAJI,KAAA;IAKjBC,cAAc,EALG,eAAA;IAMjBR,KAAK,EANY,MAAA;IAOjBS,UAAU,EARmB;EACZ,CADY;EAU/BZ,KAAK,EAAE;IACLa,UAAU,EADL,gBAAA;IAELC,SAAS,EAFJ,QAAA;IAGLC,QAAQ,EAAEA,QAAQ,CAbW,EAaX;EAHb,CAVwB;EAe/BC,WAAW,EAAE;IACXC,QAAQ,EADG,CAAA;IAEXC,UAAU,EAAEX,YAAY,GAAA,EAAA,GAFb,EAAA;IAGXY,WAAW,EAAEZ,YAAY,GAAA,EAAA,GAHd,EAAA;IAIXI,cAAc,EAnBe;EAelB,CAfkB;EAqB/BS,SAAS,EAAE;IACTC,MAAM,EAAEd,YAAY,GAAA,EAAA,GADX,EAAA;IAETe,eAAe,EAFN,KAAA;IAGTC,YAAY,EAHH,EAAA;IAITpB,KAAK,EAzBwB;EAqBpB,CArBoB;EA2B/BqB,UAAU,EAAE;IACVH,MAAM,EAAEd,YAAY,GAAA,EAAA,GADV,EAAA;IAEVe,eAAe,EAFL,KAAA;IAGVC,YAAY,EAHF,EAAA;IAIVE,WAAW,EAJD,KAAA;IAKVC,WAAW,EALD,CAAA;IAMVC,SAAS,EAjCoB;EA2BnB,CA3BmB;EAmC/BC,KAAK,EAAE;IACLf,UAAU,EADL,gBAAA;IAELC,SAAS,EAFJ,QAAA;IAGLC,QAAQ,EAAEA,QAAQ,CAtCtB,EAsCsB;EAHb;AAnCwB,CAAlBX,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { GREEN, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\n\ntype TasksProgressProps = {\n  totalSteps: number;\n  currentSteps: number;\n  label: string;\n};\n\nexport const TasksProgress = function ({\n  totalSteps,\n  currentSteps,\n  label,\n}: TasksProgressProps) {\n  const percentMissing = 100 - (100 / totalSteps) * currentSteps;\n  return (\n    <View style={styles.progressContainer}>\n      <Text style={styles.label} adjustsFontSizeToFit={true}>{`${label}`}</Text>\n      <View style={styles.progressBar}>\n        <View style={styles.barFilled}>\n          {percentMissing > 0 ? (\n            <View\n              style={{ ...styles.barCleared, width: `${percentMissing}%` }}\n            />\n          ) : null}\n        </View>\n      </View>\n      <Text style={styles.steps}>{`${currentSteps}/${totalSteps}`}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  progressContainer: {\n    paddingTop: DEVICE_LARGE ? 20 : 16,\n    paddingRight: 0,\n    paddingBottom: DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[13],\n  },\n  progressBar: {\n    flexGrow: 1,\n    marginLeft: DEVICE_LARGE ? 12 : 10,\n    marginRight: DEVICE_LARGE ? 12 : 10,\n    justifyContent: 'flex-end',\n  },\n  barFilled: {\n    height: DEVICE_LARGE ? 16 : 14,\n    backgroundColor: GREEN,\n    borderRadius: 10,\n    width: '100%',\n  },\n  barCleared: {\n    height: DEVICE_LARGE ? 16 : 14,\n    backgroundColor: WHITE,\n    borderRadius: 10,\n    borderColor: GREEN,\n    borderWidth: 1,\n    alignSelf: 'flex-end',\n  },\n  steps: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[14],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}