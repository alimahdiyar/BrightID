{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"../../../store\";\nimport { useNavigation } from '@react-navigation/native';\nimport { fontSize } from \"../../../theme/fonts\";\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { setName } from \"../../../actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var NameScreen = function NameScreen() {\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var name = useSelector(function (state) {\n    return state.user.name;\n  });\n\n  var _useState = useState(name),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayName = _useState2[0],\n      setDisplayName = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    dispatch(setName(displayName));\n    navigation.navigate('SignUpPhoto');\n  };\n\n  var disabled = displayName.length < 2;\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: WHITE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsxs(View, {\n      style: styles.container,\n      testID: \"NameScreen\",\n      children: [_jsx(View, {\n        style: styles.descContainer,\n        children: _jsx(Text, {\n          style: styles.registerText,\n          children: t('signup.text.whatsYouName')\n        })\n      }), _jsxs(View, {\n        style: styles.midContainer,\n        children: [_jsx(TextInput, {\n          testID: \"editName\",\n          onChangeText: setDisplayName,\n          value: displayName,\n          placeholder: t('signup.placeholder.name'),\n          placeholderTextColor: DARKER_GREY,\n          style: styles.textInput,\n          autoCapitalize: \"words\",\n          autoCorrect: false,\n          textContentType: \"name\",\n          underlineColorAndroid: \"transparent\",\n          blurOnSubmit: true\n        }), _jsx(Text, {\n          style: styles.privacyText,\n          children: t('signup.text.nameNotShared')\n        })]\n      }), _jsx(View, {\n        style: styles.submitContainer,\n        children: _jsx(TouchableOpacity, {\n          style: [styles.submitBtn, {\n            opacity: disabled ? 0.7 : 1\n          }],\n          onPress: handleSubmit,\n          accessibilityLabel: t('signup.button.submit'),\n          disabled: disabled,\n          testID: \"submitName\",\n          children: _jsx(Text, {\n            style: styles.submitBtnText,\n            children: t('signup.button.submit')\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85\n  },\n  midContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10\n  },\n  privacyText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[11],\n    color: DARKER_GREY,\n    textAlign: 'center',\n    marginTop: DEVICE_LARGE ? 36 : 30,\n    width: '72%'\n  },\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: DEVICE_LARGE ? 85 : 70\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE\n  }\n});\nexport default NameScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/SignUpFlow/NameScreen.tsx"],"names":["NameScreen","dispatch","useDispatch","navigation","useNavigation","t","useTranslation","name","useSelector","state","displayName","setDisplayName","useState","handleSubmit","setName","disabled","styles","opacity","StyleSheet","orangeTop","backgroundColor","height","DEVICE_LARGE","width","zIndex","container","flex","borderTopLeftRadius","marginTop","overflow","descContainer","midContainer","alignItems","justifyContent","registerText","fontFamily","fontSize","textAlign","lineHeight","textInput","color","borderBottomWidth","borderBottomColor","paddingBottom","privacyText","submitContainer","marginBottom","submitBtn","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","submitBtnText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from '@/store';\nimport { useNavigation } from '@react-navigation/native';\nimport { fontSize } from '@/theme/fonts';\nimport { WHITE, BLACK, DARKER_GREY, ORANGE } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { setName } from '@/actions';\n\n/* Description */\n\n/* ======================================== */\n\n/**\n * Initial Onboarding screen of BrightID\n */\n\n/* Onboarding Screen */\n\n/* ======================================== */\nexport const NameScreen = () => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const { t } = useTranslation();\n\n  const name = useSelector((state: State) => state.user.name);\n  const [displayName, setDisplayName] = useState(name);\n  const handleSubmit = () => {\n    dispatch(setName(displayName));\n    navigation.navigate('SignUpPhoto');\n  };\n\n  const disabled = displayName.length < 2;\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"dark-content\"\n        backgroundColor={WHITE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"NameScreen\">\n        <View style={styles.descContainer}>\n          <Text style={styles.registerText}>\n            {t('signup.text.whatsYouName')}\n          </Text>\n        </View>\n        <View style={styles.midContainer}>\n          <TextInput\n            testID=\"editName\"\n            onChangeText={setDisplayName}\n            value={displayName}\n            placeholder={t('signup.placeholder.name')}\n            placeholderTextColor={DARKER_GREY}\n            style={styles.textInput}\n            autoCapitalize=\"words\"\n            autoCorrect={false}\n            textContentType=\"name\"\n            underlineColorAndroid=\"transparent\"\n            blurOnSubmit={true}\n          />\n          <Text style={styles.privacyText}>\n            {t('signup.text.nameNotShared')}\n          </Text>\n        </View>\n        <View style={styles.submitContainer}>\n          <TouchableOpacity\n            style={[styles.submitBtn, { opacity: disabled ? 0.7 : 1 }]}\n            onPress={handleSubmit}\n            accessibilityLabel={t('signup.button.submit')}\n            disabled={disabled}\n            testID=\"submitName\"\n          >\n            <Text style={styles.submitBtnText}>\n              {t('signup.button.submit')}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2,\n  },\n  descContainer: {\n    marginTop: DEVICE_LARGE ? 100 : 85,\n  },\n  midContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  registerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    textAlign: 'center',\n    lineHeight: DEVICE_LARGE ? 26 : 24,\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: BLACK,\n    borderBottomWidth: 1,\n    borderBottomColor: DARKER_GREY,\n    width: '60%',\n    textAlign: 'center',\n    paddingBottom: 10,\n  },\n  privacyText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[11],\n    color: DARKER_GREY,\n    textAlign: 'center',\n    marginTop: DEVICE_LARGE ? 36 : 30,\n    width: '72%',\n  },\n  submitContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: DEVICE_LARGE ? 85 : 70,\n  },\n  submitBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 180 : 160,\n    height: DEVICE_LARGE ? 50 : 45,\n    backgroundColor: ORANGE,\n    borderRadius: 100,\n    elevation: 1,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  submitBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: WHITE,\n  },\n});\n\nexport default NameScreen;\n"]},"metadata":{},"sourceType":"module"}