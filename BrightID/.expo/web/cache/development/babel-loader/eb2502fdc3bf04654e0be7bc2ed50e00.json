{"ast":null,"code":"export var isnan = function isnan(v) {\n  return Number.isNaN(v);\n};\nexport var isValidNumber = function isValidNumber(v) {\n  return typeof v === 'number' && !Number.isNaN(v);\n};\nexport var TEST_MIN_IF_NOT_NAN = function TEST_MIN_IF_NOT_NAN(value, limit) {\n  return !isnan(limit) && (limit < 0 && value <= limit || limit >= 0 && value >= limit);\n};\nexport var VEC_LEN_SQ = function VEC_LEN_SQ() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 0 : _ref$y;\n\n  return x * x + y * y;\n};\nexport var TEST_MAX_IF_NOT_NAN = function TEST_MAX_IF_NOT_NAN(value, max) {\n  return !isnan(max) && (max < 0 && value < max || max >= 0 && value > max);\n};\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n\n  return setTimeout(function () {\n    return method();\n  }, interval);\n}","map":{"version":3,"sources":["utils.ts"],"names":["isnan","Number","isValidNumber","TEST_MIN_IF_NOT_NAN","limit","value","VEC_LEN_SQ","x","y","TEST_MAX_IF_NOT_NAN","max","method","setTimeout"],"mappings":"AACA,OAAO,IAAMA,KAAK,GAALA,SAAAA,KAAAA,CAAQ,CAARA,EAAQ;EAAA,OAAgBC,MAAM,CAANA,KAAAA,CAAhB,CAAgBA,CAAhB;AAAd,CAAA;AAGP,OAAO,IAAMC,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,CAAhBA,EAAgB;EAAA,OAC3B,OAAA,CAAA,KAAA,QAAA,IAAyB,CAACD,MAAM,CAANA,KAAAA,CADC,CACDA,CADC;AAAtB,CAAA;AAGP,OAAO,IAAME,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,KAAtBA,EAAsB,KAAtBA,EAAsB;EAAA,OACjC,CAACH,KAAK,CAAN,KAAM,CAAN,KACEI,KAAK,GAALA,CAAAA,IAAaC,KAAK,IAAlBD,KAAAA,IAAiCA,KAAK,IAALA,CAAAA,IAAcC,KAAK,IAFrB,KACjC,CADiC;AAA5B,CAAA;AAGP,OAAO,IAAMC,UAAU,GAAVA,SAAAA,UAAAA,GAAa;EAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAA;EAAA,IAAA,MAAA,GAAA,IAAA,CAAA,CAAA;EAAA,IAAGC,CAAH,GAAA,MAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,MAAA;EAAA,IAAA,MAAA,GAAA,IAAA,CAAA,CAAA;EAAA,IAAUC,CAAV,GAAA,MAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,MAAA;;EAAA,OAA2BD,CAAC,GAADA,CAAAA,GAAQC,CAAC,GAApC,CAAA;AAAnB,CAAA;AACP,OAAO,IAAMC,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,KAAtBA,EAAsB,GAAtBA,EAAsB;EAAA,OACjC,CAACT,KAAK,CAAN,GAAM,CAAN,KAAiBU,GAAG,GAAHA,CAAAA,IAAWL,KAAK,GAAhBK,GAAAA,IAA4BA,GAAG,IAAHA,CAAAA,IAAYL,KAAK,GAD7B,GACjC,CADiC;AAA5B,CAAA;AAGP,OAAO,SAAA,iBAAA,CAAA,MAAA,EAAA,QAAA,EAGL;EACA,IAAI,CAAJ,QAAA,EAAe;IACbM,MAAM;IACN,OAAA,IAAA;EAEF;;EAAA,OAAOC,UAAU,CAAC,YAAA;IAAA,OAAMD,MAAN,EAAA;EAAD,CAAA,EAAjB,QAAiB,CAAjB;AACD","sourcesContent":["// TODO(TS) remove if not necessary after rewrite\nexport const isnan = (v: unknown) => Number.isNaN(v);\n\n// TODO(TS) remove if not necessary after rewrite\nexport const isValidNumber = (v: unknown) =>\n  typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value: number, limit: number): boolean =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value: number, max: number) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(\n  method: () => void,\n  interval?: number | boolean\n) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval);\n}\n"]},"metadata":{},"sourceType":"module"}