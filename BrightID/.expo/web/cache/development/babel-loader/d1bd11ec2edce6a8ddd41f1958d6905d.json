{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RestoreBackup = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _RestoreScreen = require(\"./RestoreScreen\");\n\nvar _colors = require(\"../../../theme/colors\");\n\nvar _fonts = require(\"../../../theme/fonts\");\n\nvar _deviceConstants = require(\"../../../utils/deviceConstants\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RestoreBackup.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar RestoreBackup = function RestoreBackup(_ref) {\n  var currentStep = _ref.currentStep,\n      doRestore = _ref.doRestore,\n      doSkip = _ref.doSkip,\n      password = _ref.password,\n      setPassword = _ref.setPassword,\n      totalItems = _ref.totalItems,\n      currentItem = _ref.currentItem;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      stateDescription = _useState2[0],\n      setStateDescription = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(true),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      showPasswordInput = _useState4[0],\n      setShowPasswordInput = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(undefined),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      iconData = _useState6[0],\n      setIconData = _useState6[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _react.useEffect)(function () {\n    switch (currentStep) {\n      case _RestoreScreen.BackupSteps.WAITING_ACCOUNT:\n        setIconData(undefined);\n        setStateDescription(t('restore.steps.waitingAccount', 'Waiting for account recovery'));\n        setShowPasswordInput(false);\n        break;\n\n      case _RestoreScreen.BackupSteps.WAITING_PASSWORD:\n        setIconData({\n          color: _colors.DARKER_GREY,\n          name: 'information-circle-outline'\n        });\n        setStateDescription(t('restore.steps.waitingPassword', 'Enter password or skip'));\n        setShowPasswordInput(true);\n        break;\n\n      case _RestoreScreen.BackupSteps.RESTORING_DATA:\n        setIconData(undefined);\n\n        if (totalItems) {\n          setStateDescription(t('restore.steps.restoringProgress', 'Restoring item {{currentItem}} of {{totalItems}}', {\n            totalItems: totalItems,\n            currentItem: currentItem\n          }));\n        } else {\n          setStateDescription(t('restore.steps.restoring', 'Restoring data ...'));\n        }\n\n        setShowPasswordInput(false);\n        break;\n\n      case _RestoreScreen.BackupSteps.COMPLETE:\n        setIconData({\n          color: _colors.GREEN,\n          name: 'checkmark-circle-outline'\n        });\n        setStateDescription(t('restore.steps.complete', 'Restore complete'));\n        setShowPasswordInput(false);\n        break;\n\n      case _RestoreScreen.BackupSteps.ERROR:\n        setIconData({\n          color: _colors.RED,\n          name: 'alert-circle-outline'\n        });\n        setStateDescription(t('restore.steps.error', 'Restore failed. Wrong password?'));\n        setShowPasswordInput(true);\n        break;\n\n      case _RestoreScreen.BackupSteps.SKIPPED:\n        setIconData({\n          color: _colors.DARKER_GREY,\n          name: 'checkmark-circle-outline'\n        });\n        setStateDescription(t('restore.steps.skipped', 'Restore skipped'));\n        setShowPasswordInput(false);\n        break;\n\n      default:\n        setIconData({\n          color: _colors.RED,\n          name: 'alert-circle-outline'\n        });\n        setStateDescription(\"Unhandled state \" + _RestoreScreen.BackupSteps[currentStep]);\n        break;\n    }\n  }, [currentItem, currentStep, t, totalItems]);\n  var submitDisabled = password.length < 1;\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.headerTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, t('restore.header.text', {\n    defaultValue: 'Part 2: Restore backup (optional)'\n  })), _react.default.createElement(_reactNative.Text, {\n    style: styles.headerInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, t('restore.info', {\n    defaultValue: 'With your backup password you can restore names and photos of all your connections and groups.'\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.statusContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, iconData ? _react.default.createElement(_Ionicons.default, {\n    style: {\n      alignSelf: 'center'\n    },\n    size: _deviceConstants.DEVICE_LARGE ? 64 : 44,\n    name: iconData.name,\n    color: iconData.color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }) : _react.default.createElement(_reactNativeSpinkit.default, {\n    isVisible: true,\n    size: _deviceConstants.DEVICE_LARGE ? 64 : 44,\n    type: \"Wave\",\n    color: _colors.ORANGE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.infoTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, stateDescription))), showPasswordInput && _react.default.createElement(_reactNative.View, {\n    style: styles.actionContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.textInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    onChangeText: setPassword,\n    value: password,\n    placeholder: t('restore.password.placeholder', 'Type your password'),\n    placeholderTextColor: _colors.DARKER_GREY,\n    style: styles.textInput,\n    autoCorrect: false,\n    textContentType: \"password\",\n    autoComplete: \"password\",\n    underlineColorAndroid: \"transparent\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [styles.submitButton, submitDisabled ? {\n      opacity: 0.5\n    } : {}],\n    onPress: doRestore,\n    accessibilityLabel: \"submit\",\n    disabled: submitDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.submitText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, t('restore.password.submit', 'Restore'))), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.skipButton,\n    onPress: doSkip,\n    accessibilityLabel: \"skip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.skipText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, t('restore.password.skip', 'Skip'))))));\n};\n\nexports.RestoreBackup = RestoreBackup;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  headerTextContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[20],\n    color: _colors.BLACK\n  },\n  headerInfoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    color: _colors.DARKER_GREY,\n    fontSize: _fonts.fontSize[12],\n    maxWidth: '90%',\n    marginTop: 5\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginLeft: 20,\n    alignItems: 'center'\n  },\n  infoTextContainer: {\n    flex: 1,\n    marginLeft: 10\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.BLACK\n  },\n  actionContainer: {\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  textInputContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: _fonts.fontSize[14],\n    color: _colors.DARKER_GREY,\n    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderBottomColor: _colors.DARKER_GREY,\n    width: '90%',\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: _deviceConstants.DEVICE_LARGE ? 20 : 16\n  },\n  submitButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: _deviceConstants.DEVICE_LARGE ? 120 : 100,\n    height: _deviceConstants.DEVICE_LARGE ? 46 : 40,\n    borderRadius: 60,\n    backgroundColor: _colors.ORANGE,\n    shadowColor: _colors.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4\n  },\n  submitText: {\n    fontFamily: 'Poppins-Bold',\n    color: _colors.WHITE,\n    fontSize: _fonts.fontSize[16]\n  },\n  skipButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderColor: _colors.ORANGE,\n    borderWidth: 1,\n    borderRadius: 60,\n    width: _deviceConstants.DEVICE_LARGE ? 120 : 100,\n    height: _deviceConstants.DEVICE_LARGE ? 46 : 40,\n    marginLeft: _deviceConstants.DEVICE_LARGE ? 20 : 16\n  },\n  skipText: {\n    fontFamily: 'Poppins-Medium',\n    color: _colors.ORANGE,\n    fontSize: _fonts.fontSize[16]\n  }\n});","map":{"version":3,"names":["RestoreBackup","currentStep","doRestore","doSkip","password","setPassword","totalItems","currentItem","useState","stateDescription","setStateDescription","showPasswordInput","setShowPasswordInput","undefined","iconData","setIconData","useTranslation","t","useEffect","BackupSteps","WAITING_ACCOUNT","WAITING_PASSWORD","color","DARKER_GREY","name","RESTORING_DATA","COMPLETE","GREEN","ERROR","RED","SKIPPED","submitDisabled","length","styles","container","headerTextContainer","headerText","defaultValue","headerInfoText","statusContainer","alignSelf","DEVICE_LARGE","ORANGE","infoTextContainer","infoText","actionContainer","textInputContainer","textInput","buttonContainer","submitButton","opacity","submitText","skipButton","skipText","StyleSheet","create","justifyContent","alignItems","width","fontFamily","fontSize","BLACK","textAlign","maxWidth","marginTop","flexDirection","marginLeft","flex","borderBottomWidth","hairlineWidth","borderBottomColor","height","borderRadius","backgroundColor","shadowColor","shadowOffset","shadowRadius","WHITE","borderColor","borderWidth"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RestoreBackup.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport Spinner from 'react-native-spinkit';\nimport IonIcons from 'react-native-vector-icons/Ionicons';\nimport { BackupSteps } from '@/components/Onboarding/RecoveryFlow/RestoreScreen';\nimport { BLACK, DARKER_GREY, GREEN, ORANGE, RED, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\n\n/* Component to track backup restore */\ntype RestoreBackupParams = {\n  currentStep: BackupSteps;\n  password: string;\n  setPassword: (pass: string) => void;\n  doRestore: () => void;\n  doSkip: () => void;\n  totalItems: number;\n  currentItem: number;\n};\nexport const RestoreBackup = ({\n  currentStep,\n  doRestore,\n  doSkip,\n  password,\n  setPassword,\n  totalItems,\n  currentItem,\n}: RestoreBackupParams) => {\n  const [stateDescription, setStateDescription] = useState('');\n  const [showPasswordInput, setShowPasswordInput] = useState(true);\n  const [iconData, setIconData] =\n    useState<{ color: string; name: string }>(undefined);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    switch (currentStep) {\n      case BackupSteps.WAITING_ACCOUNT:\n        setIconData(undefined);\n        setStateDescription(\n          t('restore.steps.waitingAccount', 'Waiting for account recovery'),\n        );\n        setShowPasswordInput(false);\n        break;\n      case BackupSteps.WAITING_PASSWORD:\n        setIconData({ color: DARKER_GREY, name: 'information-circle-outline' });\n        setStateDescription(\n          t('restore.steps.waitingPassword', 'Enter password or skip'),\n        );\n        setShowPasswordInput(true);\n        break;\n      case BackupSteps.RESTORING_DATA:\n        setIconData(undefined);\n        if (totalItems) {\n          setStateDescription(\n            t(\n              'restore.steps.restoringProgress',\n              'Restoring item {{currentItem}} of {{totalItems}}',\n              { totalItems, currentItem },\n            ),\n          );\n        } else {\n          setStateDescription(\n            t('restore.steps.restoring', 'Restoring data ...'),\n          );\n        }\n        setShowPasswordInput(false);\n        break;\n      case BackupSteps.COMPLETE:\n        setIconData({ color: GREEN, name: 'checkmark-circle-outline' });\n        setStateDescription(t('restore.steps.complete', 'Restore complete'));\n        setShowPasswordInput(false);\n        break;\n      case BackupSteps.ERROR:\n        setIconData({ color: RED, name: 'alert-circle-outline' });\n        setStateDescription(\n          t('restore.steps.error', 'Restore failed. Wrong password?'),\n        );\n        setShowPasswordInput(true);\n        break;\n      case BackupSteps.SKIPPED:\n        setIconData({ color: DARKER_GREY, name: 'checkmark-circle-outline' });\n        setStateDescription(t('restore.steps.skipped', 'Restore skipped'));\n        setShowPasswordInput(false);\n        break;\n      default:\n        setIconData({ color: RED, name: 'alert-circle-outline' });\n        setStateDescription(`Unhandled state ${BackupSteps[currentStep]}`);\n        break;\n    }\n  }, [currentItem, currentStep, t, totalItems]);\n\n  const submitDisabled = password.length < 1;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headerTextContainer}>\n        <Text style={styles.headerText}>\n          {t('restore.header.text', {\n            defaultValue: 'Part 2: Restore backup (optional)',\n          })}\n        </Text>\n        <Text style={styles.headerInfoText}>\n          {t('restore.info', {\n            defaultValue:\n              'With your backup password you can restore names and photos of all your connections and groups.',\n          })}\n        </Text>\n      </View>\n      <View style={styles.statusContainer}>\n        <View>\n          {iconData ? (\n            <IonIcons\n              style={{ alignSelf: 'center' }}\n              size={DEVICE_LARGE ? 64 : 44}\n              name={iconData.name}\n              color={iconData.color}\n            />\n          ) : (\n            <Spinner\n              isVisible={true}\n              size={DEVICE_LARGE ? 64 : 44}\n              type=\"Wave\"\n              color={ORANGE}\n            />\n          )}\n        </View>\n        <View style={styles.infoTextContainer}>\n          <Text style={styles.infoText}>{stateDescription}</Text>\n        </View>\n      </View>\n      {showPasswordInput && (\n        <View style={styles.actionContainer}>\n          <View style={styles.textInputContainer}>\n            <TextInput\n              onChangeText={setPassword}\n              value={password}\n              placeholder={t(\n                'restore.password.placeholder',\n                'Type your password',\n              )}\n              placeholderTextColor={DARKER_GREY}\n              style={styles.textInput}\n              autoCorrect={false}\n              textContentType=\"password\"\n              autoComplete=\"password\"\n              underlineColorAndroid=\"transparent\"\n              secureTextEntry={true}\n            />\n          </View>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[\n                styles.submitButton,\n                submitDisabled ? { opacity: 0.5 } : {},\n              ]}\n              onPress={doRestore}\n              accessibilityLabel=\"submit\"\n              disabled={submitDisabled}\n            >\n              <Text style={styles.submitText}>\n                {t('restore.password.submit', 'Restore')}\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.skipButton}\n              onPress={doSkip}\n              accessibilityLabel=\"skip\"\n            >\n              <Text style={styles.skipText}>\n                {t('restore.password.skip', 'Skip')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  headerTextContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[20],\n    color: BLACK,\n  },\n  headerInfoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    color: DARKER_GREY,\n    fontSize: fontSize[12],\n    maxWidth: '90%',\n    marginTop: 5,\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginLeft: 20,\n    alignItems: 'center',\n  },\n  infoTextContainer: {\n    flex: 1,\n    marginLeft: 10,\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  actionContainer: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  textInputContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  textInput: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[14],\n    color: DARKER_GREY,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: DARKER_GREY,\n    width: '90%',\n    textAlign: 'center',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 20 : 16,\n  },\n  submitButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: DEVICE_LARGE ? 120 : 100,\n    height: DEVICE_LARGE ? 46 : 40,\n    borderRadius: 60,\n    backgroundColor: ORANGE,\n    shadowColor: BLACK,\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n  },\n  submitText: {\n    fontFamily: 'Poppins-Bold',\n    color: WHITE,\n    fontSize: fontSize[16],\n  },\n  skipButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderColor: ORANGE,\n    borderWidth: 1,\n    borderRadius: 60,\n    width: DEVICE_LARGE ? 120 : 100,\n    height: DEVICE_LARGE ? 46 : 40,\n    marginLeft: DEVICE_LARGE ? 20 : 16,\n  },\n  skipText: {\n    fontFamily: 'Poppins-Medium',\n    color: ORANGE,\n    fontSize: fontSize[16],\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}