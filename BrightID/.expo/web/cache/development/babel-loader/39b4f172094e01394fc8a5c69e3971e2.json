{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar Queue = function () {\n  function Queue() {\n    _classCallCheck(this, Queue);\n\n    this.data = [];\n  }\n\n  _createClass(Queue, [{\n    key: \"firstItem\",\n    get: function get() {\n      if (!this.isEmpty) {\n        return this.data[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.length;\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.size === 0;\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(item) {\n      this.data.push(item);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      if (!this.isEmpty) {\n        this.data.shift();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.data = [];\n    }\n  }]);\n\n  return Queue;\n}();\n\nexport { Queue as default };","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-dropdownalert/Queue.js"],"names":["Queue"],"mappings":";;;AAAqBA,IAAAA,K;EACnB,SAAA,KAAA,GAAc;IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;IACZ,KAAA,IAAA,GAAA,EAAA;;;;;SAEF,SAAA,GAAA,GAAgB;MACd,IAAI,CAAC,KAAL,OAAA,EAAmB;QACjB,OAAO,KAAA,IAAA,CAAP,CAAO,CAAP;MAEF;;MAAA,OAAA,IAAA;;;;SAEF,SAAA,GAAA,GAAW;MACT,OAAO,KAAA,IAAA,CAAP,MAAA;;;;SAEF,SAAA,GAAA,GAAc;MACZ,OAAO,KAAA,IAAA,KAAP,CAAA;;;;WAEF,SAAA,OAAA,CAAA,IAAA,EAAc;MACZ,KAAA,IAAA,CAAA,IAAA,CAAA,IAAA;;;;WAEF,SAAA,OAAA,GAAU;MACR,IAAI,CAAC,KAAL,OAAA,EAAmB;QACjB,KAAA,IAAA,CAAA,KAAA;MAEH;;;;WACD,SAAA,KAAA,GAAQ;MACN,KAAA,IAAA,GAAA,EAAA;;;;;GAzBiBA;;SAAAA,K","sourcesContent":["export default class Queue {\n  constructor() {\n    this.data = [];\n  }\n  get firstItem() {\n    if (!this.isEmpty) {\n      return this.data[0];\n    }\n    return null;\n  }\n  get size() {\n    return this.data.length;\n  }\n  get isEmpty() {\n    return this.size === 0;\n  }\n  enqueue(item) {\n    this.data.push(item);\n  }\n  dequeue() {\n    if (!this.isEmpty) {\n      this.data.shift();\n    }\n  }\n  clear() {\n    this.data = [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}