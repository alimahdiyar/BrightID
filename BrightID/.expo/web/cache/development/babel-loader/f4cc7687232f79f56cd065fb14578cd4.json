{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { combineReducers } from 'redux';\nimport { useDispatch as originalUseDispatch, useSelector as originalUseSelector } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport reducers from \"../reducer\";\nimport FsStorage from \"./storage/fsStorageAdapter\";\nimport KeychainStorage from \"./storage/keychainAdapter\";\nimport getStoredState from \"./getStoredState\";\nimport { appsMigrate } from \"./migrations/apps\";\nimport { connectionsMigrate } from \"./migrations/connections\";\nvar version = 11;\nvar fsPersistConfig = {\n  storage: FsStorage,\n  timeout: 0,\n  version: version,\n  getStoredState: getStoredState\n};\n\nvar appsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'apps',\n  migrate: appsMigrate\n});\n\nvar connectionsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'connections',\n  migrate: connectionsMigrate,\n  blacklist: ['searchParam', 'searchOpen', 'filters']\n});\n\nvar groupsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'groups',\n  blacklist: ['searchParam', 'searchOpen', 'newGroupInvitees']\n});\n\nvar notificationsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'notifications',\n  blacklist: ['activeNotification', 'sessionNotifications']\n});\n\nvar userPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'user',\n  blacklist: ['searchParam', 'migrated']\n});\n\nvar tasksPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'tasks'\n});\n\nvar devicesPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'devices'\n});\n\nvar socialMediaPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'socialMedia'\n});\n\nvar settingsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'settings',\n  blacklist: ['baseUrl']\n});\n\nvar operationsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'operations'\n});\n\nvar keypairPersistConfig = {\n  key: 'keypair',\n  storage: KeychainStorage,\n  timeout: 0,\n  version: version,\n  getStoredState: getStoredState,\n  serialize: false,\n  deserialize: false\n};\nvar rootReducer = combineReducers(_objectSpread(_objectSpread({}, reducers), {}, {\n  apps: persistReducer(appsPersistConfig, reducers.apps),\n  connections: persistReducer(connectionsPersistConfig, reducers.connections),\n  groups: persistReducer(groupsPersistConfig, reducers.groups),\n  keypair: persistReducer(keypairPersistConfig, reducers.keypair),\n  notifications: persistReducer(notificationsPersistConfig, reducers.notifications),\n  socialMedia: persistReducer(socialMediaPersistConfig, reducers.socialMedia),\n  tasks: persistReducer(tasksPersistConfig, reducers.tasks),\n  user: persistReducer(userPersistConfig, reducers.user),\n  settings: persistReducer(settingsPersistConfig, reducers.settings),\n  operations: persistReducer(operationsPersistConfig, reducers.operations),\n  devices: persistReducer(devicesPersistConfig, reducers.devices)\n}));\nexport var store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  })\n});\nexport var persistor = persistStore(store);\nexport var useDispatch = function useDispatch() {\n  return originalUseDispatch();\n};\nexport var useSelector = originalUseSelector;\nexport default store;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/store/index.ts"],"names":["useDispatch","useSelector","version","fsPersistConfig","storage","timeout","getStoredState","appsPersistConfig","key","migrate","connectionsPersistConfig","blacklist","groupsPersistConfig","notificationsPersistConfig","userPersistConfig","tasksPersistConfig","devicesPersistConfig","socialMediaPersistConfig","settingsPersistConfig","operationsPersistConfig","keypairPersistConfig","serialize","deserialize","rootReducer","combineReducers","apps","persistReducer","reducers","connections","groups","keypair","notifications","socialMedia","tasks","user","settings","operations","devices","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistor","persistStore","originalUseDispatch"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  useDispatch as originalUseDispatch,\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook,\n} from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport reducers from '@/reducer';\nimport FsStorage from './storage/fsStorageAdapter';\nimport KeychainStorage from './storage/keychainAdapter';\nimport getStoredState from './getStoredState';\nimport { appsMigrate } from './migrations/apps';\nimport { connectionsMigrate } from './migrations/connections';\n\n// update this in async migrate if changed to prevent require cycle\n\nconst version = 11;\n\nconst fsPersistConfig = {\n  storage: FsStorage,\n  timeout: 0,\n  // debug: __DEV__,\n  version,\n  getStoredState,\n};\n\nconst appsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'apps',\n  migrate: appsMigrate,\n};\n\nconst connectionsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'connections',\n  migrate: connectionsMigrate,\n  blacklist: ['searchParam', 'searchOpen', 'filters'],\n};\n\nconst groupsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'groups',\n  blacklist: ['searchParam', 'searchOpen', 'newGroupInvitees'],\n};\n\nconst notificationsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'notifications',\n  blacklist: ['activeNotification', 'sessionNotifications'],\n};\n\nconst userPersistConfig = {\n  ...fsPersistConfig,\n  key: 'user',\n  blacklist: ['searchParam', 'migrated'],\n};\n\nconst tasksPersistConfig = {\n  ...fsPersistConfig,\n  key: 'tasks',\n};\n\nconst devicesPersistConfig = {\n  ...fsPersistConfig,\n  key: 'devices',\n};\n\nconst socialMediaPersistConfig = {\n  ...fsPersistConfig,\n  key: 'socialMedia',\n};\n\nconst settingsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'settings',\n  blacklist: ['baseUrl'],\n};\n\nconst operationsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'operations',\n};\n\nconst keypairPersistConfig = {\n  key: 'keypair',\n  storage: KeychainStorage,\n  timeout: 0,\n  // debug: __DEV__,\n  version,\n  getStoredState,\n  serialize: false,\n  deserialize: false,\n};\n\nconst rootReducer = combineReducers({\n  ...reducers,\n  apps: persistReducer(appsPersistConfig, reducers.apps),\n  connections: persistReducer(connectionsPersistConfig, reducers.connections),\n  groups: persistReducer(groupsPersistConfig, reducers.groups),\n  keypair: persistReducer(keypairPersistConfig, reducers.keypair),\n  notifications: persistReducer(\n    notificationsPersistConfig,\n    reducers.notifications,\n  ),\n  socialMedia: persistReducer(socialMediaPersistConfig, reducers.socialMedia),\n  tasks: persistReducer(tasksPersistConfig, reducers.tasks),\n  user: persistReducer(userPersistConfig, reducers.user),\n  settings: persistReducer(settingsPersistConfig, reducers.settings),\n  operations: persistReducer(operationsPersistConfig, reducers.operations),\n  devices: persistReducer(devicesPersistConfig, reducers.devices),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    // We have a bunch of non-serializable data like secret key etc.\n    // TODO For now disabled completely. Revisit later for fine-grained configuration.\n    serializableCheck: false,\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useDispatch = () => originalUseDispatch<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = originalUseSelector;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}