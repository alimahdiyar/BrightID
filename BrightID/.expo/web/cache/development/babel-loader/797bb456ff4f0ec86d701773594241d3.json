{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { addOperation, reportAndHideConnection } from \"../../../actions\";\nimport { backupUser } from \"../../Onboarding/RecoveryFlow/thunks/backupThunks\";\nimport { connection_levels } from \"../../../utils/constants\";\nexport var reportConnection = function reportConnection(_ref) {\n  var id = _ref.id,\n      reason = _ref.reason,\n      api = _ref.api;\n  return function _callee(dispatch, getState) {\n    var _getState, _getState$user, brightId, backupCompleted, op;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _getState = getState(), _getState$user = _getState.user, brightId = _getState$user.id, backupCompleted = _getState$user.backupCompleted;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(api.addConnection(brightId, id, connection_levels.REPORTED, Date.now(), reason));\n\n          case 4:\n            op = _context.sent;\n            dispatch(addOperation(op));\n            dispatch(reportAndHideConnection({\n              id: id,\n              reason: reason\n            }));\n\n            if (!backupCompleted) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(dispatch(backupUser()));\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t0 instanceof Error ? console.warn(_context.t0.message) : console.log(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};","map":{"version":3,"names":["addOperation","reportAndHideConnection","backupUser","connection_levels","reportConnection","id","reason","api","dispatch","getState","user","brightId","backupCompleted","addConnection","REPORTED","Date","now","op","Error","console","warn","message","log"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Connections/models/reportConnection.ts"],"sourcesContent":["import { addOperation, reportAndHideConnection } from '@/actions';\nimport { backupUser } from '@/components/Onboarding/RecoveryFlow/thunks/backupThunks';\nimport { connection_levels } from '@/utils/constants';\nimport { NodeApi } from '@/api/brightId';\n\nexport const reportConnection =\n  ({ id, reason, api }: { id: string; reason: ReportReason; api: NodeApi }) =>\n  async (dispatch: Dispatch, getState: GetState) => {\n    try {\n      const {\n        user: { id: brightId, backupCompleted },\n      } = getState();\n\n      // Change connection to REPORTED level\n      const op = await api.addConnection(\n        brightId,\n        id,\n        connection_levels.REPORTED,\n        Date.now(),\n        reason,\n      );\n      dispatch(addOperation(op));\n      // remove connection from local storage\n      dispatch(reportAndHideConnection({ id, reason }));\n      if (backupCompleted) {\n        await dispatch(backupUser());\n      }\n    } catch (err) {\n      err instanceof Error ? console.warn(err.message) : console.log(err);\n    }\n  };\n"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,uBAAvB;AACA,SAASC,UAAT;AACA,SAASC,iBAAT;AAGA,OAAO,IAAMC,gBAAgB,GAC3B,SADWA,gBACX;EAAA,IAAGC,EAAH,QAAGA,EAAH;EAAA,IAAOC,MAAP,QAAOA,MAAP;EAAA,IAAeC,GAAf,QAAeA,GAAf;EAAA,OACA,iBAAOC,QAAP,EAA2BC,QAA3B;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,YAIQA,QAAQ,EAJhB,6BAGMC,IAHN,EAGkBC,QAHlB,kBAGcN,EAHd,EAG4BO,eAH5B,kBAG4BA,eAH5B;YAAA;YAAA,iCAOqBL,GAAG,CAACM,aAAJ,CACfF,QADe,EAEfN,EAFe,EAGfF,iBAAiB,CAACW,QAHH,EAIfC,IAAI,CAACC,GAAL,EAJe,EAKfV,MALe,CAPrB;;UAAA;YAOUW,EAPV;YAcIT,QAAQ,CAACR,YAAY,CAACiB,EAAD,CAAb,CAAR;YAEAT,QAAQ,CAACP,uBAAuB,CAAC;cAAEI,EAAE,EAAFA,EAAF;cAAMC,MAAM,EAANA;YAAN,CAAD,CAAxB,CAAR;;YAhBJ,KAiBQM,eAjBR;cAAA;cAAA;YAAA;;YAAA;YAAA,iCAkBYJ,QAAQ,CAACN,UAAU,EAAX,CAlBpB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAqBI,uBAAegB,KAAf,GAAuBC,OAAO,CAACC,IAAR,CAAa,YAAIC,OAAjB,CAAvB,GAAmDF,OAAO,CAACG,GAAR,aAAnD;;UArBJ;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CADA;AAAA,CADK"},"metadata":{},"sourceType":"module"}