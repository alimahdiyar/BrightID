{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeApi = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _apisauce = require(\"apisauce\");\n\nvar _tweetnacl = _interopRequireDefault(require(\"tweetnacl\"));\n\nvar _fastJsonStableStringify = _interopRequireDefault(require(\"fast-json-stable-stringify\"));\n\nvar _encoding = require(\"../utils/encoding\");\n\nvar _brightidError = _interopRequireDefault(require(\"./brightidError\"));\n\nvar v = 6;\n\nvar NodeApi = function () {\n  function NodeApi(_ref) {\n    var url = _ref.url,\n        secretKey = _ref.secretKey,\n        id = _ref.id,\n        monitor = _ref.monitor;\n    (0, _classCallCheck2.default)(this, NodeApi);\n    this.baseUrlInternal = url;\n    this.id = id;\n    this.secretKey = secretKey;\n    this.api = (0, _apisauce.create)({\n      baseURL: this.apiUrl,\n      headers: {\n        'Cache-Control': 'no-cache'\n      },\n      timeout: 60 * 1000\n    });\n    monitor && this.api.addMonitor(function (response) {\n      return monitor(response);\n    });\n  }\n\n  (0, _createClass2.default)(NodeApi, [{\n    key: \"baseUrl\",\n    get: function get() {\n      return this.baseUrlInternal;\n    },\n    set: function set(url) {\n      this.baseUrlInternal = url;\n      this.api.setBaseURL(this.apiUrl);\n    }\n  }, {\n    key: \"apiUrl\",\n    get: function get() {\n      return this.baseUrl + \"/brightid/v\" + v;\n    }\n  }, {\n    key: \"submitOp\",\n    value: function submitOp(signedOp, message) {\n      var res, submittedOp;\n      return _regenerator.default.async(function submitOp$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(this.api.post(\"/operations\", signedOp));\n\n            case 2:\n              res = _context.sent;\n              NodeApi.throwOnError(res);\n              submittedOp = signedOp;\n              submittedOp.hash = NodeApi.checkHash(res, message);\n              submittedOp.postTimestamp = Date.now();\n              return _context.abrupt(\"return\", submittedOp);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"requiresCredentials\",\n    value: function requiresCredentials() {\n      if (this.id === undefined || this.secretKey === undefined) {\n        throw new Error('Missing API credentials');\n      }\n    }\n  }, {\n    key: \"addConnection\",\n    value: function addConnection(id1, id2, level, timestamp, reportReason, requestProof, fakeUser) {\n      var sk, name, op, message;\n      return _regenerator.default.async(function addConnection$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.requiresCredentials();\n              sk = fakeUser ? (0, _encoding.b64ToUint8Array)(fakeUser.secretKey) : this.secretKey;\n              name = 'Connect';\n              op = {\n                name: name,\n                id1: id1,\n                id2: id2,\n                level: level,\n                timestamp: timestamp,\n                v: v\n              };\n\n              if (reportReason) {\n                op.reportReason = reportReason;\n              }\n\n              if (requestProof) {\n                op.requestProof = requestProof;\n              }\n\n              message = (0, _fastJsonStableStringify.default)(op);\n              console.log(\"Connect message: \" + message);\n              op.sig1 = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), sk));\n              return _context2.abrupt(\"return\", this.submitOp(op, message));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"createGroup\",\n    value: function createGroup(groupId, url, type) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function createGroup$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Add Group';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                group: groupId,\n                url: url,\n                type: type,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context3.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(dismissee, group) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function dismiss$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Dismiss';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                dismisser: this.id,\n                dismissee: dismissee,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context4.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"invite\",\n    value: function invite(invitee, group, data) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function invite$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Invite';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                inviter: this.id,\n                invitee: invitee,\n                group: group,\n                data: data,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context5.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addAdmin\",\n    value: function addAdmin(newAdmin, group) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function addAdmin$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Add Admin';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                admin: newAdmin,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context6.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"deleteGroup\",\n    value: function deleteGroup(group) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function deleteGroup$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Remove Group';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context7.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"joinGroup\",\n    value: function joinGroup(group, fakeUser) {\n      var brightId, secretKey, name, timestamp, op, message;\n      return _regenerator.default.async(function joinGroup$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this.requiresCredentials();\n\n              if (fakeUser) {\n                brightId = fakeUser.id;\n                secretKey = (0, _encoding.b64ToUint8Array)(fakeUser.secretKey);\n              } else {\n                brightId = this.id;\n                secretKey = this.secretKey;\n              }\n\n              name = 'Add Membership';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: brightId,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), secretKey));\n              return _context8.abrupt(\"return\", this.submitOp(op, message));\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"leaveGroup\",\n    value: function leaveGroup(group) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function leaveGroup$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Remove Membership';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context9.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"socialRecovery\",\n    value: function socialRecovery(params) {\n      var op, message;\n      return _regenerator.default.async(function socialRecovery$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              op = {\n                name: 'Social Recovery',\n                id: params.id,\n                signingKey: params.signingKey,\n                timestamp: params.timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.id1 = params.id1;\n              op.id2 = params.id2;\n              op.sig1 = params.sig1;\n              op.sig2 = params.sig2;\n              return _context10.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addSigningKey\",\n    value: function addSigningKey(signingKey) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function addSigningKey$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Add Signing Key';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                signingKey: signingKey,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context11.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"removeSigningKey\",\n    value: function removeSigningKey(signingKey) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function removeSigningKey$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Remove Signing Key';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                signingKey: signingKey,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              return _context12.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"linkContextId\",\n    value: function linkContextId(context, contextId) {\n      var name, timestamp, op, message, api, res, submittedOp;\n      return _regenerator.default.async(function linkContextId$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Link ContextId';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                context: context,\n                contextId: contextId,\n                timestamp: timestamp,\n                v: 5\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              op.sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(message), this.secretKey));\n              api = (0, _apisauce.create)({\n                baseURL: this.baseUrl + \"/brightid/v5\",\n                headers: {\n                  'Cache-Control': 'no-cache'\n                }\n              });\n              _context13.next = 9;\n              return _regenerator.default.awrap(api.post(\"/operations\", op));\n\n            case 9:\n              res = _context13.sent;\n              NodeApi.throwOnError(res);\n              submittedOp = op;\n              submittedOp.hash = NodeApi.checkHash(res, message);\n              submittedOp.postTimestamp = Date.now();\n              return _context13.abrupt(\"return\", submittedOp);\n\n            case 15:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(id) {\n      var res;\n      return _regenerator.default.async(function getGroup$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/groups/\" + id));\n\n            case 2:\n              res = _context14.sent;\n              NodeApi.throwOnError(res);\n              return _context14.abrupt(\"return\", res.data.data);\n\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(id) {\n      var requester, url, res;\n      return _regenerator.default.async(function getProfile$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              requester = this.id;\n              url = \"/users/\" + id + \"/profile/\" + (requester || '');\n              _context15.next = 4;\n              return _regenerator.default.awrap(this.api.get(url));\n\n            case 4:\n              res = _context15.sent;\n              NodeApi.throwOnError(res);\n              return _context15.abrupt(\"return\", res.data.data);\n\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getVerifications\",\n    value: function getVerifications(id) {\n      var res;\n      return _regenerator.default.async(function getVerifications$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/users/\" + id + \"/verifications\"));\n\n            case 2:\n              res = _context16.sent;\n              NodeApi.throwOnError(res);\n              return _context16.abrupt(\"return\", res.data.data.verifications);\n\n            case 5:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getConnections\",\n    value: function getConnections(id, direction) {\n      var _data;\n\n      var res;\n      return _regenerator.default.async(function getConnections$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/users/\" + id + \"/connections/\" + direction));\n\n            case 2:\n              res = _context17.sent;\n              NodeApi.throwOnError(res);\n              return _context17.abrupt(\"return\", (_data = res.data.data) == null ? void 0 : _data.connections);\n\n            case 5:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getMemberships\",\n    value: function getMemberships(id) {\n      var _data2;\n\n      var res;\n      return _regenerator.default.async(function getMemberships$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/users/\" + id + \"/memberships\"));\n\n            case 2:\n              res = _context18.sent;\n              NodeApi.throwOnError(res);\n              return _context18.abrupt(\"return\", (_data2 = res.data.data) == null ? void 0 : _data2.memberships);\n\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getInvites\",\n    value: function getInvites(id) {\n      var _data3;\n\n      var res;\n      return _regenerator.default.async(function getInvites$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/users/\" + id + \"/invites\"));\n\n            case 2:\n              res = _context19.sent;\n              NodeApi.throwOnError(res);\n              return _context19.abrupt(\"return\", (_data3 = res.data.data) == null ? void 0 : _data3.invites);\n\n            case 5:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getOperationState\",\n    value: function getOperationState(opHash) {\n      var res;\n      return _regenerator.default.async(function getOperationState$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/operations/\" + opHash));\n\n            case 2:\n              res = _context20.sent;\n\n              if (!(res.status === 404)) {\n                _context20.next = 5;\n                break;\n              }\n\n              return _context20.abrupt(\"return\", {\n                state: 'unknown',\n                result: ''\n              });\n\n            case 5:\n              NodeApi.throwOnError(res);\n              return _context20.abrupt(\"return\", res.data.data);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getApps\",\n    value: function getApps() {\n      var _data4;\n\n      var res;\n      return _regenerator.default.async(function getApps$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/apps\"));\n\n            case 2:\n              res = _context21.sent;\n              NodeApi.throwOnError(res);\n              return _context21.abrupt(\"return\", (_data4 = res.data.data) == null ? void 0 : _data4.apps);\n\n            case 5:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      var res;\n      return _regenerator.default.async(function getState$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/state\"));\n\n            case 2:\n              res = _context22.sent;\n              NodeApi.throwOnError(res);\n              return _context22.abrupt(\"return\", res.data.data);\n\n            case 5:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getPublic\",\n    value: function getPublic(app, roundedTimestamp, verification) {\n      var res;\n      return _regenerator.default.async(function getPublic$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              console.log(15, app, roundedTimestamp, verification);\n              _context23.next = 3;\n              return _regenerator.default.awrap(this.api.get(\"/verifications/blinded/public\", {\n                app: app,\n                roundedTimestamp: roundedTimestamp,\n                verification: verification\n              }));\n\n            case 3:\n              res = _context23.sent;\n              NodeApi.throwOnError(res);\n              return _context23.abrupt(\"return\", res.data.data.public);\n\n            case 6:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getBlindedSig\",\n    value: function getBlindedSig(pub, sig, e) {\n      var res;\n      return _regenerator.default.async(function getBlindedSig$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/verifications/blinded/sig/\" + this.id, {\n                public: pub,\n                sig: sig,\n                e: e\n              }));\n\n            case 2:\n              res = _context24.sent;\n              NodeApi.throwOnError(res);\n              return _context24.abrupt(\"return\", res.data.data.response);\n\n            case 5:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"linkAppId\",\n    value: function linkAppId(sig, appId) {\n      var res;\n      return _regenerator.default.async(function linkAppId$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              console.log(\"/verifications/\" + sig.app + \"/\" + appId);\n              console.log({\n                sig: sig.sig,\n                uid: sig.uid,\n                verification: sig.verification,\n                roundedTimestamp: sig.roundedTimestamp\n              });\n              _context25.next = 4;\n              return _regenerator.default.awrap(this.api.post(\"/verifications/\" + sig.app + \"/\" + appId, {\n                sig: sig.sig,\n                uid: sig.uid,\n                verification: sig.verification,\n                roundedTimestamp: sig.roundedTimestamp\n              }));\n\n            case 4:\n              res = _context25.sent;\n              NodeApi.throwOnError(res);\n\n            case 6:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"spendSponsorship\",\n    value: function spendSponsorship(appId, appUserId) {\n      var name, timestamp, op, message;\n      return _regenerator.default.async(function spendSponsorship$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              name = 'Spend Sponsorship';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                app: appId,\n                appUserId: appUserId,\n                timestamp: timestamp,\n                v: v\n              };\n              message = (0, _fastJsonStableStringify.default)(op);\n              return _context26.abrupt(\"return\", this.submitOp(op, message));\n\n            case 5:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSponsorship\",\n    value: function getSponsorship(appUserId) {\n      var res;\n      return _regenerator.default.async(function getSponsorship$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return _regenerator.default.awrap(this.api.get(\"/sponsorships/\" + appUserId));\n\n            case 2:\n              res = _context27.sent;\n              NodeApi.throwOnError(res);\n              return _context27.abrupt(\"return\", res.data.data);\n\n            case 5:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"checkHash\",\n    value: function checkHash(response, message) {\n      var _response$data$data, _response$data$data2;\n\n      if (((_response$data$data = response.data.data) == null ? void 0 : _response$data$data.hash) !== (0, _encoding.hash)(message)) {\n        throw new Error('Invalid operation hash returned from server');\n      }\n\n      return (_response$data$data2 = response.data.data) == null ? void 0 : _response$data$data2.hash;\n    }\n  }, {\n    key: \"throwOnError\",\n    value: function throwOnError(response) {\n      if (response.ok) {\n        return true;\n      } else if (response.data && response.data.errorNum) {\n        throw new _brightidError.default(response.data);\n      } else {\n        throw new Error(response.problem);\n      }\n    }\n  }]);\n  return NodeApi;\n}();\n\nexports.NodeApi = NodeApi;","map":{"version":3,"names":["v","NodeApi","url","secretKey","id","monitor","baseUrlInternal","api","create","baseURL","apiUrl","headers","timeout","addMonitor","response","setBaseURL","baseUrl","signedOp","message","post","res","throwOnError","submittedOp","hash","checkHash","postTimestamp","Date","now","undefined","Error","id1","id2","level","timestamp","reportReason","requestProof","fakeUser","requiresCredentials","sk","b64ToUint8Array","name","op","stringify","console","log","sig1","uInt8ArrayToB64","nacl","sign","detached","strToUint8Array","submitOp","groupId","type","group","sig","dismissee","dismisser","invitee","data","inviter","newAdmin","admin","brightId","params","signingKey","sig2","context","contextId","get","requester","verifications","direction","connections","memberships","invites","opHash","status","state","result","apps","app","roundedTimestamp","verification","public","pub","e","appId","uid","appUserId","ok","errorNum","BrightidError","problem"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/api/brightId.ts"],"sourcesContent":["import { create, ApisauceInstance, ApiResponse, ApiOkResponse } from 'apisauce';\nimport nacl from 'tweetnacl';\nimport stringify from 'fast-json-stable-stringify';\nimport {\n  strToUint8Array,\n  uInt8ArrayToB64,\n  hash,\n  b64ToUint8Array,\n} from '@/utils/encoding';\nimport BrightidError from '@/api/brightidError';\n\nconst v = 6;\n\nexport class NodeApi {\n  api: ApisauceInstance;\n\n  baseUrlInternal: string;\n\n  secretKey: Uint8Array | undefined;\n\n  id: string | undefined;\n\n  constructor({\n    url,\n    secretKey,\n    id,\n    monitor,\n  }: {\n    url: string;\n    secretKey: Uint8Array | undefined;\n    id: string | undefined;\n    monitor?: (response: ApiResponse<any>) => void;\n  }) {\n    this.baseUrlInternal = url;\n    this.id = id;\n    this.secretKey = secretKey;\n    this.api = create({\n      baseURL: this.apiUrl,\n      headers: { 'Cache-Control': 'no-cache' },\n      timeout: 60 * 1000, // one minute timeout for requests\n    });\n    monitor && this.api.addMonitor((response) => monitor(response));\n  }\n\n  get baseUrl() {\n    return this.baseUrlInternal;\n  }\n\n  set baseUrl(url: string) {\n    this.baseUrlInternal = url;\n    this.api.setBaseURL(this.apiUrl);\n  }\n\n  get apiUrl() {\n    return `${this.baseUrl}/brightid/v${v}`;\n  }\n\n  static checkHash(response: ApiOkResponse<OperationPostRes>, message: string) {\n    if (response.data.data?.hash !== hash(message)) {\n      throw new Error('Invalid operation hash returned from server');\n    }\n    return response.data.data?.hash;\n  }\n\n  static throwOnError(response: ApiResponse<NodeApiRes, ErrRes>) {\n    if (response.ok) {\n      return true;\n    } else if (response.data && (response.data as ErrRes).errorNum) {\n      throw new BrightidError(response.data as ErrRes);\n    } else {\n      throw new Error(response.problem);\n    }\n  }\n\n  async submitOp(signedOp: NodeOps, message: string): Promise<SubmittedOp> {\n    // post to node and check result\n    const res = await this.api.post<OperationPostRes, ErrRes>(\n      `/operations`,\n      signedOp,\n    );\n    NodeApi.throwOnError(res);\n\n    // posted successfully. Add hash and postTimestamp to op.\n    const submittedOp = signedOp as SubmittedOp;\n    submittedOp.hash = NodeApi.checkHash(\n      res as ApiOkResponse<OperationPostRes>,\n      message,\n    );\n    submittedOp.postTimestamp = Date.now();\n    return submittedOp;\n  }\n\n  requiresCredentials() {\n    if (this.id === undefined || this.secretKey === undefined) {\n      throw new Error('Missing API credentials');\n    }\n  }\n\n  async addConnection(\n    id1: string,\n    id2: string,\n    level: string,\n    timestamp: number,\n    reportReason?: ReportReason,\n    requestProof?: string,\n    fakeUser?: FakeUser,\n  ) {\n    this.requiresCredentials();\n    const sk = fakeUser ? b64ToUint8Array(fakeUser.secretKey) : this.secretKey;\n\n    const name = 'Connect';\n\n    const op: ConnectOp = {\n      name,\n      id1,\n      id2,\n      level,\n      timestamp,\n      v,\n    };\n\n    if (reportReason) {\n      op.reportReason = reportReason;\n    }\n    if (requestProof) {\n      op.requestProof = requestProof;\n    }\n\n    const message = stringify(op);\n    console.log(`Connect message: ${message}`);\n    op.sig1 = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), sk));\n    return this.submitOp(op, message);\n  }\n\n  async createGroup(groupId: string, url: string, type: string) {\n    this.requiresCredentials();\n    const name = 'Add Group';\n    const timestamp = Date.now();\n\n    const op: AddGroupOp = {\n      name,\n      id: this.id,\n      group: groupId,\n      url,\n      type,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async dismiss(dismissee: string, group: string) {\n    this.requiresCredentials();\n    const name = 'Dismiss';\n    const timestamp = Date.now();\n\n    const op: DismissOp = {\n      name,\n      dismisser: this.id,\n      dismissee,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async invite(invitee: string, group: string, data: string) {\n    this.requiresCredentials();\n    const name = 'Invite';\n    const timestamp = Date.now();\n\n    const op: InviteOp = {\n      name,\n      inviter: this.id,\n      invitee,\n      group,\n      data,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async addAdmin(newAdmin: string, group: string) {\n    this.requiresCredentials();\n    const name = 'Add Admin';\n    const timestamp = Date.now();\n\n    const op: AddAdminOp = {\n      name,\n      id: this.id,\n      admin: newAdmin,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async deleteGroup(group: string) {\n    this.requiresCredentials();\n    const name = 'Remove Group';\n    const timestamp = Date.now();\n\n    const op: RemoveGroupOp = {\n      name,\n      id: this.id,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async joinGroup(group: string, fakeUser?: FakeUser) {\n    this.requiresCredentials();\n    let brightId, secretKey;\n    if (fakeUser) {\n      brightId = fakeUser.id;\n      secretKey = b64ToUint8Array(fakeUser.secretKey);\n    } else {\n      // use real user data\n      brightId = this.id;\n      secretKey = this.secretKey;\n    }\n\n    const name = 'Add Membership';\n    const timestamp = Date.now();\n\n    const op: AddMembershipOp = {\n      name,\n      id: brightId,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async leaveGroup(group: string) {\n    this.requiresCredentials();\n    const name = 'Remove Membership';\n    const timestamp = Date.now();\n\n    const op: RemoveMembershipOp = {\n      name,\n      id: this.id,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async socialRecovery(params: {\n    id: string;\n    signingKey: string;\n    timestamp: number;\n    id1: string;\n    id2: string;\n    sig1: string;\n    sig2: string;\n  }) {\n    const op: SocialRecoveryOp = {\n      name: 'Social Recovery',\n      id: params.id,\n      signingKey: params.signingKey,\n      timestamp: params.timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.id1 = params.id1;\n    op.id2 = params.id2;\n    op.sig1 = params.sig1;\n    op.sig2 = params.sig2;\n    return this.submitOp(op, message);\n  }\n\n  async addSigningKey(signingKey: string) {\n    this.requiresCredentials();\n    const name = 'Add Signing Key';\n    const timestamp = Date.now();\n\n    const op: AddSigningKeyOp = {\n      name,\n      id: this.id,\n      signingKey,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async removeSigningKey(signingKey: string) {\n    this.requiresCredentials();\n    const name = 'Remove Signing Key';\n    const timestamp = Date.now();\n\n    const op: RemoveSigningKeyOp = {\n      name,\n      id: this.id,\n      signingKey,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  /*\n    The \"Link Context\" operation is only available on api version 5.\n    -> create local ApiSauceInstance with baseUrl .../v5 instead of default .../v6\n   */\n  async linkContextId(context: string, contextId: string) {\n    this.requiresCredentials();\n    const name = 'Link ContextId';\n    const timestamp = Date.now();\n\n    const op: LinkContextIdOp = {\n      name,\n      id: this.id,\n      context,\n      contextId,\n      timestamp,\n      v: 5,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    const api = create({\n      baseURL: `${this.baseUrl}/brightid/v5`,\n      headers: { 'Cache-Control': 'no-cache' },\n    });\n    const res = await api.post<OperationPostRes, ErrRes>(`/operations`, op);\n    NodeApi.throwOnError(res);\n    const submittedOp = op as SubmittedOp;\n    submittedOp.hash = NodeApi.checkHash(\n      res as ApiOkResponse<OperationPostRes>,\n      message,\n    );\n    submittedOp.postTimestamp = Date.now();\n    return submittedOp;\n  }\n\n  async getGroup(id: string) {\n    const res = await this.api.get<GroupRes, ErrRes>(`/groups/${id}`);\n    NodeApi.throwOnError(res);\n    return (res.data as GroupRes).data;\n  }\n\n  async getProfile(id: string) {\n    const requester = this.id;\n    const url = `/users/${id}/profile/${requester || ''}`;\n    const res = await this.api.get<UserProfileRes, ErrRes>(url);\n    NodeApi.throwOnError(res);\n    return (res.data as UserProfileRes).data;\n  }\n\n  async getVerifications(id: string) {\n    const res = await this.api.get<UserVerificationsRes, ErrRes>(\n      `/users/${id}/verifications`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserVerificationsRes).data.verifications;\n  }\n\n  async getConnections(id: string, direction: 'inbound' | 'outbound') {\n    const res = await this.api.get<UserConnectionsRes, ErrRes>(\n      `/users/${id}/connections/${direction}`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserConnectionsRes).data?.connections;\n  }\n\n  async getMemberships(id: string) {\n    const res = await this.api.get<UserMembershipsRes, ErrRes>(\n      `/users/${id}/memberships`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserMembershipsRes).data?.memberships;\n  }\n\n  async getInvites(id: string) {\n    const res = await this.api.get<UserInvitesRes, ErrRes>(\n      `/users/${id}/invites`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserInvitesRes).data?.invites;\n  }\n\n  async getOperationState(opHash: string) {\n    const res = await this.api.get<OperationRes, ErrRes>(\n      `/operations/${opHash}`,\n    );\n    if (res.status === 404) {\n      // operation is not existing on server. Don't throw an error, as a client might try to check\n      // operations sent by other clients without knowing if they have been submitted already.\n      return {\n        state: 'unknown',\n        result: '',\n      };\n    }\n    NodeApi.throwOnError(res);\n    return (res.data as OperationRes).data;\n  }\n\n  async getApps() {\n    const res = await this.api.get<AppsRes, ErrRes>(`/apps`);\n    NodeApi.throwOnError(res);\n    return (res.data as AppsRes).data?.apps;\n  }\n\n  async getState() {\n    const res = await this.api.get<StateRes, ErrRes>(`/state`);\n    NodeApi.throwOnError(res);\n    return (res.data as StateRes).data;\n  }\n\n  async getPublic(app: string, roundedTimestamp: number, verification: string) {\n    console.log(15, app, roundedTimestamp, verification);\n    const res = await this.api.get<PublicRes, ErrRes>(\n      `/verifications/blinded/public`,\n      { app, roundedTimestamp, verification },\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as PublicRes).data.public;\n  }\n\n  async getBlindedSig(pub: string, sig: string, e: string) {\n    const res = await this.api.get<BlindSigRes, ErrRes>(\n      `/verifications/blinded/sig/${this.id}`,\n      { public: pub, sig, e },\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as BlindSigRes).data.response;\n  }\n\n  async linkAppId(sig: SigInfo, appId: string) {\n    console.log(`/verifications/${sig.app}/${appId}`);\n    console.log({\n      sig: sig.sig,\n      uid: sig.uid,\n      verification: sig.verification,\n      roundedTimestamp: sig.roundedTimestamp,\n    });\n    const res = await this.api.post<OperationPostRes, ErrRes>(\n      `/verifications/${sig.app}/${appId}`,\n      {\n        sig: sig.sig,\n        uid: sig.uid,\n        verification: sig.verification,\n        roundedTimestamp: sig.roundedTimestamp,\n      },\n    );\n\n    NodeApi.throwOnError(res);\n  }\n\n  async spendSponsorship(appId: string, appUserId: string) {\n    const name = 'Spend Sponsorship';\n    const timestamp = Date.now();\n    const op: SpendSponsorshipOp = {\n      name,\n      app: appId,\n      appUserId,\n      timestamp,\n      v,\n    };\n    const message = stringify(op);\n    return this.submitOp(op, message);\n  }\n\n  async getSponsorship(appUserId: string) {\n    const res = await this.api.get<SponsorshipRes, ErrRes>(\n      `/sponsorships/${appUserId}`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as SponsorshipRes).data;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}