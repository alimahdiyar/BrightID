{"ast":null,"code":"'use strict';\n\nvar printWarning = function printWarning() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require(\"./lib/ReactPropTypesSecret\");\n\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function printWarning(text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n\n        try {\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n\n        if (error && !(error instanceof Error)) {\n          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n        }\n\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          loggedTypeFailures[error.message] = true;\n          var stack = getStack ? getStack() : '';\n          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n        }\n      }\n    }\n  }\n}\n\ncheckPropTypes.resetWarningCache = function () {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n};\n\nmodule.exports = checkPropTypes;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-spinkit/node_modules/prop-types/checkPropTypes.js"],"names":["printWarning","process","ReactPropTypesSecret","require","loggedTypeFailures","has","Function","Object","message","console","typeSpecs","err","Error","componentName","error","stack","getStack","checkPropTypes","module"],"mappings":"AAOA;;AAEA,IAAIA,YAAY,GAAG,SAAA,YAAA,GAAW,CAA9B,CAAA;;AAEA,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;EACzC,IAAIC,oBAAoB,GAAGC,OAA3B,8BAAA;;EACA,IAAIC,kBAAkB,GAAtB,EAAA;EACA,IAAIC,GAAG,GAAGC,QAAQ,CAARA,IAAAA,CAAAA,IAAAA,CAAmBC,MAAM,CAANA,SAAAA,CAA7B,cAAUD,CAAV;;EAEAN,YAAY,GAAG,SAAA,YAAA,CAAA,IAAA,EAAe;IAC5B,IAAIQ,OAAO,GAAG,cAAd,IAAA;;IACA,IAAI,OAAA,OAAA,KAAJ,WAAA,EAAoC;MAClCC,OAAO,CAAPA,KAAAA,CAAAA,OAAAA;IAEF;;IAAA,IAAI;MAIF,MAAM,IAAA,KAAA,CAAN,OAAM,CAAN;IACA,CALF,CAKE,OAAA,CAAA,EAAU,CACb;EAXDT,CAAAA;AAyBF;;AAAA,SAAA,cAAA,CAAA,SAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAA8E;EAC5E,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;IACzC,KAAK,IAAL,YAAA,IAAA,SAAA,EAAoC;MAClC,IAAII,GAAG,CAAA,SAAA,EAAP,YAAO,CAAP,EAAkC;QAChC,IAAA,KAAA;;QAIA,IAAI;UAGF,IAAI,OAAOK,SAAS,CAAhB,YAAgB,CAAhB,KAAJ,UAAA,EAAmD;YACjD,IAAIC,GAAG,GAAGC,KAAK,CACb,CAACC,aAAa,IAAd,aAAA,IAAA,IAAA,GAAA,QAAA,GAAA,SAAA,GAAA,YAAA,GAAA,gBAAA,GAAA,8EAAA,GACiF,OAAOH,SAAS,CADjG,YACiG,CADjG,GADF,IAAe,CAAf;YAIAC,GAAG,CAAHA,IAAAA,GAAAA,qBAAAA;YACA,MAAA,GAAA;UAEFG;;UAAAA,KAAK,GAAGJ,SAAS,CAATA,YAAS,CAATA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,aAAAA,EAAAA,QAAAA,EAAAA,IAAAA,EAARI,oBAAQJ,CAARI;QACA,CAZF,CAYE,OAAA,EAAA,EAAW;UACXA,KAAK,GAALA,EAAAA;QAEF;;QAAA,IAAIA,KAAK,IAAI,EAAEA,KAAK,YAApB,KAAa,CAAb,EAAwC;UACtCd,YAAY,CACV,CAACa,aAAa,IAAd,aAAA,IAAA,0BAAA,GAAA,QAAA,GAAA,IAAA,GAAA,YAAA,GAAA,iCAAA,GAAA,2DAAA,GAE8D,OAF9D,KAAA,GAAA,IAAA,GAAA,iEAAA,GAAA,gEAAA,GADFb,iCAAY,CAAZA;QASF;;QAAA,IAAIc,KAAK,YAALA,KAAAA,IAA0B,EAAEA,KAAK,CAALA,OAAAA,IAAhC,kBAA8B,CAA9B,EAAsE;UAGpEV,kBAAkB,CAACU,KAAK,CAAxBV,OAAkB,CAAlBA,GAAAA,IAAAA;UAEA,IAAIW,KAAK,GAAGC,QAAQ,GAAGA,QAAH,EAAA,GAApB,EAAA;UAEAhB,YAAY,CACV,YAAA,QAAA,GAAA,SAAA,GAAmCc,KAAK,CAAxC,OAAA,IAAoDC,KAAK,IAALA,IAAAA,GAAAA,KAAAA,GADtDf,EACE,CADU,CAAZA;QAIH;MACF;IACF;EACF;AAODiB;;AAAAA,cAAc,CAAdA,iBAAAA,GAAmC,YAAW;EAC5C,IAAIhB,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;IACzCG,kBAAkB,GAAlBA,EAAAA;EAEH;AAJDa,CAAAA;;AAMAC,MAAM,CAANA,OAAAA,GAAAA,cAAAA","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n"]},"metadata":{},"sourceType":"script"}