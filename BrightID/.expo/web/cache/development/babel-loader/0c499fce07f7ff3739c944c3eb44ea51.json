{"ast":null,"code":"import ReactNativePropRegistry from \"./ReactNativePropRegistry\";\nimport flattenStyle from \"./flattenStyle\";\nimport validate from \"./validate\";\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return flattenStyle(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        validate(key, styles);\n      }\n\n      var id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n  hairlineWidth: 1\n};\nexport default StyleSheet;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheet.js"],"names":["absoluteFillObject","position","left","right","top","bottom","absoluteFill","ReactNativePropRegistry","StyleSheet","compose","process","len","arguments","readableStyles","Array","flattenStyle","JSON","style1","create","result","Object","validate","id","styles","flatten","hairlineWidth"],"mappings":"AAQA,OAAA,uBAAA;AACA,OAAA,YAAA;AACA,OAAA,QAAA;AACA,IAAIA,kBAAkB,GAAG;EACvBC,QAAQ,EADe,UAAA;EAEvBC,IAAI,EAFmB,CAAA;EAGvBC,KAAK,EAHkB,CAAA;EAIvBC,GAAG,EAJoB,CAAA;EAKvBC,MAAM,EALR;AAAyB,CAAzB;AAOA,IAAIC,YAAY,GAAGC,uBAAuB,CAAvBA,QAAAA,CAAnB,kBAAmBA,CAAnB;AACA,IAAIC,UAAU,GAAG;EACfF,YAAY,EADG,YAAA;EAEfN,kBAAkB,EAFH,kBAAA;EAGfS,OAAO,EAAE,SAAA,OAAA,CAAA,MAAA,EAAA,MAAA,EAAiC;IACxC,IAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;MAEzC,IAAIC,GAAG,GAAGC,SAAS,CAAnB,MAAA;;MAEA,IAAID,GAAG,GAAP,CAAA,EAAa;QACX,IAAIE,cAAc,GAAGC,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAAA,GAAAA,CAA0C,UAAA,CAAA,EAAa;UAC1E,OAAOC,YAAY,CAAnB,CAAmB,CAAnB;QADF,CAAqBD,CAArB;QAGA,MAAM,IAAA,KAAA,CAAU,6DAAA,GAAA,GAAA,IAAA,GAA0EE,IAAI,CAAJA,SAAAA,CAA1F,cAA0FA,CAApF,CAAN;MAIH;IAED;;IAAA,IAAIC,MAAM,IAAV,MAAA,EAAsB;MACpB,OAAO,CAAA,MAAA,EAAP,MAAO,CAAP;IADF,CAAA,MAEO;MACL,OAAOA,MAAM,IAAb,MAAA;IAEH;EAvBc,CAAA;EAwBfC,MAAM,EAAE,SAAA,MAAA,CAAA,MAAA,EAAwB;IAC9B,IAAIC,MAAM,GAAV,EAAA;IACAC,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAA4B,UAAA,GAAA,EAAe;MACzC,IAAIV,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;QACzCW,QAAQ,CAAA,GAAA,EAARA,MAAQ,CAARA;MAGF;;MAAA,IAAIC,EAAE,GAAGC,MAAM,CAANA,GAAM,CAANA,IAAehB,uBAAuB,CAAvBA,QAAAA,CAAiCgB,MAAM,CAA/D,GAA+D,CAAvChB,CAAxB;MACAY,MAAM,CAANA,GAAM,CAANA,GAAAA,EAAAA;IANFC,CAAAA;IAQA,OAAA,MAAA;EAlCa,CAAA;EAoCfI,OAAO,EApCQ,YAAA;EAuCfC,aAAa,EAvCf;AAAiB,CAAjB;AAyCA,eAAA,UAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\nimport flattenStyle from './flattenStyle';\nimport validate from './validate';\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable prefer-rest-params */\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return flattenStyle(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n      /* eslint-enable prefer-rest-params */\n\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        validate(key, styles);\n      }\n\n      var id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n  // `hairlineWidth` is not implemented using screen density as browsers may\n  // round sub-pixel values down to `0`, causing the line not to be rendered.\n  hairlineWidth: 1\n};\nexport default StyleSheet;"]},"metadata":{},"sourceType":"module"}