{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport var RecoveryErrorType;\n\n(function (RecoveryErrorType) {\n  RecoveryErrorType[\"NONE\"] = \"NONE\";\n  RecoveryErrorType[\"GENERIC\"] = \"GENERIC\";\n  RecoveryErrorType[\"MISMATCH_ID\"] = \"MISMATCH_ID\";\n})(RecoveryErrorType || (RecoveryErrorType = {}));\n\nexport var RecoveryError = function (_Error) {\n  _inherits(RecoveryError, _Error);\n\n  var _super = _createSuper(RecoveryError);\n\n  function RecoveryError(type) {\n    var _this;\n\n    _classCallCheck(this, RecoveryError);\n\n    _this = _super.call(this);\n    _this.name = _this.constructor.name;\n    _this.errorType = type;\n    return _this;\n  }\n\n  return RecoveryError;\n}(_wrapNativeSuper(Error));","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/RecoveryFlow/RecoveryError.ts"],"names":["RecoveryErrorType","RecoveryError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,IAAA,iBAAA;;WAAYA,iB;EAAAA,iB,QAAAA,G,MAAAA;EAAAA,iB,WAAAA,G,SAAAA;EAAAA,iB,eAAAA,G,aAAAA;GAAAA,iB,KAAAA,iB;;AAMZ,OAAA,IAAaC,aAAb,GAAA,UAAA,MAAA,EAAA;EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,aAAA,CAAA;;EAGE,SAAA,aAAA,CAAA,IAAA,EAAqC;IAAA,IAAA,KAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;;IACnC,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;IACA,KAAA,CAAA,IAAA,GAAY,KAAA,CAAA,WAAA,CAAZ,IAAA;IACA,KAAA,CAAA,SAAA,GAAA,IAAA;IAHmC,OAAA,KAAA;EAHvC;;EAAA,OAAA,aAAA;AAAA,CAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,CAAA","sourcesContent":["export enum RecoveryErrorType {\n  NONE = 'NONE',\n  GENERIC = 'GENERIC',\n  MISMATCH_ID = 'MISMATCH_ID',\n}\n\nexport class RecoveryError extends Error {\n  errorType: RecoveryErrorType;\n\n  constructor(type: RecoveryErrorType) {\n    super();\n    this.name = this.constructor.name;\n    this.errorType = type;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}