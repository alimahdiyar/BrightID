{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTranslation } from 'react-i18next';\nimport { BLACK, RED } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var ProfileCard = function ProfileCard(props) {\n  var name = props.name,\n      photoTouchHandler = props.photoTouchHandler,\n      photo = props.photo,\n      photoType = props.photoType,\n      photoSize = props.photoSize,\n      reported = props.reported,\n      userReported = props.userReported;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var photoUri = photoType === 'base64' ? photo : \"file://\" + photoDirectory() + \"/\" + photo;\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return photoTouchHandler(photo, photoType);\n      },\n      children: _jsx(Image, {\n        source: {\n          uri: photoUri\n        },\n        style: styles[\"photo_\" + photoSize],\n        resizeMode: \"cover\",\n        onError: function onError(e) {\n          console.log(e);\n        },\n        accessible: true,\n        accessibilityLabel: \"user photo\"\n      })\n    }), _jsxs(View, {\n      style: styles.connectNameContainer,\n      children: [_jsx(Text, {\n        style: styles.connectName,\n        children: name\n      }), userReported && _jsxs(Text, {\n        style: styles.reported,\n        children: [\"(\", t('common.tag.reportedByUser'), userReported.reportReason && userReported.reportReason !== 'other' && t('common.tag.reportReason', {\n          reportReason: userReported.reportReason\n        }), \")\"]\n      }), reported && _jsx(Text, {\n        style: styles.reported,\n        children: t('common.tag.reported')\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  connectNameContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  connectName: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n    letterSpacing: 0,\n    textAlign: 'left',\n    color: BLACK\n  },\n  reported: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n    color: RED\n  },\n  photo_small: {\n    borderRadius: 50,\n    width: 100,\n    height: 100\n  },\n  photo_large: {\n    borderRadius: 75,\n    width: 150,\n    height: 150\n  }\n});","map":{"version":3,"names":["React","useTranslation","BLACK","RED","fontSize","photoDirectory","ProfileCard","props","name","photoTouchHandler","photo","photoType","photoSize","reported","userReported","t","photoUri","uri","styles","e","console","log","connectNameContainer","connectName","reportReason","StyleSheet","create","marginTop","alignItems","fontFamily","letterSpacing","textAlign","color","photo_small","borderRadius","width","height","photo_large"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/PendingConnections/ProfileCard.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK, RED } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { photoDirectory } from '@/utils/filesystem';\n\n/*\nDisplays profile photo and name\n */\ntype ProfileCardProps = {\n  photo: string;\n  photoType: 'base64' | 'file';\n  photoTouchHandler: (photo: string, type: 'base64' | 'file') => any;\n  name: string;\n  photoSize: 'small' | 'large';\n  reported?: boolean;\n  userReported?: { id: string; reportReason: string };\n};\n\nexport const ProfileCard = (props: ProfileCardProps) => {\n  const {\n    name,\n    photoTouchHandler,\n    photo,\n    photoType,\n    photoSize,\n    reported,\n    userReported,\n  } = props;\n\n  const { t } = useTranslation();\n  // build photo uri depending on type\n  const photoUri =\n    photoType === 'base64' ? photo : `file://${photoDirectory()}/${photo}`;\n\n  return (\n    <>\n      <TouchableWithoutFeedback\n        onPress={() => photoTouchHandler(photo, photoType)}\n      >\n        <Image\n          source={{ uri: photoUri }}\n          style={styles[`photo_${photoSize}`]}\n          resizeMode=\"cover\"\n          onError={(e) => {\n            console.log(e);\n          }}\n          accessible={true}\n          accessibilityLabel=\"user photo\"\n        />\n      </TouchableWithoutFeedback>\n      <View style={styles.connectNameContainer}>\n        <Text style={styles.connectName}>{name}</Text>\n        {userReported && (\n          <Text style={styles.reported}>\n            ({t('common.tag.reportedByUser')}\n            {userReported.reportReason &&\n              userReported.reportReason !== 'other' &&\n              t('common.tag.reportReason', {\n                reportReason: userReported.reportReason,\n              })}\n            )\n          </Text>\n        )}\n        {reported && (\n          <Text style={styles.reported}>{t('common.tag.reported')}</Text>\n        )}\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  connectNameContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  connectName: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n    letterSpacing: 0,\n    textAlign: 'left',\n    color: BLACK,\n  },\n  reported: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[18],\n    color: RED,\n  },\n  photo_small: {\n    borderRadius: 50,\n    width: 100,\n    height: 100,\n  },\n  photo_large: {\n    borderRadius: 75,\n    width: 150,\n    height: 150,\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,KAAT,EAAgBC,GAAhB;AACA,SAASC,QAAT;AACA,SAASC,cAAT;;;;AAeA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;EACtD,IACEC,IADF,GAQID,KARJ,CACEC,IADF;EAAA,IAEEC,iBAFF,GAQIF,KARJ,CAEEE,iBAFF;EAAA,IAGEC,KAHF,GAQIH,KARJ,CAGEG,KAHF;EAAA,IAIEC,SAJF,GAQIJ,KARJ,CAIEI,SAJF;EAAA,IAKEC,SALF,GAQIL,KARJ,CAKEK,SALF;EAAA,IAMEC,QANF,GAQIN,KARJ,CAMEM,QANF;EAAA,IAOEC,YAPF,GAQIP,KARJ,CAOEO,YAPF;;EAUA,sBAAcb,cAAc,EAA5B;EAAA,IAAQc,CAAR,mBAAQA,CAAR;;EAEA,IAAMC,QAAQ,GACZL,SAAS,KAAK,QAAd,GAAyBD,KAAzB,eAA2CL,cAAc,EAAzD,SAA+DK,KADjE;EAGA,OACE;IAAA,WACE,KAAC,wBAAD;MACE,OAAO,EAAE;QAAA,OAAMD,iBAAiB,CAACC,KAAD,EAAQC,SAAR,CAAvB;MAAA,CADX;MAAA,UAGE,KAAC,KAAD;QACE,MAAM,EAAE;UAAEM,GAAG,EAAED;QAAP,CADV;QAEE,KAAK,EAAEE,MAAM,YAAUN,SAAV,CAFf;QAGE,UAAU,EAAC,OAHb;QAIE,OAAO,EAAE,iBAACO,CAAD,EAAO;UACdC,OAAO,CAACC,GAAR,CAAYF,CAAZ;QACD,CANH;QAOE,UAAU,EAAE,IAPd;QAQE,kBAAkB,EAAC;MARrB;IAHF,EADF,EAeE,MAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACI,oBAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEJ,MAAM,CAACK,WAApB;QAAA,UAAkCf;MAAlC,EADF,EAEGM,YAAY,IACX,MAAC,IAAD;QAAM,KAAK,EAAEI,MAAM,CAACL,QAApB;QAAA,gBACIE,CAAC,CAAC,2BAAD,CADL,EAEGD,YAAY,CAACU,YAAb,IACCV,YAAY,CAACU,YAAb,KAA8B,OAD/B,IAECT,CAAC,CAAC,yBAAD,EAA4B;UAC3BS,YAAY,EAAEV,YAAY,CAACU;QADA,CAA5B,CAJL;MAAA,EAHJ,EAaGX,QAAQ,IACP,KAAC,IAAD;QAAM,KAAK,EAAEK,MAAM,CAACL,QAApB;QAAA,UAA+BE,CAAC,CAAC,qBAAD;MAAhC,EAdJ;IAAA,EAfF;EAAA,EADF;AAmCD,CAnDM;AAqDP,IAAMG,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,oBAAoB,EAAE;IACpBK,SAAS,EAAE,EADS;IAEpBC,UAAU,EAAE;EAFQ,CADS;EAK/BL,WAAW,EAAE;IACXM,UAAU,EAAE,cADD;IAEXzB,QAAQ,EAAEA,QAAQ,CAAC,EAAD,CAFP;IAGX0B,aAAa,EAAE,CAHJ;IAIXC,SAAS,EAAE,MAJA;IAKXC,KAAK,EAAE9B;EALI,CALkB;EAY/BW,QAAQ,EAAE;IACRgB,UAAU,EAAE,cADJ;IAERzB,QAAQ,EAAEA,QAAQ,CAAC,EAAD,CAFV;IAGR4B,KAAK,EAAE7B;EAHC,CAZqB;EAiB/B8B,WAAW,EAAE;IACXC,YAAY,EAAE,EADH;IAEXC,KAAK,EAAE,GAFI;IAGXC,MAAM,EAAE;EAHG,CAjBkB;EAsB/BC,WAAW,EAAE;IACXH,YAAY,EAAE,EADH;IAEXC,KAAK,EAAE,GAFI;IAGXC,MAAM,EAAE;EAHG;AAtBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}