{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setProfileDisplayWidth = exports.selectSocialMediaById = exports.selectExistingSocialMediaIds = exports.selectExistingSocialMedia = exports.selectAllSocialMediaToShare = exports.selectAllSocialMedia = exports.saveSocialMedia = exports.default = void 0;\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _immer = require(\"immer\");\n\nvar socialMediaAdapter = (0, _toolkit.createEntityAdapter)({\n  sortComparer: function sortComparer(a, b) {\n    return a.order - b.order;\n  }\n});\nvar socialMediaSlice = (0, _toolkit.createSlice)({\n  name: 'socialMedia',\n  initialState: socialMediaAdapter.getInitialState(),\n  reducers: {\n    saveSocialMedia: function saveSocialMedia(state, action) {\n      var _action$payload = action.payload,\n          incomingId = _action$payload.id,\n          incomingOrder = _action$payload.order,\n          incomingProfile = _action$payload.profile,\n          incomingBrightIdSocialAppData = _action$payload.brightIdSocialAppData;\n\n      var _original = (0, _immer.original)(state),\n          entities = _original.entities,\n          ids = _original.ids;\n\n      var prevEntity = entities[incomingId];\n\n      if (!prevEntity) {\n        socialMediaAdapter.addOne(state, action);\n\n        if (incomingOrder < ids.length) {\n          var entityToRemove = Object.values(entities).find(function (entity) {\n            return entity.order === incomingOrder;\n          });\n          socialMediaAdapter.removeOne(state, entityToRemove.id);\n        }\n      }\n\n      if (prevEntity && prevEntity.order === incomingOrder) {\n        socialMediaAdapter.updateOne(state, {\n          id: incomingId,\n          changes: {\n            profile: incomingProfile,\n            brightIdSocialAppData: incomingBrightIdSocialAppData\n          }\n        });\n      }\n\n      if (prevEntity && prevEntity.order !== incomingOrder) {\n        var shouldIncrement = prevEntity.order > incomingOrder;\n        var shouldDecrement = !shouldIncrement;\n        var updateList = Object.values(entities).map(function (entity) {\n          var order = entity.order,\n              profile = entity.profile,\n              brightIdSocialAppData = entity.brightIdSocialAppData;\n\n          if (entity.id === incomingId) {\n            order = incomingOrder;\n            profile = incomingProfile;\n            brightIdSocialAppData = incomingBrightIdSocialAppData;\n          } else if (shouldIncrement && order >= incomingOrder && order <= prevEntity.order) {\n            order += 1;\n          } else if (shouldDecrement && order <= incomingOrder && order >= prevEntity.order) {\n            order -= 1;\n          }\n\n          return {\n            id: entity.id,\n            changes: {\n              order: order,\n              profile: profile,\n              brightIdSocialAppData: brightIdSocialAppData\n            }\n          };\n        });\n        socialMediaAdapter.updateMany(state, updateList);\n      }\n    },\n    setProfileDisplayWidth: function setProfileDisplayWidth(state, action) {\n      socialMediaAdapter.updateOne(state, {\n        id: action.payload.id,\n        changes: {\n          profileDisplayWidth: action.payload.width\n        }\n      });\n    }\n  }\n});\nvar _socialMediaSlice$act = socialMediaSlice.actions,\n    saveSocialMedia = _socialMediaSlice$act.saveSocialMedia,\n    setProfileDisplayWidth = _socialMediaSlice$act.setProfileDisplayWidth;\nexports.setProfileDisplayWidth = setProfileDisplayWidth;\nexports.saveSocialMedia = saveSocialMedia;\n\nvar _socialMediaAdapter$g = socialMediaAdapter.getSelectors(function (state) {\n  return state.socialMedia;\n}),\n    selectSocialMediaById = _socialMediaAdapter$g.selectById,\n    selectAllSocialMedia = _socialMediaAdapter$g.selectAll;\n\nexports.selectAllSocialMedia = selectAllSocialMedia;\nexports.selectSocialMediaById = selectSocialMediaById;\nvar selectExistingSocialMedia = (0, _toolkit.createSelector)(selectAllSocialMedia, function (socialMedias) {\n  return socialMedias.filter(function (socialMedia) {\n    return socialMedia.profile;\n  });\n});\nexports.selectExistingSocialMedia = selectExistingSocialMedia;\nvar selectExistingSocialMediaIds = (0, _toolkit.createSelector)(selectExistingSocialMedia, function (socialMedias) {\n  return socialMedias.map(function (socialMedia) {\n    return socialMedia.id;\n  });\n});\nexports.selectExistingSocialMediaIds = selectExistingSocialMediaIds;\nvar selectAllSocialMediaToShare = (0, _toolkit.createSelector)(selectExistingSocialMedia, function (socialMedias) {\n  return socialMedias.map(function (socialMedia) {\n    return {\n      id: socialMedia.id,\n      company: socialMedia.company,\n      order: socialMedia.order,\n      profile: socialMedia.profile,\n      profileDisplayWidth: socialMedia.profileDisplayWidth\n    };\n  });\n});\nexports.selectAllSocialMediaToShare = selectAllSocialMediaToShare;\nvar _default = socialMediaSlice.reducer;\nexports.default = _default;","map":{"version":3,"names":["socialMediaAdapter","createEntityAdapter","sortComparer","a","b","order","socialMediaSlice","createSlice","name","initialState","getInitialState","reducers","saveSocialMedia","state","action","payload","incomingId","id","incomingOrder","incomingProfile","profile","incomingBrightIdSocialAppData","brightIdSocialAppData","original","entities","ids","prevEntity","addOne","length","entityToRemove","Object","values","find","entity","removeOne","updateOne","changes","shouldIncrement","shouldDecrement","updateList","map","updateMany","setProfileDisplayWidth","profileDisplayWidth","width","actions","getSelectors","socialMedia","selectSocialMediaById","selectById","selectAllSocialMedia","selectAll","selectExistingSocialMedia","createSelector","socialMedias","filter","selectExistingSocialMediaIds","selectAllSocialMediaToShare","company","reducer"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/reducer/socialMediaSlice.ts"],"sourcesContent":["import {\n  createSlice,\n  createEntityAdapter,\n  PayloadAction,\n  createSelector,\n} from '@reduxjs/toolkit';\n\nimport { original, Draft } from 'immer';\n\nconst socialMediaAdapter = createEntityAdapter<SocialMedia>({\n  sortComparer: (a, b) => a.order - b.order,\n});\n\nconst socialMediaSlice = createSlice({\n  name: 'socialMedia',\n  initialState: socialMediaAdapter.getInitialState(),\n  reducers: {\n    saveSocialMedia: (\n      state: Draft<SocialMediaState>,\n      action: PayloadAction<SocialMedia>,\n    ) => {\n      // incoming payload values\n      const {\n        id: incomingId,\n        order: incomingOrder,\n        profile: incomingProfile,\n        brightIdSocialAppData: incomingBrightIdSocialAppData,\n      } = action.payload;\n\n      // access previous values from the reducer\n      const { entities, ids } = original(state);\n\n      const prevEntity = entities[incomingId];\n\n      // if social media does not already exist, add it to the list,\n      if (!prevEntity) {\n        socialMediaAdapter.addOne(state, action);\n        // if order already exists in list, then the user wants to replace the social media\n        if (incomingOrder < ids.length) {\n          const entityToRemove = Object.values(entities).find(\n            (entity) => entity.order === incomingOrder,\n          );\n\n          socialMediaAdapter.removeOne(state, entityToRemove.id);\n        }\n      }\n\n      // the user is only updating their social media profile\n      if (prevEntity && prevEntity.order === incomingOrder) {\n        socialMediaAdapter.updateOne(state, {\n          id: incomingId,\n          changes: {\n            profile: incomingProfile,\n            brightIdSocialAppData: incomingBrightIdSocialAppData,\n          },\n        });\n      }\n\n      // this indicates the user wants to re-order the list\n      if (prevEntity && prevEntity.order !== incomingOrder) {\n        // only update the order for\n        // 1. incoming id\n        // 2. Entities between previous order and incoming order\n\n        const shouldIncrement = prevEntity.order > incomingOrder;\n        const shouldDecrement = !shouldIncrement;\n\n        const updateList = Object.values(entities).map((entity) => {\n          let { order, profile, brightIdSocialAppData } = entity;\n          if (entity.id === incomingId) {\n            order = incomingOrder;\n            profile = incomingProfile;\n            brightIdSocialAppData = incomingBrightIdSocialAppData;\n          } else if (\n            shouldIncrement &&\n            order >= incomingOrder &&\n            order <= prevEntity.order\n          ) {\n            order += 1;\n          } else if (\n            shouldDecrement &&\n            order <= incomingOrder &&\n            order >= prevEntity.order\n          ) {\n            order -= 1;\n          }\n\n          return {\n            id: entity.id,\n            changes: { order, profile, brightIdSocialAppData },\n          };\n        });\n\n        socialMediaAdapter.updateMany(state, updateList);\n      }\n    },\n    setProfileDisplayWidth: (\n      state: Draft<SocialMediaState>,\n      action: PayloadAction<{ id: string; width: number | string }>,\n    ) => {\n      socialMediaAdapter.updateOne(state, {\n        id: action.payload.id,\n        changes: {\n          profileDisplayWidth: action.payload.width,\n        },\n      });\n    },\n  },\n});\n\nexport const { saveSocialMedia, setProfileDisplayWidth } =\n  socialMediaSlice.actions;\n\nexport const {\n  selectById: selectSocialMediaById,\n  selectAll: selectAllSocialMedia,\n} = socialMediaAdapter.getSelectors((state: State) => state.socialMedia);\n\nexport const selectExistingSocialMedia = createSelector(\n  selectAllSocialMedia,\n  (socialMedias) => socialMedias.filter((socialMedia) => socialMedia.profile),\n);\n\nexport const selectExistingSocialMediaIds = createSelector(\n  selectExistingSocialMedia,\n  (socialMedias) => socialMedias.map((socialMedia) => socialMedia.id),\n);\n\nexport const selectAllSocialMediaToShare = createSelector(\n  selectExistingSocialMedia,\n  (socialMedias) =>\n    socialMedias.map((socialMedia) => ({\n      id: socialMedia.id,\n      company: socialMedia.company,\n      order: socialMedia.order,\n      profile: socialMedia.profile,\n      profileDisplayWidth: socialMedia.profileDisplayWidth,\n    })) as SocialMediaShared[],\n);\nexport default socialMediaSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}