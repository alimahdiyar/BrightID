{"ast":null,"code":"module.exports = function (updatedModules, renewedModules) {\n  var unacceptedModules = updatedModules.filter(function (moduleId) {\n    return renewedModules && renewedModules.indexOf(moduleId) < 0;\n  });\n\n  var log = require(\"./log\");\n\n  if (unacceptedModules.length > 0) {\n    log(\"warning\", \"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\");\n    unacceptedModules.forEach(function (moduleId) {\n      log(\"warning\", \"[HMR]  - \" + moduleId);\n    });\n  }\n\n  if (!renewedModules || renewedModules.length === 0) {\n    log(\"info\", \"[HMR] Nothing hot updated.\");\n  } else {\n    log(\"info\", \"[HMR] Updated modules:\");\n    renewedModules.forEach(function (moduleId) {\n      if (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n        var parts = moduleId.split(\"!\");\n        log.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n        log(\"info\", \"[HMR]  - \" + moduleId);\n        log.groupEnd(\"info\");\n      } else {\n        log(\"info\", \"[HMR]  - \" + moduleId);\n      }\n    });\n    var numberIds = renewedModules.every(function (moduleId) {\n      return typeof moduleId === \"number\";\n    });\n    if (numberIds) log(\"info\", \"[HMR] Consider using the NamedModulesPlugin for module names.\");\n  }\n};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/webpack/hot/log-apply-result.js"],"names":["module","unacceptedModules","updatedModules","renewedModules","log","require","moduleId","parts","numberIds"],"mappings":"AAIAA,MAAM,CAANA,OAAAA,GAAiB,UAAA,cAAA,EAAA,cAAA,EAAyC;EACzD,IAAIC,iBAAiB,GAAGC,cAAc,CAAdA,MAAAA,CAAsB,UAAA,QAAA,EAAmB;IAChE,OAAOC,cAAc,IAAIA,cAAc,CAAdA,OAAAA,CAAAA,QAAAA,IAAzB,CAAA;EADD,CAAwBD,CAAxB;;EAGA,IAAIE,GAAG,GAAGC,OAAV,SAAA;;EAEA,IAAIJ,iBAAiB,CAAjBA,MAAAA,GAAJ,CAAA,EAAkC;IACjCG,GAAG,CAAA,SAAA,EAAHA,uFAAG,CAAHA;IAIAH,iBAAiB,CAAjBA,OAAAA,CAA0B,UAAA,QAAA,EAAmB;MAC5CG,GAAG,CAAA,SAAA,EAAY,cAAfA,QAAG,CAAHA;IADDH,CAAAA;EAKD;;EAAA,IAAI,CAAA,cAAA,IAAmBE,cAAc,CAAdA,MAAAA,KAAvB,CAAA,EAAoD;IACnDC,GAAG,CAAA,MAAA,EAAHA,4BAAG,CAAHA;EADD,CAAA,MAEO;IACNA,GAAG,CAAA,MAAA,EAAHA,wBAAG,CAAHA;IACAD,cAAc,CAAdA,OAAAA,CAAuB,UAAA,QAAA,EAAmB;MACzC,IAAI,OAAA,QAAA,KAAA,QAAA,IAAgCG,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,MAA0B,CAA9D,CAAA,EAAkE;QACjE,IAAIC,KAAK,GAAGD,QAAQ,CAARA,KAAAA,CAAZ,GAAYA,CAAZ;QACAF,GAAG,CAAHA,cAAAA,CAAAA,MAAAA,EAA2B,cAAcG,KAAK,CAA9CH,GAAyCG,EAAzCH;QACAA,GAAG,CAAA,MAAA,EAAS,cAAZA,QAAG,CAAHA;QACAA,GAAG,CAAHA,QAAAA,CAAAA,MAAAA;MAJD,CAAA,MAKO;QACNA,GAAG,CAAA,MAAA,EAAS,cAAZA,QAAG,CAAHA;MAED;IATDD,CAAAA;IAUA,IAAIK,SAAS,GAAGL,cAAc,CAAdA,KAAAA,CAAqB,UAAA,QAAA,EAAmB;MACvD,OAAO,OAAA,QAAA,KAAP,QAAA;IADD,CAAgBA,CAAhB;IAGA,IAAA,SAAA,EACCC,GAAG,CAAA,MAAA,EAAHA,+DAAG,CAAHA;EAKF;AAvCDJ,CAAAA","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function(moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function(moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function(moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function(moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t\"[HMR] Consider using the NamedModulesPlugin for module names.\"\n\t\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}