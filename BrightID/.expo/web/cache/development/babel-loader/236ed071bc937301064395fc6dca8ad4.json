{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.NodeApiContext = exports.ApiGateState = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _store = require(\"../store\");\n\nvar _settingsSlice = require(\"../reducer/settingsSlice\");\n\nvar _brightId = require(\"../api/brightId\");\n\nvar _operations = require(\"../utils/operations\");\n\nvar _nodeChooser = _interopRequireDefault(require(\"../utils/nodeChooser\"));\n\nvar _NodeApiGateScreen = require(\"./NodeApiGateScreen\");\n\nvar _channelThunks = require(\"./PendingConnections/actions/channelThunks\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/NodeApiGate.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar NodeApiContext = _react.default.createContext(null);\n\nexports.NodeApiContext = NodeApiContext;\nvar ApiGateState = {\n  INITIAL: 'INITIAL',\n  SEARCH_REQUESTED: 'SEARCH_REQUESTED',\n  SEARCHING_NODE: 'SEARCHING',\n  NODE_AVAILABLE: 'NODE_AVAILABLE',\n  ERROR_NO_NODE: 'ERROR_NO_NODE'\n};\nexports.ApiGateState = ApiGateState;\n\nvar NodeApiGate = function NodeApiGate(props) {\n  var id = (0, _store.useSelector)(function (state) {\n    return state.user.id;\n  });\n  var secretKey = (0, _store.useSelector)(function (state) {\n    return state.keypair.secretKey;\n  });\n  var url = (0, _store.useSelector)(_settingsSlice.selectBaseUrl);\n  var candidates = (0, _store.useSelector)(_settingsSlice.selectAllNodeUrls);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      nodeError = _useState2[0],\n      setNodeError = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      api = _useState4[0],\n      setApi = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      startTimestamp = _useState6[0],\n      setStartTimestamp = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(ApiGateState.INITIAL),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      gateState = _useState8[0],\n      setGateState = _useState8[1];\n\n  var dispatch = (0, _store.useDispatch)();\n\n  var retryHandler = function retryHandler() {\n    if (gateState === ApiGateState.ERROR_NO_NODE) {\n      console.log(\"User clicked retry -> triggering search.\");\n      setGateState(ApiGateState.SEARCH_REQUESTED);\n    }\n  };\n\n  (0, _react.useEffect)(function () {\n    if (!url) {\n      console.log(\"URL is null -> triggering search.\");\n      setGateState(ApiGateState.SEARCH_REQUESTED);\n    }\n  }, [url]);\n  (0, _react.useEffect)(function () {\n    var runEffect = function _callee() {\n      var fastestUrl;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(candidates.length === 0)) {\n                _context.next = 5;\n                break;\n              }\n\n              console.log(\"No node candidates available\");\n              setGateState(ApiGateState.ERROR_NO_NODE);\n              _context.next = 21;\n              break;\n\n            case 5:\n              console.log(\"Running nodechooser to select backend\");\n              setStartTimestamp(Date.now());\n              setGateState(ApiGateState.SEARCHING_NODE);\n              _context.prev = 8;\n              _context.next = 11;\n              return _regenerator.default.awrap((0, _nodeChooser.default)(candidates));\n\n            case 11:\n              fastestUrl = _context.sent;\n              dispatch((0, _settingsSlice.setBaseUrl)(fastestUrl));\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](8);\n              setGateState(ApiGateState.ERROR_NO_NODE);\n\n            case 18:\n              _context.prev = 18;\n              setStartTimestamp(0);\n              return _context.finish(18);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[8, 15, 18, 21]], Promise);\n    };\n\n    if (gateState === ApiGateState.SEARCH_REQUESTED) {\n      runEffect();\n    }\n  }, [candidates, dispatch, gateState]);\n  (0, _react.useEffect)(function () {\n    if (nodeError) {\n      _reactNative.Alert.alert('Node error!', 'Current node seems not to be functional', [{\n        text: 'Switch to different node',\n        onPress: function onPress() {\n          dispatch((0, _channelThunks.leaveAllChannels)());\n          dispatch((0, _settingsSlice.removeCurrentNodeUrl)());\n          setNodeError(false);\n        }\n      }, {\n        text: 'Ignore',\n        style: 'cancel',\n        onPress: function onPress() {\n          setNodeError(false);\n        }\n      }], {\n        cancelable: true\n      });\n    }\n  }, [dispatch, nodeError]);\n  (0, _react.useEffect)(function () {\n    var responseCounter = 0;\n\n    var apiMonitor = function apiMonitor(response) {\n      responseCounter++;\n\n      if (!response.ok) {\n        switch (response.problem) {\n          case 'SERVER_ERROR':\n          case 'CONNECTION_ERROR':\n          case 'NETWORK_ERROR':\n          case 'TIMEOUT_ERROR':\n            console.log(\"Node monitor: Detected problem: \" + response.status + \" - \" + response.problem + \".\");\n            setNodeError(true);\n            break;\n\n          default:\n            console.log(\"Node monitor: Ignoring problem \" + response.problem);\n        }\n      }\n    };\n\n    if (url) {\n      var apiInstance;\n\n      if (id && id.length > 0 && secretKey && secretKey.length > 0) {\n        console.log(\"Creating API with credentials using \" + url);\n        apiInstance = new _brightId.NodeApi({\n          url: url,\n          id: id,\n          secretKey: secretKey,\n          monitor: apiMonitor\n        });\n      } else {\n        console.log(\"Creating anonymous API using \" + url);\n        apiInstance = new _brightId.NodeApi({\n          url: url,\n          id: undefined,\n          secretKey: undefined,\n          monitor: apiMonitor\n        });\n      }\n\n      setGateState(ApiGateState.NODE_AVAILABLE);\n      setApi(apiInstance);\n    } else {\n      setApi(null);\n    }\n  }, [url, id, secretKey]);\n  (0, _react.useEffect)(function () {\n    if (api) {\n      var timerId = setInterval(function () {\n        _reactNative.InteractionManager.runAfterInteractions(function () {\n          (0, _operations.pollOperations)(api);\n        });\n      }, 5000);\n      console.log(\"Started pollOperationsTimer \" + timerId);\n      return function () {\n        console.log(\"Stop pollOperationsTimer \" + timerId);\n        clearInterval(timerId);\n      };\n    }\n  }, [api]);\n\n  var setNode = function _callee2(nodeUrl) {\n    var _url;\n\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch((0, _channelThunks.leaveAllChannels)());\n            setGateState(ApiGateState.SEARCHING_NODE);\n            _context2.next = 5;\n            return _regenerator.default.awrap((0, _nodeChooser.default)([nodeUrl]));\n\n          case 5:\n            _url = _context2.sent;\n            dispatch((0, _settingsSlice.addNodeUrl)(_url));\n            dispatch((0, _settingsSlice.setBaseUrl)(_url));\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            setGateState(ApiGateState.ERROR_NO_NODE);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  if (url && api && gateState === ApiGateState.NODE_AVAILABLE) {\n    return _react.default.createElement(NodeApiContext.Provider, {\n      value: api,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, props.children);\n  } else {\n    return _react.default.createElement(_NodeApiGateScreen.NodeApiGateScreen, {\n      gateState: gateState,\n      retryHandler: retryHandler,\n      startTimestamp: startTimestamp,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nvar _default = NodeApiGate;\nexports.default = _default;","map":{"version":3,"names":["NodeApiContext","React","createContext","ApiGateState","INITIAL","SEARCH_REQUESTED","SEARCHING_NODE","NODE_AVAILABLE","ERROR_NO_NODE","NodeApiGate","props","id","useSelector","state","user","secretKey","keypair","url","selectBaseUrl","candidates","selectAllNodeUrls","useState","nodeError","setNodeError","api","setApi","startTimestamp","setStartTimestamp","gateState","setGateState","dispatch","useDispatch","retryHandler","console","log","useEffect","runEffect","length","Date","now","chooseNode","fastestUrl","setBaseUrl","Alert","alert","text","onPress","leaveAllChannels","removeCurrentNodeUrl","style","cancelable","responseCounter","apiMonitor","response","ok","problem","status","apiInstance","NodeApi","monitor","undefined","timerId","setInterval","InteractionManager","runAfterInteractions","pollOperations","clearInterval","setNode","nodeUrl","addNodeUrl","children"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/NodeApiGate.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, InteractionManager } from 'react-native';\nimport { ApiResponse } from 'apisauce';\nimport { RootState, useDispatch, useSelector } from '@/store';\nimport {\n  addNodeUrl,\n  removeCurrentNodeUrl,\n  selectAllNodeUrls,\n  selectBaseUrl,\n  setBaseUrl,\n} from '@/reducer/settingsSlice';\nimport { NodeApi } from '@/api/brightId';\nimport { pollOperations } from '@/utils/operations';\nimport chooseNode from '@/utils/nodeChooser';\nimport { NodeApiGateScreen } from '@/components/NodeApiGateScreen';\nimport { leaveAllChannels } from './PendingConnections/actions/channelThunks';\n\ntype ApiContext = NodeApi | null;\n\nexport const NodeApiContext = React.createContext<ApiContext>(null);\n\nexport const ApiGateState = {\n  INITIAL: 'INITIAL',\n  SEARCH_REQUESTED: 'SEARCH_REQUESTED', // should start looking for node\n  SEARCHING_NODE: 'SEARCHING', // currently looking for working node\n  NODE_AVAILABLE: 'NODE_AVAILABLE', // All good, valid node is set\n  ERROR_NO_NODE: 'ERROR_NO_NODE', // Failed to find a working node\n} as const;\nexport type ApiGateState = typeof ApiGateState[keyof typeof ApiGateState];\n\nconst NodeApiGate = (props: React.PropsWithChildren<unknown>) => {\n  const id = useSelector<string>((state: RootState) => state.user.id);\n  const secretKey = useSelector<Uint8Array>(\n    (state: RootState) => state.keypair.secretKey,\n  );\n  const url = useSelector<string>(selectBaseUrl);\n  const candidates = useSelector(selectAllNodeUrls);\n  const [nodeError, setNodeError] = useState(false);\n  const [api, setApi] = useState<NodeApi | null>(null);\n  const [startTimestamp, setStartTimestamp] = useState(0);\n  const [gateState, setGateState] = useState<ApiGateState>(\n    ApiGateState.INITIAL,\n  );\n  const dispatch = useDispatch();\n\n  // Trigger nodechooser when user clicks retry\n  const retryHandler = () => {\n    // Only allow retry if I'm in error state\n    if (gateState === ApiGateState.ERROR_NO_NODE) {\n      console.log(`User clicked retry -> triggering search.`);\n      setGateState(ApiGateState.SEARCH_REQUESTED);\n    }\n  };\n\n  // Trigger nodechooser when no url is set\n  useEffect(() => {\n    if (!url) {\n      console.log(`URL is null -> triggering search.`);\n      setGateState(ApiGateState.SEARCH_REQUESTED);\n    }\n  }, [url]);\n\n  // Run nodechooser if requested\n  useEffect(() => {\n    const runEffect = async () => {\n      if (candidates.length === 0) {\n        console.log(`No node candidates available`);\n        setGateState(ApiGateState.ERROR_NO_NODE);\n      } else {\n        console.log(`Running nodechooser to select backend`);\n        setStartTimestamp(Date.now());\n        setGateState(ApiGateState.SEARCHING_NODE);\n        try {\n          const fastestUrl = await chooseNode(candidates);\n          dispatch(setBaseUrl(fastestUrl));\n        } catch (e) {\n          // No usable node found :-(\n          setGateState(ApiGateState.ERROR_NO_NODE);\n        } finally {\n          setStartTimestamp(0);\n        }\n      }\n    };\n    if (gateState === ApiGateState.SEARCH_REQUESTED) {\n      runEffect();\n    }\n  }, [candidates, dispatch, gateState]);\n\n  // show node error modal\n  useEffect(() => {\n    if (nodeError) {\n      Alert.alert(\n        'Node error!',\n        'Current node seems not to be functional',\n        [\n          {\n            text: 'Switch to different node',\n            onPress: () => {\n              dispatch(leaveAllChannels());\n              dispatch(removeCurrentNodeUrl());\n              setNodeError(false);\n            },\n          },\n          {\n            text: 'Ignore',\n            style: 'cancel',\n            onPress: () => {\n              setNodeError(false);\n            },\n          },\n        ],\n        {\n          cancelable: true,\n        },\n      );\n    }\n  }, [dispatch, nodeError]);\n\n  // Manage NodeAPI instance\n  useEffect(() => {\n    let responseCounter = 0;\n    const apiMonitor = (response: ApiResponse<NodeApiRes, ErrRes>) => {\n      responseCounter++;\n      if (!response.ok) {\n        switch (response.problem) {\n          case 'SERVER_ERROR':\n          case 'CONNECTION_ERROR':\n          case 'NETWORK_ERROR':\n          case 'TIMEOUT_ERROR':\n            console.log(\n              `Node monitor: Detected problem: ${response.status} - ${response.problem}.`,\n            );\n            setNodeError(true);\n            break;\n          default:\n            console.log(`Node monitor: Ignoring problem ${response.problem}`);\n        }\n      }\n      /*\n      if (responseCounter % 5 === 0) {\n        console.log(`Pretending server error`);\n        setNodeError(true);\n      }\n       */\n    };\n\n    if (url) {\n      let apiInstance: NodeApi;\n      if (id && id.length > 0 && secretKey && secretKey.length > 0) {\n        console.log(`Creating API with credentials using ${url}`);\n        apiInstance = new NodeApi({ url, id, secretKey, monitor: apiMonitor });\n      } else {\n        console.log(`Creating anonymous API using ${url}`);\n        apiInstance = new NodeApi({\n          url,\n          id: undefined,\n          secretKey: undefined,\n          monitor: apiMonitor,\n        });\n      }\n      setGateState(ApiGateState.NODE_AVAILABLE);\n      setApi(apiInstance);\n    } else {\n      setApi(null);\n    }\n  }, [url, id, secretKey]);\n\n  // Manage polling for operations\n  useEffect(() => {\n    if (api) {\n      // subscribe to operations\n      const timerId = setInterval(() => {\n        InteractionManager.runAfterInteractions(() => {\n          pollOperations(api);\n        });\n      }, 5000);\n      console.log(`Started pollOperationsTimer ${timerId}`);\n\n      return () => {\n        console.log(`Stop pollOperationsTimer ${timerId}`);\n        clearInterval(timerId);\n      };\n    }\n  }, [api]);\n\n  /* Manually set node url */\n  const setNode = async (nodeUrl: string) => {\n    try {\n      dispatch(leaveAllChannels());\n      // Check if node is working\n      setGateState(ApiGateState.SEARCHING_NODE);\n      const url = await chooseNode([nodeUrl]);\n      // Add it to node list and set as current node\n      dispatch(addNodeUrl(url));\n      dispatch(setBaseUrl(url));\n    } catch (e) {\n      // Node does not work :-(\n      setGateState(ApiGateState.ERROR_NO_NODE);\n    }\n  };\n\n  if (url && api && gateState === ApiGateState.NODE_AVAILABLE) {\n    return (\n      <NodeApiContext.Provider value={api}>\n        {props.children}\n      </NodeApiContext.Provider>\n    );\n  } else {\n    return (\n      <NodeApiGateScreen\n        gateState={gateState}\n        retryHandler={retryHandler}\n        startTimestamp={startTimestamp}\n      />\n    );\n  }\n};\n\nexport default NodeApiGate;\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAIO,IAAMA,cAAc,GAAGC,cAAA,CAAMC,aAAN,CAAgC,IAAhC,CAAvB;;;AAEA,IAAMC,YAAY,GAAG;EAC1BC,OAAO,EAAE,SADiB;EAE1BC,gBAAgB,EAAE,kBAFQ;EAG1BC,cAAc,EAAE,WAHU;EAI1BC,cAAc,EAAE,gBAJU;EAK1BC,aAAa,EAAE;AALW,CAArB;;;AASP,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6C;EAC/D,IAAMC,EAAE,GAAG,IAAAC,kBAAA,EAAoB,UAACC,KAAD;IAAA,OAAsBA,KAAK,CAACC,IAAN,CAAWH,EAAjC;EAAA,CAApB,CAAX;EACA,IAAMI,SAAS,GAAG,IAAAH,kBAAA,EAChB,UAACC,KAAD;IAAA,OAAsBA,KAAK,CAACG,OAAN,CAAcD,SAApC;EAAA,CADgB,CAAlB;EAGA,IAAME,GAAG,GAAG,IAAAL,kBAAA,EAAoBM,4BAApB,CAAZ;EACA,IAAMC,UAAU,GAAG,IAAAP,kBAAA,EAAYQ,gCAAZ,CAAnB;;EACA,gBAAkC,IAAAC,eAAA,EAAS,KAAT,CAAlC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAsB,IAAAF,eAAA,EAAyB,IAAzB,CAAtB;EAAA;EAAA,IAAOG,GAAP;EAAA,IAAYC,MAAZ;;EACA,iBAA4C,IAAAJ,eAAA,EAAS,CAAT,CAA5C;EAAA;EAAA,IAAOK,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAAkC,IAAAN,eAAA,EAChClB,YAAY,CAACC,OADmB,CAAlC;EAAA;EAAA,IAAOwB,SAAP;EAAA,IAAkBC,YAAlB;;EAGA,IAAMC,QAAQ,GAAG,IAAAC,kBAAA,GAAjB;;EAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IAEzB,IAAIJ,SAAS,KAAKzB,YAAY,CAACK,aAA/B,EAA8C;MAC5CyB,OAAO,CAACC,GAAR;MACAL,YAAY,CAAC1B,YAAY,CAACE,gBAAd,CAAZ;IACD;EACF,CAND;;EASA,IAAA8B,gBAAA,EAAU,YAAM;IACd,IAAI,CAAClB,GAAL,EAAU;MACRgB,OAAO,CAACC,GAAR;MACAL,YAAY,CAAC1B,YAAY,CAACE,gBAAd,CAAZ;IACD;EACF,CALD,EAKG,CAACY,GAAD,CALH;EAQA,IAAAkB,gBAAA,EAAU,YAAM;IACd,IAAMC,SAAS,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,MACZjB,UAAU,CAACkB,MAAX,KAAsB,CADV;gBAAA;gBAAA;cAAA;;cAEdJ,OAAO,CAACC,GAAR;cACAL,YAAY,CAAC1B,YAAY,CAACK,aAAd,CAAZ;cAHc;cAAA;;YAAA;cAKdyB,OAAO,CAACC,GAAR;cACAP,iBAAiB,CAACW,IAAI,CAACC,GAAL,EAAD,CAAjB;cACAV,YAAY,CAAC1B,YAAY,CAACG,cAAd,CAAZ;cAPc;cAAA;cAAA,kCASa,IAAAkC,oBAAA,EAAWrB,UAAX,CATb;;YAAA;cASNsB,UATM;cAUZX,QAAQ,CAAC,IAAAY,yBAAA,EAAWD,UAAX,CAAD,CAAR;cAVY;cAAA;;YAAA;cAAA;cAAA;cAaZZ,YAAY,CAAC1B,YAAY,CAACK,aAAd,CAAZ;;YAbY;cAAA;cAeZmB,iBAAiB,CAAC,CAAD,CAAjB;cAfY;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAlB;;IAmBA,IAAIC,SAAS,KAAKzB,YAAY,CAACE,gBAA/B,EAAiD;MAC/C+B,SAAS;IACV;EACF,CAvBD,EAuBG,CAACjB,UAAD,EAAaW,QAAb,EAAuBF,SAAvB,CAvBH;EA0BA,IAAAO,gBAAA,EAAU,YAAM;IACd,IAAIb,SAAJ,EAAe;MACbqB,kBAAA,CAAMC,KAAN,CACE,aADF,EAEE,yCAFF,EAGE,CACE;QACEC,IAAI,EAAE,0BADR;QAEEC,OAAO,EAAE,mBAAM;UACbhB,QAAQ,CAAC,IAAAiB,+BAAA,GAAD,CAAR;UACAjB,QAAQ,CAAC,IAAAkB,mCAAA,GAAD,CAAR;UACAzB,YAAY,CAAC,KAAD,CAAZ;QACD;MANH,CADF,EASE;QACEsB,IAAI,EAAE,QADR;QAEEI,KAAK,EAAE,QAFT;QAGEH,OAAO,EAAE,mBAAM;UACbvB,YAAY,CAAC,KAAD,CAAZ;QACD;MALH,CATF,CAHF,EAoBE;QACE2B,UAAU,EAAE;MADd,CApBF;IAwBD;EACF,CA3BD,EA2BG,CAACpB,QAAD,EAAWR,SAAX,CA3BH;EA8BA,IAAAa,gBAAA,EAAU,YAAM;IACd,IAAIgB,eAAe,GAAG,CAAtB;;IACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAA+C;MAChEF,eAAe;;MACf,IAAI,CAACE,QAAQ,CAACC,EAAd,EAAkB;QAChB,QAAQD,QAAQ,CAACE,OAAjB;UACE,KAAK,cAAL;UACA,KAAK,kBAAL;UACA,KAAK,eAAL;UACA,KAAK,eAAL;YACEtB,OAAO,CAACC,GAAR,sCACqCmB,QAAQ,CAACG,MAD9C,WAC0DH,QAAQ,CAACE,OADnE;YAGAhC,YAAY,CAAC,IAAD,CAAZ;YACA;;UACF;YACEU,OAAO,CAACC,GAAR,qCAA8CmB,QAAQ,CAACE,OAAvD;QAXJ;MAaD;IAOF,CAvBD;;IAyBA,IAAItC,GAAJ,EAAS;MACP,IAAIwC,WAAJ;;MACA,IAAI9C,EAAE,IAAIA,EAAE,CAAC0B,MAAH,GAAY,CAAlB,IAAuBtB,SAAvB,IAAoCA,SAAS,CAACsB,MAAV,GAAmB,CAA3D,EAA8D;QAC5DJ,OAAO,CAACC,GAAR,0CAAmDjB,GAAnD;QACAwC,WAAW,GAAG,IAAIC,iBAAJ,CAAY;UAAEzC,GAAG,EAAHA,GAAF;UAAON,EAAE,EAAFA,EAAP;UAAWI,SAAS,EAATA,SAAX;UAAsB4C,OAAO,EAAEP;QAA/B,CAAZ,CAAd;MACD,CAHD,MAGO;QACLnB,OAAO,CAACC,GAAR,mCAA4CjB,GAA5C;QACAwC,WAAW,GAAG,IAAIC,iBAAJ,CAAY;UACxBzC,GAAG,EAAHA,GADwB;UAExBN,EAAE,EAAEiD,SAFoB;UAGxB7C,SAAS,EAAE6C,SAHa;UAIxBD,OAAO,EAAEP;QAJe,CAAZ,CAAd;MAMD;;MACDvB,YAAY,CAAC1B,YAAY,CAACI,cAAd,CAAZ;MACAkB,MAAM,CAACgC,WAAD,CAAN;IACD,CAhBD,MAgBO;MACLhC,MAAM,CAAC,IAAD,CAAN;IACD;EACF,CA9CD,EA8CG,CAACR,GAAD,EAAMN,EAAN,EAAUI,SAAV,CA9CH;EAiDA,IAAAoB,gBAAA,EAAU,YAAM;IACd,IAAIX,GAAJ,EAAS;MAEP,IAAMqC,OAAO,GAAGC,WAAW,CAAC,YAAM;QAChCC,+BAAA,CAAmBC,oBAAnB,CAAwC,YAAM;UAC5C,IAAAC,0BAAA,EAAezC,GAAf;QACD,CAFD;MAGD,CAJ0B,EAIxB,IAJwB,CAA3B;MAKAS,OAAO,CAACC,GAAR,kCAA2C2B,OAA3C;MAEA,OAAO,YAAM;QACX5B,OAAO,CAACC,GAAR,+BAAwC2B,OAAxC;QACAK,aAAa,CAACL,OAAD,CAAb;MACD,CAHD;IAID;EACF,CAfD,EAeG,CAACrC,GAAD,CAfH;;EAkBA,IAAM2C,OAAO,GAAG,kBAAOC,OAAP;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAEZtC,QAAQ,CAAC,IAAAiB,+BAAA,GAAD,CAAR;YAEAlB,YAAY,CAAC1B,YAAY,CAACG,cAAd,CAAZ;YAJY;YAAA,kCAKM,IAAAkC,oBAAA,EAAW,CAAC4B,OAAD,CAAX,CALN;;UAAA;YAKNnD,IALM;YAOZa,QAAQ,CAAC,IAAAuC,yBAAA,EAAWpD,IAAX,CAAD,CAAR;YACAa,QAAQ,CAAC,IAAAY,yBAAA,EAAWzB,IAAX,CAAD,CAAR;YARY;YAAA;;UAAA;YAAA;YAAA;YAWZY,YAAY,CAAC1B,YAAY,CAACK,aAAd,CAAZ;;UAXY;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAhB;;EAeA,IAAIS,GAAG,IAAIO,GAAP,IAAcI,SAAS,KAAKzB,YAAY,CAACI,cAA7C,EAA6D;IAC3D,OACE,6BAAC,cAAD,CAAgB,QAAhB;MAAyB,KAAK,EAAEiB,GAAhC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGd,KAAK,CAAC4D,QADT,CADF;EAKD,CAND,MAMO;IACL,OACE,6BAAC,oCAAD;MACE,SAAS,EAAE1C,SADb;MAEE,YAAY,EAAEI,YAFhB;MAGE,cAAc,EAAEN,cAHlB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF;EAOD;AACF,CA1LD;;eA4LejB,W"},"metadata":{},"sourceType":"script"}