{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectFakeUsers = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar connectFakeUsers = function _callee(fakeUser1, fakeUser2, api, level) {\n  var timestamp, reportReason, requestProof, user1Promise, user2Promise, ops;\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          timestamp = Date.now();\n          user1Promise = api.addConnection(fakeUser1.id, fakeUser2.id, level, timestamp, reportReason, requestProof, fakeUser1);\n          user2Promise = api.addConnection(fakeUser2.id, fakeUser1.id, level, timestamp, reportReason, requestProof, fakeUser2);\n          _context.next = 5;\n          return _regenerator.default.awrap(Promise.all([user1Promise, user2Promise]));\n\n        case 5:\n          ops = _context.sent;\n          return _context.abrupt(\"return\", ops);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.connectFakeUsers = connectFakeUsers;","map":{"version":3,"names":["connectFakeUsers","fakeUser1","fakeUser2","api","level","timestamp","Date","now","user1Promise","addConnection","id","reportReason","requestProof","user2Promise","Promise","all","ops"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/fakeHelper.ts"],"sourcesContent":["import { NodeApi } from '@/api/brightId';\n\nexport const connectFakeUsers = async (\n  fakeUser1: FakeUser,\n  fakeUser2: FakeUser,\n  api: NodeApi,\n  level: ConnectionLevel,\n) => {\n  const timestamp = Date.now();\n\n  let reportReason;\n  let requestProof;\n\n  // Connect user1 -> user2\n  const user1Promise = api.addConnection(\n    fakeUser1.id,\n    fakeUser2.id,\n    level,\n    timestamp,\n    reportReason,\n    requestProof,\n    fakeUser1,\n  );\n\n  // Connect user2 -> user1\n  const user2Promise = api.addConnection(\n    fakeUser2.id,\n    fakeUser1.id,\n    level,\n    timestamp,\n    reportReason,\n    requestProof,\n    fakeUser2,\n  );\n\n  const ops = await Promise.all([user1Promise, user2Promise]);\n  return ops;\n};\n"],"mappings":";;;;;;;;;AAEO,IAAMA,gBAAgB,GAAG,iBAC9BC,SAD8B,EAE9BC,SAF8B,EAG9BC,GAH8B,EAI9BC,KAJ8B;EAAA;EAAA;IAAA;MAAA;QAAA;UAMxBC,SANwB,GAMZC,IAAI,CAACC,GAAL,EANY;UAYxBC,YAZwB,GAYTL,GAAG,CAACM,aAAJ,CACnBR,SAAS,CAACS,EADS,EAEnBR,SAAS,CAACQ,EAFS,EAGnBN,KAHmB,EAInBC,SAJmB,EAKnBM,YALmB,EAMnBC,YANmB,EAOnBX,SAPmB,CAZS;UAuBxBY,YAvBwB,GAuBTV,GAAG,CAACM,aAAJ,CACnBP,SAAS,CAACQ,EADS,EAEnBT,SAAS,CAACS,EAFS,EAGnBN,KAHmB,EAInBC,SAJmB,EAKnBM,YALmB,EAMnBC,YANmB,EAOnBV,SAPmB,CAvBS;UAAA;UAAA,kCAiCZY,OAAO,CAACC,GAAR,CAAY,CAACP,YAAD,EAAeK,YAAf,CAAZ,CAjCY;;QAAA;UAiCxBG,GAjCwB;UAAA,iCAkCvBA,GAlCuB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAzB"},"metadata":{},"sourceType":"script"}