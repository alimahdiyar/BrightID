{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { create } from 'apisauce';\nexport var socialMediaUrl = 'https://finder.brightid.org/api';\nexport var SOCIAL_API_AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR';\n\nvar SocialMediaService = function () {\n  function SocialMediaService() {\n    _classCallCheck(this, SocialMediaService);\n\n    this.socialMediaApi = create({\n      baseURL: socialMediaUrl\n    });\n  }\n\n  _createClass(SocialMediaService, [{\n    key: \"retrieveSocialMediaVariations\",\n    value: function retrieveSocialMediaVariations() {\n      var res;\n      return _regeneratorRuntime.async(function retrieveSocialMediaVariations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.get('/v1/social-media-variation/list/'));\n\n            case 2:\n              res = _context.sent;\n              SocialMediaService.throwOnError(res);\n              return _context.abrupt(\"return\", res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"createSocialMedia\",\n    value: function createSocialMedia(_ref) {\n      var variation, profileHashes, network, res;\n      return _regeneratorRuntime.async(function createSocialMedia$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              variation = _ref.variation, profileHashes = _ref.profileHashes, network = _ref.network;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.post('/v1/social-media/create/', {\n                variation: variation,\n                profileHashes: profileHashes,\n                network: network\n              }));\n\n            case 3:\n              res = _context2.sent;\n              SocialMediaService.throwOnError(res);\n              return _context2.abrupt(\"return\", res.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updateSocialMedia\",\n    value: function updateSocialMedia(_ref2) {\n      var token, profileHashes, res;\n      return _regeneratorRuntime.async(function updateSocialMedia$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = _ref2.token, profileHashes = _ref2.profileHashes;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.put('/v1/social-media/update/', {\n                profileHashes: profileHashes\n              }, {\n                headers: {\n                  Authorization: \"Token \" + token\n                }\n              }));\n\n            case 3:\n              res = _context3.sent;\n              SocialMediaService.throwOnError(res);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"deleteSocialMediaProfile\",\n    value: function deleteSocialMediaProfile(token) {\n      var res;\n      return _regeneratorRuntime.async(function deleteSocialMediaProfile$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.delete('/v1/social-media/delete/', {}, {\n                headers: {\n                  Authorization: \"Token \" + token\n                }\n              }));\n\n            case 2:\n              res = _context4.sent;\n              SocialMediaService.throwOnError(res);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"querySocialMedia\",\n    value: function querySocialMedia(payload) {\n      var res;\n      return _regeneratorRuntime.async(function querySocialMedia$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(this.socialMediaApi.post('/v1/social-media/query/', payload));\n\n            case 2:\n              res = _context5.sent;\n              SocialMediaService.throwOnError(res);\n              return _context5.abrupt(\"return\", res.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"throwOnError\",\n    value: function throwOnError(response) {\n      if (response.ok) {\n        return;\n      }\n\n      if (response.data && response.data.errorMessage) {\n        throw new Error(response.data.errorMessage);\n      }\n\n      if (response.status === 401) {\n        throw new Error(SOCIAL_API_AUTHENTICATION_ERROR);\n      }\n\n      console.log(\"socialApi response error: \" + response.status + \" - \" + response.problem);\n      throw new Error(response.problem);\n    }\n  }]);\n\n  return SocialMediaService;\n}();\n\nexport { SocialMediaService };","map":{"version":3,"names":["create","socialMediaUrl","SOCIAL_API_AUTHENTICATION_ERROR","SocialMediaService","socialMediaApi","baseURL","get","res","throwOnError","data","variation","profileHashes","network","post","token","put","headers","Authorization","delete","payload","response","ok","errorMessage","Error","status","console","log","problem"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/api/socialMediaService.ts"],"sourcesContent":["import { create, ApisauceInstance, ApiResponse } from 'apisauce';\nimport {\n  CreateSocialMediaRequest,\n  CreateSocialMediaResponse,\n  SocialMediaQueryRequest,\n  SocialMediaQueryResponse,\n  UpdateSocialMediaRequest,\n} from '@/api/socialMediaService_types.d';\n\nexport const socialMediaUrl = 'https://finder.brightid.org/api';\n\nexport const SOCIAL_API_AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR';\n\nclass SocialMediaService {\n  socialMediaApi: ApisauceInstance;\n\n  constructor() {\n    this.socialMediaApi = create({\n      baseURL: socialMediaUrl,\n    });\n  }\n\n  static throwOnError(response: ApiResponse<any>) {\n    if (response.ok) {\n      return;\n    }\n    if (response.data && response.data.errorMessage) {\n      throw new Error(response.data.errorMessage);\n    }\n    if (response.status === 401) {\n      throw new Error(SOCIAL_API_AUTHENTICATION_ERROR);\n    }\n    console.log(\n      `socialApi response error: ${response.status} - ${response.problem}`,\n    );\n    throw new Error(response.problem);\n  }\n\n  async retrieveSocialMediaVariations() {\n    const res = await this.socialMediaApi.get<SocialMediaVariation[]>(\n      '/v1/social-media-variation/list/',\n    );\n    SocialMediaService.throwOnError(res);\n    return res.data;\n  }\n\n  async createSocialMedia({\n    variation,\n    profileHashes,\n    network,\n  }: CreateSocialMediaRequest) {\n    const res = await this.socialMediaApi.post<CreateSocialMediaResponse>(\n      '/v1/social-media/create/',\n      {\n        variation,\n        profileHashes,\n        network,\n      },\n    );\n    SocialMediaService.throwOnError(res);\n    return res.data;\n  }\n\n  async updateSocialMedia({ token, profileHashes }: UpdateSocialMediaRequest) {\n    const res = await this.socialMediaApi.put(\n      '/v1/social-media/update/',\n      {\n        profileHashes,\n      },\n      {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      },\n    );\n    SocialMediaService.throwOnError(res);\n  }\n\n  async deleteSocialMediaProfile(token: string) {\n    const res = await this.socialMediaApi.delete(\n      '/v1/social-media/delete/',\n      {},\n      {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      },\n    );\n    SocialMediaService.throwOnError(res);\n  }\n\n  async querySocialMedia(payload: SocialMediaQueryRequest) {\n    const res = await this.socialMediaApi.post<SocialMediaQueryResponse>(\n      '/v1/social-media/query/',\n      payload,\n    );\n    SocialMediaService.throwOnError(res);\n    return res.data;\n  }\n}\n\nexport { SocialMediaService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}