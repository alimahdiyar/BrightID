{"ast":null,"code":"\"use strict\";\n\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n* Checks if two values are equal. Values may be primitives, arrays, or objects.\n* Returns true if both arguments have the same keys and values.\n*\n* @see http://underscorejs.org\n* @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n* @license MIT\n*/\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  }\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0;\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    }\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-reanimated/node_modules/fbjs/lib/areEqual.js"],"names":["aStackPool","bStackPool","aStack","bStack","result","eq","a","b","objToStr","Object","className","String","isNaN","Number","length","size","keys","i","module"],"mappings":"AAAA;;AAUA,IAAIA,UAAU,GAAd,EAAA;AACA,IAAIC,UAAU,GAAd,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAwB;EACtB,IAAIC,MAAM,GAAGF,UAAU,CAAVA,MAAAA,GAAoBA,UAAU,CAA9BA,GAAoBA,EAApBA,GAAb,EAAA;EACA,IAAIG,MAAM,GAAGF,UAAU,CAAVA,MAAAA,GAAoBA,UAAU,CAA9BA,GAAoBA,EAApBA,GAAb,EAAA;EACA,IAAIG,MAAM,GAAGC,EAAE,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAf,MAAe,CAAf;EACAH,MAAM,CAANA,MAAAA,GAAAA,CAAAA;EACAC,MAAM,CAANA,MAAAA,GAAAA,CAAAA;EACAH,UAAU,CAAVA,IAAAA,CAAAA,MAAAA;EACAC,UAAU,CAAVA,IAAAA,CAAAA,MAAAA;EACA,OAAA,MAAA;AAGF;;AAAA,SAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,MAAA,EAAkC;EAChC,IAAIK,CAAC,KAAL,CAAA,EAAa;IAEX,OAAOA,CAAC,KAADA,CAAAA,IAAW,IAAA,CAAA,IAAS,IAA3B,CAAA;EAGF;;EAAA,IAAIA,CAAC,IAADA,IAAAA,IAAaC,CAAC,IAAlB,IAAA,EAA4B;IAE1B,OAAA,KAAA;EAGF;;EAAA,IAAI,OAAA,CAAA,IAAA,QAAA,IAAwB,OAAA,CAAA,IAA5B,QAAA,EAAkD;IAChD,OAAA,KAAA;EAGF;;EAAA,IAAIC,QAAQ,GAAGC,MAAM,CAANA,SAAAA,CAAf,QAAA;EACA,IAAIC,SAAS,GAAGF,QAAQ,CAARA,IAAAA,CAAhB,CAAgBA,CAAhB;;EAEA,IAAIE,SAAS,IAAIF,QAAQ,CAARA,IAAAA,CAAjB,CAAiBA,CAAjB,EAAmC;IACjC,OAAA,KAAA;EAGF;;EAAA,QAAA,SAAA;IACE,KAAA,iBAAA;MACE,OAAOF,CAAC,IAAIK,MAAM,CAAlB,CAAkB,CAAlB;;IAEF,KAAA,iBAAA;MACE,OAAOC,KAAK,CAALA,CAAK,CAALA,IAAYA,KAAK,CAAjBA,CAAiB,CAAjBA,GAAAA,KAAAA,GAA+BN,CAAC,IAAIO,MAAM,CAAjD,CAAiD,CAAjD;;IAEF,KAAA,eAAA;IACA,KAAA,kBAAA;MACE,OAAO,CAAA,CAAA,IAAM,CAAb,CAAA;;IAEF,KAAA,iBAAA;MACE,OAAOP,CAAC,CAADA,MAAAA,IAAYC,CAAC,CAAbD,MAAAA,IAAwBA,CAAC,CAADA,MAAAA,IAAYC,CAAC,CAArCD,MAAAA,IAAgDA,CAAC,CAADA,SAAAA,IAAeC,CAAC,CAAhED,SAAAA,IAA8EA,CAAC,CAADA,UAAAA,IAAgBC,CAAC,CAZ1G,UAYI;EAZJ;;EAgBA,IAAIO,MAAM,GAAGZ,MAAM,CAAnB,MAAA;;EAEA,OAAOY,MAAP,EAAA,EAAiB;IACf,IAAIZ,MAAM,CAANA,MAAM,CAANA,IAAJ,CAAA,EAAyB;MACvB,OAAOC,MAAM,CAANA,MAAM,CAANA,IAAP,CAAA;IAEH;EAEDD;;EAAAA,MAAM,CAANA,IAAAA,CAAAA,CAAAA;EACAC,MAAM,CAANA,IAAAA,CAAAA,CAAAA;EACA,IAAIY,IAAI,GAAR,CAAA;;EAEA,IAAIL,SAAS,KAAb,gBAAA,EAAoC;IAClCK,IAAI,GAAGT,CAAC,CAARS,MAAAA;;IAEA,IAAIA,IAAI,KAAKR,CAAC,CAAd,MAAA,EAAuB;MACrB,OAAA,KAAA;IAIF;;IAAA,OAAOQ,IAAP,EAAA,EAAe;MACb,IAAI,CAACV,EAAE,CAACC,CAAC,CAAF,IAAE,CAAF,EAAUC,CAAC,CAAX,IAAW,CAAX,EAAA,MAAA,EAAP,MAAO,CAAP,EAA2C;QACzC,OAAA,KAAA;MAEH;IACF;EAbD,CAAA,MAaO;IACL,IAAID,CAAC,CAADA,WAAAA,KAAkBC,CAAC,CAAvB,WAAA,EAAqC;MACnC,OAAA,KAAA;IAGF;;IAAA,IAAID,CAAC,CAADA,cAAAA,CAAAA,SAAAA,KAA+BC,CAAC,CAADA,cAAAA,CAAnC,SAAmCA,CAAnC,EAAgE;MAC9D,OAAOD,CAAC,CAADA,OAAAA,MAAeC,CAAC,CAAvB,OAAsBA,EAAtB;IAGF;;IAAA,IAAIS,IAAI,GAAGP,MAAM,CAANA,IAAAA,CAAX,CAAWA,CAAX;;IAEA,IAAIO,IAAI,CAAJA,MAAAA,IAAeP,MAAM,CAANA,IAAAA,CAAAA,CAAAA,EAAnB,MAAA,EAA0C;MACxC,OAAA,KAAA;IAGF;;IAAA,KAAK,IAAIQ,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGD,IAAI,CAAxB,MAAA,EAAiCC,CAAjC,EAAA,EAAsC;MACpC,IAAI,CAACZ,EAAE,CAACC,CAAC,CAACU,IAAI,CAAP,CAAO,CAAL,CAAF,EAAaT,CAAC,CAACS,IAAI,CAAnB,CAAmB,CAAL,CAAd,EAAA,MAAA,EAAP,MAAO,CAAP,EAAiD;QAC/C,OAAA,KAAA;MAEH;IACF;EAEDd;;EAAAA,MAAM,CAANA,GAAAA;EACAC,MAAM,CAANA,GAAAA;EACA,OAAA,IAAA;AAGFe;;AAAAA,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;"]},"metadata":{},"sourceType":"script"}