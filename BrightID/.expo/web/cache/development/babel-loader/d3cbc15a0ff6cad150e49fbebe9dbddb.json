{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isVerified = exports.getVerificationPatches = exports.getBituReportedByText = void 0;\n\nvar _exprEval = require(\"expr-eval\");\n\nvar _UserTasks = require(\"../components/Tasks/UserTasks\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar isVerified = function isVerified(verifications, verification) {\n  try {\n    var expr = _exprEval.Parser.parse(verification);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(expr.variables()), _step; !(_step = _iterator()).done;) {\n      var v = _step.value;\n\n      if (!verifications[v]) {\n        verifications[v] = false;\n      }\n    }\n\n    return expr.evaluate(verifications);\n  } catch (err) {\n    console.log(\"verification \" + verification + \" can not be evaluated.\", err);\n    return false;\n  }\n};\n\nexports.isVerified = isVerified;\n\nvar getVerificationPatches = function getVerificationPatches(verifications) {\n  var patches = [];\n  var v = verifications.find(function (v) {\n    return v.name === 'SeedConnected';\n  });\n\n  if (v && v.rank > 0) {\n    patches.push({\n      text: 'Meets'\n    });\n  }\n\n  v = verifications.find(function (v) {\n    return v.name === 'Bitu';\n  });\n\n  if (v && v.score > 0) {\n    patches.push({\n      text: \"Bitu \" + v.score,\n      task: _UserTasks.UserTasks.bitu_verification\n    });\n  }\n\n  v = verifications.find(function (v) {\n    return v.name === 'Seed';\n  });\n\n  if (v) {\n    patches.push({\n      text: 'Seed'\n    });\n  }\n\n  return patches;\n};\n\nexports.getVerificationPatches = getVerificationPatches;\n\nvar getBituReportedByText = function getBituReportedByText(bituVerification, connections, item) {\n  var reportersNames = bituVerification.reportedConnections[item].map(function (id) {\n    var _connections$find;\n\n    return (_connections$find = connections.find(function (c) {\n      return c.id === id;\n    })) == null ? void 0 : _connections$find.name;\n  });\n  var parts = reportersNames.filter(function (name) {\n    return !!name;\n  });\n  var unknownReportersCount = reportersNames.filter(function (name) {\n    return !name;\n  }).length;\n\n  if (unknownReportersCount > 0) {\n    parts.push(unknownReportersCount + \" unkown user\" + (unknownReportersCount > 1 ? 's' : ''));\n  }\n\n  var joinParts = function joinParts(a) {\n    return [a.slice(0, -1).join(', '), a.slice(-1)[0]].join(a.length < 2 ? '' : ' and ');\n  };\n\n  return \"Reported by \" + joinParts(parts);\n};\n\nexports.getBituReportedByText = getBituReportedByText;","map":{"version":3,"names":["isVerified","verifications","verification","expr","Parser","parse","variables","v","evaluate","err","console","log","getVerificationPatches","patches","find","name","rank","push","text","score","task","UserTasks","bitu_verification","getBituReportedByText","bituVerification","connections","item","reportersNames","reportedConnections","map","id","c","parts","filter","unknownReportersCount","length","joinParts","a","slice","join"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/verifications.ts"],"sourcesContent":["import { Parser, Value } from 'expr-eval';\nimport { Dictionary } from 'ramda';\nimport { UserTasks } from '@/components/Tasks/UserTasks';\n\nexport const isVerified = (\n  verifications: Value | Dictionary<any>,\n  verification: string,\n) => {\n  try {\n    const expr = Parser.parse(verification);\n    for (const v of expr.variables()) {\n      if (!verifications[v]) {\n        verifications[v] = false;\n      }\n    }\n    return expr.evaluate(verifications);\n  } catch (err) {\n    console.log(`verification ${verification} can not be evaluated.`, err);\n    return false;\n  }\n};\n\nexport const getVerificationPatches = (verifications: Verification[]) => {\n  const patches = [];\n  let v = verifications.find((v) => v.name === 'SeedConnected');\n  if (v && (v as SeedConnectedVerification).rank > 0) {\n    patches.push({ text: 'Meets' });\n  }\n  v = verifications.find((v) => v.name === 'Bitu');\n  if (v && (v as BituVerification).score > 0) {\n    patches.push({\n      text: `Bitu ${(v as BituVerification).score}`,\n      task: UserTasks.bitu_verification,\n    });\n  }\n  v = verifications.find((v) => v.name === 'Seed');\n  if (v) {\n    patches.push({ text: 'Seed' });\n  }\n  return patches;\n};\n\nexport const getBituReportedByText = (\n  bituVerification: BituVerification,\n  connections: Connection[],\n  item: string,\n) => {\n  const reportersNames = bituVerification.reportedConnections[item].map(\n    (id) => connections.find((c) => c.id === id)?.name,\n  );\n  const parts = reportersNames.filter((name) => !!name);\n  const unknownReportersCount = reportersNames.filter((name) => !name).length;\n  if (unknownReportersCount > 0) {\n    parts.push(\n      `${unknownReportersCount} unkown user${\n        unknownReportersCount > 1 ? 's' : ''\n      }`,\n    );\n  }\n  // this function is used to convert ['a', 'b', 'c'] to 'a, b and c'\n  const joinParts = (a) =>\n    [a.slice(0, -1).join(', '), a.slice(-1)[0]].join(\n      a.length < 2 ? '' : ' and ',\n    );\n  return `Reported by ${joinParts(parts)}`;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}