{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect, useLayoutEffect, useMemo, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport { innerJoin } from 'ramda';\nimport { useTranslation } from 'react-i18next';\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport Clipboard from '@react-native-community/clipboard';\nimport { useDispatch, useSelector } from \"../../../store\";\nimport { leaveGroup, updateGroup, dismissFromGroup, addAdmin, selectAllConnections, userSelector } from \"../../../actions\";\nimport EmptyList from \"../../Helpers/EmptyList\";\nimport { ORANGE, WHITE, BLUE, DARK_GREY } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { groupByIdSelector } from \"../../../utils/groups\";\nimport { addOperation } from \"../../../reducer/operationsSlice\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { MemberCard } from \"./MemberCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var MembersScreen = function MembersScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var groupID = route.params.group.id;\n  var dispatch = useDispatch();\n  var api = useContext(NodeApiContext);\n  var connections = useSelector(selectAllConnections);\n  var user = useSelector(userSelector);\n\n  var _useSelector = useSelector(function (state) {\n    return groupByIdSelector(state, groupID);\n  }),\n      group = _useSelector.group,\n      admins = _useSelector.admins,\n      members = _useSelector.members;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contextActions = _useState2[0],\n      setContextActions = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useActionSheet = useActionSheet(),\n      showActionSheetWithOptions = _useActionSheet.showActionSheetWithOptions;\n\n  var ACTION_INVITE = t('groups.groupActionSheet.inviteUser');\n  var ACTION_LEAVE = t('groups.groupActionSheet.leaveGroup');\n  var ACTION_CANCEL = t('groups.groupActionSheet.cancel');\n  var ACTION_COPY_GROUPID = t('groups.groupActionSheet.copyGroupId', 'Copy group ID to clipboard');\n  useLayoutEffect(function () {\n    if (contextActions.length > 0) {\n      var handleLeaveGroup = function handleLeaveGroup() {\n        var buttons = [{\n          text: t('common.alert.cancel'),\n          style: 'cancel'\n        }, {\n          text: t('common.alert.ok'),\n          onPress: function onPress() {\n            var op;\n            return _regeneratorRuntime.async(function onPress$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(api.leaveGroup(groupID));\n\n                  case 3:\n                    op = _context.sent;\n                    dispatch(addOperation(op));\n                    _context.next = 7;\n                    return _regeneratorRuntime.awrap(dispatch(leaveGroup(group)));\n\n                  case 7:\n                    navigation.goBack();\n                    _context.next = 13;\n                    break;\n\n                  case 10:\n                    _context.prev = 10;\n                    _context.t0 = _context[\"catch\"](0);\n                    Alert.alert(t('groups.alert.title.errorLeaveGroup'), _context.t0.message);\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[0, 10]], Promise);\n          }\n        }];\n        Alert.alert(t('groups.alert.title.leaveGroup'), t('groups.alert.text.leaveGroup'), buttons, {\n          cancelable: true\n        });\n      };\n\n      var handleInvite = function handleInvite() {\n        navigation.navigate('InviteList', {\n          group: group\n        });\n      };\n\n      var handleCopyGroupId = function handleCopyGroupId() {\n        Clipboard.setString(groupID);\n        var msg = t('groups.alert.text.groupIdCopied', 'Group ID copied to clipboard');\n\n        if (Platform.OS === 'android') {\n          ToastAndroid.show(msg, ToastAndroid.LONG);\n        } else {\n          Alert.alert(msg);\n        }\n      };\n\n      var performAction = function performAction(index) {\n        var action = contextActions[index];\n        console.log(\"Performing action \" + action);\n\n        switch (action) {\n          case ACTION_INVITE:\n            handleInvite();\n            break;\n\n          case ACTION_LEAVE:\n            handleLeaveGroup();\n            break;\n\n          case ACTION_COPY_GROUPID:\n            handleCopyGroupId();\n            break;\n\n          case ACTION_CANCEL:\n          default:\n        }\n      };\n\n      navigation.setOptions({\n        headerRight: function headerRight() {\n          return _jsx(TouchableOpacity, {\n            testID: \"groupOptionsBtn\",\n            style: {\n              marginRight: 11\n            },\n            onPress: function onPress() {\n              showActionSheetWithOptions({\n                options: contextActions,\n                cancelButtonIndex: contextActions.indexOf(ACTION_CANCEL),\n                destructiveButtonIndex: contextActions.indexOf(ACTION_LEAVE),\n                title: t('common.actionSheet.title'),\n                showSeparators: true,\n                textStyle: {\n                  color: BLUE,\n                  textAlign: 'center',\n                  width: '100%'\n                },\n                titleTextStyle: {\n                  textAlign: 'center',\n                  width: '100%'\n                }\n              }, performAction);\n            },\n            children: _jsx(Material, {\n              name: \"dots-horizontal\",\n              size: 32,\n              color: WHITE\n            })\n          });\n        }\n      });\n    }\n  }, [navigation, contextActions, showActionSheetWithOptions, dispatch, group, groupID, t, ACTION_LEAVE, ACTION_CANCEL, ACTION_INVITE, api, ACTION_COPY_GROUPID]);\n  useEffect(function () {\n    var actions = [];\n\n    if (admins.includes(user.id)) {\n      actions.push(ACTION_INVITE);\n    }\n\n    if (members.includes(user.id)) {\n      actions.push(ACTION_LEAVE);\n    }\n\n    actions.push(ACTION_COPY_GROUPID);\n    actions.push(ACTION_CANCEL);\n    setContextActions(actions);\n  }, [user.id, admins, members, ACTION_INVITE, ACTION_LEAVE, ACTION_CANCEL, ACTION_COPY_GROUPID]);\n  useEffect(function () {\n    console.log(\"updating group info \" + groupID);\n    api.getGroup(groupID).then(function (data) {\n      dispatch(updateGroup(data));\n    });\n  }, [api, dispatch, groupID]);\n  var groupMembers = useMemo(function () {\n    return [user].concat(innerJoin(function (connection, member) {\n      return connection.id === member;\n    }, connections, members));\n  }, [user, connections, members]);\n\n  var handleDismiss = function handleDismiss(user) {\n    var buttons = [{\n      text: t('common.alert.cancel'),\n      style: 'cancel'\n    }, {\n      text: t('common.alert.ok'),\n      onPress: function onPress() {\n        var op;\n        return _regeneratorRuntime.async(function onPress$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(api.dismiss(user.id, groupID));\n\n              case 3:\n                op = _context2.sent;\n                dispatch(addOperation(op));\n                dispatch(dismissFromGroup({\n                  member: user.id,\n                  group: group\n                }));\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                Alert.alert(t('groups.alert.title.errorDismissMember'), _context2.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      }\n    }];\n    Alert.alert(t('groups.alert.title.dismissMember'), t('groups.alert.text.dismissMember', {\n      name: user.name\n    }), buttons, {\n      cancelable: true\n    });\n  };\n\n  var handleAddAdmin = function handleAddAdmin(user) {\n    var buttons = [{\n      text: t('common.alert.cancel'),\n      style: 'cancel'\n    }, {\n      text: t('common.alert.ok'),\n      onPress: function onPress() {\n        var op;\n        return _regeneratorRuntime.async(function onPress$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(api.addAdmin(user.id, groupID));\n\n              case 3:\n                op = _context3.sent;\n                dispatch(addOperation(op));\n                dispatch(addAdmin({\n                  member: user.id,\n                  group: group\n                }));\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                Alert.alert(t('groups.alert.text.addAdmin', {\n                  name: user.name\n                }), _context3.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      }\n    }];\n    Alert.alert(t('groups.alert.title.addAdmin'), t('groups.alert.text.addAdmin', {\n      name: user.name\n    }), buttons, {\n      cancelable: true\n    });\n  };\n\n  var renderMember = function renderMember(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var memberIsAdmin = admins.includes(item.id);\n    var userIsAdmin = admins.includes(user.id);\n    return _jsx(MemberCard, {\n      testID: \"memberItem-\" + index,\n      connectionDate: item.connectionDate || 0,\n      memberId: item.id,\n      name: item.name,\n      photo: item.photo,\n      memberIsAdmin: memberIsAdmin,\n      userIsAdmin: userIsAdmin,\n      userId: user.id,\n      handleDismiss: handleDismiss,\n      handleAddAdmin: handleAddAdmin\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        testID: \"membersView\",\n        style: styles.mainContainer,\n        children: _jsx(View, {\n          children: _jsx(FlatList, {\n            style: styles.membersContainer,\n            data: groupMembers,\n            keyExtractor: function keyExtractor(_ref2, index) {\n              var id = _ref2.id;\n              return id + index;\n            },\n            renderItem: renderMember,\n            contentContainerStyle: {\n              paddingBottom: 50,\n              flexGrow: 1\n            },\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false,\n            ListEmptyComponent: _jsx(EmptyList, {\n              title: t('groups.text.noMembers')\n            })\n          })\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  membersContainer: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginTop: 8\n  },\n  moreIcon: {\n    marginRight: 16\n  },\n  groupName: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[28],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    textAlign: 'center'\n  },\n  optionsOverlay: {\n    backgroundColor: DARK_GREY\n  },\n  optionsContainer: {\n    backgroundColor: WHITE,\n    height: '12%',\n    width: '105%',\n    borderRadius: 5,\n    position: 'absolute',\n    top: 50,\n    alignSelf: 'center'\n  },\n  triangle: {\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 18,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderBottomColor: WHITE,\n    position: 'absolute',\n    top: -18,\n    right: 20\n  },\n  optionsBox: {\n    flexDirection: 'row',\n    width: '90%',\n    height: '70%',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  leaveGroupText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[24],\n    marginLeft: 30\n  },\n  backButtonContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%',\n    paddingLeft: 10\n  },\n  headerPhoto: {\n    marginLeft: 11,\n    borderRadius: 18,\n    width: 36,\n    height: 36\n  },\n  backStyle: {\n    paddingTop: 8,\n    paddingLeft: 11\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/Members/MembersScreen.tsx"],"names":["MembersScreen","navigation","useNavigation","route","useRoute","groupID","dispatch","useDispatch","api","useContext","connections","useSelector","user","group","admins","members","groupByIdSelector","contextActions","setContextActions","useState","t","useTranslation","showActionSheetWithOptions","useActionSheet","ACTION_INVITE","ACTION_LEAVE","ACTION_CANCEL","ACTION_COPY_GROUPID","useLayoutEffect","handleLeaveGroup","buttons","text","style","onPress","op","addOperation","leaveGroup","Alert","cancelable","handleInvite","handleCopyGroupId","Clipboard","msg","Platform","ToastAndroid","performAction","action","console","headerRight","marginRight","options","cancelButtonIndex","destructiveButtonIndex","title","showSeparators","textStyle","color","textAlign","width","titleTextStyle","useEffect","actions","updateGroup","groupMembers","useMemo","innerJoin","connection","handleDismiss","dismissFromGroup","member","name","handleAddAdmin","addAdmin","renderMember","item","index","memberIsAdmin","userIsAdmin","styles","id","paddingBottom","flexGrow","StyleSheet","orangeTop","backgroundColor","height","DEVICE_LARGE","zIndex","membersContainer","flex","container","borderTopLeftRadius","marginTop","overflow","mainContainer","alignItems","flexDirection","justifyContent","moreIcon","groupName","fontFamily","fontSize","shadowColor","shadowOffset","shadowRadius","optionsOverlay","optionsContainer","borderRadius","position","top","alignSelf","triangle","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","borderBottomColor","right","optionsBox","leaveGroupText","marginLeft","backButtonContainer","paddingLeft","headerPhoto","backStyle","paddingTop"],"mappings":";;AAAA,SAAA,QAAA,EAAA,SAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,QAAA,OAAA;;;;;;;;AAgBA,SAAA,cAAA,QAAA,iCAAA;AACA,SAAA,SAAA,QAAA,OAAA;AACA,SAAA,cAAA,QAAA,eAAA;AACA,OAAA,QAAA,MAAA,2CAAA;AACA,SAAA,aAAA,EAAA,QAAA,QAAA,0BAAA;AACA,OAAA,SAAA,MAAA,mCAAA;AACA,SAAA,WAAA,EAAA,WAAA;AACA,SAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,YAAA;AAQA,OAAA,SAAA;AACA,SAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA;AACA,SAAA,YAAA;AACA,SAAA,QAAA;AACA,SAAA,iBAAA;AACA,SAAA,YAAA;AACA,SAAA,cAAA;AACA,SAAA,UAAA;;;;AAEA,OAAO,IAAMA,aAAa,GAAbA,SAAAA,aAAAA,GAAsB;EACjC,IAAMC,UAAU,GAAGC,aAAnB,EAAA;EACA,IAAMC,KAAoC,GAAGC,QAA7C,EAAA;EAGA,IAAMC,OAAO,GAAGF,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAhB,EAAA;EACA,IAAMG,QAAQ,GAAGC,WAAjB,EAAA;EACA,IAAMC,GAAG,GAAGC,UAAU,CAAtB,cAAsB,CAAtB;EACA,IAAMC,WAAW,GAAGC,WAAW,CAA/B,oBAA+B,CAA/B;EACA,IAAMC,IAAI,GAAGD,WAAW,CAAxB,YAAwB,CAAxB;;EACA,IAAA,YAAA,GAAmCA,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAC7CK,iBAAiB,CAAA,KAAA,EAD4B,OAC5B,CAD4B;EAA/C,CAA8C,CAA9C;EAAA,IAAQH,KAAR,GAAA,YAAA,CAAA,KAAA;EAAA,IAAeC,MAAf,GAAA,YAAA,CAAA,MAAA;EAAA,IAAuBC,OAAvB,GAAA,YAAA,CAAA,OAAA;;EAGA,IAAA,SAAA,GAA4CI,QAAQ,CAApD,EAAoD,CAApD;EAAA,IAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;EAAA,IAAOF,cAAP,GAAA,UAAA,CAAA,CAAA,CAAA;EAAA,IAAuBC,iBAAvB,GAAA,UAAA,CAAA,CAAA,CAAA;;EACA,IAAA,eAAA,GAAcG,cAAd,EAAA;EAAA,IAAQD,CAAR,GAAA,eAAA,CAAA,CAAA;;EACA,IAAA,eAAA,GAAuCG,cAAvC,EAAA;EAAA,IAAQD,0BAAR,GAAA,eAAA,CAAA,0BAAA;;EAEA,IAAME,aAAa,GAAGJ,CAAC,CAAvB,oCAAuB,CAAvB;EACA,IAAMK,YAAY,GAAGL,CAAC,CAAtB,oCAAsB,CAAtB;EAEA,IAAMM,aAAa,GAAGN,CAAC,CAAvB,gCAAuB,CAAvB;EACA,IAAMO,mBAAmB,GAAGP,CAAC,CAAA,qCAAA,EAA7B,4BAA6B,CAA7B;EAKAQ,eAAe,CAAC,YAAM;IACpB,IAAIX,cAAc,CAAdA,MAAAA,GAAJ,CAAA,EAA+B;MAE7B,IAAMY,gBAAgB,GAAhBA,SAAAA,gBAAAA,GAAyB;QAC7B,IAAMC,OAAO,GAAG,CACd;UACEC,IAAI,EAAEX,CAAC,CADT,qBACS,CADT;UAEEY,KAAK,EAHO;QACd,CADc,EAKd;UACED,IAAI,EAAEX,CAAC,CADT,iBACS,CADT;UAEEa,OAAO,EAAE,SAAA,OAAA,GAAA;YAAA,IAAA,EAAA;YAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;cAAA,OAAA,CAAA,EAAA;gBAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;kBAAA,KAAA,CAAA;oBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;oBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;oBAAA,OAAA,mBAAA,CAAA,KAAA,CAEYzB,GAAG,CAAHA,UAAAA,CAFZ,OAEYA,CAFZ,CAAA;;kBAAA,KAAA,CAAA;oBAEC0B,EAFD,GAAA,QAAA,CAAA,IAECA;oBACN5B,QAAQ,CAAC6B,YAAY,CAArB7B,EAAqB,CAAb,CAARA;oBAHK,QAAA,CAAA,IAAA,GAAA,CAAA;oBAAA,OAAA,mBAAA,CAAA,KAAA,CAICA,QAAQ,CAAC8B,UAAU,CAJpB,KAIoB,CAAX,CAJT,CAAA;;kBAAA,KAAA,CAAA;oBAKLnC,UAAU,CAAVA,MAAAA;oBALK,QAAA,CAAA,IAAA,GAAA,EAAA;oBAAA;;kBAAA,KAAA,EAAA;oBAAA,QAAA,CAAA,IAAA,GAAA,EAAA;oBAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;oBAOLoC,KAAK,CAALA,KAAAA,CACEjB,CAAC,CADHiB,oCACG,CADHA,EAEE,QAAA,CAAA,EAAA,CAFFA,OAAAA;;kBAPK,KAAA,EAAA;kBAAA,KAAA,KAAA;oBAAA,OAAA,QAAA,CAAA,IAAA,EAAA;gBAAA;cAAA;YAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA;UAPb;QAKE,CALc,CAAhB;QAsBAA,KAAK,CAALA,KAAAA,CACEjB,CAAC,CADHiB,+BACG,CADHA,EAEEjB,CAAC,CAFHiB,8BAEG,CAFHA,EAAAA,OAAAA,EAKE;UACEC,UAAU,EANdD;QAKE,CALFA;MAvBF,CAAA;;MAkCA,IAAME,YAAY,GAAZA,SAAAA,YAAAA,GAAqB;QACzBtC,UAAU,CAAVA,QAAAA,CAAAA,YAAAA,EAAkC;UAChCY,KAAK,EADPZ;QAAkC,CAAlCA;MADF,CAAA;;MAMA,IAAMuC,iBAAiB,GAAjBA,SAAAA,iBAAAA,GAA0B;QAC9BC,SAAS,CAATA,SAAAA,CAAAA,OAAAA;QACA,IAAMC,GAAG,GAAGtB,CAAC,CAAA,iCAAA,EAAb,8BAAa,CAAb;;QAIA,IAAIuB,QAAQ,CAARA,EAAAA,KAAJ,SAAA,EAA+B;UAC7BC,YAAY,CAAZA,IAAAA,CAAAA,GAAAA,EAAuBA,YAAY,CAAnCA,IAAAA;QADF,CAAA,MAEO;UACLP,KAAK,CAALA,KAAAA,CAAAA,GAAAA;QAEH;MAXD,CAAA;;MAaA,IAAMQ,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,KAAhBA,EAA2B;QAC/B,IAAMC,MAAM,GAAG7B,cAAc,CAA7B,KAA6B,CAA7B;QACA8B,OAAO,CAAPA,GAAAA,CAAAA,uBAAAA,MAAAA;;QACA,QAAA,MAAA;UACE,KAAA,aAAA;YACER,YAAY;YACZ;;UACF,KAAA,YAAA;YACEV,gBAAgB;YAChB;;UACF,KAAA,mBAAA;YACEW,iBAAiB;YACjB;;UACF,KAAA,aAAA;UAVF;QAAA;MAHF,CAAA;;MAoBAvC,UAAU,CAAVA,UAAAA,CAAsB;QACpB+C,WAAW,EAAE,SAAA,WAAA,GAAA;UAAA,OACX,IAAA,CAAA,gBAAA,EAAA;YACE,MAAM,EADR,iBAAA;YAEE,KAAK,EAAE;cAAEC,WAAW,EAFtB;YAES,CAFT;YAGE,OAAO,EAAE,SAAA,OAAA,GAAM;cACb3B,0BAA0B,CACxB;gBACE4B,OAAO,EADT,cAAA;gBAEEC,iBAAiB,EAAElC,cAAc,CAAdA,OAAAA,CAFrB,aAEqBA,CAFrB;gBAGEmC,sBAAsB,EAAEnC,cAAc,CAAdA,OAAAA,CAH1B,YAG0BA,CAH1B;gBAIEoC,KAAK,EAAEjC,CAAC,CAJV,0BAIU,CAJV;gBAKEkC,cAAc,EALhB,IAAA;gBAMEC,SAAS,EAAE;kBACTC,KAAK,EADI,IAAA;kBAETC,SAAS,EAFA,QAAA;kBAGTC,KAAK,EATT;gBAMa,CANb;gBAWEC,cAAc,EAAE;kBACdF,SAAS,EADK,QAAA;kBAEdC,KAAK,EAde;gBAYN;cAXlB,CADwB,EAA1BpC,aAA0B,CAA1BA;YAJJ,CAAA;YAAA,QAAA,EAyBE,IAAA,CAAA,QAAA,EAAA;cAAU,IAAI,EAAd,iBAAA;cAAiC,IAAI,EAArC,EAAA;cAA2C,KAAK,EA1BvC;YA0BT,CAAA;UAzBF,CAAA,CADW;QADfrB;MAAsB,CAAtBA;IAgCH;EA5Gc,CAAA,EA4GZ,CAAA,UAAA,EAAA,cAAA,EAAA,0BAAA,EAAA,QAAA,EAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,aAAA,EAAA,aAAA,EAAA,GAAA,EA5GH2B,mBA4GG,CA5GY,CAAfA;EA4HAgC,SAAS,CAAC,YAAM;IACd,IAAMC,OAAO,GAAb,EAAA;;IACA,IAAI/C,MAAM,CAANA,QAAAA,CAAgBF,IAAI,CAAxB,EAAIE,CAAJ,EAA8B;MAE5B+C,OAAO,CAAPA,IAAAA,CAAAA,aAAAA;IAEF;;IAAA,IAAI9C,OAAO,CAAPA,QAAAA,CAAiBH,IAAI,CAAzB,EAAIG,CAAJ,EAA+B;MAE7B8C,OAAO,CAAPA,IAAAA,CAAAA,YAAAA;IAGFA;;IAAAA,OAAO,CAAPA,IAAAA,CAAAA,mBAAAA;IACAA,OAAO,CAAPA,IAAAA,CAAAA,aAAAA;IACA3C,iBAAiB,CAAjBA,OAAiB,CAAjBA;EAbO,CAAA,EAcN,CACDN,IAAI,CADH,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,EAAA,YAAA,EAAA,aAAA,EAdHgD,mBAcG,CAdM,CAATA;EAwBAA,SAAS,CAAC,YAAM;IACdb,OAAO,CAAPA,GAAAA,CAAAA,yBAAAA,OAAAA;IACAvC,GAAG,CAAHA,QAAAA,CAAAA,OAAAA,EAAAA,IAAAA,CAA2B,UAAA,IAAA,EAAU;MACnCF,QAAQ,CAACwD,WAAW,CAApBxD,IAAoB,CAAZ,CAARA;IADFE,CAAAA;EAFO,CAAA,EAKN,CAAA,GAAA,EAAA,QAAA,EALHoD,OAKG,CALM,CAATA;EAQA,IAAMG,YAAgC,GAAGC,OAAO,CAAC,YAAM;IACrD,OAAQ,CAAD,IAAC,EAAD,MAAC,CACNC,SAAS,CACP,UAAA,UAAA,EAAA,MAAA,EAAA;MAAA,OAAwBC,UAAU,CAAVA,EAAAA,KAAxB,MAAA;IADO,CAAA,EAAA,WAAA,EADX,OACW,CADH,CAAR;EAD8C,CAAA,EAQ7C,CAAA,IAAA,EAAA,WAAA,EARH,OAQG,CAR6C,CAAhD;;EAUA,IAAMC,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,IAAhBA,EAA0B;IAC9B,IAAMrC,OAAO,GAAG,CACd;MACEC,IAAI,EAAEX,CAAC,CADT,qBACS,CADT;MAEEY,KAAK,EAHO;IACd,CADc,EAKd;MACED,IAAI,EAAEX,CAAC,CADT,iBACS,CADT;MAEEa,OAAO,EAAE,SAAA,OAAA,GAAA;QAAA,IAAA,EAAA;QAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,SAAA,EAAA;UAAA,OAAA,CAAA,EAAA;YAAA,QAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,OAAA,mBAAA,CAAA,KAAA,CAEYzB,GAAG,CAAHA,OAAAA,CAAYI,IAAI,CAAhBJ,EAAAA,EAFZ,OAEYA,CAFZ,CAAA;;cAAA,KAAA,CAAA;gBAEC0B,EAFD,GAAA,SAAA,CAAA,IAECA;gBACN5B,QAAQ,CAAC6B,YAAY,CAArB7B,EAAqB,CAAb,CAARA;gBACAA,QAAQ,CAAC8D,gBAAgB,CAAC;kBAAEC,MAAM,EAAEzD,IAAI,CAAd,EAAA;kBAAmBC,KAAK,EAAlDP;gBAA0B,CAAD,CAAjB,CAARA;gBAJK,SAAA,CAAA,IAAA,GAAA,EAAA;gBAAA;;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;gBAML+B,KAAK,CAALA,KAAAA,CACEjB,CAAC,CADHiB,uCACG,CADHA,EAEE,SAAA,CAAA,EAAA,CAFFA,OAAAA;;cANK,KAAA,EAAA;cAAA,KAAA,KAAA;gBAAA,OAAA,SAAA,CAAA,IAAA,EAAA;YAAA;UAAA;QAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA;MAPb;IAKE,CALc,CAAhB;IAqBAA,KAAK,CAALA,KAAAA,CACEjB,CAAC,CADHiB,kCACG,CADHA,EAEEjB,CAAC,CAAA,iCAAA,EAAoC;MAAEkD,IAAI,EAAE1D,IAAI,CAFnDyB;IAEuC,CAApC,CAFHA,EAAAA,OAAAA,EAKE;MACEC,UAAU,EANdD;IAKE,CALFA;EAtBF,CAAA;;EAiCA,IAAMkC,cAAc,GAAdA,SAAAA,cAAAA,CAAiB,IAAjBA,EAA2B;IAC/B,IAAMzC,OAAO,GAAG,CACd;MACEC,IAAI,EAAEX,CAAC,CADT,qBACS,CADT;MAEEY,KAAK,EAHO;IACd,CADc,EAKd;MACED,IAAI,EAAEX,CAAC,CADT,iBACS,CADT;MAEEa,OAAO,EAAE,SAAA,OAAA,GAAA;QAAA,IAAA,EAAA;QAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,SAAA,EAAA;UAAA,OAAA,CAAA,EAAA;YAAA,QAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,OAAA,mBAAA,CAAA,KAAA,CAEYzB,GAAG,CAAHA,QAAAA,CAAaI,IAAI,CAAjBJ,EAAAA,EAFZ,OAEYA,CAFZ,CAAA;;cAAA,KAAA,CAAA;gBAEC0B,EAFD,GAAA,SAAA,CAAA,IAECA;gBACN5B,QAAQ,CAAC6B,YAAY,CAArB7B,EAAqB,CAAb,CAARA;gBACAA,QAAQ,CAACkE,QAAQ,CAAC;kBAAEH,MAAM,EAAEzD,IAAI,CAAd,EAAA;kBAAmBC,KAAK,EAA1CP;gBAAkB,CAAD,CAAT,CAARA;gBAJK,SAAA,CAAA,IAAA,GAAA,EAAA;gBAAA;;cAAA,KAAA,CAAA;gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;gBAML+B,KAAK,CAALA,KAAAA,CACEjB,CAAC,CAAA,4BAAA,EAA+B;kBAAEkD,IAAI,EAAE1D,IAAI,CAD9CyB;gBACkC,CAA/B,CADHA,EAEE,SAAA,CAAA,EAAA,CAFFA,OAAAA;;cANK,KAAA,EAAA;cAAA,KAAA,KAAA;gBAAA,OAAA,SAAA,CAAA,IAAA,EAAA;YAAA;UAAA;QAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA;MAPb;IAKE,CALc,CAAhB;IAqBAA,KAAK,CAALA,KAAAA,CACEjB,CAAC,CADHiB,6BACG,CADHA,EAEEjB,CAAC,CAAA,4BAAA,EAA+B;MAAEkD,IAAI,EAAE1D,IAAI,CAF9CyB;IAEkC,CAA/B,CAFHA,EAAAA,OAAAA,EAKE;MACEC,UAAU,EANdD;IAKE,CALFA;EAtBF,CAAA;;EAiCA,IAAMoC,YAAY,GAAZA,SAAAA,YAAAA,CAAe,IAAfA,EAMA;IALJC,IAAAA,IAKI,GAAA,IAAA,CALJA,IAAAA;IAAAA,IACAC,KAII,GAAA,IAAA,CAJJA,KADAD;IAMA,IAAME,aAAa,GAAG9D,MAAM,CAANA,QAAAA,CAAgB4D,IAAI,CAA1C,EAAsB5D,CAAtB;IACA,IAAM+D,WAAW,GAAG/D,MAAM,CAANA,QAAAA,CAAgBF,IAAI,CAAxC,EAAoBE,CAApB;IACA,OACE,IAAA,CAAA,UAAA,EAAA;MACE,MAAM,EAAA,gBADR,KAAA;MAEE,cAAc,EAAG4D,IAAD,CAAA,cAACA,IAFnB,CAAA;MAGE,QAAQ,EAAEA,IAAI,CAHhB,EAAA;MAIE,IAAI,EAAEA,IAAI,CAJZ,IAAA;MAKE,KAAK,EAAEA,IAAI,CALb,KAAA;MAME,aAAa,EANf,aAAA;MAOE,WAAW,EAPb,WAAA;MAQE,MAAM,EAAE9D,IAAI,CARd,EAAA;MASE,aAAa,EATf,aAAA;MAUE,cAAc,EAXlB;IACE,CAAA,CADF;EATF,CAAA;;EAyBA,OACE,KAAA,CAAA,SAAA,EAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEkE,MAAM,CADrB;IACE,CAAA,CADF,EAEE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,SAAA;MAAA,QAAA,EACE,IAAA,CAAA,IAAA,EAAA;QAAM,MAAM,EAAZ,aAAA;QAA2B,KAAK,EAAEA,MAAM,CAAxC,aAAA;QAAA,QAAA,EACE,IAAA,CAAA,IAAA,EAAA;UAAA,QAAA,EACE,IAAA,CAAA,QAAA,EAAA;YACE,KAAK,EAAEA,MAAM,CADf,gBAAA;YAEE,IAAI,EAFN,YAAA;YAGE,YAAY,EAAE,SAAA,YAAA,CAAA,KAAA,EAAA,KAAA,EAAA;cAAA,IAAGC,EAAH,GAAA,KAAA,CAAA,EAAA;cAAA,OAAmBA,EAAE,GAArB,KAAA;YAHhB,CAAA;YAIE,UAAU,EAJZ,YAAA;YAKE,qBAAqB,EAAE;cAAEC,aAAa,EAAf,EAAA;cAAqBC,QAAQ,EALtD;YAKyB,CALzB;YAME,8BAA8B,EANhC,KAAA;YAOE,4BAA4B,EAP9B,KAAA;YAQE,kBAAkB,EAChB,IAAA,CAAA,SAAA,EAAA;cAAW,KAAK,EAAE7D,CAAC,CAfjC,uBAeiC;YAAnB,CAAA;UATJ,CAAA;QADF,CAAA;MADF,CAAA;IADF,CAAA,CAFF;EAAA,CAAA,CADF;AA3RK,CAAA;AAoTP,IAAM0D,MAAM,GAAGI,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,eAAe,EADN,MAAA;IAETC,MAAM,EAAEC,YAAY,GAAA,EAAA,GAFX,EAAA;IAGT5B,KAAK,EAHI,MAAA;IAIT6B,MAAM,EALuB;EACpB,CADoB;EAO/BC,gBAAgB,EAAE;IAChBC,IAAI,EARyB;EAOb,CAPa;EAU/BC,SAAS,EAAE;IACTD,IAAI,EADK,CAAA;IAETL,eAAe,EAFN,KAAA;IAGTO,mBAAmB,EAHV,EAAA;IAITC,SAAS,EAAE,CAJF,EAAA;IAKTL,MAAM,EALG,EAAA;IAMTM,QAAQ,EAhBqB;EAUpB,CAVoB;EAkB/BC,aAAa,EAAE;IACbL,IAAI,EADS,CAAA;IAEbL,eAAe,EAFF,KAAA;IAGbW,UAAU,EAHG,QAAA;IAIbC,aAAa,EAJA,QAAA;IAKbC,cAAc,EALD,QAAA;IAMbL,SAAS,EAxBoB;EAkBhB,CAlBgB;EA0B/BM,QAAQ,EAAE;IACRjD,WAAW,EA3BkB;EA0BrB,CA1BqB;EA6B/BkD,SAAS,EAAE;IACTC,UAAU,EADD,cAAA;IAETC,QAAQ,EAAEA,QAAQ,CAFT,EAES,CAFT;IAGTC,WAAW,EAHF,kBAAA;IAITC,YAAY,EAAE;MAAE7C,KAAK,EAAP,CAAA;MAAY2B,MAAM,EAJvB;IAIK,CAJL;IAKTmB,YAAY,EALH,CAAA;IAMT/C,SAAS,EAnCoB;EA6BpB,CA7BoB;EAqC/BgD,cAAc,EAAE;IACdrB,eAAe,EAtCc;EAqCf,CArCe;EAwC/BsB,gBAAgB,EAAE;IAChBtB,eAAe,EADC,KAAA;IAEhBC,MAAM,EAFU,KAAA;IAGhB3B,KAAK,EAHW,MAAA;IAIhBiD,YAAY,EAJI,CAAA;IAKhBC,QAAQ,EALQ,UAAA;IAMhBC,GAAG,EANa,EAAA;IAOhBC,SAAS,EA/CoB;EAwCb,CAxCa;EAiD/BC,QAAQ,EAAE;IACRrD,KAAK,EADG,CAAA;IAER2B,MAAM,EAFE,CAAA;IAGRD,eAAe,EAHP,aAAA;IAIR4B,WAAW,EAJH,OAAA;IAKRC,eAAe,EALP,CAAA;IAMRC,gBAAgB,EANR,CAAA;IAORC,iBAAiB,EAPT,EAAA;IAQRC,eAAe,EARP,aAAA;IASRC,gBAAgB,EATR,aAAA;IAURC,iBAAiB,EAVT,KAAA;IAWRV,QAAQ,EAXA,UAAA;IAYRC,GAAG,EAAE,CAZG,EAAA;IAaRU,KAAK,EA9DwB;EAiDrB,CAjDqB;EAgE/BC,UAAU,EAAE;IACVxB,aAAa,EADH,KAAA;IAEVtC,KAAK,EAFK,KAAA;IAGV2B,MAAM,EAHI,KAAA;IAIVY,cAAc,EAJJ,YAAA;IAKVF,UAAU,EArEmB;EAgEnB,CAhEmB;EAuE/B0B,cAAc,EAAE;IACdrB,UAAU,EADI,cAAA;IAEdC,QAAQ,EAAEA,QAAQ,CAFJ,EAEI,CAFJ;IAGdqB,UAAU,EA1EmB;EAuEf,CAvEe;EA4E/BC,mBAAmB,EAAE;IACnB5B,UAAU,EADS,YAAA;IAEnBE,cAAc,EAFK,YAAA;IAGnBvC,KAAK,EAHc,MAAA;IAInBkE,WAAW,EAhFkB;EA4EV,CA5EU;EAkF/BC,WAAW,EAAE;IACXH,UAAU,EADC,EAAA;IAEXf,YAAY,EAFD,EAAA;IAGXjD,KAAK,EAHM,EAAA;IAIX2B,MAAM,EAtFuB;EAkFlB,CAlFkB;EAwF/ByC,SAAS,EAAE;IACTC,UAAU,EADD,CAAA;IAETH,WAAW,EA1Ff;EAwFa;AAxFoB,CAAlB1C,CAAf","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useContext,\n} from 'react';\nimport {\n  StyleSheet,\n  View,\n  Alert,\n  FlatList,\n  TouchableOpacity,\n  Platform,\n  ToastAndroid,\n} from 'react-native';\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport { innerJoin } from 'ramda';\nimport { useTranslation } from 'react-i18next';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport Clipboard from '@react-native-community/clipboard';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  leaveGroup,\n  updateGroup,\n  dismissFromGroup,\n  addAdmin,\n  selectAllConnections,\n  userSelector,\n} from '@/actions';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { ORANGE, WHITE, BLUE, DARK_GREY } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { groupByIdSelector } from '@/utils/groups';\nimport { addOperation } from '@/reducer/operationsSlice';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { MemberCard } from '@/components/Groups/Members/MemberCard';\n\nexport const MembersScreen = () => {\n  const navigation = useNavigation();\n  const route: { params?: { group: Group } } = useRoute() as {\n    params?: { group: Group };\n  };\n  const groupID = route.params.group.id;\n  const dispatch = useDispatch();\n  const api = useContext(NodeApiContext);\n  const connections = useSelector(selectAllConnections);\n  const user = useSelector(userSelector);\n  const { group, admins, members } = useSelector((state) =>\n    groupByIdSelector(state, groupID),\n  );\n  const [contextActions, setContextActions] = useState([]);\n  const { t } = useTranslation();\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const ACTION_INVITE = t('groups.groupActionSheet.inviteUser');\n  const ACTION_LEAVE = t('groups.groupActionSheet.leaveGroup');\n  // Not using 'common.actionSheet.cancel' because 'Cancel' instead of 'cancel' (making sure printed text doesn't change after i18n)\n  const ACTION_CANCEL = t('groups.groupActionSheet.cancel');\n  const ACTION_COPY_GROUPID = t(\n    'groups.groupActionSheet.copyGroupId',\n    'Copy group ID to clipboard',\n  );\n\n  useLayoutEffect(() => {\n    if (contextActions.length > 0) {\n      // action sheet actions\n      const handleLeaveGroup = () => {\n        const buttons = [\n          {\n            text: t('common.alert.cancel'),\n            style: 'cancel',\n          },\n          {\n            text: t('common.alert.ok'),\n            onPress: async () => {\n              try {\n                const op = await api.leaveGroup(groupID);\n                dispatch(addOperation(op));\n                await dispatch(leaveGroup(group));\n                navigation.goBack();\n              } catch (err) {\n                Alert.alert(\n                  t('groups.alert.title.errorLeaveGroup'),\n                  err.message,\n                );\n              }\n            },\n          },\n        ];\n        Alert.alert(\n          t('groups.alert.title.leaveGroup'),\n          t('groups.alert.text.leaveGroup'),\n          // @ts-ignore\n          buttons,\n          {\n            cancelable: true,\n          },\n        );\n      };\n\n      const handleInvite = () => {\n        navigation.navigate('InviteList', {\n          group,\n        });\n      };\n\n      const handleCopyGroupId = () => {\n        Clipboard.setString(groupID);\n        const msg = t(\n          'groups.alert.text.groupIdCopied',\n          'Group ID copied to clipboard',\n        );\n        if (Platform.OS === 'android') {\n          ToastAndroid.show(msg, ToastAndroid.LONG);\n        } else {\n          Alert.alert(msg);\n        }\n      };\n\n      const performAction = (index) => {\n        const action = contextActions[index];\n        console.log(`Performing action ${action}`);\n        switch (action) {\n          case ACTION_INVITE:\n            handleInvite();\n            break;\n          case ACTION_LEAVE:\n            handleLeaveGroup();\n            break;\n          case ACTION_COPY_GROUPID:\n            handleCopyGroupId();\n            break;\n          case ACTION_CANCEL:\n          default:\n          // do nothing\n        }\n      };\n\n      // set up top right button in header\n      navigation.setOptions({\n        headerRight: () => (\n          <TouchableOpacity\n            testID=\"groupOptionsBtn\"\n            style={{ marginRight: 11 }}\n            onPress={() => {\n              showActionSheetWithOptions(\n                {\n                  options: contextActions,\n                  cancelButtonIndex: contextActions.indexOf(ACTION_CANCEL),\n                  destructiveButtonIndex: contextActions.indexOf(ACTION_LEAVE),\n                  title: t('common.actionSheet.title'),\n                  showSeparators: true,\n                  textStyle: {\n                    color: BLUE,\n                    textAlign: 'center',\n                    width: '100%',\n                  },\n                  titleTextStyle: {\n                    textAlign: 'center',\n                    width: '100%',\n                  },\n                },\n                performAction,\n              );\n            }}\n          >\n            <Material name=\"dots-horizontal\" size={32} color={WHITE} />\n          </TouchableOpacity>\n        ),\n      });\n    }\n  }, [\n    navigation,\n    contextActions,\n    showActionSheetWithOptions,\n    dispatch,\n    group,\n    groupID,\n    t,\n    ACTION_LEAVE,\n    ACTION_CANCEL,\n    ACTION_INVITE,\n    api,\n    ACTION_COPY_GROUPID,\n  ]);\n\n  // set available actions for group\n  useEffect(() => {\n    const actions = [];\n    if (admins.includes(user.id)) {\n      // admins can invite other members to group\n      actions.push(ACTION_INVITE);\n    }\n    if (members.includes(user.id)) {\n      // existing member can leave group\n      actions.push(ACTION_LEAVE);\n    }\n    // copy groupId to clipboard\n    actions.push(ACTION_COPY_GROUPID);\n    actions.push(ACTION_CANCEL);\n    setContextActions(actions);\n  }, [\n    user.id,\n    admins,\n    members,\n    ACTION_INVITE,\n    ACTION_LEAVE,\n    ACTION_CANCEL,\n    ACTION_COPY_GROUPID,\n  ]);\n\n  useEffect(() => {\n    console.log(`updating group info ${groupID}`);\n    api.getGroup(groupID).then((data) => {\n      dispatch(updateGroup(data));\n    });\n  }, [api, dispatch, groupID]);\n\n  // Only include the group members that user knows (is connected with), and the user itself\n  const groupMembers: Array<GroupMember> = useMemo(() => {\n    return ([user] as Array<GroupMember>).concat(\n      innerJoin(\n        (connection, member) => connection.id === member,\n        connections,\n        members,\n      ),\n    );\n  }, [user, connections, members]);\n\n  const handleDismiss = (user) => {\n    const buttons = [\n      {\n        text: t('common.alert.cancel'),\n        style: 'cancel',\n      },\n      {\n        text: t('common.alert.ok'),\n        onPress: async () => {\n          try {\n            const op = await api.dismiss(user.id, groupID);\n            dispatch(addOperation(op));\n            dispatch(dismissFromGroup({ member: user.id, group }));\n          } catch (err) {\n            Alert.alert(\n              t('groups.alert.title.errorDismissMember'),\n              err.message,\n            );\n          }\n        },\n      },\n    ];\n    Alert.alert(\n      t('groups.alert.title.dismissMember'),\n      t('groups.alert.text.dismissMember', { name: user.name }),\n      // @ts-ignore\n      buttons,\n      {\n        cancelable: true,\n      },\n    );\n  };\n\n  const handleAddAdmin = (user) => {\n    const buttons = [\n      {\n        text: t('common.alert.cancel'),\n        style: 'cancel',\n      },\n      {\n        text: t('common.alert.ok'),\n        onPress: async () => {\n          try {\n            const op = await api.addAdmin(user.id, groupID);\n            dispatch(addOperation(op));\n            dispatch(addAdmin({ member: user.id, group }));\n          } catch (err) {\n            Alert.alert(\n              t('groups.alert.text.addAdmin', { name: user.name }),\n              err.message,\n            );\n          }\n        },\n      },\n    ];\n    Alert.alert(\n      t('groups.alert.title.addAdmin'),\n      t('groups.alert.text.addAdmin', { name: user.name }),\n      // @ts-ignore\n      buttons,\n      {\n        cancelable: true,\n      },\n    );\n  };\n\n  const renderMember = ({\n    item,\n    index,\n  }: {\n    item: GroupMember;\n    index: number;\n  }) => {\n    const memberIsAdmin = admins.includes(item.id);\n    const userIsAdmin = admins.includes(user.id);\n    return (\n      <MemberCard\n        testID={`memberItem-${index}`}\n        connectionDate={(item as Connection).connectionDate || 0}\n        memberId={item.id}\n        name={item.name}\n        photo={item.photo}\n        memberIsAdmin={memberIsAdmin}\n        userIsAdmin={userIsAdmin}\n        userId={user.id}\n        handleDismiss={handleDismiss}\n        handleAddAdmin={handleAddAdmin}\n      />\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <View style={styles.container}>\n        <View testID=\"membersView\" style={styles.mainContainer}>\n          <View>\n            <FlatList\n              style={styles.membersContainer}\n              data={groupMembers}\n              keyExtractor={({ id }, index) => id + index}\n              renderItem={renderMember}\n              contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n              ListEmptyComponent={\n                <EmptyList title={t('groups.text.noMembers')} />\n              }\n            />\n          </View>\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  membersContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginTop: 8,\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n  groupName: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[28],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    textAlign: 'center',\n  },\n  optionsOverlay: {\n    backgroundColor: DARK_GREY,\n  },\n  optionsContainer: {\n    backgroundColor: WHITE,\n    height: '12%',\n    width: '105%',\n    borderRadius: 5,\n    position: 'absolute',\n    top: 50,\n    alignSelf: 'center',\n  },\n  triangle: {\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 18,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderBottomColor: WHITE,\n    position: 'absolute',\n    top: -18,\n    right: 20,\n  },\n  optionsBox: {\n    flexDirection: 'row',\n    width: '90%',\n    height: '70%',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  leaveGroupText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[24],\n    marginLeft: 30,\n  },\n  backButtonContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%',\n    paddingLeft: 10,\n  },\n  headerPhoto: {\n    marginLeft: 11,\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n  },\n  backStyle: {\n    paddingTop: 8,\n    paddingLeft: 11,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}