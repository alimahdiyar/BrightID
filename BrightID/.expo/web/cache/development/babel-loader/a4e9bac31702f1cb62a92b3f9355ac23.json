{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { combineReducers } from 'redux';\nimport { useDispatch as originalUseDispatch, useSelector as originalUseSelector } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport reducers from '@/reducer';\nimport FsStorage from \"./storage/fsStorageAdapter\";\nimport KeychainStorage from \"./storage/keychainAdapter\";\nimport getStoredState from \"./getStoredState\";\nimport { appsMigrate } from \"./migrations/apps\";\nimport { connectionsMigrate } from \"./migrations/connections\";\nvar version = 11;\nvar fsPersistConfig = {\n  storage: FsStorage,\n  timeout: 0,\n  version: version,\n  getStoredState: getStoredState\n};\n\nvar appsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'apps',\n  migrate: appsMigrate\n});\n\nvar connectionsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'connections',\n  migrate: connectionsMigrate,\n  blacklist: ['searchParam', 'searchOpen', 'filters']\n});\n\nvar groupsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'groups',\n  blacklist: ['searchParam', 'searchOpen', 'newGroupInvitees']\n});\n\nvar notificationsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'notifications',\n  blacklist: ['activeNotification', 'sessionNotifications']\n});\n\nvar userPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'user',\n  blacklist: ['searchParam', 'migrated']\n});\n\nvar tasksPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'tasks'\n});\n\nvar devicesPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'devices'\n});\n\nvar socialMediaPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'socialMedia'\n});\n\nvar settingsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'settings',\n  blacklist: ['baseUrl']\n});\n\nvar operationsPersistConfig = _objectSpread(_objectSpread({}, fsPersistConfig), {}, {\n  key: 'operations'\n});\n\nvar keypairPersistConfig = {\n  key: 'keypair',\n  storage: KeychainStorage,\n  timeout: 0,\n  version: version,\n  getStoredState: getStoredState,\n  serialize: false,\n  deserialize: false\n};\nvar rootReducer = combineReducers(_objectSpread(_objectSpread({}, reducers), {}, {\n  apps: persistReducer(appsPersistConfig, reducers.apps),\n  connections: persistReducer(connectionsPersistConfig, reducers.connections),\n  groups: persistReducer(groupsPersistConfig, reducers.groups),\n  keypair: persistReducer(keypairPersistConfig, reducers.keypair),\n  notifications: persistReducer(notificationsPersistConfig, reducers.notifications),\n  socialMedia: persistReducer(socialMediaPersistConfig, reducers.socialMedia),\n  tasks: persistReducer(tasksPersistConfig, reducers.tasks),\n  user: persistReducer(userPersistConfig, reducers.user),\n  settings: persistReducer(settingsPersistConfig, reducers.settings),\n  operations: persistReducer(operationsPersistConfig, reducers.operations),\n  devices: persistReducer(devicesPersistConfig, reducers.devices)\n}));\nexport var store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  })\n});\nexport var persistor = persistStore(store);\nexport var useDispatch = function useDispatch() {\n  return originalUseDispatch();\n};\nexport var useSelector = originalUseSelector;\nexport default store;","map":{"version":3,"names":["combineReducers","useDispatch","originalUseDispatch","useSelector","originalUseSelector","persistStore","persistReducer","configureStore","getDefaultMiddleware","reducers","FsStorage","KeychainStorage","getStoredState","appsMigrate","connectionsMigrate","version","fsPersistConfig","storage","timeout","appsPersistConfig","key","migrate","connectionsPersistConfig","blacklist","groupsPersistConfig","notificationsPersistConfig","userPersistConfig","tasksPersistConfig","devicesPersistConfig","socialMediaPersistConfig","settingsPersistConfig","operationsPersistConfig","keypairPersistConfig","serialize","deserialize","rootReducer","apps","connections","groups","keypair","notifications","socialMedia","tasks","user","settings","operations","devices","store","reducer","middleware","serializableCheck","immutableCheck","persistor"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/store/index.ts"],"sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  useDispatch as originalUseDispatch,\n  useSelector as originalUseSelector,\n  TypedUseSelectorHook,\n} from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport reducers from '@/reducer';\nimport FsStorage from './storage/fsStorageAdapter';\nimport KeychainStorage from './storage/keychainAdapter';\nimport getStoredState from './getStoredState';\nimport { appsMigrate } from './migrations/apps';\nimport { connectionsMigrate } from './migrations/connections';\n\n// update this in async migrate if changed to prevent require cycle\n\nconst version = 11;\n\nconst fsPersistConfig = {\n  storage: FsStorage,\n  timeout: 0,\n  // debug: __DEV__,\n  version,\n  getStoredState,\n};\n\nconst appsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'apps',\n  migrate: appsMigrate,\n};\n\nconst connectionsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'connections',\n  migrate: connectionsMigrate,\n  blacklist: ['searchParam', 'searchOpen', 'filters'],\n};\n\nconst groupsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'groups',\n  blacklist: ['searchParam', 'searchOpen', 'newGroupInvitees'],\n};\n\nconst notificationsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'notifications',\n  blacklist: ['activeNotification', 'sessionNotifications'],\n};\n\nconst userPersistConfig = {\n  ...fsPersistConfig,\n  key: 'user',\n  blacklist: ['searchParam', 'migrated'],\n};\n\nconst tasksPersistConfig = {\n  ...fsPersistConfig,\n  key: 'tasks',\n};\n\nconst devicesPersistConfig = {\n  ...fsPersistConfig,\n  key: 'devices',\n};\n\nconst socialMediaPersistConfig = {\n  ...fsPersistConfig,\n  key: 'socialMedia',\n};\n\nconst settingsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'settings',\n  blacklist: ['baseUrl'],\n};\n\nconst operationsPersistConfig = {\n  ...fsPersistConfig,\n  key: 'operations',\n};\n\nconst keypairPersistConfig = {\n  key: 'keypair',\n  storage: KeychainStorage,\n  timeout: 0,\n  // debug: __DEV__,\n  version,\n  getStoredState,\n  serialize: false,\n  deserialize: false,\n};\n\nconst rootReducer = combineReducers({\n  ...reducers,\n  apps: persistReducer(appsPersistConfig, reducers.apps),\n  connections: persistReducer(connectionsPersistConfig, reducers.connections),\n  groups: persistReducer(groupsPersistConfig, reducers.groups),\n  keypair: persistReducer(keypairPersistConfig, reducers.keypair),\n  notifications: persistReducer(\n    notificationsPersistConfig,\n    reducers.notifications,\n  ),\n  socialMedia: persistReducer(socialMediaPersistConfig, reducers.socialMedia),\n  tasks: persistReducer(tasksPersistConfig, reducers.tasks),\n  user: persistReducer(userPersistConfig, reducers.user),\n  settings: persistReducer(settingsPersistConfig, reducers.settings),\n  operations: persistReducer(operationsPersistConfig, reducers.operations),\n  devices: persistReducer(devicesPersistConfig, reducers.devices),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    // We have a bunch of non-serializable data like secret key etc.\n    // TODO For now disabled completely. Revisit later for fine-grained configuration.\n    serializableCheck: false,\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useDispatch = () => originalUseDispatch<AppDispatch>();\nexport const useSelector: TypedUseSelectorHook<RootState> = originalUseSelector;\n\nexport default store;\n"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,WAAW,IAAIC,mBADjB,EAEEC,WAAW,IAAIC,mBAFjB,QAIO,aAJP;AAKA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,SAASC,WAAT;AACA,SAASC,kBAAT;AAIA,IAAMC,OAAO,GAAG,EAAhB;AAEA,IAAMC,eAAe,GAAG;EACtBC,OAAO,EAAEP,SADa;EAEtBQ,OAAO,EAAE,CAFa;EAItBH,OAAO,EAAPA,OAJsB;EAKtBH,cAAc,EAAdA;AALsB,CAAxB;;AAQA,IAAMO,iBAAiB,mCAClBH,eADkB;EAErBI,GAAG,EAAE,MAFgB;EAGrBC,OAAO,EAAER;AAHY,EAAvB;;AAMA,IAAMS,wBAAwB,mCACzBN,eADyB;EAE5BI,GAAG,EAAE,aAFuB;EAG5BC,OAAO,EAAEP,kBAHmB;EAI5BS,SAAS,EAAE,CAAC,aAAD,EAAgB,YAAhB,EAA8B,SAA9B;AAJiB,EAA9B;;AAOA,IAAMC,mBAAmB,mCACpBR,eADoB;EAEvBI,GAAG,EAAE,QAFkB;EAGvBG,SAAS,EAAE,CAAC,aAAD,EAAgB,YAAhB,EAA8B,kBAA9B;AAHY,EAAzB;;AAMA,IAAME,0BAA0B,mCAC3BT,eAD2B;EAE9BI,GAAG,EAAE,eAFyB;EAG9BG,SAAS,EAAE,CAAC,oBAAD,EAAuB,sBAAvB;AAHmB,EAAhC;;AAMA,IAAMG,iBAAiB,mCAClBV,eADkB;EAErBI,GAAG,EAAE,MAFgB;EAGrBG,SAAS,EAAE,CAAC,aAAD,EAAgB,UAAhB;AAHU,EAAvB;;AAMA,IAAMI,kBAAkB,mCACnBX,eADmB;EAEtBI,GAAG,EAAE;AAFiB,EAAxB;;AAKA,IAAMQ,oBAAoB,mCACrBZ,eADqB;EAExBI,GAAG,EAAE;AAFmB,EAA1B;;AAKA,IAAMS,wBAAwB,mCACzBb,eADyB;EAE5BI,GAAG,EAAE;AAFuB,EAA9B;;AAKA,IAAMU,qBAAqB,mCACtBd,eADsB;EAEzBI,GAAG,EAAE,UAFoB;EAGzBG,SAAS,EAAE,CAAC,SAAD;AAHc,EAA3B;;AAMA,IAAMQ,uBAAuB,mCACxBf,eADwB;EAE3BI,GAAG,EAAE;AAFsB,EAA7B;;AAKA,IAAMY,oBAAoB,GAAG;EAC3BZ,GAAG,EAAE,SADsB;EAE3BH,OAAO,EAAEN,eAFkB;EAG3BO,OAAO,EAAE,CAHkB;EAK3BH,OAAO,EAAPA,OAL2B;EAM3BH,cAAc,EAAdA,cAN2B;EAO3BqB,SAAS,EAAE,KAPgB;EAQ3BC,WAAW,EAAE;AARc,CAA7B;AAWA,IAAMC,WAAW,GAAGnC,eAAe,iCAC9BS,QAD8B;EAEjC2B,IAAI,EAAE9B,cAAc,CAACa,iBAAD,EAAoBV,QAAQ,CAAC2B,IAA7B,CAFa;EAGjCC,WAAW,EAAE/B,cAAc,CAACgB,wBAAD,EAA2Bb,QAAQ,CAAC4B,WAApC,CAHM;EAIjCC,MAAM,EAAEhC,cAAc,CAACkB,mBAAD,EAAsBf,QAAQ,CAAC6B,MAA/B,CAJW;EAKjCC,OAAO,EAAEjC,cAAc,CAAC0B,oBAAD,EAAuBvB,QAAQ,CAAC8B,OAAhC,CALU;EAMjCC,aAAa,EAAElC,cAAc,CAC3BmB,0BAD2B,EAE3BhB,QAAQ,CAAC+B,aAFkB,CANI;EAUjCC,WAAW,EAAEnC,cAAc,CAACuB,wBAAD,EAA2BpB,QAAQ,CAACgC,WAApC,CAVM;EAWjCC,KAAK,EAAEpC,cAAc,CAACqB,kBAAD,EAAqBlB,QAAQ,CAACiC,KAA9B,CAXY;EAYjCC,IAAI,EAAErC,cAAc,CAACoB,iBAAD,EAAoBjB,QAAQ,CAACkC,IAA7B,CAZa;EAajCC,QAAQ,EAAEtC,cAAc,CAACwB,qBAAD,EAAwBrB,QAAQ,CAACmC,QAAjC,CAbS;EAcjCC,UAAU,EAAEvC,cAAc,CAACyB,uBAAD,EAA0BtB,QAAQ,CAACoC,UAAnC,CAdO;EAejCC,OAAO,EAAExC,cAAc,CAACsB,oBAAD,EAAuBnB,QAAQ,CAACqC,OAAhC;AAfU,GAAnC;AAkBA,OAAO,IAAMC,KAAK,GAAGxC,cAAc,CAAC;EAClCyC,OAAO,EAAEb,WADyB;EAElCc,UAAU,EAAEzC,oBAAoB,CAAC;IAG/B0C,iBAAiB,EAAE,KAHY;IAI/BC,cAAc,EAAE;EAJe,CAAD;AAFE,CAAD,CAA5B;AAUP,OAAO,IAAMC,SAAS,GAAG/C,YAAY,CAAC0C,KAAD,CAA9B;AAIP,OAAO,IAAM9C,WAAW,GAAG,SAAdA,WAAc;EAAA,OAAMC,mBAAmB,EAAzB;AAAA,CAApB;AACP,OAAO,IAAMC,WAA4C,GAAGC,mBAArD;AAEP,eAAe2C,KAAf"},"metadata":{},"sourceType":"module"}