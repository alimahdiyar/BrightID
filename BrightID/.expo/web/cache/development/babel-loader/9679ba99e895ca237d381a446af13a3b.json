{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\nimport { FontDisplay } from \"./Font.types\";\n\nfunction getFontFaceStyleSheet() {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n\n  var styleSheet = getStyleElement();\n  return styleSheet.sheet ? styleSheet.sheet : null;\n}\n\nfunction getFontFaceRules() {\n  var sheet = getFontFaceStyleSheet();\n\n  if (sheet) {\n    var rules = _toConsumableArray(sheet.cssRules);\n\n    var items = [];\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({\n          rule: rule,\n          index: i\n        });\n      }\n    }\n\n    return items;\n  }\n\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(fontFamilyName, options) {\n  var rules = getFontFaceRules();\n  return rules.filter(function (_ref) {\n    var rule = _ref.rule;\n    return rule.style.fontFamily === fontFamilyName && (options && options.display ? options.display === rule.style.fontDisplay : true);\n  });\n}\n\nexport default {\n  get name() {\n    return 'ExpoFontLoader';\n  },\n\n  unloadAllAsync: function unloadAllAsync() {\n    return function _callee() {\n      var element;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              element = document.getElementById(ID);\n\n              if (element && element instanceof HTMLStyleElement) {\n                document.removeChild(element);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadAsync: function unloadAsync(fontFamilyName, options) {\n    return function _callee2() {\n      var sheet, items, _iterator, _step, item;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sheet = getFontFaceStyleSheet();\n\n              if (sheet) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n\n              for (_iterator = _createForOfIteratorHelperLoose(items); !(_step = _iterator()).done;) {\n                item = _step.value;\n                sheet.deleteRule(item.index);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  loadAsync: function loadAsync(fontFamilyName, resource) {\n    return function _callee3() {\n      var canInjectStyle, style;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n\n              if (canInjectStyle) {\n                _context3.next = 5;\n                break;\n              }\n\n              throw new CodedError('ERR_WEB_ENVIRONMENT', \"The browser's `document.head` element doesn't support injecting fonts.\");\n\n            case 5:\n              style = _createWebStyle(fontFamilyName, resource);\n              document.head.appendChild(style);\n\n              if (isFontLoadingListenerSupported()) {\n                _context3.next = 9;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 9:\n              return _context3.abrupt(\"return\", new FontObserver(fontFamilyName, {\n                display: resource.display\n              }).load());\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};\nvar ID = 'expo-generated-fonts';\n\nfunction getStyleElement() {\n  var element = document.getElementById(ID);\n\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n\n  var styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily, resource) {\n  var fontStyle = \"@font-face {\\n    font-family: \" + fontFamily + \";\\n    src: url(\" + resource.uri + \");\\n    font-display: \" + (resource.display || FontDisplay.AUTO) + \";\\n  }\";\n  var styleElement = getStyleElement();\n\n  if (styleElement.styleSheet) {\n    var styleElementIE = styleElement;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText ? styleElementIE.styleSheet.cssText + fontStyle : fontStyle;\n  } else {\n    var textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported() {\n  var userAgent = window.navigator.userAgent;\n  var isIOS = !!userAgent.match(/iPad|iPhone/i);\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var isEdge = userAgent.includes('Edge');\n  var isIE = userAgent.includes('Trident');\n  var isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":["Platform","styleSheet","getStyleElement","sheet","getFontFaceStyleSheet","rules","items","i","rule","index","getFontFaceRules","options","unloadAllAsync","element","document","unloadAsync","getFontFaceRulesMatchingResource","item","loadAsync","canInjectStyle","style","_createWebStyle","isFontLoadingListenerSupported","display","resource","ID","styleElement","fontStyle","FontDisplay","styleElementIE","textNode","userAgent","window","isIOS","isSafari","navigator","isEdge","isIE","isFirefox"],"mappings":"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","sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  async loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n\n    if (!isFontLoadingListenerSupported()) {\n      return;\n    }\n\n    return new FontObserver(fontFamilyName, { display: resource.display }).load();\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource.uri});\n    font-display: ${resource.display || FontDisplay.AUTO};\n  }`;\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}