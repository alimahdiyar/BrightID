{"ast":null,"code":"import { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { WHITE, ORANGE } from \"../theme/colors\";\nimport { DEVICE_ANDROID } from \"./deviceConstants\";\nexport function useInterval(callback, delay) {\n  var savedCallback = useRef(callback);\n  useLayoutEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    var id = setInterval(function () {\n      return savedCallback.current();\n    }, delay);\n    return function () {\n      return clearInterval(id);\n    };\n  }, [delay]);\n}\nexport function useStatusBarHome() {\n  useFocusEffect(useCallback(function () {\n    if (DEVICE_ANDROID) StatusBar.setBackgroundColor(WHITE, true);\n    StatusBar.setBarStyle('dark-content', true);\n    return function () {\n      if (DEVICE_ANDROID) StatusBar.setBackgroundColor(ORANGE, true);\n      StatusBar.setBarStyle('light-content', true);\n    };\n  }, []));\n}","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/hooks.ts"],"names":["savedCallback","useRef","useLayoutEffect","useEffect","delay","id","setInterval","clearInterval","useFocusEffect","useCallback","StatusBar"],"mappings":"AAAA,SAAA,WAAA,EAAA,SAAA,EAAA,eAAA,EAAA,MAAA,QAAA,OAAA;;AAEA,SAAA,cAAA,QAAA,0BAAA;AACA,SAAA,KAAA,EAAA,MAAA;AACA,SAAA,cAAA;AAEA,OAAO,SAAA,WAAA,CAAA,QAAA,EAAA,KAAA,EAAiE;EACtE,IAAMA,aAAa,GAAGC,MAAM,CAA5B,QAA4B,CAA5B;EAGAC,eAAe,CAAC,YAAM;IACpBF,aAAa,CAAbA,OAAAA,GAAAA,QAAAA;EADa,CAAA,EAEZ,CAFHE,QAEG,CAFY,CAAfA;EAKAC,SAAS,CAAC,YAAM;IAGd,IAAI,CAAA,KAAA,IAAUC,KAAK,KAAnB,CAAA,EAA2B;MACzB;IAGF;;IAAA,IAAMC,EAAE,GAAGC,WAAW,CAAC,YAAA;MAAA,OAAMN,aAAa,CAAnB,OAAMA,EAAN;IAAD,CAAA,EAAtB,KAAsB,CAAtB;IAEA,OAAO,YAAA;MAAA,OAAMO,aAAa,CAAnB,EAAmB,CAAnB;IAAP,CAAA;EATO,CAAA,EAUN,CAVHJ,KAUG,CAVM,CAATA;AAaF;AAAA,OAAO,SAAA,gBAAA,GAA4B;EACjCK,cAAc,CACZC,WAAW,CAAC,YAAM;IAChB,IAAA,cAAA,EAAoBC,SAAS,CAATA,kBAAAA,CAAAA,KAAAA,EAAAA,IAAAA;IAEpBA,SAAS,CAATA,WAAAA,CAAAA,cAAAA,EAAAA,IAAAA;IACA,OAAO,YAAM;MACX,IAAA,cAAA,EAAoBA,SAAS,CAATA,kBAAAA,CAAAA,MAAAA,EAAAA,IAAAA;MACpBA,SAAS,CAATA,WAAAA,CAAAA,eAAAA,EAAAA,IAAAA;IAFF,CAAA;EAJS,CAAA,EADbF,EACa,CADC,CAAdA;AAWD","sourcesContent":["import { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport { StatusBar } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { WHITE, ORANGE } from '@/theme/colors';\nimport { DEVICE_ANDROID } from './deviceConstants';\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n\n  // Remember the latest callback if it changes.\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function useStatusBarHome() {\n  useFocusEffect(\n    useCallback(() => {\n      if (DEVICE_ANDROID) StatusBar.setBackgroundColor(WHITE, true);\n\n      StatusBar.setBarStyle('dark-content', true);\n      return () => {\n        if (DEVICE_ANDROID) StatusBar.setBackgroundColor(ORANGE, true);\n        StatusBar.setBarStyle('light-content', true);\n      };\n    }, []),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}