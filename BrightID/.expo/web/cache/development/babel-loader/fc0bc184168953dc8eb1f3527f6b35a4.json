{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport Hammer from '@egjs/hammerjs';\nimport IndiscreteGestureHandler from \"./IndiscreteGestureHandler\";\n\nvar PinchGestureHandler = function (_IndiscreteGestureHan) {\n  _inherits(PinchGestureHandler, _IndiscreteGestureHan);\n\n  var _super = _createSuper(PinchGestureHandler);\n\n  function PinchGestureHandler() {\n    _classCallCheck(this, PinchGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PinchGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pinch';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Pinch;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var scale = _ref.scale,\n          velocity = _ref.velocity,\n          center = _ref.center;\n      return {\n        focalX: center.x,\n        focalY: center.y,\n        velocity: velocity,\n        scale: scale\n      };\n    }\n  }]);\n\n  return PinchGestureHandler;\n}(IndiscreteGestureHandler);\n\nexport default PinchGestureHandler;","map":{"version":3,"sources":["PinchGestureHandler.ts"],"names":["PinchGestureHandler","IndiscreteGestureHandler","Hammer","transformNativeEvent","scale","velocity","center","focalX","focalY"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,MAAA,MAAA,gBAAA;AAGA,OAAA,wBAAA;;AAEMA,IAAAA,mB;;;;;;;;;;;;;SACI,SAAA,GAAA,GAAG;MACT,OAAA,OAAA;;;;SAGoB,SAAA,GAAA,GAAG;MACvB,OAAOE,MAAM,CAAb,KAAA;;;;WAGFC,SAAAA,oBAAAA,CAAAA,IAAAA,EAAkE;MAA3CC,IAAAA,KAA2C,GAAA,IAAA,CAA3CA,KAAAA;MAAAA,IAAOC,QAAoC,GAAA,IAAA,CAApCA,QAAPD;MAAAA,IAAiBE,MAA0B,GAAA,IAAA,CAA1BA,MAAjBF;MACrB,OAAO;QACLG,MAAM,EAAED,MAAM,CADT,CAAA;QAELE,MAAM,EAAEF,MAAM,CAFT,CAAA;QAGLD,QAHK,EAAA,QAAA;QAILD,KAAAA,EAJF;MAAO,CAAP;;;;;EAV8BH,wB,CAA5BD;;AAmBN,eAAA,mBAAA","sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { HammerInputExt } from './GestureHandler';\n\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass PinchGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'pinch';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pinch;\n  }\n\n  transformNativeEvent({ scale, velocity, center }: HammerInputExt) {\n    return {\n      focalX: center.x,\n      focalY: center.y,\n      velocity,\n      scale,\n    };\n  }\n}\n\nexport default PinchGestureHandler;\n"]},"metadata":{},"sourceType":"module"}