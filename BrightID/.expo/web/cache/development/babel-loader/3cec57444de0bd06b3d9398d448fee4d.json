{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useLayoutEffect, useMemo, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport { innerJoin } from 'ramda';\nimport { useTranslation } from 'react-i18next';\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport Clipboard from '@react-native-community/clipboard';\nimport { useDispatch, useSelector } from \"../../../store\";\nimport { leaveGroup, updateGroup, dismissFromGroup, addAdmin, selectAllConnections, userSelector } from \"../../../actions\";\nimport EmptyList from \"../../Helpers/EmptyList\";\nimport { ORANGE, WHITE, BLUE, DARK_GREY } from \"../../../theme/colors\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { groupByIdSelector } from \"../../../utils/groups\";\nimport { addOperation } from \"../../../reducer/operationsSlice\";\nimport { NodeApiContext } from \"../../NodeApiGate\";\nimport { MemberCard } from \"./MemberCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var MembersScreen = function MembersScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var groupID = route.params.group.id;\n  var dispatch = useDispatch();\n  var api = useContext(NodeApiContext);\n  var connections = useSelector(selectAllConnections);\n  var user = useSelector(userSelector);\n\n  var _useSelector = useSelector(function (state) {\n    return groupByIdSelector(state, groupID);\n  }),\n      group = _useSelector.group,\n      admins = _useSelector.admins,\n      members = _useSelector.members;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contextActions = _useState2[0],\n      setContextActions = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useActionSheet = useActionSheet(),\n      showActionSheetWithOptions = _useActionSheet.showActionSheetWithOptions;\n\n  var ACTION_INVITE = t('groups.groupActionSheet.inviteUser');\n  var ACTION_LEAVE = t('groups.groupActionSheet.leaveGroup');\n  var ACTION_CANCEL = t('groups.groupActionSheet.cancel');\n  var ACTION_COPY_GROUPID = t('groups.groupActionSheet.copyGroupId', 'Copy group ID to clipboard');\n  useLayoutEffect(function () {\n    if (contextActions.length > 0) {\n      var handleLeaveGroup = function handleLeaveGroup() {\n        var buttons = [{\n          text: t('common.alert.cancel'),\n          style: 'cancel'\n        }, {\n          text: t('common.alert.ok'),\n          onPress: function onPress() {\n            var op;\n            return _regeneratorRuntime.async(function onPress$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(api.leaveGroup(groupID));\n\n                  case 3:\n                    op = _context.sent;\n                    dispatch(addOperation(op));\n                    _context.next = 7;\n                    return _regeneratorRuntime.awrap(dispatch(leaveGroup(group)));\n\n                  case 7:\n                    navigation.goBack();\n                    _context.next = 13;\n                    break;\n\n                  case 10:\n                    _context.prev = 10;\n                    _context.t0 = _context[\"catch\"](0);\n                    Alert.alert(t('groups.alert.title.errorLeaveGroup'), _context.t0.message);\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[0, 10]], Promise);\n          }\n        }];\n        Alert.alert(t('groups.alert.title.leaveGroup'), t('groups.alert.text.leaveGroup'), buttons, {\n          cancelable: true\n        });\n      };\n\n      var handleInvite = function handleInvite() {\n        navigation.navigate('InviteList', {\n          group: group\n        });\n      };\n\n      var handleCopyGroupId = function handleCopyGroupId() {\n        Clipboard.setString(groupID);\n        var msg = t('groups.alert.text.groupIdCopied', 'Group ID copied to clipboard');\n\n        if (Platform.OS === 'android') {\n          ToastAndroid.show(msg, ToastAndroid.LONG);\n        } else {\n          Alert.alert(msg);\n        }\n      };\n\n      var performAction = function performAction(index) {\n        var action = contextActions[index];\n        console.log(\"Performing action \" + action);\n\n        switch (action) {\n          case ACTION_INVITE:\n            handleInvite();\n            break;\n\n          case ACTION_LEAVE:\n            handleLeaveGroup();\n            break;\n\n          case ACTION_COPY_GROUPID:\n            handleCopyGroupId();\n            break;\n\n          case ACTION_CANCEL:\n          default:\n        }\n      };\n\n      navigation.setOptions({\n        headerRight: function headerRight() {\n          return _jsx(TouchableOpacity, {\n            testID: \"groupOptionsBtn\",\n            style: {\n              marginRight: 11\n            },\n            onPress: function onPress() {\n              showActionSheetWithOptions({\n                options: contextActions,\n                cancelButtonIndex: contextActions.indexOf(ACTION_CANCEL),\n                destructiveButtonIndex: contextActions.indexOf(ACTION_LEAVE),\n                title: t('common.actionSheet.title'),\n                showSeparators: true,\n                textStyle: {\n                  color: BLUE,\n                  textAlign: 'center',\n                  width: '100%'\n                },\n                titleTextStyle: {\n                  textAlign: 'center',\n                  width: '100%'\n                }\n              }, performAction);\n            },\n            children: _jsx(Material, {\n              name: \"dots-horizontal\",\n              size: 32,\n              color: WHITE\n            })\n          });\n        }\n      });\n    }\n  }, [navigation, contextActions, showActionSheetWithOptions, dispatch, group, groupID, t, ACTION_LEAVE, ACTION_CANCEL, ACTION_INVITE, api, ACTION_COPY_GROUPID]);\n  useEffect(function () {\n    var actions = [];\n\n    if (admins.includes(user.id)) {\n      actions.push(ACTION_INVITE);\n    }\n\n    if (members.includes(user.id)) {\n      actions.push(ACTION_LEAVE);\n    }\n\n    actions.push(ACTION_COPY_GROUPID);\n    actions.push(ACTION_CANCEL);\n    setContextActions(actions);\n  }, [user.id, admins, members, ACTION_INVITE, ACTION_LEAVE, ACTION_CANCEL, ACTION_COPY_GROUPID]);\n  useEffect(function () {\n    console.log(\"updating group info \" + groupID);\n    api.getGroup(groupID).then(function (data) {\n      dispatch(updateGroup(data));\n    });\n  }, [api, dispatch, groupID]);\n  var groupMembers = useMemo(function () {\n    return [user].concat(innerJoin(function (connection, member) {\n      return connection.id === member;\n    }, connections, members));\n  }, [user, connections, members]);\n\n  var handleDismiss = function handleDismiss(user) {\n    var buttons = [{\n      text: t('common.alert.cancel'),\n      style: 'cancel'\n    }, {\n      text: t('common.alert.ok'),\n      onPress: function onPress() {\n        var op;\n        return _regeneratorRuntime.async(function onPress$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(api.dismiss(user.id, groupID));\n\n              case 3:\n                op = _context2.sent;\n                dispatch(addOperation(op));\n                dispatch(dismissFromGroup({\n                  member: user.id,\n                  group: group\n                }));\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                Alert.alert(t('groups.alert.title.errorDismissMember'), _context2.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      }\n    }];\n    Alert.alert(t('groups.alert.title.dismissMember'), t('groups.alert.text.dismissMember', {\n      name: user.name\n    }), buttons, {\n      cancelable: true\n    });\n  };\n\n  var handleAddAdmin = function handleAddAdmin(user) {\n    var buttons = [{\n      text: t('common.alert.cancel'),\n      style: 'cancel'\n    }, {\n      text: t('common.alert.ok'),\n      onPress: function onPress() {\n        var op;\n        return _regeneratorRuntime.async(function onPress$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(api.addAdmin(user.id, groupID));\n\n              case 3:\n                op = _context3.sent;\n                dispatch(addOperation(op));\n                dispatch(addAdmin({\n                  member: user.id,\n                  group: group\n                }));\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                Alert.alert(t('groups.alert.text.addAdmin', {\n                  name: user.name\n                }), _context3.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      }\n    }];\n    Alert.alert(t('groups.alert.title.addAdmin'), t('groups.alert.text.addAdmin', {\n      name: user.name\n    }), buttons, {\n      cancelable: true\n    });\n  };\n\n  var renderMember = function renderMember(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var memberIsAdmin = admins.includes(item.id);\n    var userIsAdmin = admins.includes(user.id);\n    return _jsx(MemberCard, {\n      testID: \"memberItem-\" + index,\n      connectionDate: item.connectionDate || 0,\n      memberId: item.id,\n      name: item.name,\n      photo: item.photo,\n      memberIsAdmin: memberIsAdmin,\n      userIsAdmin: userIsAdmin,\n      userId: user.id,\n      handleDismiss: handleDismiss,\n      handleAddAdmin: handleAddAdmin\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        testID: \"membersView\",\n        style: styles.mainContainer,\n        children: _jsx(View, {\n          children: _jsx(FlatList, {\n            style: styles.membersContainer,\n            data: groupMembers,\n            keyExtractor: function keyExtractor(_ref2, index) {\n              var id = _ref2.id;\n              return id + index;\n            },\n            renderItem: renderMember,\n            contentContainerStyle: {\n              paddingBottom: 50,\n              flexGrow: 1\n            },\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false,\n            ListEmptyComponent: _jsx(EmptyList, {\n              title: t('groups.text.noMembers')\n            })\n          })\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  membersContainer: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginTop: 8\n  },\n  moreIcon: {\n    marginRight: 16\n  },\n  groupName: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[28],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    textAlign: 'center'\n  },\n  optionsOverlay: {\n    backgroundColor: DARK_GREY\n  },\n  optionsContainer: {\n    backgroundColor: WHITE,\n    height: '12%',\n    width: '105%',\n    borderRadius: 5,\n    position: 'absolute',\n    top: 50,\n    alignSelf: 'center'\n  },\n  triangle: {\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 18,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderBottomColor: WHITE,\n    position: 'absolute',\n    top: -18,\n    right: 20\n  },\n  optionsBox: {\n    flexDirection: 'row',\n    width: '90%',\n    height: '70%',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  leaveGroupText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[24],\n    marginLeft: 30\n  },\n  backButtonContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%',\n    paddingLeft: 10\n  },\n  headerPhoto: {\n    marginLeft: 11,\n    borderRadius: 18,\n    width: 36,\n    height: 36\n  },\n  backStyle: {\n    paddingTop: 8,\n    paddingLeft: 11\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useMemo","useContext","useActionSheet","innerJoin","useTranslation","Material","useNavigation","useRoute","Clipboard","useDispatch","useSelector","leaveGroup","updateGroup","dismissFromGroup","addAdmin","selectAllConnections","userSelector","EmptyList","ORANGE","WHITE","BLUE","DARK_GREY","DEVICE_LARGE","fontSize","groupByIdSelector","addOperation","NodeApiContext","MemberCard","MembersScreen","navigation","route","groupID","params","group","id","dispatch","api","connections","user","state","admins","members","contextActions","setContextActions","t","showActionSheetWithOptions","ACTION_INVITE","ACTION_LEAVE","ACTION_CANCEL","ACTION_COPY_GROUPID","length","handleLeaveGroup","buttons","text","style","onPress","op","goBack","Alert","alert","message","cancelable","handleInvite","navigate","handleCopyGroupId","setString","msg","Platform","OS","ToastAndroid","show","LONG","performAction","index","action","console","log","setOptions","headerRight","marginRight","options","cancelButtonIndex","indexOf","destructiveButtonIndex","title","showSeparators","textStyle","color","textAlign","width","titleTextStyle","actions","includes","push","getGroup","then","data","groupMembers","concat","connection","member","handleDismiss","dismiss","name","handleAddAdmin","renderMember","item","memberIsAdmin","userIsAdmin","connectionDate","photo","styles","orangeTop","container","mainContainer","membersContainer","paddingBottom","flexGrow","StyleSheet","create","backgroundColor","height","zIndex","flex","borderTopLeftRadius","marginTop","overflow","alignItems","flexDirection","justifyContent","moreIcon","groupName","fontFamily","shadowColor","shadowOffset","shadowRadius","optionsOverlay","optionsContainer","borderRadius","position","top","alignSelf","triangle","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","borderBottomColor","right","optionsBox","leaveGroupText","marginLeft","backButtonContainer","paddingLeft","headerPhoto","backStyle","paddingTop"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/Members/MembersScreen.tsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useContext,\n} from 'react';\nimport {\n  StyleSheet,\n  View,\n  Alert,\n  FlatList,\n  TouchableOpacity,\n  Platform,\n  ToastAndroid,\n} from 'react-native';\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport { innerJoin } from 'ramda';\nimport { useTranslation } from 'react-i18next';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport Clipboard from '@react-native-community/clipboard';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  leaveGroup,\n  updateGroup,\n  dismissFromGroup,\n  addAdmin,\n  selectAllConnections,\n  userSelector,\n} from '@/actions';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { ORANGE, WHITE, BLUE, DARK_GREY } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { fontSize } from '@/theme/fonts';\nimport { groupByIdSelector } from '@/utils/groups';\nimport { addOperation } from '@/reducer/operationsSlice';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { MemberCard } from '@/components/Groups/Members/MemberCard';\n\nexport const MembersScreen = () => {\n  const navigation = useNavigation();\n  const route: { params?: { group: Group } } = useRoute() as {\n    params?: { group: Group };\n  };\n  const groupID = route.params.group.id;\n  const dispatch = useDispatch();\n  const api = useContext(NodeApiContext);\n  const connections = useSelector(selectAllConnections);\n  const user = useSelector(userSelector);\n  const { group, admins, members } = useSelector((state) =>\n    groupByIdSelector(state, groupID),\n  );\n  const [contextActions, setContextActions] = useState([]);\n  const { t } = useTranslation();\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const ACTION_INVITE = t('groups.groupActionSheet.inviteUser');\n  const ACTION_LEAVE = t('groups.groupActionSheet.leaveGroup');\n  // Not using 'common.actionSheet.cancel' because 'Cancel' instead of 'cancel' (making sure printed text doesn't change after i18n)\n  const ACTION_CANCEL = t('groups.groupActionSheet.cancel');\n  const ACTION_COPY_GROUPID = t(\n    'groups.groupActionSheet.copyGroupId',\n    'Copy group ID to clipboard',\n  );\n\n  useLayoutEffect(() => {\n    if (contextActions.length > 0) {\n      // action sheet actions\n      const handleLeaveGroup = () => {\n        const buttons = [\n          {\n            text: t('common.alert.cancel'),\n            style: 'cancel',\n          },\n          {\n            text: t('common.alert.ok'),\n            onPress: async () => {\n              try {\n                const op = await api.leaveGroup(groupID);\n                dispatch(addOperation(op));\n                await dispatch(leaveGroup(group));\n                navigation.goBack();\n              } catch (err) {\n                Alert.alert(\n                  t('groups.alert.title.errorLeaveGroup'),\n                  err.message,\n                );\n              }\n            },\n          },\n        ];\n        Alert.alert(\n          t('groups.alert.title.leaveGroup'),\n          t('groups.alert.text.leaveGroup'),\n          // @ts-ignore\n          buttons,\n          {\n            cancelable: true,\n          },\n        );\n      };\n\n      const handleInvite = () => {\n        navigation.navigate('InviteList', {\n          group,\n        });\n      };\n\n      const handleCopyGroupId = () => {\n        Clipboard.setString(groupID);\n        const msg = t(\n          'groups.alert.text.groupIdCopied',\n          'Group ID copied to clipboard',\n        );\n        if (Platform.OS === 'android') {\n          ToastAndroid.show(msg, ToastAndroid.LONG);\n        } else {\n          Alert.alert(msg);\n        }\n      };\n\n      const performAction = (index) => {\n        const action = contextActions[index];\n        console.log(`Performing action ${action}`);\n        switch (action) {\n          case ACTION_INVITE:\n            handleInvite();\n            break;\n          case ACTION_LEAVE:\n            handleLeaveGroup();\n            break;\n          case ACTION_COPY_GROUPID:\n            handleCopyGroupId();\n            break;\n          case ACTION_CANCEL:\n          default:\n          // do nothing\n        }\n      };\n\n      // set up top right button in header\n      navigation.setOptions({\n        headerRight: () => (\n          <TouchableOpacity\n            testID=\"groupOptionsBtn\"\n            style={{ marginRight: 11 }}\n            onPress={() => {\n              showActionSheetWithOptions(\n                {\n                  options: contextActions,\n                  cancelButtonIndex: contextActions.indexOf(ACTION_CANCEL),\n                  destructiveButtonIndex: contextActions.indexOf(ACTION_LEAVE),\n                  title: t('common.actionSheet.title'),\n                  showSeparators: true,\n                  textStyle: {\n                    color: BLUE,\n                    textAlign: 'center',\n                    width: '100%',\n                  },\n                  titleTextStyle: {\n                    textAlign: 'center',\n                    width: '100%',\n                  },\n                },\n                performAction,\n              );\n            }}\n          >\n            <Material name=\"dots-horizontal\" size={32} color={WHITE} />\n          </TouchableOpacity>\n        ),\n      });\n    }\n  }, [\n    navigation,\n    contextActions,\n    showActionSheetWithOptions,\n    dispatch,\n    group,\n    groupID,\n    t,\n    ACTION_LEAVE,\n    ACTION_CANCEL,\n    ACTION_INVITE,\n    api,\n    ACTION_COPY_GROUPID,\n  ]);\n\n  // set available actions for group\n  useEffect(() => {\n    const actions = [];\n    if (admins.includes(user.id)) {\n      // admins can invite other members to group\n      actions.push(ACTION_INVITE);\n    }\n    if (members.includes(user.id)) {\n      // existing member can leave group\n      actions.push(ACTION_LEAVE);\n    }\n    // copy groupId to clipboard\n    actions.push(ACTION_COPY_GROUPID);\n    actions.push(ACTION_CANCEL);\n    setContextActions(actions);\n  }, [\n    user.id,\n    admins,\n    members,\n    ACTION_INVITE,\n    ACTION_LEAVE,\n    ACTION_CANCEL,\n    ACTION_COPY_GROUPID,\n  ]);\n\n  useEffect(() => {\n    console.log(`updating group info ${groupID}`);\n    api.getGroup(groupID).then((data) => {\n      dispatch(updateGroup(data));\n    });\n  }, [api, dispatch, groupID]);\n\n  // Only include the group members that user knows (is connected with), and the user itself\n  const groupMembers: Array<GroupMember> = useMemo(() => {\n    return ([user] as Array<GroupMember>).concat(\n      innerJoin(\n        (connection, member) => connection.id === member,\n        connections,\n        members,\n      ),\n    );\n  }, [user, connections, members]);\n\n  const handleDismiss = (user) => {\n    const buttons = [\n      {\n        text: t('common.alert.cancel'),\n        style: 'cancel',\n      },\n      {\n        text: t('common.alert.ok'),\n        onPress: async () => {\n          try {\n            const op = await api.dismiss(user.id, groupID);\n            dispatch(addOperation(op));\n            dispatch(dismissFromGroup({ member: user.id, group }));\n          } catch (err) {\n            Alert.alert(\n              t('groups.alert.title.errorDismissMember'),\n              err.message,\n            );\n          }\n        },\n      },\n    ];\n    Alert.alert(\n      t('groups.alert.title.dismissMember'),\n      t('groups.alert.text.dismissMember', { name: user.name }),\n      // @ts-ignore\n      buttons,\n      {\n        cancelable: true,\n      },\n    );\n  };\n\n  const handleAddAdmin = (user) => {\n    const buttons = [\n      {\n        text: t('common.alert.cancel'),\n        style: 'cancel',\n      },\n      {\n        text: t('common.alert.ok'),\n        onPress: async () => {\n          try {\n            const op = await api.addAdmin(user.id, groupID);\n            dispatch(addOperation(op));\n            dispatch(addAdmin({ member: user.id, group }));\n          } catch (err) {\n            Alert.alert(\n              t('groups.alert.text.addAdmin', { name: user.name }),\n              err.message,\n            );\n          }\n        },\n      },\n    ];\n    Alert.alert(\n      t('groups.alert.title.addAdmin'),\n      t('groups.alert.text.addAdmin', { name: user.name }),\n      // @ts-ignore\n      buttons,\n      {\n        cancelable: true,\n      },\n    );\n  };\n\n  const renderMember = ({\n    item,\n    index,\n  }: {\n    item: GroupMember;\n    index: number;\n  }) => {\n    const memberIsAdmin = admins.includes(item.id);\n    const userIsAdmin = admins.includes(user.id);\n    return (\n      <MemberCard\n        testID={`memberItem-${index}`}\n        connectionDate={(item as Connection).connectionDate || 0}\n        memberId={item.id}\n        name={item.name}\n        photo={item.photo}\n        memberIsAdmin={memberIsAdmin}\n        userIsAdmin={userIsAdmin}\n        userId={user.id}\n        handleDismiss={handleDismiss}\n        handleAddAdmin={handleAddAdmin}\n      />\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <View style={styles.container}>\n        <View testID=\"membersView\" style={styles.mainContainer}>\n          <View>\n            <FlatList\n              style={styles.membersContainer}\n              data={groupMembers}\n              keyExtractor={({ id }, index) => id + index}\n              renderItem={renderMember}\n              contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n              ListEmptyComponent={\n                <EmptyList title={t('groups.text.noMembers')} />\n              }\n            />\n          </View>\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  membersContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  mainContainer: {\n    flex: 1,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginTop: 8,\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n  groupName: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[28],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    textAlign: 'center',\n  },\n  optionsOverlay: {\n    backgroundColor: DARK_GREY,\n  },\n  optionsContainer: {\n    backgroundColor: WHITE,\n    height: '12%',\n    width: '105%',\n    borderRadius: 5,\n    position: 'absolute',\n    top: 50,\n    alignSelf: 'center',\n  },\n  triangle: {\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 18,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderBottomColor: WHITE,\n    position: 'absolute',\n    top: -18,\n    right: 20,\n  },\n  optionsBox: {\n    flexDirection: 'row',\n    width: '90%',\n    height: '70%',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  leaveGroupText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[24],\n    marginLeft: 30,\n  },\n  backButtonContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%',\n    paddingLeft: 10,\n  },\n  headerPhoto: {\n    marginLeft: 11,\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n  },\n  backStyle: {\n    paddingTop: 8,\n    paddingLeft: 11,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}