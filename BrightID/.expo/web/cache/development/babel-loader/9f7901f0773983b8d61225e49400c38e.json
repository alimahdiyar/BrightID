{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = color;\n\nvar _reactNative = require(\"react-native\");\n\nvar _base = require(\"../base\");\n\nvar _AnimatedNode = _interopRequireDefault(require(\"../core/AnimatedNode\"));\n\nvar procColor = (0, _base.proc)(function (r, g, b, a) {\n  var color = (0, _base.add)((0, _base.multiply)(a, 1 << 24), (0, _base.multiply)((0, _base.round)(r), 1 << 16), (0, _base.multiply)((0, _base.round)(g), 1 << 8), (0, _base.round)(b));\n\n  if (_reactNative.Platform.OS === 'android') {\n    return (0, _base.cond)((0, _base.lessThan)(color, 1 << 31 >>> 0), color, (0, _base.sub)(color, Math.pow(2, 32)));\n  }\n\n  return color;\n});\n\nfunction color(r, g, b) {\n  var a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  if (_reactNative.Platform.OS === 'web') {\n    return (0, _base.concat)('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof _AnimatedNode.default) {\n    a = (0, _base.round)((0, _base.multiply)(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}","map":{"version":3,"sources":["color.js"],"names":["procColor","proc","color","add","multiply","round","Platform","cond","lessThan","sub","Math","a","concat"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,IAAMA,SAAS,GAAGC,IAAAA,UAAAA,EAAK,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAqB;EAC1C,IAAMC,KAAK,GAAGC,IAAAA,SAAAA,EACZC,IAAAA,cAAAA,EAAQ,CAARA,EAAY,KADG,EACfA,CADYD,EAEZC,IAAAA,cAAAA,EAASC,IAAAA,WAAAA,EAAD,CAACA,CAATD,EAAmB,KAFJ,EAEfA,CAFYD,EAGZC,IAAAA,cAAAA,EAASC,IAAAA,WAAAA,EAAD,CAACA,CAATD,EAAmB,KAHJ,CAGfA,CAHYD,EAIZE,IAAAA,WAAAA,EAJF,CAIEA,CAJYF,CAAd;;EAOA,IAAIG,qBAAAA,CAAAA,EAAAA,KAAJ,SAAA,EAA+B;IAE7B,OAAOC,IAAAA,UAAAA,EACLC,IAAAA,cAAAA,EAAQ,KAARA,EAAiB,KAAD,EAAC,KADR,CACTA,CADKD,EAAI,KAAJA,EAGLE,IAAAA,SAAAA,EAAG,KAAHA,EAAWC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAHb,EAGaA,CAAXD,CAHKF,CAAP;EAKD;;EACD,OAAA,KAAA;AAhBF,CAAkBN,CAAlB;;AAmBe,SAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAA+B;EAAA,IAAPU,CAAO,uEAA/B,CAA+B;;EAC5C,IAAIL,qBAAAA,CAAAA,EAAAA,KAAJ,KAAA,EAA2B;IAEzB,OAAOM,IAAAA,YAAAA,EAAM,OAANA,EAAM,CAANA,EAAM,GAANA,EAAM,CAANA,EAAM,GAANA,EAAM,CAANA,EAAM,GAANA,EAAM,CAANA,EAAP,GAAOA,CAAP;EACD;;EAED,IAAID,CAAC,YAAL,qBAAA,EAA+B;IAC7BA,CAAC,GAAGN,IAAAA,WAAAA,EAAMD,IAAAA,cAAAA,EAAQ,CAARA,EAAVO,GAAUP,CAANC,CAAJM;EADF,CAAA,MAEO;IACLA,CAAC,GAAGD,IAAI,CAAJA,KAAAA,CAAWC,CAAC,GAAhBA,GAAID,CAAJC;EACD;;EAED,OAAOX,SAAS,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAhB,CAAgB,CAAhB;AACD","sourcesContent":["import { Platform } from 'react-native';\n\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function(r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n  \n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"]},"metadata":{},"sourceType":"script"}