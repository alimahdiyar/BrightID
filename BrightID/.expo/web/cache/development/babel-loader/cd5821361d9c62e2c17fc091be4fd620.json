{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DevicesScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _store = require(\"../../../store\");\n\nvar _devicesSlice = require(\"../../../reducer/devicesSlice\");\n\nvar _fonts = require(\"../../../theme/fonts\");\n\nvar _colors = require(\"../../../theme/colors\");\n\nvar _deviceConstants = require(\"../../../utils/deviceConstants\");\n\nvar _NodeApiGate = require(\"../../NodeApiGate\");\n\nvar _actions = require(\"../../../actions\");\n\nvar _constants = require(\"../../../utils/constants\");\n\nvar _channelThunks = require(\"./thunks/channelThunks\");\n\nvar _channelUploadThunks = require(\"./thunks/channelUploadThunks\");\n\nvar _recoveryDataSlice = require(\"../RecoveryFlow/recoveryDataSlice\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/DevicesScreen.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar DevicesScreen = function DevicesScreen(_ref) {\n  var _route$params, _route$params3, _route$params5;\n\n  var route = _ref.route;\n  var navigation = (0, _native.useNavigation)();\n  var dispatch = (0, _store.useDispatch)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var api = (0, _react.useContext)(_NodeApiGate.NodeApiContext);\n  var signingKey = (0, _store.useSelector)(function (state) {\n    return state.keypair.publicKey;\n  });\n  var devices = (0, _store.useSelector)(_devicesSlice.selectActiveDevices).sort(function (a, _b) {\n    return a.signingKey === signingKey ? -1 : 1;\n  });\n  var settings = (0, _store.useSelector)(function (state) {\n    return state.settings;\n  });\n  var syncCompleted = (0, _store.useSelector)(_recoveryDataSlice.uploadCompletedByOtherSide);\n\n  var shortenSigningKey = function shortenSigningKey(s) {\n    return s.slice(0, 6) + \"...\" + s.slice(-6);\n  };\n\n  var isCurrentDevice = function isCurrentDevice(d) {\n    return d.signingKey === signingKey;\n  };\n\n  var getName = function getName(d) {\n    return isCurrentDevice(d) ? 'Current device' : d.name || 'Unknown name';\n  };\n\n  var _useState = (0, _react.useState)(!!((_route$params = route.params) != null && _route$params.syncing)),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      waiting = _useState2[0],\n      setWaiting = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var _route$params2;\n\n    var runEffect = function _callee() {\n      var _await$getOtherSideDe, isPrimaryDevice, lastSyncTime, after;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _channelThunks.getOtherSideDeviceInfo)());\n\n            case 2:\n              _await$getOtherSideDe = _context.sent;\n              isPrimaryDevice = _await$getOtherSideDe.isPrimaryDevice;\n              lastSyncTime = _await$getOtherSideDe.lastSyncTime;\n\n              if (!(isPrimaryDevice && settings.isPrimaryDevice)) {\n                _context.next = 11;\n                break;\n              }\n\n              setWaiting(false);\n              dispatch((0, _recoveryDataSlice.resetRecoveryData)());\n              return _context.abrupt(\"return\", _reactNative.Alert.alert(t('common.alert.error'), t('devices.alert.bothPrimary')));\n\n            case 11:\n              if (!(!isPrimaryDevice && !settings.isPrimaryDevice)) {\n                _context.next = 15;\n                break;\n              }\n\n              setWaiting(false);\n              dispatch((0, _recoveryDataSlice.resetRecoveryData)());\n              return _context.abrupt(\"return\", _reactNative.Alert.alert(t('common.alert.error'), t('devices.alert.noPrimary')));\n\n            case 15:\n              if (settings.isPrimaryDevice) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 18;\n              return _regenerator.default.awrap((0, _channelUploadThunks.uploadDeviceInfo)());\n\n            case 18:\n              after = settings.isPrimaryDevice ? lastSyncTime : settings.lastSyncTime;\n              _context.next = 21;\n              return _regenerator.default.awrap((0, _channelUploadThunks.uploadAllInfoAfter)(after));\n\n            case 21:\n              dispatch((0, _channelThunks.pollImportChannel)());\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var showConfirmDialog = function showConfirmDialog() {\n      return _reactNative.Alert.alert(t('common.alert.title.pleaseConfirm'), t('devices.alert.confirmSync'), [{\n        text: t('common.alert.yes'),\n        onPress: function onPress() {\n          runEffect();\n        }\n      }, {\n        text: t('common.alert.no'),\n        onPress: function onPress() {\n          navigation.navigate('Home');\n        }\n      }]);\n    };\n\n    if ((_route$params2 = route.params) != null && _route$params2.asScanner) {\n      showConfirmDialog();\n    }\n  }, [dispatch, navigation, (_route$params3 = route.params) == null ? void 0 : _route$params3.asScanner, settings.isPrimaryDevice, settings.lastSyncTime, t]);\n  (0, _react.useEffect)(function () {\n    var _route$params4;\n\n    setWaiting(!!((_route$params4 = route.params) != null && _route$params4.syncing));\n  }, [(_route$params5 = route.params) == null ? void 0 : _route$params5.syncing]);\n  (0, _native.useFocusEffect)(function () {\n    if (waiting && syncCompleted) {\n      _reactNative.Alert.alert(t('common.alert.info'), t('devices.text.syncCompleted'));\n\n      (0, _channelThunks.clearImportChannel)();\n      setWaiting(false);\n\n      if (!settings.isPrimaryDevice) {\n        dispatch((0, _actions.setLastSyncTime)(Date.now()));\n      }\n\n      dispatch((0, _recoveryDataSlice.resetRecoveryData)());\n    }\n  });\n\n  var sync = function sync() {\n    navigation.navigate('SyncCode', {\n      urlType: _constants.qrCodeURL_types.SYNC,\n      action: 'sync'\n    });\n  };\n\n  var remove = function remove(device) {\n    _reactNative.Alert.alert(t('common.alert.title.pleaseConfirm'), t('devices.alert.confirmRemove', {\n      name: getName(device)\n    }), [{\n      text: t('common.alert.yes'),\n      onPress: function onPress() {\n        api.removeSigningKey(device.signingKey).then(function () {\n          dispatch((0, _actions.removeDevice)(device.signingKey));\n        });\n      }\n    }, {\n      text: t('common.alert.no')\n    }]);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var device = _ref2.item,\n        index = _ref2.index;\n    return _react.default.createElement(_reactNative.View, {\n      testID: \"device-\" + index,\n      style: styles.deviceContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      testID: getName(device),\n      style: styles.deviceLabelContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: styles.deviceNameContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.deviceNameText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, getName(device)), isCurrentDevice(device) && _react.default.createElement(_reactNative.Text, {\n      style: styles.devicePrimaryText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"\\xA0(\", settings.isPrimaryDevice ? 'Primary' : 'Secondary', \")\")), _react.default.createElement(_reactNative.View, {\n      style: styles.deviceSigningKeyContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.deviceSigningKeyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, shortenSigningKey(device.signingKey)))), !isCurrentDevice(device) && _react.default.createElement(_reactNative.View, {\n      style: styles.removeBtnContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: styles.removeBtn,\n      testID: \"RemoveDeviceBtn-\" + index,\n      onPress: function onPress() {\n        return remove(device);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_MaterialIcons.default, {\n      name: \"delete\",\n      size: _deviceConstants.DEVICE_LARGE ? 22 : 20,\n      color: _colors.BLUE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"dark-content\",\n    backgroundColor: _colors.WHITE,\n    animated: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.orangeTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    testID: \"DevicesScreen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.devicesContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, t('devices.text.listDescription')), _react.default.createElement(_reactNative.FlatList, {\n    data: devices,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.signingKey;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }), waiting ? _react.default.createElement(_reactNative.View, {\n    style: styles.waitingContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.waitingMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, t('devices.text.waitSyncing')), _react.default.createElement(_reactNativeSpinkit.default, {\n    isVisible: waiting,\n    size: _deviceConstants.DEVICE_LARGE ? 48 : 42,\n    type: \"Wave\",\n    color: _colors.BLUE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  })) : _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.syncBtn,\n    testID: \"SyncBtn\",\n    onPress: sync,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.syncBtnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_MaterialIcons.default, {\n    name: \"sync\",\n    size: _deviceConstants.DEVICE_LARGE ? 22 : 20,\n    color: _colors.WHITE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.syncText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, \"Sync Devices\"))))));\n};\n\nexports.DevicesScreen = DevicesScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  orangeTop: {\n    backgroundColor: _colors.ORANGE,\n    height: _deviceConstants.DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: _colors.WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2\n  },\n  devicesContainer: {\n    padding: 30\n  },\n  deviceContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    padding: 10\n  },\n  deviceLabelContainer: {\n    flexDirection: 'column',\n    flex: 10,\n    alignItems: 'flex-start'\n  },\n  deviceNameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  deviceSigningKeyContainer: {},\n  removeBtnContainer: {\n    flex: 1,\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  deviceNameText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.BLACK\n  },\n  devicePrimaryText: {\n    fontFamily: 'Poppins-Medium',\n    fontWeight: 'bold',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.BLACK\n  },\n  deviceSigningKeyText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[14],\n    color: _colors.BLUE\n  },\n  description: {\n    fontSize: _fonts.fontSize[16],\n    padding: 10,\n    marginBottom: 20\n  },\n  syncBtn: {},\n  removeBtn: {},\n  syncBtnContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    alignSelf: 'stretch',\n    borderRadius: 10,\n    backgroundColor: _colors.BLUE,\n    padding: 10,\n    marginTop: 30\n  },\n  syncText: {\n    color: _colors.WHITE,\n    fontFamily: 'Poppins-Bold',\n    paddingLeft: 10,\n    fontSize: _fonts.fontSize[14]\n  },\n  waitingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingBottom: 20\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: _fonts.fontSize[14],\n    color: _colors.BLUE\n  }\n});\n\nvar _default = DevicesScreen;\nexports.default = _default;","map":{"version":3,"names":["DevicesScreen","route","navigation","useNavigation","dispatch","useDispatch","useTranslation","t","api","useContext","NodeApiContext","signingKey","useSelector","state","keypair","publicKey","devices","selectActiveDevices","sort","a","_b","settings","syncCompleted","uploadCompletedByOtherSide","shortenSigningKey","s","slice","isCurrentDevice","d","getName","name","useState","params","syncing","waiting","setWaiting","useEffect","runEffect","getOtherSideDeviceInfo","isPrimaryDevice","lastSyncTime","resetRecoveryData","Alert","alert","uploadDeviceInfo","after","uploadAllInfoAfter","pollImportChannel","showConfirmDialog","text","onPress","navigate","asScanner","useFocusEffect","clearImportChannel","setLastSyncTime","Date","now","sync","urlType","qrCodeURL_types","SYNC","action","remove","device","removeSigningKey","then","removeDevice","renderItem","item","index","styles","deviceContainer","deviceLabelContainer","deviceNameContainer","deviceNameText","devicePrimaryText","deviceSigningKeyContainer","deviceSigningKeyText","removeBtnContainer","removeBtn","DEVICE_LARGE","BLUE","WHITE","orangeTop","container","devicesContainer","description","waitingContainer","waitingMessage","syncBtn","syncBtnContainer","syncText","StyleSheet","create","backgroundColor","ORANGE","height","width","zIndex","flex","borderTopLeftRadius","marginTop","overflow","padding","flexDirection","justifyContent","alignItems","alignContent","fontFamily","fontSize","color","BLACK","fontWeight","marginBottom","alignSelf","borderRadius","paddingLeft","paddingBottom","textAlign"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/DevicesScreen.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  FlatList,\n  Alert,\n} from 'react-native';\nimport Material from 'react-native-vector-icons/MaterialIcons';\nimport Spinner from 'react-native-spinkit';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { useSelector, useDispatch } from '@/store';\nimport { selectActiveDevices } from '@/reducer/devicesSlice';\nimport { fontSize } from '@/theme/fonts';\nimport { WHITE, ORANGE, BLUE, BLACK } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { removeDevice, setLastSyncTime } from '@/actions';\nimport { qrCodeURL_types } from '@/utils/constants';\nimport {\n  pollImportChannel,\n  clearImportChannel,\n  getOtherSideDeviceInfo,\n} from './thunks/channelThunks';\nimport {\n  uploadAllInfoAfter,\n  uploadDeviceInfo,\n} from './thunks/channelUploadThunks';\nimport {\n  resetRecoveryData,\n  uploadCompletedByOtherSide,\n} from '../RecoveryFlow/recoveryDataSlice';\n\n/* Description */\n\n/* ======================================== */\n\n/**\n * Screen for listing devices\n */\n\n/* Devices Screen */\n\n/* ======================================== */\nexport const DevicesScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const api = useContext(NodeApiContext);\n  const signingKey = useSelector((state) => state.keypair.publicKey);\n  const devices = useSelector(selectActiveDevices).sort((a, _b) =>\n    a.signingKey === signingKey ? -1 : 1,\n  );\n  const settings = useSelector((state) => state.settings);\n  const syncCompleted = useSelector(uploadCompletedByOtherSide);\n\n  const shortenSigningKey = (s) => `${s.slice(0, 6)}...${s.slice(-6)}`;\n  const isCurrentDevice = (d) => d.signingKey === signingKey;\n  const getName = (d) =>\n    isCurrentDevice(d) ? 'Current device' : d.name || 'Unknown name';\n  const [waiting, setWaiting] = useState(!!route.params?.syncing);\n\n  useEffect(() => {\n    const runEffect = async () => {\n      const { isPrimaryDevice, lastSyncTime } = await getOtherSideDeviceInfo();\n      if (isPrimaryDevice && settings.isPrimaryDevice) {\n        setWaiting(false);\n        dispatch(resetRecoveryData());\n        return Alert.alert(\n          t('common.alert.error'),\n          t('devices.alert.bothPrimary'),\n        );\n      } else if (!isPrimaryDevice && !settings.isPrimaryDevice) {\n        setWaiting(false);\n        dispatch(resetRecoveryData());\n        return Alert.alert(\n          t('common.alert.error'),\n          t('devices.alert.noPrimary'),\n        );\n      }\n      if (!settings.isPrimaryDevice) {\n        await uploadDeviceInfo();\n      }\n      const after = settings.isPrimaryDevice\n        ? lastSyncTime\n        : settings.lastSyncTime;\n      await uploadAllInfoAfter(after);\n      dispatch(pollImportChannel());\n    };\n    const showConfirmDialog = () => {\n      return Alert.alert(\n        t('common.alert.title.pleaseConfirm'),\n        t('devices.alert.confirmSync'),\n        [\n          {\n            text: t('common.alert.yes'),\n            onPress: () => {\n              runEffect();\n            },\n          },\n          {\n            text: t('common.alert.no'),\n            onPress: () => {\n              navigation.navigate('Home');\n            },\n          },\n        ],\n      );\n    };\n    if (route.params?.asScanner) {\n      showConfirmDialog();\n    }\n  }, [\n    dispatch,\n    navigation,\n    route.params?.asScanner,\n    settings.isPrimaryDevice,\n    settings.lastSyncTime,\n    t,\n  ]);\n\n  useEffect(() => {\n    setWaiting(!!route.params?.syncing);\n  }, [route.params?.syncing]);\n\n  useFocusEffect(() => {\n    // this is triggered when navigating back from sync code screen\n    if (waiting && syncCompleted) {\n      Alert.alert(t('common.alert.info'), t('devices.text.syncCompleted'));\n      clearImportChannel();\n      setWaiting(false);\n      if (!settings.isPrimaryDevice) {\n        dispatch(setLastSyncTime(Date.now()));\n      }\n      dispatch(resetRecoveryData());\n    }\n  });\n\n  const sync = () => {\n    navigation.navigate('SyncCode', {\n      urlType: qrCodeURL_types.SYNC,\n      action: 'sync',\n    });\n  };\n\n  const remove = (device) => {\n    Alert.alert(\n      t('common.alert.title.pleaseConfirm'),\n      t('devices.alert.confirmRemove', { name: getName(device) }),\n      [\n        {\n          text: t('common.alert.yes'),\n          onPress: () => {\n            api.removeSigningKey(device.signingKey).then(() => {\n              dispatch(removeDevice(device.signingKey));\n            });\n          },\n        },\n        {\n          text: t('common.alert.no'),\n        },\n      ],\n    );\n  };\n\n  const renderItem = ({ item: device, index }) => (\n    <View testID={`device-${index}`} style={styles.deviceContainer}>\n      <View testID={getName(device)} style={styles.deviceLabelContainer}>\n        <View style={styles.deviceNameContainer}>\n          <Text style={styles.deviceNameText}>{getName(device)}</Text>\n          {isCurrentDevice(device) && (\n            <Text style={styles.devicePrimaryText}>\n              &nbsp;({settings.isPrimaryDevice ? 'Primary' : 'Secondary'})\n            </Text>\n          )}\n        </View>\n        <View style={styles.deviceSigningKeyContainer}>\n          <Text style={styles.deviceSigningKeyText}>\n            {shortenSigningKey(device.signingKey)}\n          </Text>\n        </View>\n      </View>\n      {!isCurrentDevice(device) && (\n        <View style={styles.removeBtnContainer}>\n          <TouchableOpacity\n            style={styles.removeBtn}\n            testID={`RemoveDeviceBtn-${index}`}\n            onPress={() => remove(device)}\n          >\n            <Material\n              name=\"delete\"\n              size={DEVICE_LARGE ? 22 : 20}\n              color={BLUE}\n            />\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"dark-content\"\n        backgroundColor={WHITE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"DevicesScreen\">\n        <View style={styles.devicesContainer}>\n          <Text style={styles.description}>\n            {t('devices.text.listDescription')}\n          </Text>\n          <FlatList\n            data={devices}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.signingKey}\n          />\n          {waiting ? (\n            <View style={styles.waitingContainer}>\n              <Text style={styles.waitingMessage}>\n                {t('devices.text.waitSyncing')}\n              </Text>\n              <Spinner\n                isVisible={waiting}\n                size={DEVICE_LARGE ? 48 : 42}\n                type=\"Wave\"\n                color={BLUE}\n              />\n            </View>\n          ) : (\n            <TouchableOpacity\n              style={styles.syncBtn}\n              testID=\"SyncBtn\"\n              onPress={sync}\n            >\n              <View style={styles.syncBtnContainer}>\n                <Material\n                  name=\"sync\"\n                  size={DEVICE_LARGE ? 22 : 20}\n                  color={WHITE}\n                />\n                <Text style={styles.syncText}>Sync Devices</Text>\n              </View>\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    overflow: 'hidden',\n    zIndex: 2,\n  },\n  devicesContainer: {\n    padding: 30,\n  },\n  deviceContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    padding: 10,\n  },\n  deviceLabelContainer: {\n    flexDirection: 'column',\n    flex: 10,\n    alignItems: 'flex-start',\n  },\n  deviceNameContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n  },\n  deviceSigningKeyContainer: {},\n  removeBtnContainer: {\n    flex: 1,\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n  deviceNameText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  devicePrimaryText: {\n    fontFamily: 'Poppins-Medium',\n    fontWeight: 'bold',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  deviceSigningKeyText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: BLUE,\n  },\n  description: {\n    fontSize: fontSize[16],\n    padding: 10,\n    marginBottom: 20,\n  },\n  syncBtn: {\n    // flex: 1,\n  },\n  removeBtn: {},\n  syncBtnContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    alignSelf: 'stretch',\n    borderRadius: 10,\n    backgroundColor: BLUE,\n    padding: 10,\n    marginTop: 30,\n  },\n  syncText: {\n    color: WHITE,\n    fontFamily: 'Poppins-Bold',\n    paddingLeft: 10,\n    fontSize: fontSize[14],\n  },\n  waitingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingBottom: 20,\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    textAlign: 'center',\n    fontSize: fontSize[14],\n    color: BLUE,\n  },\n});\n\nexport default DevicesScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}