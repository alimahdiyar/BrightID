{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useContext, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useDispatch, useSelector } from \"../../store\";\nimport { useFocusEffect, useRoute } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { TabBar, TabView, SceneMap } from 'react-native-tab-view';\nimport { INVITE_ACTIVE, CONNECTIONS_TYPE, GROUPS_TYPE, MISC_TYPE } from \"../../utils/constants\";\nimport { ORANGE, WHITE, GREY, BLACK } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { createSelector } from '@reduxjs/toolkit';\nimport { selectAllUnconfirmedConnections } from \"../PendingConnections/pendingConnectionSlice\";\nimport EmptyList from \"../Helpers/EmptyList\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { updateNotifications } from \"../../actions\";\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport NotificationCard from \"./NotificationCard\";\nimport InviteCard from \"./InviteCard\";\nimport PendingConnectionCard from \"./PendingConnectionCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar thecount = 0;\nvar inviteSelector = createSelector(function (state) {\n  return state.groups.invites;\n}, function (invites) {\n  return invites.filter(function (_ref) {\n    var state = _ref.state;\n    return state === INVITE_ACTIVE;\n  });\n});\n\nvar useRefresh = function useRefresh() {\n  var dispatch = useDispatch();\n  var api = useContext(NodeApiContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    dispatch(updateNotifications(api)).then(function () {\n      setRefreshing(false);\n    }).catch(function (err) {\n      console.log(err.message);\n      setRefreshing(false);\n    });\n  };\n\n  return [refreshing, onRefresh];\n};\n\nvar ConnectionsList = function ConnectionsList() {\n  var _useRefresh = useRefresh(),\n      _useRefresh2 = _slicedToArray(_useRefresh, 2),\n      refreshing = _useRefresh2[0],\n      onRefresh = _useRefresh2[1];\n\n  var pendingConnections = useSelector(function (state) {\n    return selectAllUnconfirmedConnections(state);\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var data = pendingConnections.length > 0 ? [{\n    id: 'pendingList'\n  }] : [];\n  return _jsx(FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: data,\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var id = _ref2.id;\n      return id + index;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    ListEmptyComponent: _jsx(EmptyList, {\n      title: t('notifications.text.noPendingConnections'),\n      iconType: \"account-off-outline\"\n    }),\n    renderItem: function renderItem() {\n      return _jsx(PendingConnectionCard, {\n        pendingConnections: pendingConnections\n      });\n    }\n  });\n};\n\nvar InviteList = function InviteList() {\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  var _useRefresh3 = useRefresh(),\n      _useRefresh4 = _slicedToArray(_useRefresh3, 2),\n      refreshing = _useRefresh4[0],\n      onRefresh = _useRefresh4[1];\n\n  var invites = useSelector(function (state) {\n    return inviteSelector(state);\n  });\n  thecount++;\n  console.log('Rendering Invite List', thecount);\n  return _jsx(FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: invites,\n    keyExtractor: function keyExtractor(_ref3, index) {\n      var id = _ref3.id;\n      return id + index;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    ListEmptyComponent: _jsx(EmptyList, {\n      title: t('notifications.text.noGroupInvites'),\n      iconType: \"account-group-outline\"\n    }),\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return _jsx(InviteCard, {\n        invite: item\n      });\n    }\n  });\n};\n\nvar MiscList = function MiscList(_ref5) {\n  var route = _ref5.route;\n\n  var _useTranslation3 = useTranslation(),\n      t = _useTranslation3.t;\n\n  var photoFilename = useSelector(function (state) {\n    return state.user.photo.filename;\n  });\n\n  var _useRefresh5 = useRefresh(),\n      _useRefresh6 = _slicedToArray(_useRefresh5, 2),\n      refreshing = _useRefresh6[0],\n      onRefresh = _useRefresh6[1];\n\n  var data = [];\n\n  if (route.recoveryConnectionsPending) {\n    var imageSource = photoFilename ? {\n      uri: \"file://\" + photoDirectory() + \"/\" + photoFilename\n    } : require(\"../../static/default_profile.jpg\");\n    data.push({\n      title: t('notifications.item.title.socialRecovery'),\n      msg: t('notifications.item.msg.socialRecovery'),\n      imageSource: imageSource,\n      navigationTarget: 'Recovery Connections',\n      testID: 'SocialRecoveryNotifcation'\n    });\n  }\n\n  if (route.backupPending) {\n    var _imageSource = photoFilename ? {\n      uri: \"file://\" + photoDirectory() + \"/\" + photoFilename\n    } : require(\"../../static/default_profile.jpg\");\n\n    data.push({\n      title: t('notifications.item.title.backupBrightId'),\n      msg: t('notifications.item.msg.backupBrightId'),\n      imageSource: _imageSource,\n      navigationTarget: 'Edit Profile',\n      testID: 'BackupNotification'\n    });\n  }\n\n  return _jsx(FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 50,\n      flexGrow: 1\n    },\n    data: data,\n    keyExtractor: function keyExtractor(_ref6, index) {\n      var msg = _ref6.msg;\n      return msg + index;\n    },\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    onRefresh: onRefresh,\n    refreshing: refreshing,\n    ListEmptyComponent: _jsx(EmptyList, {\n      title: t('notifications.text.noMiscellaneous'),\n      iconType: \"bell-off-outline\"\n    }),\n    renderItem: function renderItem(_ref7) {\n      var item = _ref7.item;\n      return _jsx(NotificationCard, {\n        title: item.title,\n        msg: item.msg,\n        imageSource: item.imageSource,\n        navigationTarget: item.navigationTarget,\n        testID: item.testID\n      });\n    }\n  });\n};\n\nvar initialLayout = {\n  width: Dimensions.get('window').width\n};\n\nvar renderTabBar = function renderTabBar(props) {\n  return _jsx(TabBar, _objectSpread(_objectSpread({}, props), {}, {\n    indicatorStyle: {\n      backgroundColor: ORANGE\n    },\n    style: styles.tabBar,\n    renderLabel: function renderLabel(_ref8) {\n      var route = _ref8.route,\n          color = _ref8.color;\n      return _jsxs(View, {\n        style: styles.tabContainer,\n        children: [route.badge && _jsx(View, {\n          style: styles.badge\n        }), _jsx(Text, {\n          style: [styles.tabText, {\n            color: color\n          }],\n          adjustsFontSizeToFit: true,\n          numberOfLines: 1,\n          children: route.title\n        })]\n      });\n    },\n    inactiveColor: GREY,\n    activeColor: BLACK\n  }));\n};\n\nexport var NotificationsScreen = function NotificationsScreen() {\n  var _route$params, _SceneMap;\n\n  var dispatch = useDispatch();\n  var route = useRoute();\n\n  var _useTranslation4 = useTranslation(),\n      t = _useTranslation4.t;\n\n  var api = useContext(NodeApiContext);\n  var pendingConnections = useSelector(function (state) {\n    var _selectAllUnconfirmed;\n\n    return (_selectAllUnconfirmed = selectAllUnconfirmedConnections(state)) == null ? void 0 : _selectAllUnconfirmed.length;\n  });\n  var invites = useSelector(function (state) {\n    var _inviteSelector;\n\n    return (_inviteSelector = inviteSelector(state)) == null ? void 0 : _inviteSelector.length;\n  });\n  var backupPending = useSelector(function (state) {\n    return state.notifications.backupPending;\n  });\n  var recoveryConnectionsPending = useSelector(function (state) {\n    return state.notifications.recoveryConnectionsPending;\n  });\n  var routes = [{\n    key: CONNECTIONS_TYPE,\n    title: t('notifications.tab.connections'),\n    badge: !!pendingConnections\n  }, {\n    key: GROUPS_TYPE,\n    title: t('notifications.tab.groups'),\n    badge: !!invites\n  }, {\n    key: MISC_TYPE,\n    title: t('notifications.tab.miscellaneous'),\n    badge: backupPending || recoveryConnectionsPending,\n    backupPending: backupPending,\n    recoveryConnectionsPending: recoveryConnectionsPending\n  }];\n  var displayRoute = (_route$params = route.params) != null && _route$params.type ? routes.findIndex(function (_ref9) {\n    var _route$params2;\n\n    var key = _ref9.key;\n    return key === ((_route$params2 = route.params) == null ? void 0 : _route$params2.type);\n  }) : routes.findIndex(function (_ref10) {\n    var badge = _ref10.badge;\n    return badge;\n  });\n\n  var _useState3 = useState(displayRoute),\n      _useState4 = _slicedToArray(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  var renderScene = SceneMap((_SceneMap = {}, _defineProperty(_SceneMap, CONNECTIONS_TYPE, ConnectionsList), _defineProperty(_SceneMap, GROUPS_TYPE, InviteList), _defineProperty(_SceneMap, MISC_TYPE, MiscList), _SceneMap));\n  useFocusEffect(useCallback(function () {\n    dispatch(updateNotifications(api));\n  }, [api, dispatch]));\n  console.log('Rendering Notification Screen');\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: ORANGE,\n      animated: true\n    }), _jsx(View, {\n      style: styles.orangeTop\n    }), _jsx(View, {\n      style: styles.container,\n      testID: \"NotificationsScreen\",\n      children: _jsx(TabView, {\n        navigationState: {\n          index: index,\n          routes: routes\n        },\n        renderScene: renderScene,\n        renderTabBar: renderTabBar,\n        onIndexChange: setIndex,\n        initialLayout: initialLayout\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 62,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden'\n  },\n  badge: {\n    backgroundColor: ORANGE,\n    width: DEVICE_LARGE ? 8 : 6,\n    height: DEVICE_LARGE ? 8 : 6,\n    borderRadius: 4,\n    marginRight: DEVICE_LARGE ? 8 : 6\n  },\n  tabBar: {\n    backgroundColor: WHITE,\n    paddingLeft: DEVICE_LARGE ? 20 : 18\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tabText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12]\n  }\n});\nexport default NotificationsScreen;","map":{"version":3,"names":["React","useCallback","useContext","useState","useDispatch","useSelector","useFocusEffect","useRoute","useTranslation","TabBar","TabView","SceneMap","INVITE_ACTIVE","CONNECTIONS_TYPE","GROUPS_TYPE","MISC_TYPE","ORANGE","WHITE","GREY","BLACK","fontSize","DEVICE_LARGE","createSelector","selectAllUnconfirmedConnections","EmptyList","photoDirectory","updateNotifications","NodeApiContext","NotificationCard","InviteCard","PendingConnectionCard","thecount","inviteSelector","state","groups","invites","filter","useRefresh","dispatch","api","refreshing","setRefreshing","onRefresh","then","catch","err","console","log","message","ConnectionsList","pendingConnections","t","data","length","id","paddingBottom","flexGrow","index","InviteList","item","MiscList","route","photoFilename","user","photo","filename","recoveryConnectionsPending","imageSource","uri","require","push","title","msg","navigationTarget","testID","backupPending","initialLayout","width","Dimensions","get","renderTabBar","props","backgroundColor","styles","tabBar","color","tabContainer","badge","tabText","NotificationsScreen","notifications","routes","key","displayRoute","params","type","findIndex","setIndex","renderScene","orangeTop","container","StyleSheet","create","height","zIndex","flex","borderTopLeftRadius","marginTop","overflow","borderRadius","marginRight","paddingLeft","flexDirection","alignItems","fontFamily"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Notifications/NotificationsScreen.tsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  View,\n  FlatList,\n  Text,\n  StatusBar,\n} from 'react-native';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  useFocusEffect,\n  useNavigation,\n  useRoute,\n  RouteProp,\n} from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { TabBar, TabView, SceneMap } from 'react-native-tab-view';\nimport {\n  INVITE_ACTIVE,\n  CONNECTIONS_TYPE,\n  GROUPS_TYPE,\n  MISC_TYPE,\n} from '@/utils/constants';\nimport { ORANGE, WHITE, GREY, BLACK } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { selectAllUnconfirmedConnections } from '@/components/PendingConnections/pendingConnectionSlice';\nimport EmptyList from '@/components/Helpers/EmptyList';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { updateNotifications } from '@/actions/index';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport NotificationCard from './NotificationCard';\nimport InviteCard from './InviteCard';\nimport PendingConnectionCard from './PendingConnectionCard';\n\nlet thecount = 0;\n\n/** SELECTORS */\n\nconst inviteSelector = createSelector(\n  (state: State) => state.groups.invites,\n  (invites) => invites.filter(({ state }) => state === INVITE_ACTIVE),\n);\n\n/** HOOKS */\n\nconst useRefresh: () => [boolean, () => void] = () => {\n  const dispatch = useDispatch();\n  const api = useContext(NodeApiContext);\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefresh = () => {\n    setRefreshing(true);\n    dispatch(updateNotifications(api))\n      .then(() => {\n        setRefreshing(false);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setRefreshing(false);\n      });\n  };\n  return [refreshing, onRefresh];\n};\n\n/** TYPES */\n\ntype Route = {\n  badge: boolean;\n  backupPending?: boolean;\n  recoveryConnectionsPending?: boolean;\n  title?: string;\n};\n/** COMPONENTS  */\n\nconst ConnectionsList = () => {\n  const [refreshing, onRefresh] = useRefresh();\n  const pendingConnections = useSelector((state) =>\n    selectAllUnconfirmedConnections(state),\n  );\n  const { t } = useTranslation();\n  // only display one notification for all pending connections\n  const data = pendingConnections.length > 0 ? [{ id: 'pendingList' }] : [];\n\n  return (\n    <FlatList\n      contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n      data={data}\n      keyExtractor={({ id }, index) => id + index}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      ListEmptyComponent={\n        <EmptyList\n          title={t('notifications.text.noPendingConnections')}\n          iconType=\"account-off-outline\"\n        />\n      }\n      renderItem={() => (\n        <PendingConnectionCard pendingConnections={pendingConnections} />\n      )}\n    />\n  );\n};\n\nconst InviteList = () => {\n  const { t } = useTranslation();\n  const [refreshing, onRefresh] = useRefresh();\n  const invites = useSelector((state) => inviteSelector(state));\n  thecount++;\n  console.log('Rendering Invite List', thecount);\n\n  return (\n    <FlatList\n      contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n      data={invites}\n      keyExtractor={({ id }, index) => id + index}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      ListEmptyComponent={\n        <EmptyList\n          title={t('notifications.text.noGroupInvites')}\n          iconType=\"account-group-outline\"\n        />\n      }\n      renderItem={({ item }) => <InviteCard invite={item} />}\n    />\n  );\n};\n\nconst MiscList = ({ route }: { route: Route }) => {\n  const { t } = useTranslation();\n  const photoFilename = useSelector((state) => state.user.photo.filename);\n  const [refreshing, onRefresh] = useRefresh();\n  const data = [];\n\n  if (route.recoveryConnectionsPending) {\n    // TODO: Set better image\n    const imageSource = photoFilename\n      ? { uri: `file://${photoDirectory()}/${photoFilename}` }\n      : require('@/static/default_profile.jpg');\n    data.push({\n      title: t('notifications.item.title.socialRecovery'),\n      msg: t('notifications.item.msg.socialRecovery'),\n      imageSource,\n      navigationTarget: 'Recovery Connections',\n      testID: 'SocialRecoveryNotifcation',\n    });\n  }\n\n  if (route.backupPending) {\n    // TODO: Set appropriate image\n    const imageSource = photoFilename\n      ? { uri: `file://${photoDirectory()}/${photoFilename}` }\n      : require('@/static/default_profile.jpg');\n    data.push({\n      title: t('notifications.item.title.backupBrightId'),\n      msg: t('notifications.item.msg.backupBrightId'),\n      imageSource,\n      navigationTarget: 'Edit Profile',\n      testID: 'BackupNotification',\n    });\n  }\n\n  return (\n    <FlatList\n      contentContainerStyle={{ paddingBottom: 50, flexGrow: 1 }}\n      data={data}\n      keyExtractor={({ msg }, index) => msg + index}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      ListEmptyComponent={\n        <EmptyList\n          title={t('notifications.text.noMiscellaneous')}\n          iconType=\"bell-off-outline\"\n        />\n      }\n      renderItem={({ item }) => (\n        <NotificationCard\n          title={item.title}\n          msg={item.msg}\n          imageSource={item.imageSource}\n          navigationTarget={item.navigationTarget}\n          testID={item.testID}\n        />\n      )}\n    />\n  );\n};\n\nconst initialLayout = { width: Dimensions.get('window').width };\n\nconst renderTabBar = (props) => (\n  <TabBar\n    {...props}\n    indicatorStyle={{ backgroundColor: ORANGE }}\n    style={styles.tabBar}\n    renderLabel={({ route, color }: { route: Route; color: string }) => (\n      <View style={styles.tabContainer}>\n        {route.badge && <View style={styles.badge} />}\n        <Text\n          style={[styles.tabText, { color }]}\n          adjustsFontSizeToFit={true}\n          numberOfLines={1}\n        >\n          {route.title}\n        </Text>\n      </View>\n    )}\n    inactiveColor={GREY}\n    activeColor={BLACK}\n  />\n);\n\ntype NotificationsRoute = RouteProp<\n  {\n    Notifications: {\n      type?: typeof CONNECTIONS_TYPE | typeof GROUPS_TYPE | typeof MISC_TYPE;\n    };\n  },\n  'Notifications'\n>;\n\nexport const NotificationsScreen = () => {\n  const dispatch = useDispatch();\n  const route = useRoute<NotificationsRoute>();\n  const { t } = useTranslation();\n  const api = useContext(NodeApiContext);\n\n  const pendingConnections = useSelector(\n    (state) => selectAllUnconfirmedConnections(state)?.length,\n  );\n\n  const invites = useSelector((state) => inviteSelector(state)?.length);\n\n  const backupPending = useSelector(\n    (state) => state.notifications.backupPending,\n  );\n\n  const recoveryConnectionsPending = useSelector(\n    (state) => state.notifications.recoveryConnectionsPending,\n  );\n\n  const routes = [\n    {\n      key: CONNECTIONS_TYPE,\n      title: t('notifications.tab.connections'),\n      badge: !!pendingConnections,\n    },\n    {\n      key: GROUPS_TYPE,\n      title: t('notifications.tab.groups'),\n      badge: !!invites,\n    },\n    {\n      key: MISC_TYPE,\n      title: t('notifications.tab.miscellaneous'),\n      badge: backupPending || recoveryConnectionsPending,\n      backupPending,\n      recoveryConnectionsPending,\n    },\n  ];\n  // if we navigate here from the banner, go to the section from the banner\n  // if we navigate here normally, go to the first route with content, if any\n\n  const displayRoute = route.params?.type\n    ? routes.findIndex(({ key }) => key === route.params?.type)\n    : routes.findIndex(({ badge }) => badge);\n\n  const [index, setIndex] = useState(displayRoute);\n\n  const renderScene = SceneMap({\n    [CONNECTIONS_TYPE]: ConnectionsList,\n    [GROUPS_TYPE]: InviteList,\n    [MISC_TYPE]: MiscList,\n  });\n\n  useFocusEffect(\n    useCallback(() => {\n      dispatch(updateNotifications(api));\n    }, [api, dispatch]),\n  );\n\n  console.log('Rendering Notification Screen');\n\n  return (\n    <>\n      <StatusBar\n        barStyle=\"light-content\"\n        backgroundColor={ORANGE}\n        animated={true}\n      />\n      <View style={styles.orangeTop} />\n      <View style={styles.container} testID=\"NotificationsScreen\">\n        <TabView\n          navigationState={{ index, routes }}\n          renderScene={renderScene}\n          renderTabBar={renderTabBar}\n          onIndexChange={setIndex}\n          initialLayout={initialLayout}\n        />\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 62,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    zIndex: 10,\n    overflow: 'hidden',\n  },\n  badge: {\n    backgroundColor: ORANGE,\n    width: DEVICE_LARGE ? 8 : 6,\n    height: DEVICE_LARGE ? 8 : 6,\n    borderRadius: 4,\n    marginRight: DEVICE_LARGE ? 8 : 6,\n  },\n  tabBar: { backgroundColor: WHITE, paddingLeft: DEVICE_LARGE ? 20 : 18 },\n  tabContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  tabText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n  },\n});\n\nexport default NotificationsScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}