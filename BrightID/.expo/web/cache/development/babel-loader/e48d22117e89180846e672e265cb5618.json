{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AppsScreen from \"../components/Apps/AppsScreen\";\nimport { DEVICE_LARGE } from \"../utils/deviceConstants\";\nimport { headerOptions, NavHome } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar topOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerTitle: 'Application',\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  },\n  headerStyle: {\n    height: DEVICE_LARGE ? 80 : 70,\n    shadowRadius: 0,\n    elevation: -1\n  },\n  headerTitleAlign: 'center',\n  headerTintColor: 'transparent',\n  headerTransparent: true\n});\n\nvar Apps = function Apps() {\n  return _jsx(Stack.Screen, {\n    name: \"Apps\",\n    component: AppsScreen,\n    options: topOptions\n  });\n};\n\nexport default Apps;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Apps.tsx"],"names":["Stack","createStackNavigator","topOptions","headerTitle","headerLeft","headerStyle","height","DEVICE_LARGE","shadowRadius","elevation","headerTitleAlign","headerTintColor","headerTransparent","Apps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,SAAA,oBAAA,QAAA,yBAAA;AAIA,OAAA,UAAA;AACA,SAAA,YAAA;AACA,SAAA,aAAA,EAAA,OAAA;;AAEA,IAAMA,KAAK,GAAGC,oBAAd,EAAA;;AAEA,IAAMC,UAAkC,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA;EAEtCC,WAAW,EAF2B,aAAA;EAGtCC,UAAU,EAAE,SAAA,UAAA,GAAA;IAAA,OAAM,IAAA,CAAA,OAAA,EAAN,EAAM,CAAN;EAH0B,CAAA;EAItCC,WAAW,EAAE;IACXC,MAAM,EAAEC,YAAY,GAAA,EAAA,GADT,EAAA;IAEXC,YAAY,EAFD,CAAA;IAGXC,SAAS,EAAE,CAPyB;EAIzB,CAJyB;EAStCC,gBAAgB,EATsB,QAAA;EAUtCC,eAAe,EAVuB,aAAA;EAWtCC,iBAAiB,EAXnB;AAAwC,CAAA,CAAxC;;AAcA,IAAMC,IAAI,GAAJA,SAAAA,IAAAA,GAAO;EAAA,OACX,IAAA,CAAC,KAAD,CAAA,MAAA,EAAA;IAAc,IAAI,EAAlB,MAAA;IAA0B,SAAS,EAAnC,UAAA;IAAiD,OAAO,EAD7C;EACX,CAAA,CADW;AAAb,CAAA;;AAIA,eAAA,IAAA","sourcesContent":["import React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport AppsScreen from '@/components/Apps/AppsScreen';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { headerOptions, NavHome } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst topOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerTitle: 'Application',\n  headerLeft: () => <NavHome />,\n  headerStyle: {\n    height: DEVICE_LARGE ? 80 : 70,\n    shadowRadius: 0,\n    elevation: -1,\n  },\n  headerTitleAlign: 'center',\n  headerTintColor: 'transparent',\n  headerTransparent: true,\n};\n\nconst Apps = () => (\n  <Stack.Screen name=\"Apps\" component={AppsScreen} options={topOptions} />\n);\n\nexport default Apps;\n"]},"metadata":{},"sourceType":"module"}