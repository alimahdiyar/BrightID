{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { connectionLevelColors, connectionLevelStrings } from \"../../utils/connectionLevelStrings\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { GREY, RED } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { connection_levels } from \"../../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ConnectionStatus = function ConnectionStatus(_ref) {\n  var index = _ref.index,\n      status = _ref.status,\n      reportReason = _ref.reportReason,\n      connectionDate = _ref.connectionDate,\n      infoText = _ref.infoText,\n      level = _ref.level;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var ConnectionDate = connectionDate ? _jsx(Text, {\n    style: styles.connectionTime,\n    testID: \"connection_time-\" + index,\n    children: t('common.tag.connectionDate', {\n      date: moment(connectionDate).fromNow()\n    })\n  }) : null;\n  var InfoText = infoText ? _jsx(Text, {\n    style: styles.infoText,\n    testID: \"info_text-\" + index,\n    children: infoText\n  }) : null;\n\n  if (status === 'initiated') {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: _jsx(Text, {\n        style: styles.waitingMessage,\n        children: t('connections.tag.waiting')\n      })\n    });\n  } else if (status === 'stale') {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: _jsx(Text, {\n        style: styles.waitingMessage,\n        children: t('connections.tag.failed')\n      })\n    });\n  } else if (level === connection_levels.REPORTED) {\n    return _jsxs(View, {\n      style: styles.statusContainer,\n      children: [_jsx(Text, {\n        style: [styles.deletedMessage, {\n          marginTop: 1\n        }],\n        children: reportReason && reportReason !== 'other' ? t('connections.tag.reportedAs', {\n          flag: reportReason\n        }) : t('connections.tag.reported')\n      }), ConnectionDate, InfoText]\n    });\n  } else if (status === 'deleted') {\n    return _jsx(View, {\n      style: styles.statusContainer,\n      children: _jsx(Text, {\n        style: styles.deletedMessage,\n        children: t('connections.tag.deleted')\n      })\n    });\n  } else {\n    return _jsxs(View, {\n      style: styles.statusContainer,\n      testID: \"connection-\" + index,\n      children: [_jsx(Text, {\n        testID: \"connection_level-\" + index,\n        style: [styles.connectionLevel, {\n          color: connectionLevelColors[level]\n        }],\n        children: connectionLevelStrings[level]\n      }), ConnectionDate, InfoText]\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: '#fff',\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 16 : 14\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 12 : 11,\n    marginTop: DEVICE_LARGE ? 3 : 1\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: '#B64B32'\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: RED\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 13 : 11,\n    color: '#e39f2f',\n    marginTop: DEVICE_LARGE ? 2 : 0\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 14 : 12,\n    color: '#FF0800',\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize'\n  },\n  verificationSticker: {\n    marginLeft: DEVICE_LARGE ? 5 : 3.5\n  },\n  removeButton: {\n    width: DEVICE_LARGE ? 36 : 32,\n    position: 'absolute',\n    right: 0\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic'\n  }\n});","map":{"version":3,"names":["React","useTranslation","moment","connectionLevelColors","connectionLevelStrings","DEVICE_LARGE","GREY","RED","fontSize","connection_levels","ConnectionStatus","index","status","reportReason","connectionDate","infoText","level","t","ConnectionDate","styles","connectionTime","date","fromNow","InfoText","statusContainer","waitingMessage","REPORTED","deletedMessage","marginTop","flag","connectionLevel","color","StyleSheet","create","container","flexDirection","height","alignItems","justifyContent","backgroundColor","card","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderBottomLeftRadius","photo","borderRadius","marginLeft","info","flex","nameContainer","name","fontFamily","moreIcon","marginRight","textTransform","verificationSticker","removeButton","position","right","connectedText","fontStyle"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/ConnectionStatus.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport {\n  connectionLevelColors,\n  connectionLevelStrings,\n} from '@/utils/connectionLevelStrings';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { GREY, RED } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { connection_levels } from '@/utils/constants';\n\ntype Props = {\n  index: number;\n  status: string;\n  reportReason: string;\n  connectionDate?: number;\n  infoText?: string;\n  level: ConnectionLevel;\n};\n\nexport const ConnectionStatus = ({\n  index,\n  status,\n  reportReason,\n  connectionDate,\n  infoText,\n  level,\n}: Props) => {\n  const { t } = useTranslation();\n\n  const ConnectionDate = connectionDate ? (\n    <Text style={styles.connectionTime} testID={`connection_time-${index}`}>\n      {t('common.tag.connectionDate', {\n        date: moment(connectionDate).fromNow(),\n      })}\n    </Text>\n  ) : null;\n\n  const InfoText = infoText ? (\n    <Text style={styles.infoText} testID={`info_text-${index}`}>\n      {infoText}\n    </Text>\n  ) : null;\n\n  if (status === 'initiated') {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={styles.waitingMessage}>\n          {t('connections.tag.waiting')}\n        </Text>\n      </View>\n    );\n  } else if (status === 'stale') {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={styles.waitingMessage}>{t('connections.tag.failed')}</Text>\n      </View>\n    );\n  } else if (level === connection_levels.REPORTED) {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={[styles.deletedMessage, { marginTop: 1 }]}>\n          {reportReason && reportReason !== 'other'\n            ? t('connections.tag.reportedAs', {\n                flag: reportReason,\n              })\n            : t('connections.tag.reported')}\n        </Text>\n        {ConnectionDate}\n        {InfoText}\n      </View>\n    );\n  } else if (status === 'deleted') {\n    return (\n      <View style={styles.statusContainer}>\n        <Text style={styles.deletedMessage}>\n          {t('connections.tag.deleted')}\n        </Text>\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.statusContainer} testID={`connection-${index}`}>\n        <Text\n          testID={`connection_level-${index}`}\n          style={[\n            styles.connectionLevel,\n            { color: connectionLevelColors[level] },\n          ]}\n        >\n          {connectionLevelStrings[level]}\n        </Text>\n        {ConnectionDate}\n        {InfoText}\n      </View>\n    );\n  }\n};\n\n// TODO: missing connectedText\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: '#fff',\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10,\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30,\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 16 : 14,\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 12 : 11,\n    marginTop: DEVICE_LARGE ? 3 : 1,\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: '#B64B32',\n  },\n  infoText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: DEVICE_LARGE ? 10 : 9,\n    color: RED,\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23,\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 13 : 11,\n    color: '#e39f2f',\n    marginTop: DEVICE_LARGE ? 2 : 0,\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: DEVICE_LARGE ? 14 : 12,\n    color: '#FF0800',\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize',\n  },\n  verificationSticker: {\n    marginLeft: DEVICE_LARGE ? 5 : 3.5,\n  },\n  removeButton: {\n    width: DEVICE_LARGE ? 36 : 32,\n    position: 'absolute',\n    right: 0,\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}