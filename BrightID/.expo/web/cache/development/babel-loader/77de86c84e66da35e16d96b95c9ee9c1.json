{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useTheme } from '@react-navigation/native';\nexport default function HeaderBackground(_ref) {\n  var style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Animated.View, _extends({\n    style: [styles.container, {\n      backgroundColor: colors.card,\n      borderBottomColor: colors.border,\n      shadowColor: colors.border\n    }, style]\n  }, rest));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    flex: 1\n  }, Platform.select({\n    android: {\n      elevation: 4\n    },\n    ios: {\n      shadowOpacity: 0.85,\n      shadowRadius: 0,\n      shadowOffset: {\n        width: 0,\n        height: StyleSheet.hairlineWidth\n      }\n    },\n    default: {\n      borderBottomWidth: StyleSheet.hairlineWidth\n    }\n  }))\n});","map":{"version":3,"sources":["HeaderBackground.tsx"],"names":["style","rest","colors","useTheme","React","Animated","styles","backgroundColor","borderBottomColor","shadowColor","StyleSheet","container","flex","Platform","android","elevation","ios","shadowOpacity","shadowRadius","shadowOffset","width","height","default","borderBottomWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AASA,SAAA,QAAA,QAAA,0BAAA;AAOA,eAAe,SAAA,gBAAA,CAAA,IAAA,EAAqD;EAAzBA,IAAAA,KAAyB,GAAA,IAAA,CAAzBA,KAAAA;EAAAA,IAAUC,IAAe,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAAzBD;;EACzC,IAAA,SAAA,GAAmBG,QAAnB,EAAA;EAAA,IAAQD,MAAR,GAAA,SAAA,CAAA,MAAA;;EAEA,OACEE,KAAAA,CAAAA,aAAAA,CAACC,QAADD,CAAAA,IAAAA,EAAAA,QAAAA,CAAAA;IACEJ,KAAK,EAAE,CACLM,MAAM,CADD,SAAA,EAEL;MACEC,eAAe,EAAEL,MAAM,CADzB,IAAA;MAEEM,iBAAiB,EAAEN,MAAM,CAF3B,MAAA;MAGEO,WAAW,EAAEP,MAAM,CALhB;IAEL,CAFK,EADTE,KACS;EADTA,CAAAA,EADF,IACEA,CAAAA,CADF;AAgBF;AAAA,IAAME,MAAM,GAAGI,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAA,aAAA,CAAA;IACPC,IAAI,EADG;EAAA,CAAA,EAEJC,QAAQ,CAARA,MAAAA,CAAgB;IACjBC,OAAO,EAAE;MACPC,SAAS,EAFM;IACR,CADQ;IAIjBC,GAAG,EAAE;MACHC,aAAa,EADV,IAAA;MAEHC,YAAY,EAFT,CAAA;MAGHC,YAAY,EAAE;QACZC,KAAK,EADO,CAAA;QAEZC,MAAM,EAAEX,UAAU,CATL;MAOD;IAHX,CAJY;IAYjBY,OAAO,EAAE;MACPC,iBAAiB,EAAEb,UAAU,CAhBrC;IAee;EAZQ,CAAhBG,CAFI;AADsB,CAAlBH,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Platform,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = ViewProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children?: React.ReactNode;\n};\n\nexport default function HeaderBackground({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}