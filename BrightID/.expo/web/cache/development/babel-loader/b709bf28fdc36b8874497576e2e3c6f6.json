{"ast":null,"code":"import 'react-native-gesture-handler';\nimport \"./i18n\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport SimpleLineIcons from \"@expo/vector-icons/SimpleLineIcons\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport Octicons from \"@expo/vector-icons/Octicons\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport codePush from 'react-native-code-push';\nimport { DEVICE_ANDROID } from '@/utils/deviceConstants.ts';\nimport codePushOptions from \"./codepush.config\";\nimport App from \"./src/App.tsx\";\nimport { name as appName } from \"./app.json\";\nimport 'react-native-url-polyfill/auto';\nconsole.disableYellowBox = true;\n\nif (__DEV__) {\n  var _ = require('lodash');\n\n  var _console = _.clone(console);\n\n  console.warn = function (message) {\n    if (message.indexOf('Setting a timer') <= -1) {\n      _console.warn(message);\n    }\n  };\n}\n\nIonicons.loadFont();\nSimpleLineIcons.loadFont();\nMaterialCommunityIcons.loadFont();\nOcticons.loadFont();\nAntDesign.loadFont();\nMaterialIcons.loadFont();\nText.defaultProps = Text.defaultProps || {};\nText.defaultProps.allowFontScaling = false;\nTextInput.defaultProps = TextInput.defaultProps || {};\nTextInput.defaultProps.allowFontScaling = false;\nFlatList.defaultProps = FlatList.defaultProps || {};\nFlatList.defaultProps.windowSize = DEVICE_ANDROID ? 5 : 10;\nFlatList.defaultProps.removeClippedSubviews = DEVICE_ANDROID;\nAppRegistry.registerComponent(appName, function () {\n  return codePush(codePushOptions)(App);\n});","map":{"version":3,"names":["Ionicons","SimpleLineIcons","MaterialCommunityIcons","MaterialIcons","Octicons","AntDesign","codePush","DEVICE_ANDROID","codePushOptions","App","name","appName","console","disableYellowBox","__DEV__","_","require","_console","clone","warn","message","indexOf","loadFont","Text","defaultProps","allowFontScaling","TextInput","FlatList","windowSize","removeClippedSubviews","AppRegistry","registerComponent"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/index.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport './i18n';\n// import { enableScreens } from 'react-native-screens';\nimport { AppRegistry, FlatList, Text, TextInput } from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport codePush from 'react-native-code-push';\nimport { DEVICE_ANDROID } from '@/utils/deviceConstants.ts';\nimport codePushOptions from './codepush.config';\nimport App from './src/App.tsx';\nimport { name as appName } from './app.json';\nimport 'react-native-url-polyfill/auto';\n\n// detox e2e tests fail when yellowboxes come up\nconsole.disableYellowBox = true;\n\n// remove setting a timer warning\nif (__DEV__) {\n  const _ = require('lodash');\n  const _console = _.clone(console);\n  console.warn = (message) => {\n    if (message.indexOf('Setting a timer') <= -1) {\n      _console.warn(message);\n    }\n  };\n}\n\n// enable react-native-screens\n// enableScreens is causing some android devices to crash\n// enable screens might be causing ios swipe navigation to freeze\n// enableScreens();\n\n// Bootstrap fonts\nIonicons.loadFont();\nSimpleLineIcons.loadFont();\nMaterialCommunityIcons.loadFont();\nOcticons.loadFont();\nAntDesign.loadFont();\nMaterialIcons.loadFont();\n\n// Fix Font Scaling\n\nText.defaultProps = Text.defaultProps || {};\n\nText.defaultProps.allowFontScaling = false;\n\nTextInput.defaultProps = TextInput.defaultProps || {};\n\nTextInput.defaultProps.allowFontScaling = false;\n\nFlatList.defaultProps = FlatList.defaultProps || {};\n\nFlatList.defaultProps.windowSize = DEVICE_ANDROID ? 5 : 10;\n\nFlatList.defaultProps.removeClippedSubviews = DEVICE_ANDROID;\n\nAppRegistry.registerComponent(appName, () => codePush(codePushOptions)(App));\n"],"mappings":"AAAA,OAAO,8BAAP;AACA;;;;;AAGA,OAAOA,QAAP;AACA,OAAOC,eAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,eAAP;AACA,OAAOC,GAAP;AACA,SAASC,IAAI,IAAIC,OAAjB;AACA,OAAO,gCAAP;AAGAC,OAAO,CAACC,gBAAR,GAA2B,IAA3B;;AAGA,IAAIC,OAAJ,EAAa;EACX,IAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;EACA,IAAMC,QAAQ,GAAGF,CAAC,CAACG,KAAF,CAAQN,OAAR,CAAjB;;EACAA,OAAO,CAACO,IAAR,GAAe,UAACC,OAAD,EAAa;IAC1B,IAAIA,OAAO,CAACC,OAAR,CAAgB,iBAAhB,KAAsC,CAAC,CAA3C,EAA8C;MAC5CJ,QAAQ,CAACE,IAAT,CAAcC,OAAd;IACD;EACF,CAJD;AAKD;;AAQDpB,QAAQ,CAACsB,QAAT;AACArB,eAAe,CAACqB,QAAhB;AACApB,sBAAsB,CAACoB,QAAvB;AACAlB,QAAQ,CAACkB,QAAT;AACAjB,SAAS,CAACiB,QAAV;AACAnB,aAAa,CAACmB,QAAd;AAIAC,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACC,YAAL,IAAqB,EAAzC;AAEAD,IAAI,CAACC,YAAL,CAAkBC,gBAAlB,GAAqC,KAArC;AAEAC,SAAS,CAACF,YAAV,GAAyBE,SAAS,CAACF,YAAV,IAA0B,EAAnD;AAEAE,SAAS,CAACF,YAAV,CAAuBC,gBAAvB,GAA0C,KAA1C;AAEAE,QAAQ,CAACH,YAAT,GAAwBG,QAAQ,CAACH,YAAT,IAAyB,EAAjD;AAEAG,QAAQ,CAACH,YAAT,CAAsBI,UAAtB,GAAmCrB,cAAc,GAAG,CAAH,GAAO,EAAxD;AAEAoB,QAAQ,CAACH,YAAT,CAAsBK,qBAAtB,GAA8CtB,cAA9C;AAEAuB,WAAW,CAACC,iBAAZ,CAA8BpB,OAA9B,EAAuC;EAAA,OAAML,QAAQ,CAACE,eAAD,CAAR,CAA0BC,GAA1B,CAAN;AAAA,CAAvC"},"metadata":{},"sourceType":"module"}