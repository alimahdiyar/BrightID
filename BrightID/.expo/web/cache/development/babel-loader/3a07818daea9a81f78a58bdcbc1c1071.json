{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport Material from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport i18next from 'i18next';\nimport { useDispatch, useSelector } from \"../../store\";\nimport { connection_levels, CONNECTION_STALE_AGE } from \"../../utils/constants\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { staleConnection, deleteConnection, addOperation } from \"../../actions\";\nimport { DEVICE_LARGE, WIDTH } from \"../../utils/deviceConstants\";\nimport { WHITE, LIGHT_ORANGE, LIGHT_BLACK, DARK_ORANGE, RED } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { ConnectionStatus } from \"../Helpers/ConnectionStatus\";\nimport { backupUser } from \"../Onboarding/RecoveryFlow/thunks/backupThunks\";\nimport { encryptAesKey } from \"../../utils/invites\";\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConnectionCard = function ConnectionCard(props) {\n  var _route$params;\n\n  var stale_check_timer = useRef(null);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      backupCompleted = _useSelector.backupCompleted;\n\n  var navigation = useNavigation();\n  var route = useRoute();\n  var api = useContext(NodeApiContext);\n  var dispatch = useDispatch();\n  var status = props.status,\n      connectionDate = props.connectionDate,\n      id = props.id,\n      name = props.name,\n      photo = props.photo,\n      reportReason = props.reportReason,\n      index = props.index,\n      level = props.level;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var group = (_route$params = route.params) == null ? void 0 : _route$params.group;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgErr = _useState2[0],\n      setImgErr = _useState2[1];\n\n  useFocusEffect(useCallback(function () {\n    if (status === 'initiated') {\n      var checkStale = function checkStale() {\n        var ageMs = Date.now() - connectionDate;\n\n        if (ageMs > CONNECTION_STALE_AGE) {\n          console.log(\"Connection \" + name + \" is stale (age: \" + ageMs + \" ms)\");\n          return true;\n        }\n\n        return false;\n      };\n\n      if (checkStale()) {\n        dispatch(staleConnection(id));\n      } else {\n        var checkTime = connectionDate + CONNECTION_STALE_AGE + 5000 - Date.now();\n\n        if (checkTime < 0) {\n          console.log(\"Warning - checkTime in past: \" + checkTime);\n          checkTime = 1000;\n        }\n\n        if (stale_check_timer.current) {\n          clearTimeout(stale_check_timer.current);\n        }\n\n        console.log(\"Marking connection as stale in \" + checkTime + \"ms.\");\n        stale_check_timer.current = setTimeout(function () {\n          if (checkStale()) {\n            dispatch(staleConnection(id));\n          }\n        }, checkTime);\n      }\n    }\n\n    return function () {\n      if (stale_check_timer.current) {\n        clearTimeout(stale_check_timer.current);\n        stale_check_timer.current = null;\n      }\n    };\n  }, [connectionDate, dispatch, id, name, status]));\n  useEffect(function () {\n    if (stale_check_timer.current && status === 'verified') {\n      console.log(\"Connection \" + name + \" changed 'initiated' -> 'verified'. Stopping stale_check_timer ID \" + stale_check_timer.current + \".\");\n      clearTimeout(stale_check_timer.current);\n      stale_check_timer.current = null;\n    }\n  }, [name, status]);\n\n  var _useActionSheet = useActionSheet(),\n      showActionSheetWithOptions = _useActionSheet.showActionSheetWithOptions;\n\n  var removeOptions = [t('connections.removeActionSheet.remove'), t('common.actionSheet.cancel')];\n  var showRemove = status === 'deleted' || status === 'stale' || level === connection_levels.REPORTED;\n\n  var RemoveConnection = function RemoveConnection() {\n    return showRemove ? _jsx(TouchableOpacity, {\n      style: styles.removeButton,\n      onPress: function onPress() {\n        showActionSheetWithOptions({\n          options: removeOptions,\n          cancelButtonIndex: removeOptions.length - 1,\n          destructiveButtonIndex: 0,\n          title: t('connections.removeActionSheet.title'),\n          message: t('connections.removeActionSheet.info', {\n            name: name\n          }),\n          showSeparators: true,\n          textStyle: {\n            textAlign: 'center',\n            width: '100%'\n          }\n        }, function _callee(index) {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(index === 0)) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  dispatch(deleteConnection(id));\n\n                  if (!backupCompleted) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return _regeneratorRuntime.awrap(dispatch(backupUser()));\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      },\n      children: _jsx(Material, {\n        color: LIGHT_BLACK,\n        name: \"close\",\n        size: DEVICE_LARGE ? 22 : 18\n      })\n    }) : _jsx(View, {});\n  };\n\n  var imageSource = photo != null && photo.filename && !imgErr ? {\n    uri: \"file://\" + photoDirectory() + \"/\" + (photo == null ? void 0 : photo.filename)\n  } : require(\"../../static/default_profile.jpg\");\n\n  var handlePress = function _callee2(id) {\n    var _await$api$getProfile, signingKeys, data, op;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!group) {\n              _context2.next = 23;\n              break;\n            }\n\n            console.log(\"Inviting connection \" + id + \" to group \" + group.id);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(api.getProfile(id));\n\n          case 5:\n            _await$api$getProfile = _context2.sent;\n            signingKeys = _await$api$getProfile.signingKeys;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(encryptAesKey(group == null ? void 0 : group.aesKey, signingKeys[0]));\n\n          case 9:\n            data = _context2.sent;\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(api.invite(id, group == null ? void 0 : group.id, data));\n\n          case 12:\n            op = _context2.sent;\n            dispatch(addOperation(op));\n            Alert.alert(i18next.t('groups.alert.title.inviteSuccess'), i18next.t('groups.alert.text.inviteSuccess', {\n              name: name\n            }));\n            navigation.goBack();\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](2);\n            Alert.alert(i18next.t('common.alert.error'), _context2.t0.message);\n\n          case 21:\n            _context2.next = 24;\n            break;\n\n          case 23:\n            navigation.navigate('Connection', {\n              connectionId: id\n            });\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 18]], Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    testID: \"connectionCardContainer\",\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('FullScreenPhoto', {\n            photo: photo\n          });\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewPhoto'),\n        accessibilityRole: \"imagebutton\",\n        children: _jsx(Image, {\n          source: imageSource,\n          style: styles.photo,\n          accessibilityLabel: t('connections.accessibilityLabel.connectionPhoto'),\n          onError: function onError() {\n            console.log('settingImgErr');\n            setImgErr(true);\n          }\n        })\n      }), _jsx(TouchableOpacity, {\n        testID: \"ConnectionCard-\" + index,\n        onPress: function onPress() {\n          handlePress(id);\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewConnectionDetails'),\n        children: _jsxs(View, {\n          style: [styles.info, {\n            maxWidth: WIDTH * 0.56\n          }],\n          children: [_jsx(View, {\n            style: [styles.nameContainer],\n            testID: \"connection_name-\" + index,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.name,\n              testID: \"connectionCardText-\" + index,\n              children: name\n            })\n          }), _jsx(ConnectionStatus, {\n            index: index,\n            status: status,\n            reportReason: reportReason,\n            connectionDate: connectionDate,\n            level: level\n          })]\n        })\n      }), _jsx(RemoveConnection, {})]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16]\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[12],\n    marginTop: DEVICE_LARGE ? 3 : 1\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: DARK_ORANGE\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: LIGHT_ORANGE,\n    marginTop: DEVICE_LARGE ? 2 : 0\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: RED,\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize'\n  },\n  removeButton: {\n    width: DEVICE_LARGE ? 36 : 32,\n    position: 'absolute',\n    right: 0\n  }\n});\nexport default ConnectionCard;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Connections/ConnectionCard.tsx"],"names":["ConnectionCard","stale_check_timer","useRef","backupCompleted","useSelector","state","navigation","useNavigation","route","useRoute","api","useContext","dispatch","useDispatch","status","connectionDate","id","name","photo","reportReason","index","level","props","t","useTranslation","group","imgErr","setImgErr","useState","useFocusEffect","useCallback","checkStale","ageMs","Date","console","staleConnection","checkTime","clearTimeout","setTimeout","useEffect","showActionSheetWithOptions","useActionSheet","removeOptions","showRemove","connection_levels","RemoveConnection","styles","options","cancelButtonIndex","destructiveButtonIndex","title","message","showSeparators","textStyle","textAlign","width","deleteConnection","backupUser","DEVICE_LARGE","imageSource","uri","photoDirectory","require","handlePress","signingKeys","data","encryptAesKey","op","addOperation","Alert","i18next","connectionId","maxWidth","WIDTH","StyleSheet","container","flexDirection","height","alignItems","justifyContent","backgroundColor","card","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","marginLeft","marginTop","info","flex","nameContainer","fontFamily","fontSize","statusContainer","connectionLevel","connectionTime","color","moreIcon","marginRight","waitingMessage","deletedMessage","textTransform","removeButton","position","right"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Alert,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport {\n  useFocusEffect,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport Material from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useActionSheet } from '@expo/react-native-action-sheet';\nimport i18next from 'i18next';\nimport { useDispatch, useSelector } from '@/store';\nimport { connection_levels, CONNECTION_STALE_AGE } from '@/utils/constants';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { staleConnection, deleteConnection, addOperation } from '@/actions';\nimport { DEVICE_LARGE, WIDTH } from '@/utils/deviceConstants';\nimport {\n  WHITE,\n  LIGHT_ORANGE,\n  LIGHT_BLACK,\n  DARK_ORANGE,\n  RED,\n} from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { ConnectionStatus } from '@/components/Helpers/ConnectionStatus';\nimport { backupUser } from '@/components/Onboarding/RecoveryFlow/thunks/backupThunks';\nimport { encryptAesKey } from '@/utils/invites';\nimport { NodeApiContext } from '@/components/NodeApiGate';\n\n/**\n * Connection Card in the Connections Screen\n * is created from an array of connections\n * each connection should have:\n * @prop name\n * @prop connectionTime\n * @prop photo\n */\ntype Props = Connection & { index: number };\n\nconst ConnectionCard = (props: Props) => {\n  const stale_check_timer = useRef<TimeoutId>(null);\n  const { backupCompleted } = useSelector((state: State) => state.user);\n  const navigation = useNavigation();\n  const route: { params?: { group: Group } } = useRoute() as {\n    params?: { group: Group };\n  };\n  const api = useContext(NodeApiContext);\n  const dispatch = useDispatch();\n  const {\n    status,\n    connectionDate,\n    id,\n    name,\n    photo,\n    reportReason,\n    index,\n    level,\n  } = props;\n  const { t } = useTranslation();\n\n  const group = route.params?.group;\n  const [imgErr, setImgErr] = useState(false);\n\n  useFocusEffect(\n    useCallback(() => {\n      // if we have a \"waiting\" connection, start timer to handle stale connection requests\n      if (status === 'initiated') {\n        const checkStale = () => {\n          const ageMs = Date.now() - connectionDate;\n          if (ageMs > CONNECTION_STALE_AGE) {\n            console.log(`Connection ${name} is stale (age: ${ageMs} ms)`);\n            return true;\n          }\n          return false;\n        };\n        if (checkStale()) {\n          // this is already old. Immediately mark as \"stale\", no need for a timer.\n          dispatch(staleConnection(id));\n        } else {\n          // start timer to check if connection got verified after waiting CONNECTION_STALE_AGE ms\n          let checkTime =\n            connectionDate + CONNECTION_STALE_AGE + 5000 - Date.now(); // add 5 seconds buffer\n          if (checkTime < 0) {\n            console.log(`Warning - checkTime in past: ${checkTime}`);\n            checkTime = 1000; // check in 1 second\n          }\n\n          if (stale_check_timer.current) {\n            clearTimeout(stale_check_timer.current);\n          }\n          console.log(`Marking connection as stale in ${checkTime}ms.`);\n          stale_check_timer.current = setTimeout(() => {\n            if (checkStale()) {\n              dispatch(staleConnection(id));\n            }\n          }, checkTime);\n        }\n      }\n      return () => {\n        // clear timer if it is set\n        if (stale_check_timer.current) {\n          clearTimeout(stale_check_timer.current);\n          stale_check_timer.current = null;\n        }\n      };\n    }, [connectionDate, dispatch, id, name, status]),\n  );\n\n  useEffect(() => {\n    if (stale_check_timer.current && status === 'verified') {\n      console.log(\n        `Connection ${name} changed 'initiated' -> 'verified'. Stopping stale_check_timer ID ${stale_check_timer.current}.`,\n      );\n      clearTimeout(stale_check_timer.current);\n      stale_check_timer.current = null;\n    }\n  }, [name, status]);\n\n  const { showActionSheetWithOptions } = useActionSheet();\n\n  const removeOptions = [\n    t('connections.removeActionSheet.remove'),\n    t('common.actionSheet.cancel'),\n  ];\n\n  const showRemove =\n    status === 'deleted' ||\n    status === 'stale' ||\n    level === connection_levels.REPORTED;\n\n  const RemoveConnection = () =>\n    showRemove ? (\n      <TouchableOpacity\n        style={styles.removeButton}\n        onPress={() => {\n          showActionSheetWithOptions(\n            {\n              options: removeOptions,\n              cancelButtonIndex: removeOptions.length - 1,\n              destructiveButtonIndex: 0,\n              title: t('connections.removeActionSheet.title'),\n              message: t('connections.removeActionSheet.info', { name }),\n              showSeparators: true,\n              textStyle: {\n                textAlign: 'center',\n                width: '100%',\n              },\n            },\n            async (index) => {\n              if (index === 0) {\n                dispatch(deleteConnection(id));\n                if (backupCompleted) {\n                  await dispatch(backupUser());\n                }\n              }\n            },\n          );\n        }}\n      >\n        <Material\n          color={LIGHT_BLACK}\n          name=\"close\"\n          size={DEVICE_LARGE ? 22 : 18}\n        />\n      </TouchableOpacity>\n    ) : (\n      <View />\n    );\n\n  const imageSource =\n    photo?.filename && !imgErr\n      ? {\n          uri: `file://${photoDirectory()}/${photo?.filename}`,\n        }\n      : require('@/static/default_profile.jpg');\n\n  const handlePress = async (id: string) => {\n    if (group) {\n      console.log(`Inviting connection ${id} to group ${group.id}`);\n      try {\n        const { signingKeys } = await api.getProfile(id);\n        const data = await encryptAesKey(group?.aesKey, signingKeys[0]);\n        const op = await api.invite(id, group?.id, data);\n        dispatch(addOperation(op));\n        Alert.alert(\n          i18next.t('groups.alert.title.inviteSuccess'),\n          i18next.t('groups.alert.text.inviteSuccess', { name }),\n        );\n        navigation.goBack();\n      } catch (err) {\n        Alert.alert(i18next.t('common.alert.error'), err.message);\n      }\n    } else {\n      navigation.navigate('Connection', { connectionId: id });\n    }\n  };\n\n  return (\n    <View style={styles.container} testID=\"connectionCardContainer\">\n      <View style={styles.card}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('FullScreenPhoto', { photo });\n          }}\n          accessibilityLabel={t('connections.accessibilityLabel.viewPhoto')}\n          accessibilityRole=\"imagebutton\"\n        >\n          <Image\n            source={imageSource}\n            style={styles.photo}\n            accessibilityLabel={t(\n              'connections.accessibilityLabel.connectionPhoto',\n            )}\n            onError={() => {\n              console.log('settingImgErr');\n              setImgErr(true);\n            }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          testID={`ConnectionCard-${index}`}\n          onPress={() => {\n            handlePress(id);\n          }}\n          accessibilityLabel={t(\n            'connections.accessibilityLabel.viewConnectionDetails',\n          )}\n        >\n          <View style={[styles.info, { maxWidth: WIDTH * 0.56 }]}>\n            <View\n              style={[styles.nameContainer]}\n              testID={`connection_name-${index}`}\n            >\n              <Text\n                numberOfLines={1}\n                style={styles.name}\n                testID={`connectionCardText-${index}`}\n              >\n                {name}\n              </Text>\n            </View>\n            <ConnectionStatus\n              index={index}\n              status={status}\n              reportReason={reportReason}\n              connectionDate={connectionDate}\n              level={level}\n            />\n          </View>\n        </TouchableOpacity>\n        <RemoveConnection />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10,\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30,\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[12],\n    marginTop: DEVICE_LARGE ? 3 : 1,\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: DARK_ORANGE,\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23,\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: LIGHT_ORANGE,\n    marginTop: DEVICE_LARGE ? 2 : 0,\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: RED,\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize',\n  },\n  removeButton: {\n    width: DEVICE_LARGE ? 36 : 32,\n    position: 'absolute',\n    right: 0,\n  },\n});\n\nexport default ConnectionCard;\n"]},"metadata":{},"sourceType":"module"}