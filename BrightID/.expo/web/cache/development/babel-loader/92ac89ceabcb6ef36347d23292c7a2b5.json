{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddSigningKey = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _fonts = require(\"../../../theme/fonts\");\n\nvar _colors = require(\"../../../theme/colors\");\n\nvar _deviceConstants = require(\"../../../utils/deviceConstants\");\n\nvar _AddDeviceScreen = require(\"./AddDeviceScreen\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddSigningKey.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar AddSigningKey = function AddSigningKey(_ref) {\n  var currentStep = _ref.currentStep,\n      errorMessage = _ref.errorMessage;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      stateDescription = _useState2[0],\n      setStateDescription = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(undefined),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      iconData = _useState4[0],\n      setIconData = _useState4[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _react.useEffect)(function () {\n    switch (currentStep) {\n      case _AddDeviceScreen.AddSigningKeySteps.WAITING:\n      case _AddDeviceScreen.AddSigningKeySteps.DOWNLOADING:\n        setIconData(undefined);\n        setStateDescription(t('addSigningKey.steps.downloading', 'Downloading new device data...'));\n        break;\n\n      case _AddDeviceScreen.AddSigningKeySteps.WAITING_OPERATION:\n        setIconData(undefined);\n        setStateDescription(t('addSigningKey.steps.adding', 'Adding signing key...'));\n        break;\n\n      case _AddDeviceScreen.AddSigningKeySteps.OPERATION_APPLIED:\n        setIconData({\n          color: _colors.GREEN,\n          name: 'checkmark-circle-outline'\n        });\n        setStateDescription(t('addSigningKey.steps.complete', 'Signing key added'));\n        break;\n\n      case _AddDeviceScreen.AddSigningKeySteps.ERROR:\n        setIconData({\n          color: _colors.RED,\n          name: 'alert-circle-outline'\n        });\n        setStateDescription(t('addSigningKey.steps.error', 'Adding signing key failed'));\n        break;\n\n      default:\n        setStateDescription(\"Unhandled state \" + _AddDeviceScreen.AddSigningKeySteps[currentStep]);\n        break;\n    }\n  }, [currentStep, t]);\n  if (currentStep === _AddDeviceScreen.AddSigningKeySteps.WAITING) return null;\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.headerTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, t('addSigningKey.header.text', {\n    defaultValue: 'Add device info'\n  })), _react.default.createElement(_reactNative.Text, {\n    style: styles.headerInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, t('addSigningKey.info', {\n    defaultValue: 'Allowing the new device to use your BrightID'\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.statusContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, iconData ? _react.default.createElement(_Ionicons.default, {\n    style: {\n      alignSelf: 'center'\n    },\n    size: _deviceConstants.DEVICE_LARGE ? 64 : 44,\n    name: iconData.name,\n    color: iconData.color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }) : _react.default.createElement(_reactNativeSpinkit.default, {\n    isVisible: true,\n    size: _deviceConstants.DEVICE_LARGE ? 64 : 44,\n    type: \"Wave\",\n    color: _colors.ORANGE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.infoTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, stateDescription), _react.default.createElement(_reactNative.Text, {\n    style: styles.infoSubText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, currentStep === _AddDeviceScreen.AddSigningKeySteps.ERROR ? errorMessage : null))));\n};\n\nexports.AddSigningKey = AddSigningKey;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  headerTextContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[20],\n    color: _colors.BLACK\n  },\n  headerInfoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    color: _colors.DARKER_GREY,\n    fontSize: _fonts.fontSize[12],\n    maxWidth: '90%'\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginLeft: 20,\n    alignItems: 'center'\n  },\n  infoTextContainer: {\n    flex: 1,\n    marginLeft: 10\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    color: _colors.BLACK\n  },\n  infoSubText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: _fonts.fontSize[10],\n    color: _colors.BLACK\n  }\n});","map":{"version":3,"names":["AddSigningKey","currentStep","errorMessage","useState","stateDescription","setStateDescription","undefined","iconData","setIconData","useTranslation","t","useEffect","AddSigningKeySteps","WAITING","DOWNLOADING","WAITING_OPERATION","OPERATION_APPLIED","color","GREEN","name","ERROR","RED","styles","container","headerTextContainer","headerText","defaultValue","headerInfoText","statusContainer","alignSelf","DEVICE_LARGE","ORANGE","infoTextContainer","infoText","infoSubText","StyleSheet","create","justifyContent","alignItems","width","fontFamily","fontSize","BLACK","textAlign","DARKER_GREY","maxWidth","flexDirection","marginTop","marginLeft","flex"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Onboarding/ImportFlow/AddSigningKey.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Spinner from 'react-native-spinkit';\nimport IonIcons from 'react-native-vector-icons/Ionicons';\nimport { useTranslation } from 'react-i18next';\nimport { fontSize } from '@/theme/fonts';\nimport { BLACK, DARKER_GREY, GREEN, ORANGE, RED } from '@/theme/colors';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { AddSigningKeySteps } from '@/components/Onboarding/ImportFlow/AddDeviceScreen';\n\n/* Component to track adding of signing key */\ntype AddSigningKeyParams = {\n  currentStep: AddSigningKeySteps;\n  errorMessage: string;\n};\nexport const AddSigningKey = ({\n  currentStep,\n  errorMessage,\n}: AddSigningKeyParams) => {\n  const [stateDescription, setStateDescription] = useState('');\n  const [iconData, setIconData] =\n    useState<{ color: string; name: string }>(undefined);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    switch (currentStep) {\n      case AddSigningKeySteps.WAITING:\n      case AddSigningKeySteps.DOWNLOADING:\n        setIconData(undefined);\n        setStateDescription(\n          t(\n            'addSigningKey.steps.downloading',\n            'Downloading new device data...',\n          ),\n        );\n        break;\n      case AddSigningKeySteps.WAITING_OPERATION:\n        setIconData(undefined);\n        setStateDescription(\n          t('addSigningKey.steps.adding', 'Adding signing key...'),\n        );\n        break;\n      case AddSigningKeySteps.OPERATION_APPLIED:\n        setIconData({ color: GREEN, name: 'checkmark-circle-outline' });\n        setStateDescription(\n          t('addSigningKey.steps.complete', 'Signing key added'),\n        );\n        break;\n      case AddSigningKeySteps.ERROR:\n        setIconData({ color: RED, name: 'alert-circle-outline' });\n        setStateDescription(\n          t('addSigningKey.steps.error', 'Adding signing key failed'),\n        );\n        break;\n      default:\n        setStateDescription(\n          `Unhandled state ${AddSigningKeySteps[currentStep]}`,\n        );\n        break;\n    }\n  }, [currentStep, t]);\n\n  if (currentStep === AddSigningKeySteps.WAITING) return null;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headerTextContainer}>\n        <Text style={styles.headerText}>\n          {t('addSigningKey.header.text', {\n            defaultValue: 'Add device info',\n          })}\n        </Text>\n\n        <Text style={styles.headerInfoText}>\n          {t('addSigningKey.info', {\n            defaultValue: 'Allowing the new device to use your BrightID',\n          })}\n        </Text>\n      </View>\n      <View style={styles.statusContainer}>\n        <View>\n          {iconData ? (\n            <IonIcons\n              style={{ alignSelf: 'center' }}\n              size={DEVICE_LARGE ? 64 : 44}\n              name={iconData.name}\n              color={iconData.color}\n            />\n          ) : (\n            <Spinner\n              isVisible={true}\n              size={DEVICE_LARGE ? 64 : 44}\n              type=\"Wave\"\n              color={ORANGE}\n            />\n          )}\n        </View>\n        <View style={styles.infoTextContainer}>\n          <Text style={styles.infoText}>{stateDescription}</Text>\n          <Text style={styles.infoSubText}>\n            {currentStep === AddSigningKeySteps.ERROR ? errorMessage : null}\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  headerTextContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[20],\n    color: BLACK,\n  },\n  headerInfoText: {\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'center',\n    color: DARKER_GREY,\n    fontSize: fontSize[12],\n    maxWidth: '90%',\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    marginTop: 25,\n    marginLeft: 20,\n    alignItems: 'center',\n  },\n  infoTextContainer: {\n    flex: 1,\n    marginLeft: 10,\n  },\n  infoText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  infoSubText: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: BLACK,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}