{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { FlagType, CountryCodeList } from \"./types\";\nimport Fuse from 'fuse.js';\nvar imageJsonUrl = 'https://xcarpentier.github.io/react-native-country-picker-modal/countries/';\nvar localData = {\n  emojiCountries: undefined,\n  imageCountries: undefined\n};\nexport var loadDataAsync = function (data) {\n  return function () {\n    var dataType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : FlagType.EMOJI;\n    return new Promise(function (resolve, reject) {\n      switch (dataType) {\n        case FlagType.FLAT:\n          if (!data.imageCountries) {\n            fetch(imageJsonUrl).then(function (response) {\n              return response.json();\n            }).then(function (remoteData) {\n              data.imageCountries = remoteData;\n              resolve(data.imageCountries);\n            }).catch(reject);\n          } else {\n            resolve(data.imageCountries);\n          }\n\n          break;\n\n        default:\n          if (!data.emojiCountries) {\n            data.emojiCountries = require(\"./assets/data/countries-emoji.json\");\n            resolve(data.emojiCountries);\n          } else {\n            resolve(data.emojiCountries);\n          }\n\n          break;\n      }\n    });\n  };\n}(localData);\nexport var getEmojiFlagAsync = function _callee() {\n  var countryCode,\n      countries,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          countryCode = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'FR';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 3:\n          countries = _context.sent;\n\n          if (countries) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Unable to find emoji because emojiCountries is undefined');\n\n        case 6:\n          return _context.abrupt(\"return\", countries[countryCode].flag);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getImageFlagAsync = function _callee2() {\n  var countryCode,\n      countries,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          countryCode = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 'FR';\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(loadDataAsync(FlagType.FLAT));\n\n        case 3:\n          countries = _context2.sent;\n\n          if (countries) {\n            _context2.next = 6;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 6:\n          return _context2.abrupt(\"return\", countries[countryCode].flag);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryNameAsync = function _callee3() {\n  var countryCode,\n      translation,\n      countries,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          countryCode = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 'FR';\n          translation = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 'common';\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 4:\n          countries = _context3.sent;\n\n          if (countries) {\n            _context3.next = 7;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 7:\n          return _context3.abrupt(\"return\", countries[countryCode].name ? countries[countryCode].name[translation] : countries[countryCode].name['common']);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryCallingCodeAsync = function _callee4(countryCode) {\n  var countries;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 2:\n          countries = _context4.sent;\n\n          if (countries) {\n            _context4.next = 5;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 5:\n          return _context4.abrupt(\"return\", countries[countryCode].callingCode[0]);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryCurrencyAsync = function _callee5(countryCode) {\n  var countries;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 2:\n          countries = _context5.sent;\n\n          if (countries) {\n            _context5.next = 5;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 5:\n          return _context5.abrupt(\"return\", countries[countryCode].currency[0]);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar isCountryPresent = function isCountryPresent(countries) {\n  return function (countryCode) {\n    return !!countries[countryCode];\n  };\n};\n\nvar isRegion = function isRegion(region) {\n  return function (country) {\n    return region ? country.region === region : true;\n  };\n};\n\nvar isSubregion = function isSubregion(subregion) {\n  return function (country) {\n    return subregion ? country.subregion === subregion : true;\n  };\n};\n\nvar isIncluded = function isIncluded(countryCodes) {\n  return function (country) {\n    return countryCodes && countryCodes.length > 0 ? countryCodes.includes(country.cca2) : true;\n  };\n};\n\nvar isExcluded = function isExcluded(excludeCountries) {\n  return function (country) {\n    return excludeCountries && excludeCountries.length > 0 ? !excludeCountries.includes(country.cca2) : true;\n  };\n};\n\nexport var getCountriesAsync = function _callee6(flagType) {\n  var translation,\n      region,\n      subregion,\n      countryCodes,\n      excludeCountries,\n      preferredCountries,\n      withAlphaFilter,\n      countriesRaw,\n      newCountryCodeList,\n      countries,\n      _countries,\n      _args6 = arguments;\n\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          translation = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 'common';\n          region = _args6.length > 2 ? _args6[2] : undefined;\n          subregion = _args6.length > 3 ? _args6[3] : undefined;\n          countryCodes = _args6.length > 4 ? _args6[4] : undefined;\n          excludeCountries = _args6.length > 5 ? _args6[5] : undefined;\n          preferredCountries = _args6.length > 6 ? _args6[6] : undefined;\n          withAlphaFilter = _args6.length > 7 ? _args6[7] : undefined;\n          _context6.next = 9;\n          return _regeneratorRuntime.awrap(loadDataAsync(flagType));\n\n        case 9:\n          countriesRaw = _context6.sent;\n\n          if (countriesRaw) {\n            _context6.next = 12;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", []);\n\n        case 12:\n          if (!(preferredCountries && !withAlphaFilter)) {\n            _context6.next = 18;\n            break;\n          }\n\n          newCountryCodeList = [].concat(_toConsumableArray(preferredCountries), _toConsumableArray(CountryCodeList.filter(function (code) {\n            return !preferredCountries.includes(code);\n          })));\n          countries = newCountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n            return _objectSpread({\n              cca2: cca2\n            }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n              name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n            }));\n          }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries));\n          return _context6.abrupt(\"return\", countries);\n\n        case 18:\n          _countries = CountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n            return _objectSpread({\n              cca2: cca2\n            }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n              name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n            }));\n          }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries)).sort(function (country1, country2) {\n            return country1.name.localeCompare(country2.name);\n          });\n          return _context6.abrupt(\"return\", _countries);\n\n        case 20:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nvar DEFAULT_FUSE_OPTION = {\n  shouldSort: true,\n  threshold: 0.3,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n  keys: ['name', 'cca2', 'callingCode']\n};\nvar fuse;\nexport var search = function search() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_FUSE_OPTION;\n\n  if (data.length === 0) {\n    return [];\n  }\n\n  if (!fuse) {\n    fuse = new Fuse(data, options);\n  }\n\n  if (filter && filter !== '') {\n    var result = fuse.search(filter);\n    return result;\n  } else {\n    return data;\n  }\n};\n\nvar uniq = function uniq(arr) {\n  return Array.from(new Set(arr));\n};\n\nexport var getLetters = function getLetters(countries) {\n  return uniq(countries.map(function (country) {\n    return country.name.substr(0, 1).toLocaleUpperCase();\n  }).sort(function (l1, l2) {\n    return l1.localeCompare(l2);\n  }));\n};\nexport var getCountryInfoAsync = function _callee7(_ref) {\n  var countryCode, translation, countryName, currency, callingCode;\n  return _regeneratorRuntime.async(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          countryCode = _ref.countryCode, translation = _ref.translation;\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(getCountryNameAsync(countryCode, translation || 'common'));\n\n        case 3:\n          countryName = _context7.sent;\n          _context7.next = 6;\n          return _regeneratorRuntime.awrap(getCountryCurrencyAsync(countryCode));\n\n        case 6:\n          currency = _context7.sent;\n          _context7.next = 9;\n          return _regeneratorRuntime.awrap(getCountryCallingCodeAsync(countryCode));\n\n        case 9:\n          callingCode = _context7.sent;\n          return _context7.abrupt(\"return\", {\n            countryName: countryName,\n            currency: currency,\n            callingCode: callingCode\n          });\n\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["../src/CountryService.ts"],"names":["imageJsonUrl","localData","emojiCountries","imageCountries","loadDataAsync","dataType","FlagType","EMOJI","data","fetch","response","resolve","require","getEmojiFlagAsync","countryCode","countries","getImageFlagAsync","getCountryNameAsync","translation","getCountryCallingCodeAsync","getCountryCurrencyAsync","isCountryPresent","isRegion","region","country","isSubregion","subregion","isIncluded","countryCodes","isExcluded","excludeCountries","getCountriesAsync","preferredCountries","withAlphaFilter","countriesRaw","newCountryCodeList","CountryCodeList","cca2","name","country1","country2","DEFAULT_FUSE_OPTION","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","search","filter","options","fuse","result","uniq","Array","getLetters","l1","getCountryInfoAsync","countryName","currency","callingCode"],"mappings":"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","sourceRoot":"","sourcesContent":["import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{FlagType,CountryCodeList}from\"./types\";import Fuse from'fuse.js';var imageJsonUrl='https://xcarpentier.github.io/react-native-country-picker-modal/countries/';var localData={emojiCountries:undefined,imageCountries:undefined};export var loadDataAsync=function(data){return function(){var dataType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:FlagType.EMOJI;return new Promise(function(resolve,reject){switch(dataType){case FlagType.FLAT:if(!data.imageCountries){fetch(imageJsonUrl).then(function(response){return response.json();}).then(function(remoteData){data.imageCountries=remoteData;resolve(data.imageCountries);}).catch(reject);}else{resolve(data.imageCountries);}break;default:if(!data.emojiCountries){data.emojiCountries=require(\"./assets/data/countries-emoji.json\");resolve(data.emojiCountries);}else{resolve(data.emojiCountries);}break;}});};}(localData);export var getEmojiFlagAsync=function _callee(){var countryCode,countries,_args=arguments;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:countryCode=_args.length>0&&_args[0]!==undefined?_args[0]:'FR';_context.next=3;return _regeneratorRuntime.awrap(loadDataAsync());case 3:countries=_context.sent;if(countries){_context.next=6;break;}throw new Error('Unable to find emoji because emojiCountries is undefined');case 6:return _context.abrupt(\"return\",countries[countryCode].flag);case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);};export var getImageFlagAsync=function _callee2(){var countryCode,countries,_args2=arguments;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=_args2.length>0&&_args2[0]!==undefined?_args2[0]:'FR';_context2.next=3;return _regeneratorRuntime.awrap(loadDataAsync(FlagType.FLAT));case 3:countries=_context2.sent;if(countries){_context2.next=6;break;}throw new Error('Unable to find image because imageCountries is undefined');case 6:return _context2.abrupt(\"return\",countries[countryCode].flag);case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);};export var getCountryNameAsync=function _callee3(){var countryCode,translation,countries,_args3=arguments;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:countryCode=_args3.length>0&&_args3[0]!==undefined?_args3[0]:'FR';translation=_args3.length>1&&_args3[1]!==undefined?_args3[1]:'common';_context3.next=4;return _regeneratorRuntime.awrap(loadDataAsync());case 4:countries=_context3.sent;if(countries){_context3.next=7;break;}throw new Error('Unable to find image because imageCountries is undefined');case 7:return _context3.abrupt(\"return\",countries[countryCode].name?countries[countryCode].name[translation]:countries[countryCode].name['common']);case 8:case\"end\":return _context3.stop();}}},null,null,null,Promise);};export var getCountryCallingCodeAsync=function _callee4(countryCode){var countries;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(loadDataAsync());case 2:countries=_context4.sent;if(countries){_context4.next=5;break;}throw new Error('Unable to find image because imageCountries is undefined');case 5:return _context4.abrupt(\"return\",countries[countryCode].callingCode[0]);case 6:case\"end\":return _context4.stop();}}},null,null,null,Promise);};export var getCountryCurrencyAsync=function _callee5(countryCode){var countries;return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regeneratorRuntime.awrap(loadDataAsync());case 2:countries=_context5.sent;if(countries){_context5.next=5;break;}throw new Error('Unable to find image because imageCountries is undefined');case 5:return _context5.abrupt(\"return\",countries[countryCode].currency[0]);case 6:case\"end\":return _context5.stop();}}},null,null,null,Promise);};var isCountryPresent=function isCountryPresent(countries){return function(countryCode){return!!countries[countryCode];};};var isRegion=function isRegion(region){return function(country){return region?country.region===region:true;};};var isSubregion=function isSubregion(subregion){return function(country){return subregion?country.subregion===subregion:true;};};var isIncluded=function isIncluded(countryCodes){return function(country){return countryCodes&&countryCodes.length>0?countryCodes.includes(country.cca2):true;};};var isExcluded=function isExcluded(excludeCountries){return function(country){return excludeCountries&&excludeCountries.length>0?!excludeCountries.includes(country.cca2):true;};};export var getCountriesAsync=function _callee6(flagType){var translation,region,subregion,countryCodes,excludeCountries,preferredCountries,withAlphaFilter,countriesRaw,newCountryCodeList,countries,_countries,_args6=arguments;return _regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:translation=_args6.length>1&&_args6[1]!==undefined?_args6[1]:'common';region=_args6.length>2?_args6[2]:undefined;subregion=_args6.length>3?_args6[3]:undefined;countryCodes=_args6.length>4?_args6[4]:undefined;excludeCountries=_args6.length>5?_args6[5]:undefined;preferredCountries=_args6.length>6?_args6[6]:undefined;withAlphaFilter=_args6.length>7?_args6[7]:undefined;_context6.next=9;return _regeneratorRuntime.awrap(loadDataAsync(flagType));case 9:countriesRaw=_context6.sent;if(countriesRaw){_context6.next=12;break;}return _context6.abrupt(\"return\",[]);case 12:if(!(preferredCountries&&!withAlphaFilter)){_context6.next=18;break;}newCountryCodeList=[].concat(_toConsumableArray(preferredCountries),_toConsumableArray(CountryCodeList.filter(function(code){return!preferredCountries.includes(code);})));countries=newCountryCodeList.filter(isCountryPresent(countriesRaw)).map(function(cca2){return _objectSpread({cca2:cca2},_objectSpread(_objectSpread({},countriesRaw[cca2]),{},{name:countriesRaw[cca2].name[translation]||countriesRaw[cca2].name['common']}));}).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries));return _context6.abrupt(\"return\",countries);case 18:_countries=CountryCodeList.filter(isCountryPresent(countriesRaw)).map(function(cca2){return _objectSpread({cca2:cca2},_objectSpread(_objectSpread({},countriesRaw[cca2]),{},{name:countriesRaw[cca2].name[translation]||countriesRaw[cca2].name['common']}));}).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries)).sort(function(country1,country2){return country1.name.localeCompare(country2.name);});return _context6.abrupt(\"return\",_countries);case 20:case\"end\":return _context6.stop();}}},null,null,null,Promise);};var DEFAULT_FUSE_OPTION={shouldSort:true,threshold:0.3,location:0,distance:100,maxPatternLength:32,minMatchCharLength:1,keys:['name','cca2','callingCode']};var fuse;export var search=function search(){var filter=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_FUSE_OPTION;if(data.length===0){return[];}if(!fuse){fuse=new Fuse(data,options);}if(filter&&filter!==''){var result=fuse.search(filter);return result;}else{return data;}};var uniq=function uniq(arr){return Array.from(new Set(arr));};export var getLetters=function getLetters(countries){return uniq(countries.map(function(country){return country.name.substr(0,1).toLocaleUpperCase();}).sort(function(l1,l2){return l1.localeCompare(l2);}));};export var getCountryInfoAsync=function _callee7(_ref){var countryCode,translation,countryName,currency,callingCode;return _regeneratorRuntime.async(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:countryCode=_ref.countryCode,translation=_ref.translation;_context7.next=3;return _regeneratorRuntime.awrap(getCountryNameAsync(countryCode,translation||'common'));case 3:countryName=_context7.sent;_context7.next=6;return _regeneratorRuntime.awrap(getCountryCurrencyAsync(countryCode));case 6:currency=_context7.sent;_context7.next=9;return _regeneratorRuntime.awrap(getCountryCallingCodeAsync(countryCode));case 9:callingCode=_context7.sent;return _context7.abrupt(\"return\",{countryName:countryName,currency:currency,callingCode:callingCode});case 11:case\"end\":return _context7.stop();}}},null,null,null,Promise);};"]},"metadata":{},"sourceType":"module"}