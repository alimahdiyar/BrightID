{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Flag = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Emoji = require(\"./Emoji\");\n\nvar _CountryContext = require(\"./CountryContext\");\n\nvar _reactAsyncHook = require(\"react-async-hook\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    marginRight: 10\n  },\n  emojiFlag: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1 / _reactNative.PixelRatio.get(),\n    borderColor: 'transparent',\n    backgroundColor: 'transparent'\n  },\n  imageFlag: {\n    resizeMode: 'contain',\n    width: 25,\n    height: 19,\n    borderWidth: 1 / _reactNative.PixelRatio.get(),\n    opacity: 0.8\n  }\n});\n\nvar ImageFlag = (0, _react.memo)(function (_ref) {\n  var countryCode = _ref.countryCode,\n      flagSize = _ref.flagSize;\n\n  var _useContext = (0, _CountryContext.useContext)(),\n      getImageFlagAsync = _useContext.getImageFlagAsync;\n\n  var asyncResult = (0, _reactAsyncHook.useAsync)(getImageFlagAsync, [countryCode]);\n\n  if (asyncResult.loading) {\n    return _react.default.createElement(_reactNative.ActivityIndicator, {\n      size: 'small'\n    });\n  }\n\n  return _react.default.createElement(_reactNative.Image, {\n    resizeMode: 'contain',\n    style: [styles.imageFlag, {\n      borderColor: 'transparent',\n      height: flagSize\n    }],\n    source: {\n      uri: asyncResult.result\n    }\n  });\n});\nvar EmojiFlag = (0, _react.memo)(function (_ref2) {\n  var countryCode = _ref2.countryCode,\n      flagSize = _ref2.flagSize;\n\n  var _useContext2 = (0, _CountryContext.useContext)(),\n      getEmojiFlagAsync = _useContext2.getEmojiFlagAsync;\n\n  var asyncResult = (0, _reactAsyncHook.useAsync)(getEmojiFlagAsync, [countryCode]);\n\n  if (asyncResult.loading) {\n    return _react.default.createElement(_reactNative.ActivityIndicator, {\n      size: 'small'\n    });\n  }\n\n  return _react.default.createElement(_reactNative.Text, {\n    style: [styles.emojiFlag, {\n      fontSize: flagSize\n    }],\n    allowFontScaling: false\n  }, _react.default.createElement(_Emoji.Emoji, (0, _extends2.default)({}, {\n    name: asyncResult.result\n  })));\n});\n\nvar Flag = function Flag(_ref3) {\n  var countryCode = _ref3.countryCode,\n      withEmoji = _ref3.withEmoji,\n      withFlagButton = _ref3.withFlagButton,\n      flagSize = _ref3.flagSize;\n  return withFlagButton ? _react.default.createElement(_reactNative.View, {\n    style: styles.container\n  }, withEmoji ? _react.default.createElement(EmojiFlag, (0, _extends2.default)({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  })) : _react.default.createElement(ImageFlag, (0, _extends2.default)({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  }))) : null;\n};\n\nexports.Flag = Flag;\nFlag.defaultProps = {\n  withEmoji: true,\n  withFlagButton: true\n};","map":{"version":3,"sources":["../src/Flag.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { memo } from 'react';\nimport { Emoji } from './Emoji';\nimport { useContext } from './CountryContext';\nimport { useAsync } from 'react-async-hook';\nimport { Image, StyleSheet, PixelRatio, Text, View, ActivityIndicator, } from 'react-native';\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 30,\n        marginRight: 10,\n    },\n    emojiFlag: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1 / PixelRatio.get(),\n        borderColor: 'transparent',\n        backgroundColor: 'transparent',\n    },\n    imageFlag: {\n        resizeMode: 'contain',\n        width: 25,\n        height: 19,\n        borderWidth: 1 / PixelRatio.get(),\n        opacity: 0.8,\n    },\n});\nconst ImageFlag = memo(({ countryCode, flagSize }) => {\n    const { getImageFlagAsync } = useContext();\n    const asyncResult = useAsync(getImageFlagAsync, [countryCode]);\n    if (asyncResult.loading) {\n        return React.createElement(ActivityIndicator, { size: 'small' });\n    }\n    return (React.createElement(Image, { resizeMode: 'contain', style: [\n            styles.imageFlag,\n            { borderColor: 'transparent', height: flagSize },\n        ], source: { uri: asyncResult.result } }));\n});\nconst EmojiFlag = memo(({ countryCode, flagSize }) => {\n    const { getEmojiFlagAsync } = useContext();\n    const asyncResult = useAsync(getEmojiFlagAsync, [countryCode]);\n    if (asyncResult.loading) {\n        return React.createElement(ActivityIndicator, { size: 'small' });\n    }\n    return (React.createElement(Text, { style: [styles.emojiFlag, { fontSize: flagSize }], allowFontScaling: false },\n        React.createElement(Emoji, Object.assign({}, { name: asyncResult.result }))));\n});\nexport const Flag = ({ countryCode, withEmoji, withFlagButton, flagSize, }) => withFlagButton ? (React.createElement(View, { style: styles.container }, withEmoji ? (React.createElement(EmojiFlag, Object.assign({}, { countryCode, flagSize }))) : (React.createElement(ImageFlag, Object.assign({}, { countryCode, flagSize }))))) : null;\nFlag.defaultProps = {\n    withEmoji: true,\n    withFlagButton: true,\n};\n//# sourceMappingURL=Flag.js.map"]},"metadata":{},"sourceType":"script"}