{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { navigate } from \"../NavigationService\";\nimport { useSelector } from \"../store\";\nimport { ORANGE, WHITE } from \"../theme/colors\";\nimport { fontSize } from \"../theme/fonts\";\nimport { TWENTY_TWO, SIXTY } from \"../theme/sizes\";\nimport BackArrow from \"../components/Icons/BackArrow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var headerTitleStyle = {\n  fontFamily: 'Poppins-Bold',\n  fontSize: fontSize[20],\n  color: WHITE\n};\nexport var headerOptions = {\n  headerTitleStyle: headerTitleStyle,\n  headerStyle: {\n    backgroundColor: ORANGE,\n    shadowRadius: 0,\n    elevation: 0,\n    shadowOffset: {\n      height: 0\n    }\n  },\n  headerTintColor: WHITE,\n  headerTitleAlign: 'left',\n  headerBackTitleVisible: false,\n  headerBackImage: function headerBackImage() {\n    return _jsx(View, {\n      style: {\n        width: SIXTY,\n        alignItems: 'center'\n      },\n      children: _jsx(BackArrow, {\n        height: TWENTY_TWO,\n        color: WHITE\n      })\n    });\n  }\n};\nexport var NavHome = function NavHome() {\n  return _jsx(TouchableOpacity, {\n    testID: \"NavHomeBtn\",\n    style: {\n      width: SIXTY,\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      navigate('Home');\n    },\n    children: _jsx(BackArrow, {\n      height: TWENTY_TWO,\n      color: WHITE\n    })\n  });\n};\nexport var AnimatedHeaderTitle = function AnimatedHeaderTitle(_ref) {\n  var text = _ref.text;\n  var searchOpen = useSelector(function (state) {\n    return state.connections.searchOpen || state.groups.searchOpen;\n  });\n  var fadeAnim = useRef(new Animated.Value(1)).current;\n  useEffect(function () {\n    Animated.timing(fadeAnim, {\n      toValue: searchOpen ? 0 : 1,\n      useNativeDriver: true,\n      duration: 600\n    }).start();\n  }, [fadeAnim, searchOpen]);\n  return _jsx(Animated.View, {\n    style: {\n      opacity: fadeAnim\n    },\n    children: _jsx(Text, {\n      style: headerTitleStyle,\n      children: text\n    })\n  });\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/helpers.tsx"],"names":["headerTitleStyle","fontFamily","fontSize","color","headerOptions","headerStyle","backgroundColor","shadowRadius","elevation","shadowOffset","height","headerTintColor","headerTitleAlign","headerBackTitleVisible","headerBackImage","width","alignItems","NavHome","navigate","AnimatedHeaderTitle","text","searchOpen","useSelector","state","fadeAnim","useRef","Animated","useEffect","toValue","useNativeDriver","duration","opacity"],"mappings":"AAAA,SAAA,SAAA,EAAA,MAAA,QAAA,OAAA;;;;;AAGA,SAAA,QAAA;AACA,SAAA,WAAA;AACA,SAAA,MAAA,EAAA,KAAA;AACA,SAAA,QAAA;AACA,SAAA,UAAA,EAAA,KAAA;AACA,OAAA,SAAA;;AAEA,OAAO,IAAMA,gBAAgB,GAAG;EAC9BC,UAAU,EADoB,cAAA;EAE9BC,QAAQ,EAAEA,QAAQ,CAFY,EAEZ,CAFY;EAG9BC,KAAK,EAHA;AAAyB,CAAzB;AAMP,OAAO,IAAMC,aAAqC,GAAG;EACnDJ,gBAAgB,EADmC,gBAAA;EAGnDK,WAAW,EAAE;IACXC,eAAe,EADJ,MAAA;IAEXC,YAAY,EAFD,CAAA;IAGXC,SAAS,EAHE,CAAA;IAIXC,YAAY,EAAE;MACZC,MAAM,EARyC;IAOnC;EAJH,CAHsC;EAWnDC,eAAe,EAXoC,KAAA;EAYnDC,gBAAgB,EAZmC,MAAA;EAanDC,sBAAsB,EAb6B,KAAA;EAcnDC,eAAe,EAAE,SAAA,eAAA,GAAA;IAAA,OACf,IAAA,CAAA,IAAA,EAAA;MACE,KAAK,EAAE;QACLC,KAAK,EADA,KAAA;QAELC,UAAU,EAHd;MACS,CADT;MAAA,QAAA,EAME,IAAA,CAAA,SAAA,EAAA;QAAW,MAAM,EAAjB,UAAA;QAA+B,KAAK,EAPvB;MAOb,CAAA;IANF,CAAA,CADe;EAdZ;AAA8C,CAA9C;AA0BP,OAAO,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,GAAU;EAAA,OACrB,IAAA,CAAA,gBAAA,EAAA;IACE,MAAM,EADR,YAAA;IAEE,KAAK,EAAE;MACLF,KAAK,EADA,KAAA;MAELC,UAAU,EAJd;IAES,CAFT;IAME,OAAO,EAAE,SAAA,OAAA,GAAM;MACbE,QAAQ,CAARA,MAAQ,CAARA;IAPJ,CAAA;IAAA,QAAA,EAUE,IAAA,CAAA,SAAA,EAAA;MAAW,MAAM,EAAjB,UAAA;MAA+B,KAAK,EAXjB;IAWnB,CAAA;EAVF,CAAA,CADqB;AAAhB,CAAA;AAeP,OAAO,IAAMC,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,IAAtBA,EAAoC;EAAXC,IAAAA,IAAW,GAAA,IAAA,CAAXA,IAAAA;EACpC,IAAMC,UAAU,GAAGC,WAAW,CAC5B,UAAA,KAAA,EAAA;IAAA,OAAkBC,KAAK,CAALA,WAAAA,CAAAA,UAAAA,IAAgCA,KAAK,CAALA,MAAAA,CAAlD,UAAA;EADF,CAA8B,CAA9B;EAGA,IAAMC,QAAQ,GAAGC,MAAM,CAAC,IAAIC,QAAQ,CAAZ,KAAA,CAAPD,CAAO,CAAD,CAANA,CAAjB,OAAA;EACAE,SAAS,CAAC,YAAM;IACdD,QAAQ,CAARA,MAAAA,CAAAA,QAAAA,EAA0B;MACxBE,OAAO,EAAEP,UAAU,GAAA,CAAA,GADK,CAAA;MAExBQ,eAAe,EAFS,IAAA;MAGxBC,QAAQ,EAHVJ;IAA0B,CAA1BA,EAAAA,KAAAA;EADO,CAAA,EAMN,CAAA,QAAA,EANHC,UAMG,CANM,CAATA;EAQA,OACE,IAAA,CAAC,QAAD,CAAA,IAAA,EAAA;IAAe,KAAK,EAAE;MAAEI,OAAO,EAA/B;IAAsB,CAAtB;IAAA,QAAA,EACE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAX,gBAAA;MAAA,QAAA,EAFJ;IAEI,CAAA;EADF,CAAA,CADF;AAbK,CAAA","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Animated, Text, TouchableOpacity, View } from 'react-native';\nimport { StackNavigationOptions } from '@react-navigation/stack';\nimport { navigate } from '@/NavigationService';\nimport { useSelector } from '@/store';\nimport { ORANGE, WHITE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { TWENTY_TWO, SIXTY } from '@/theme/sizes';\nimport BackArrow from '@/components/Icons/BackArrow';\n\nexport const headerTitleStyle = {\n  fontFamily: 'Poppins-Bold',\n  fontSize: fontSize[20],\n  color: WHITE,\n};\n\nexport const headerOptions: StackNavigationOptions = {\n  headerTitleStyle,\n  // @ts-ignore\n  headerStyle: {\n    backgroundColor: ORANGE,\n    shadowRadius: 0,\n    elevation: 0,\n    shadowOffset: {\n      height: 0,\n    },\n  },\n  headerTintColor: WHITE,\n  headerTitleAlign: 'left',\n  headerBackTitleVisible: false,\n  headerBackImage: () => (\n    <View\n      style={{\n        width: SIXTY,\n        alignItems: 'center',\n      }}\n    >\n      <BackArrow height={TWENTY_TWO} color={WHITE} />\n    </View>\n  ),\n};\n\nexport const NavHome = () => (\n  <TouchableOpacity\n    testID=\"NavHomeBtn\"\n    style={{\n      width: SIXTY,\n      alignItems: 'center',\n    }}\n    onPress={() => {\n      navigate('Home');\n    }}\n  >\n    <BackArrow height={TWENTY_TWO} color={WHITE} />\n  </TouchableOpacity>\n);\n\nexport const AnimatedHeaderTitle = ({ text }) => {\n  const searchOpen = useSelector(\n    (state: State) => state.connections.searchOpen || state.groups.searchOpen,\n  );\n  const fadeAnim = useRef(new Animated.Value(1)).current;\n  useEffect(() => {\n    Animated.timing(fadeAnim, {\n      toValue: searchOpen ? 0 : 1,\n      useNativeDriver: true,\n      duration: 600,\n    }).start();\n  }, [fadeAnim, searchOpen]);\n\n  return (\n    <Animated.View style={{ opacity: fadeAnim }}>\n      <Text style={headerTitleStyle}>{text}</Text>\n    </Animated.View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}