{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar packageJson = require(\"./package.json\");\n\nmodule.exports = {\n  request: function request(verb, url, requestBody, callback) {\n    return function _callee() {\n      var headers, response, statusCode, body;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (typeof requestBody === \"function\") {\n                callback = requestBody;\n                requestBody = null;\n              }\n\n              headers = {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-CodePush-Plugin-Name\": packageJson.name,\n                \"X-CodePush-Plugin-Version\": packageJson.version,\n                \"X-CodePush-SDK-Version\": packageJson.dependencies[\"code-push\"]\n              };\n\n              if (requestBody && typeof requestBody === \"object\") {\n                requestBody = JSON.stringify(requestBody);\n              }\n\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: getHttpMethodName(verb),\n                headers: headers,\n                body: requestBody\n              }));\n\n            case 6:\n              response = _context.sent;\n              statusCode = response.status;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(response.text());\n\n            case 10:\n              body = _context.sent;\n              callback(null, {\n                statusCode: statusCode,\n                body: body\n              });\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              callback(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 14]], Promise);\n    }();\n  }\n};\n\nfunction getHttpMethodName(verb) {\n  return [\"GET\", \"HEAD\", \"POST\", \"PUT\", \"DELETE\", \"TRACE\", \"OPTIONS\", \"CONNECT\", \"PATCH\"][verb];\n}","map":{"version":3,"names":["packageJson","require","module","exports","request","verb","url","requestBody","callback","headers","name","version","dependencies","JSON","stringify","fetch","method","getHttpMethodName","body","response","statusCode","status","text"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-code-push/request-fetch-adapter.js"],"sourcesContent":["const packageJson = require(\"./package.json\");\n\nmodule.exports = {\n  async request(verb, url, requestBody, callback) {\n    if (typeof requestBody === \"function\") {\n      callback = requestBody;\n      requestBody = null;\n    }\n\n    const headers = {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-CodePush-Plugin-Name\": packageJson.name,\n      \"X-CodePush-Plugin-Version\": packageJson.version,\n      \"X-CodePush-SDK-Version\": packageJson.dependencies[\"code-push\"]\n    };\n\n    if (requestBody && typeof requestBody === \"object\") {\n      requestBody = JSON.stringify(requestBody);\n    }\n\n    try {\n      const response = await fetch(url, {\n        method: getHttpMethodName(verb),\n        headers: headers,\n        body: requestBody\n      });\n\n      const statusCode = response.status;\n      const body = await response.text();\n      callback(null, { statusCode, body });\n    } catch (err) {\n      callback(err);\n    }\n  }\n};\n\nfunction getHttpMethodName(verb) {\n  // Note: This should stay in sync with the enum definition in\n  // https://github.com/microsoft/code-push/blob/master/sdk/script/acquisition-sdk.ts#L6\n  return [\n    \"GET\",\n    \"HEAD\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"TRACE\",\n    \"OPTIONS\",\n    \"CONNECT\",\n    \"PATCH\"\n  ][verb];\n}"],"mappings":";;AAAA,IAAMA,WAAW,GAAGC,OAAO,kBAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACTC,OADS,mBACDC,IADC,EACKC,GADL,EACUC,WADV,EACuBC,QADvB,EACiC;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAC9C,IAAI,OAAOD,WAAP,KAAuB,UAA3B,EAAuC;gBACrCC,QAAQ,GAAGD,WAAX;gBACAA,WAAW,GAAG,IAAd;cACD;;cAEKE,OANwC,GAM9B;gBACd,UAAU,kBADI;gBAEd,gBAAgB,kBAFF;gBAGd,0BAA0BT,WAAW,CAACU,IAHxB;gBAId,6BAA6BV,WAAW,CAACW,OAJ3B;gBAKd,0BAA0BX,WAAW,CAACY,YAAZ,CAAyB,WAAzB;cALZ,CAN8B;;cAc9C,IAAIL,WAAW,IAAI,OAAOA,WAAP,KAAuB,QAA1C,EAAoD;gBAClDA,WAAW,GAAGM,IAAI,CAACC,SAAL,CAAeP,WAAf,CAAd;cACD;;cAhB6C;cAAA;cAAA,iCAmBrBQ,KAAK,CAACT,GAAD,EAAM;gBAChCU,MAAM,EAAEC,iBAAiB,CAACZ,IAAD,CADO;gBAEhCI,OAAO,EAAEA,OAFuB;gBAGhCS,IAAI,EAAEX;cAH0B,CAAN,CAnBgB;;YAAA;cAmBtCY,QAnBsC;cAyBtCC,UAzBsC,GAyBzBD,QAAQ,CAACE,MAzBgB;cAAA;cAAA,iCA0BzBF,QAAQ,CAACG,IAAT,EA1ByB;;YAAA;cA0BtCJ,IA1BsC;cA2B5CV,QAAQ,CAAC,IAAD,EAAO;gBAAEY,UAAU,EAAVA,UAAF;gBAAcF,IAAI,EAAJA;cAAd,CAAP,CAAR;cA3B4C;cAAA;;YAAA;cAAA;cAAA;cA6B5CV,QAAQ,aAAR;;YA7B4C;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EA+B/C;AAhCc,CAAjB;;AAmCA,SAASS,iBAAT,CAA2BZ,IAA3B,EAAiC;EAG/B,OAAO,CACL,KADK,EAEL,MAFK,EAGL,MAHK,EAIL,KAJK,EAKL,QALK,EAML,OANK,EAOL,SAPK,EAQL,SARK,EASL,OATK,EAULA,IAVK,CAAP;AAWD"},"metadata":{},"sourceType":"script"}