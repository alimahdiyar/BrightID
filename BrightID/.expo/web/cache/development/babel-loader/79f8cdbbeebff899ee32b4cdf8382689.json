{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useMemo, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { SvgXml } from 'react-native-svg';\nimport Clipboard from '@react-native-community/clipboard';\nimport UnverifiedSticker from \"../Icons/UnverifiedSticker\";\nimport GroupAvatar from \"../Icons/GroupAvatar\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { ORANGE, BLUE, WHITE, BLACK, DARKER_GREY, DARK_BLUE, LIGHT_GREY, DARK_GREEN } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { connection_levels, report_sources } from \"../../utils/constants\";\nimport Chevron from \"../Icons/Chevron\";\nimport TrustLevelView from \"./TrustLevelView\";\nimport { useSelector } from \"../../store\";\nimport { SocialMediaShareActionType, SocialMediaType } from \"../EditProfile/socialMediaVariations\";\nimport { selectAllSocialMediaVariationsByType } from \"../../reducer/socialMediaVariationSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ConnectionScreenSectionKeys;\n\n(function (ConnectionScreenSectionKeys) {\n  ConnectionScreenSectionKeys[\"CONNECTIONS\"] = \"connections\";\n  ConnectionScreenSectionKeys[\"GROUPS\"] = \"groups\";\n  ConnectionScreenSectionKeys[\"RECOVERY_CONNECTIONS\"] = \"recoveryConnections\";\n  ConnectionScreenSectionKeys[\"DUPLICATES\"] = \"duplicates\";\n  ConnectionScreenSectionKeys[\"SOCIAL_MEDIA\"] = \"socialMedia\";\n})(ConnectionScreenSectionKeys || (ConnectionScreenSectionKeys = {}));\n\nvar isPhoneNumber = function isPhoneNumber(profile) {\n  var c = profile[0];\n  return c === '+' || c >= '0' && c <= '9';\n};\n\nfunction ConnectionScreen(props) {\n  var _connection$photo;\n\n  var connection = props.connection,\n      verificationsTexts = props.verificationsTexts,\n      connectedAt = props.connectedAt,\n      mutualGroups = props.mutualGroups,\n      mutualConnections = props.mutualConnections,\n      recoveryConnections = props.recoveryConnections,\n      loading = props.loading,\n      possibleDuplicates = props.possibleDuplicates;\n  var navigation = useNavigation();\n  var selectSocialMediaVariations = useMemo(selectAllSocialMediaVariationsByType, []);\n  var socialMediaVariations = useSelector(function (state) {\n    return selectSocialMediaVariations(state, SocialMediaType.SOCIAL_PROFILE);\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      groupsCollapsed = _useState2[0],\n      setGroupsCollapsed = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connectionsCollapsed = _useState4[0],\n      setConnectionsCollapsed = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      recoveryConnectionsCollapsed = _useState6[0],\n      setRecoveryConnectionsCollapsed = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      possibleDuplicatesCollapsed = _useState8[0],\n      setPossibleDuplicatesCollapsed = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      socialMediaCollapsed = _useState10[0],\n      setSocialMediaCollapsed = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      connectionSocialMedia = _useState12[0],\n      setConnectionSocialMedia = _useState12[1];\n\n  useEffect(function () {\n    var socialMediaOnConnectionPage = [];\n\n    var _loop = function _loop(i) {\n      var _connection$socialMed, _connection$socialMed2;\n\n      var element = socialMediaVariations[i];\n      var profile = (_connection$socialMed = connection.socialMedia) == null ? void 0 : (_connection$socialMed2 = _connection$socialMed.find(function (s) {\n        return s.id === element.id;\n      })) == null ? void 0 : _connection$socialMed2.profile;\n\n      if (profile) {\n        var shareActionType = element.shareActionType;\n\n        if (shareActionType === SocialMediaShareActionType.COPY_IF_PHONE_LINK_IF_USERNAME) {\n          if (isPhoneNumber(profile)) {\n            shareActionType = SocialMediaShareActionType.COPY;\n          } else {\n            shareActionType = SocialMediaShareActionType.OPEN_LINK;\n          }\n        }\n\n        socialMediaOnConnectionPage.push({\n          id: element.id,\n          icon: element.icon,\n          shareActionType: shareActionType,\n          shareActionData: element.shareActionDataFormat.replace('%%PROFILE%%', profile)\n        });\n      }\n    };\n\n    for (var i = 0; i < socialMediaVariations.length; i++) {\n      _loop(i);\n    }\n\n    setConnectionSocialMedia(socialMediaOnConnectionPage);\n  }, [connection, socialMediaVariations]);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var toggleSection = function toggleSection(key) {\n    switch (key) {\n      case ConnectionScreenSectionKeys.CONNECTIONS:\n        setConnectionsCollapsed(!connectionsCollapsed);\n        break;\n\n      case ConnectionScreenSectionKeys.GROUPS:\n        setGroupsCollapsed(!groupsCollapsed);\n        break;\n\n      case ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS:\n        setRecoveryConnectionsCollapsed(!recoveryConnectionsCollapsed);\n        break;\n\n      case ConnectionScreenSectionKeys.DUPLICATES:\n        setPossibleDuplicatesCollapsed(!possibleDuplicatesCollapsed);\n        break;\n\n      case ConnectionScreenSectionKeys.SOCIAL_MEDIA:\n        setSocialMediaCollapsed(!socialMediaCollapsed);\n        break;\n    }\n  };\n\n  var imageSource = {\n    uri: \"file://\" + photoDirectory() + \"/\" + (connection == null ? void 0 : (_connection$photo = connection.photo) == null ? void 0 : _connection$photo.filename)\n  };\n  var getSections = useMemo(function () {\n    var data = [{\n      title: t('connectionDetails.label.mutualConnections'),\n      data: connectionsCollapsed ? [] : mutualConnections,\n      key: ConnectionScreenSectionKeys.CONNECTIONS,\n      numEntries: mutualConnections.length\n    }, {\n      title: t('connectionDetails.label.mutualGroups'),\n      data: groupsCollapsed ? [] : mutualGroups,\n      key: ConnectionScreenSectionKeys.GROUPS,\n      numEntries: mutualGroups.length\n    }, {\n      title: t('connectionDetails.label.recoveryConnections'),\n      data: recoveryConnectionsCollapsed ? [] : recoveryConnections,\n      key: ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS,\n      numEntries: recoveryConnections.length\n    }, {\n      title: t('connectionDetails.label.possibleDuplicates'),\n      data: possibleDuplicatesCollapsed ? [] : possibleDuplicates,\n      key: ConnectionScreenSectionKeys.DUPLICATES,\n      numEntries: possibleDuplicates.length\n    }, {\n      title: t('connectionDetails.label.socialMedia'),\n      data: socialMediaCollapsed ? [] : [connectionSocialMedia],\n      key: ConnectionScreenSectionKeys.SOCIAL_MEDIA,\n      numEntries: connectionSocialMedia.filter(function (s) {\n        return !!s.shareActionData;\n      }).length\n    }];\n    return data;\n  }, [t, connectionsCollapsed, mutualConnections, groupsCollapsed, mutualGroups, recoveryConnectionsCollapsed, recoveryConnections, possibleDuplicatesCollapsed, possibleDuplicates, connectionSocialMedia, socialMediaCollapsed]);\n\n  var renderSticker = function renderSticker() {\n    if (loading) {\n      return _jsx(ActivityIndicator, {\n        size: \"small\",\n        color: DARKER_GREY,\n        animating: true\n      });\n    } else {\n      return verificationsTexts.length > 0 ? verificationsTexts.map(function (verificationText, i) {\n        return _jsx(View, {\n          style: styles.verificationBox,\n          children: _jsx(Text, {\n            style: styles.verificationText,\n            children: verificationText\n          }, \"verificationText-\" + i)\n        }, \"verificationView-\" + i);\n      }) : _jsx(UnverifiedSticker, {\n        width: 100,\n        height: 19\n      });\n    }\n  };\n\n  var connectionHeader = _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.profile,\n      children: [_jsxs(View, {\n        style: styles.photoContainer,\n        children: [_jsx(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            navigation.navigate('FullScreenPhoto', {\n              photo: connection.photo\n            });\n          },\n          children: _jsx(Image, {\n            source: imageSource,\n            style: styles.profilePhoto,\n            resizeMode: \"cover\",\n            onError: function onError(e) {\n              console.log(e);\n            },\n            accessible: true,\n            accessibilityLabel: t('common.accessibilityLabel.userPhoto')\n          })\n        }), _jsx(View, {\n          style: styles.connectionInfo,\n          children: _jsx(View, {\n            style: styles.connectionTimestamp,\n            children: _jsx(Text, {\n              style: styles.connectionTimestampText,\n              children: loading ? t('connectionDetails.tags.loading') : t('connectionDetails.tags.connectedAt', {\n                date: \"\" + moment(parseInt(String(connectedAt), 10)).fromNow()\n              })\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.nameContainer,\n        children: [_jsx(View, {\n          style: styles.nameLabel,\n          children: _jsx(Text, {\n            style: styles.name,\n            numberOfLines: 1,\n            children: connection.name\n          })\n        }), _jsx(View, {\n          style: styles.profileDivider\n        }), _jsx(View, {\n          style: styles.verificationsContainer,\n          children: renderSticker()\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.trustLevelContainer,\n      children: _jsx(TrustLevelView, {\n        level: connection.level,\n        connectionId: connection.id\n      })\n    })]\n  });\n\n  var connectionFooter = connection.level !== connection_levels.REPORTED ? _jsx(TouchableOpacity, {\n    testID: \"ReportBtn\",\n    style: styles.reportBtn,\n    onPress: function onPress() {\n      navigation.navigate('ReportReason', {\n        connectionId: connection.id,\n        connectionName: connection.name,\n        reporting: true,\n        source: report_sources.PROFILE\n      });\n    },\n    children: _jsx(Text, {\n      style: styles.reportBtnText,\n      children: t('connectionDetails.button.report')\n    })\n  }) : _jsx(TouchableOpacity, {\n    testID: \"UnReportBtn\",\n    style: styles.unReportBtn,\n    onPress: function onPress() {\n      navigation.navigate('ReportReason', {\n        connectionId: connection.id,\n        connectionName: connection.name,\n        reportReason: connection.reportReason,\n        reporting: false,\n        source: report_sources.PROFILE\n      });\n    },\n    children: _jsx(Text, {\n      style: styles.unReportBtnText,\n      children: t('connectionDetails.button.undoReport')\n    })\n  });\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index,\n        section = _ref.section;\n\n    if (section.key === ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS) {\n      return renderRecoveryItem({\n        item: item,\n        index: index\n      });\n    }\n\n    if (section.key === ConnectionScreenSectionKeys.SOCIAL_MEDIA) {\n      return renderSocialMediaVariations({\n        item: item,\n        index: index\n      });\n    }\n\n    var testID = section.key + \"-\" + index;\n    console.log(\"Rendering Section \" + section.key + \" item \" + index + \" (\" + item.name + \") - testID \" + testID);\n    return _jsxs(View, {\n      testID: testID,\n      style: styles.itemContainer,\n      children: [_jsx(View, {\n        style: styles.itemPhoto,\n        children: renderPhoto(item)\n      }), _jsx(View, {\n        style: styles.itemLabel,\n        children: _jsx(Text, {\n          style: styles.itemLabelText,\n          children: item.name\n        })\n      })]\n    });\n  };\n\n  var renderSocialMediaVariations = function renderSocialMediaVariations(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return _jsx(FlatList, {\n      style: styles.socialMediaVariations,\n      columnWrapperStyle: styles.socialMediaVariationsColumn,\n      data: item,\n      numColumns: 5,\n      renderItem: renderSocialMediaVariation,\n      keyExtractor: socialMediaVariationsKeyExtractor\n    });\n  };\n\n  var socialMediaVariationsKeyExtractor = function socialMediaVariationsKeyExtractor(item) {\n    return item.id;\n  };\n\n  var renderSocialMediaVariation = function renderSocialMediaVariation(_ref3) {\n    var item = _ref3.item;\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        if (item.shareActionData) {\n          var data = item.shareActionData;\n\n          if (item.shareActionType === SocialMediaShareActionType.OPEN_LINK) {\n            Linking.openURL(data);\n          } else if (item.shareActionType === SocialMediaShareActionType.COPY) {\n            Clipboard.setString(data);\n\n            if (Platform.OS === 'android') {\n              ToastAndroid.show(t('connectionDetails.text.copied'), ToastAndroid.LONG);\n            } else {\n              Alert.alert(t('connectionDetails.text.copied'));\n            }\n          }\n        }\n      },\n      children: _jsx(SvgXml, {\n        xml: item.icon,\n        width: DEVICE_LARGE ? 40 : 36,\n        height: DEVICE_LARGE ? 40 : 36\n      })\n    });\n  };\n\n  var renderRecoveryItem = function renderRecoveryItem(_ref4) {\n    var _item$conn;\n\n    var item = _ref4.item,\n        index = _ref4.index;\n    var testID = \"recoveryConnections-\" + index;\n    console.log(\"Rendering Section recoveryConnections item \" + index + \" (\" + item.id + \") - testID \" + testID);\n    var activeAfter = item.activeAfter ? \"(activates in \" + moment.duration(item.activeAfter, 'milliseconds').humanize() + \")\" : '';\n    var activeBefore = item.activeBefore ? \"(deactivates in \" + moment.duration(item.activeBefore, 'milliseconds').humanize() + \")\" : '';\n    return _jsxs(View, {\n      testID: testID,\n      style: styles.itemContainer,\n      children: [_jsx(View, {\n        style: styles.itemPhoto,\n        children: renderRecoveryPhoto(item.conn)\n      }), _jsx(View, {\n        style: styles.itemLabel,\n        children: _jsxs(Text, {\n          style: styles.itemLabelText,\n          children: [item != null && (_item$conn = item.conn) != null && _item$conn.name ? item.conn.name : t('connectionDetails.text.unkownRecoveryConnection'), ' ', activeAfter, \" \", activeBefore, ' ']\n        })\n      })]\n    });\n  };\n\n  var renderRecoveryPhoto = function renderRecoveryPhoto(item) {\n    var _item$photo;\n\n    var source = item != null && (_item$photo = item.photo) != null && _item$photo.filename ? {\n      uri: \"file://\" + photoDirectory() + \"/\" + item.photo.filename\n    } : require(\"../../static/default_profile.jpg\");\n    return _jsx(Image, {\n      source: source,\n      style: styles.photo,\n      resizeMode: \"cover\",\n      onError: function onError(e) {\n        console.log(e);\n      },\n      accessible: true,\n      accessibilityLabel: \"photo\"\n    });\n  };\n\n  var renderPhoto = function renderPhoto(item) {\n    var _item$photo2;\n\n    if (item != null && (_item$photo2 = item.photo) != null && _item$photo2.filename) {\n      return _jsx(Image, {\n        source: {\n          uri: \"file://\" + photoDirectory() + \"/\" + item.photo.filename\n        },\n        style: styles.photo,\n        resizeMode: \"cover\",\n        onError: function onError(e) {\n          console.log(e);\n        },\n        accessible: true,\n        accessibilityLabel: \"photo\"\n      });\n    } else {\n      return _jsx(GroupAvatar, {\n        width: DEVICE_LARGE ? 40 : 36,\n        height: DEVICE_LARGE ? 40 : 36\n      });\n    }\n  };\n\n  var renderSectionHeader = function renderSectionHeader(_ref5) {\n    var section = _ref5.section;\n    var collapsed;\n\n    switch (section.key) {\n      case ConnectionScreenSectionKeys.CONNECTIONS:\n        collapsed = connectionsCollapsed;\n        break;\n\n      case ConnectionScreenSectionKeys.GROUPS:\n        collapsed = groupsCollapsed;\n        break;\n\n      case ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS:\n        collapsed = recoveryConnectionsCollapsed;\n        break;\n\n      case ConnectionScreenSectionKeys.DUPLICATES:\n        collapsed = possibleDuplicatesCollapsed;\n        break;\n\n      case ConnectionScreenSectionKeys.SOCIAL_MEDIA:\n        collapsed = socialMediaCollapsed;\n        break;\n    }\n\n    return _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(View, {\n        style: styles.headerLabel,\n        children: _jsx(Text, {\n          style: styles.headerLabelText,\n          children: section.title\n        })\n      }), _jsxs(View, {\n        style: styles.headerContent,\n        children: [_jsx(View, {\n          style: styles.headerCount,\n          children: _jsx(Text, {\n            testID: section.key + \"-count\",\n            style: styles.headerContentText,\n            children: section.numEntries\n          })\n        }), _jsx(TouchableOpacity, {\n          testID: section.key + \"-toggleBtn\",\n          style: styles.collapseButton,\n          onPress: function onPress() {\n            return toggleSection(section.key);\n          },\n          disabled: section.numEntries < 1,\n          children: _jsx(Chevron, {\n            width: DEVICE_LARGE ? 18 : 16,\n            height: DEVICE_LARGE ? 18 : 16,\n            color: section.numEntries ? DARK_BLUE : LIGHT_GREY,\n            direction: collapsed ? 'down' : 'up'\n          })\n        })]\n      })]\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.orangeTop\n    }), _jsx(View, {\n      testID: \"ConnectionScreen\",\n      style: styles.container,\n      children: _jsx(SectionList, {\n        contentContainerStyle: {\n          flexGrow: 1,\n          paddingBottom: 50\n        },\n        sections: getSections,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: renderItem,\n        renderSectionHeader: renderSectionHeader,\n        ListHeaderComponent: connectionHeader,\n        ListFooterComponent: connectionFooter,\n        ListFooterComponentStyle: styles.connectionFooter,\n        ItemSeparatorComponent: ItemSeparator\n      })\n    })]\n  });\n}\n\nvar ItemSeparator = function ItemSeparator() {\n  return _jsx(View, {\n    style: {\n      height: StyleSheet.hairlineWidth,\n      backgroundColor: ORANGE\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  socialMediaVariations: {\n    marginTop: DEVICE_LARGE ? 8 : 6,\n    marginBottom: DEVICE_LARGE ? 8 : 6\n  },\n  socialMediaVariationsColumn: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    marginRight: 10,\n    marginTop: DEVICE_LARGE ? 10 : 8,\n    marginBottom: DEVICE_LARGE ? 10 : 8\n  },\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    marginBottom: 5,\n    paddingLeft: '8%',\n    paddingRight: '8%',\n    paddingTop: DEVICE_LARGE ? 20 : 18,\n    overflow: 'hidden',\n    zIndex: 10\n  },\n  profile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  photoContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minWidth: '45%'\n  },\n  profilePhoto: {\n    borderRadius: DEVICE_LARGE ? 45 : 39,\n    width: DEVICE_LARGE ? 90 : 78,\n    height: DEVICE_LARGE ? 90 : 78,\n    marginLeft: DEVICE_LARGE ? -5 : -4\n  },\n  nameContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginLeft: -3,\n    flexGrow: 1,\n    maxWidth: '60%'\n  },\n  nameLabel: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[17],\n    color: BLACK\n  },\n  verificationsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    marginBottom: DEVICE_LARGE ? 10 : 0,\n    width: '100%',\n    backgroundColor: WHITE\n  },\n  verificationBox: {\n    margin: 1\n  },\n  verificationText: {\n    paddingLeft: 3,\n    paddingRight: 3,\n    paddingTop: 3,\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: BLUE,\n    borderColor: BLUE,\n    borderWidth: 1,\n    borderRadius: 8,\n    textAlign: 'center'\n  },\n  profileDivider: {\n    borderBottomWidth: 2,\n    borderBottomColor: ORANGE,\n    paddingBottom: 3,\n    width: '98%'\n  },\n  connectionInfo: {\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  connectionTimestamp: {},\n  connectionTimestampText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[10],\n    color: ORANGE\n  },\n  trustLevelContainer: {\n    marginTop: DEVICE_LARGE ? 16 : 15,\n    marginBottom: 10\n  },\n  reportBtn: {\n    width: '90%',\n    borderRadius: 100,\n    borderColor: ORANGE,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: DEVICE_LARGE ? 13 : 12,\n    paddingBottom: DEVICE_LARGE ? 13 : 12\n  },\n  reportBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: ORANGE,\n    marginLeft: DEVICE_LARGE ? 10 : 8\n  },\n  unReportBtn: {\n    width: '75%',\n    borderRadius: 100,\n    borderColor: DARK_GREEN,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: DEVICE_LARGE ? 13 : 12,\n    paddingBottom: DEVICE_LARGE ? 13 : 12\n  },\n  unReportBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: DARK_GREEN,\n    marginLeft: DEVICE_LARGE ? 10 : 8\n  },\n  header: {\n    marginBottom: 5,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  headerLabel: {},\n  headerLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  headerCount: {\n    minWidth: 28,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerContentText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[17],\n    color: ORANGE\n  },\n  collapseButton: {\n    paddingLeft: 5,\n    paddingBottom: 5,\n    paddingTop: 5\n  },\n  chevron: {\n    margin: DEVICE_LARGE ? 7 : 6\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  itemPhoto: {\n    margin: 10\n  },\n  photo: {\n    borderRadius: 20,\n    width: 40,\n    height: 40\n  },\n  itemLabel: {},\n  itemLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    color: BLACK\n  },\n  connectionFooter: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default ConnectionScreen;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Connections/ConnectionScreen.tsx"],"names":["ConnectionScreenSectionKeys","isPhoneNumber","c","profile","connection","verificationsTexts","connectedAt","mutualGroups","mutualConnections","recoveryConnections","loading","possibleDuplicates","props","navigation","useNavigation","selectSocialMediaVariations","useMemo","socialMediaVariations","useSelector","SocialMediaType","groupsCollapsed","setGroupsCollapsed","useState","connectionsCollapsed","setConnectionsCollapsed","recoveryConnectionsCollapsed","setRecoveryConnectionsCollapsed","possibleDuplicatesCollapsed","setPossibleDuplicatesCollapsed","socialMediaCollapsed","setSocialMediaCollapsed","connectionSocialMedia","setConnectionSocialMedia","useEffect","socialMediaOnConnectionPage","i","element","s","shareActionType","SocialMediaShareActionType","id","icon","shareActionData","t","useTranslation","toggleSection","imageSource","uri","photoDirectory","getSections","data","title","key","numEntries","renderSticker","styles","connectionHeader","photo","console","date","moment","parseInt","String","connectionFooter","connection_levels","connectionId","connectionName","reporting","source","report_sources","reportReason","renderItem","item","index","section","renderRecoveryItem","renderSocialMediaVariations","testID","renderPhoto","socialMediaVariationsKeyExtractor","renderSocialMediaVariation","Linking","Clipboard","Platform","ToastAndroid","Alert","DEVICE_LARGE","activeAfter","activeBefore","renderRecoveryPhoto","require","renderSectionHeader","collapsed","flexGrow","paddingBottom","ItemSeparator","height","StyleSheet","backgroundColor","marginTop","marginBottom","socialMediaVariationsColumn","flexDirection","alignItems","justifyContent","marginRight","orangeTop","width","zIndex","container","flex","borderTopLeftRadius","paddingLeft","paddingRight","paddingTop","overflow","photoContainer","minWidth","profilePhoto","borderRadius","marginLeft","nameContainer","maxWidth","nameLabel","name","fontFamily","fontSize","color","verificationsContainer","verificationBox","margin","verificationText","borderColor","borderWidth","textAlign","profileDivider","borderBottomWidth","borderBottomColor","connectionInfo","connectionTimestamp","connectionTimestampText","trustLevelContainer","reportBtn","reportBtnText","unReportBtn","unReportBtnText","header","headerLabel","headerLabelText","headerContent","headerCount","headerContentText","collapseButton","chevron","itemContainer","itemPhoto","itemLabel","itemLabelText"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  ActivityIndicator,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n  SectionList,\n  Linking,\n  FlatList,\n  Platform,\n  ToastAndroid,\n  Alert,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { SvgXml } from 'react-native-svg';\nimport Clipboard from '@react-native-community/clipboard';\nimport UnverifiedSticker from '@/components/Icons/UnverifiedSticker';\nimport GroupAvatar from '@/components/Icons/GroupAvatar';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport {\n  ORANGE,\n  BLUE,\n  WHITE,\n  BLACK,\n  DARKER_GREY,\n  DARK_BLUE,\n  LIGHT_GREY,\n  DARK_GREEN,\n} from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { connection_levels, report_sources } from '@/utils/constants';\nimport Chevron from '../Icons/Chevron';\nimport TrustLevelView from './TrustLevelView';\nimport { useSelector } from '@/store';\nimport {\n  SocialMediaShareActionType,\n  SocialMediaType,\n} from '@/components/EditProfile/socialMediaVariations';\nimport { selectAllSocialMediaVariationsByType } from '@/reducer/socialMediaVariationSlice';\n\n/**\n Connection details screen\n To make maximum use of the performance optimization from Flatlist/SectionList, the whole\n screen is rendered as SectionList. The Profile information (Photo, Name etc.) is rendered\n via ListHeaderComponent, the \"Report\" button on the bottom via ListFooterComponent.\n* */\ntype Props = {\n  connection: Connection;\n  verificationsTexts: Array<string>;\n  connectedAt: number;\n  mutualGroups: Array<Group>;\n  mutualConnections: Array<Connection>;\n  recoveryConnections: Array<RecoveryConnection>;\n  possibleDuplicates: Array<Connection>;\n  loading: boolean;\n};\n\ntype SocialMediaOnConnectionPage = {\n  id: SocialMediaId;\n  icon: any;\n  shareActionType: SocialMediaShareActionType;\n  shareActionData: string;\n};\n\ninterface Section {\n  title: string;\n  data: Array<Connection | Group | SocialMediaOnConnectionPage[]>;\n  key: ConnectionScreenSectionKeys;\n  numEntries: number;\n}\n\nenum ConnectionScreenSectionKeys {\n  CONNECTIONS = 'connections',\n  GROUPS = 'groups',\n  RECOVERY_CONNECTIONS = 'recoveryConnections',\n  DUPLICATES = 'duplicates',\n  SOCIAL_MEDIA = 'socialMedia',\n}\n\nconst isPhoneNumber = (profile: string): boolean => {\n  const c = profile[0];\n  return c === '+' || (c >= '0' && c <= '9');\n};\n\nfunction ConnectionScreen(props: Props) {\n  const {\n    connection,\n    verificationsTexts,\n    connectedAt,\n    mutualGroups,\n    mutualConnections,\n    recoveryConnections,\n    loading,\n    possibleDuplicates,\n  } = props;\n  const navigation = useNavigation();\n\n  const selectSocialMediaVariations = useMemo(\n    selectAllSocialMediaVariationsByType,\n    [],\n  );\n  const socialMediaVariations = useSelector((state) =>\n    selectSocialMediaVariations(state, SocialMediaType.SOCIAL_PROFILE),\n  );\n\n  const [groupsCollapsed, setGroupsCollapsed] = useState(true);\n  const [connectionsCollapsed, setConnectionsCollapsed] = useState(true);\n  const [recoveryConnectionsCollapsed, setRecoveryConnectionsCollapsed] =\n    useState(true);\n  const [possibleDuplicatesCollapsed, setPossibleDuplicatesCollapsed] =\n    useState(true);\n  const [socialMediaCollapsed, setSocialMediaCollapsed] = useState(true);\n  const [connectionSocialMedia, setConnectionSocialMedia] = useState<\n    SocialMediaOnConnectionPage[]\n  >([]);\n\n  useEffect(() => {\n    const socialMediaOnConnectionPage: SocialMediaOnConnectionPage[] = [];\n    for (let i = 0; i < socialMediaVariations.length; i++) {\n      const element = socialMediaVariations[i];\n      const profile = connection.socialMedia?.find(\n        (s) => s.id === element.id,\n      )?.profile;\n      if (profile) {\n        let { shareActionType } = element;\n        if (\n          shareActionType ===\n          SocialMediaShareActionType.COPY_IF_PHONE_LINK_IF_USERNAME\n        ) {\n          if (isPhoneNumber(profile)) {\n            shareActionType = SocialMediaShareActionType.COPY;\n          } else {\n            shareActionType = SocialMediaShareActionType.OPEN_LINK;\n          }\n        }\n        socialMediaOnConnectionPage.push({\n          id: element.id,\n          icon: element.icon,\n          shareActionType,\n          shareActionData: element.shareActionDataFormat.replace(\n            '%%PROFILE%%',\n            profile,\n          ),\n        });\n      }\n    }\n    setConnectionSocialMedia(socialMediaOnConnectionPage);\n  }, [connection, socialMediaVariations]);\n  const { t } = useTranslation();\n\n  const toggleSection = (key) => {\n    switch (key) {\n      case ConnectionScreenSectionKeys.CONNECTIONS:\n        setConnectionsCollapsed(!connectionsCollapsed);\n        break;\n      case ConnectionScreenSectionKeys.GROUPS:\n        setGroupsCollapsed(!groupsCollapsed);\n        break;\n      case ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS:\n        setRecoveryConnectionsCollapsed(!recoveryConnectionsCollapsed);\n        break;\n      case ConnectionScreenSectionKeys.DUPLICATES:\n        setPossibleDuplicatesCollapsed(!possibleDuplicatesCollapsed);\n        break;\n      case ConnectionScreenSectionKeys.SOCIAL_MEDIA:\n        setSocialMediaCollapsed(!socialMediaCollapsed);\n        break;\n    }\n  };\n\n  const imageSource = {\n    uri: `file://${photoDirectory()}/${connection?.photo?.filename}`,\n  };\n\n  const getSections = useMemo(() => {\n    const data: Section[] = [\n      {\n        title: t('connectionDetails.label.mutualConnections'),\n        data: connectionsCollapsed ? [] : mutualConnections,\n        key: ConnectionScreenSectionKeys.CONNECTIONS,\n        numEntries: mutualConnections.length,\n      },\n      {\n        title: t('connectionDetails.label.mutualGroups'),\n        data: groupsCollapsed ? [] : mutualGroups,\n        key: ConnectionScreenSectionKeys.GROUPS,\n        numEntries: mutualGroups.length,\n      },\n      {\n        title: t('connectionDetails.label.recoveryConnections'),\n        data: recoveryConnectionsCollapsed ? [] : recoveryConnections,\n        key: ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS,\n        numEntries: recoveryConnections.length,\n      },\n      {\n        title: t('connectionDetails.label.possibleDuplicates'),\n        data: possibleDuplicatesCollapsed ? [] : possibleDuplicates,\n        key: ConnectionScreenSectionKeys.DUPLICATES,\n        numEntries: possibleDuplicates.length,\n      },\n      {\n        title: t('connectionDetails.label.socialMedia'),\n        data: socialMediaCollapsed ? [] : [connectionSocialMedia],\n        key: ConnectionScreenSectionKeys.SOCIAL_MEDIA,\n        numEntries: connectionSocialMedia.filter((s) => !!s.shareActionData)\n          .length,\n      },\n    ];\n    return data;\n  }, [\n    t,\n    connectionsCollapsed,\n    mutualConnections,\n    groupsCollapsed,\n    mutualGroups,\n    recoveryConnectionsCollapsed,\n    recoveryConnections,\n    possibleDuplicatesCollapsed,\n    possibleDuplicates,\n    connectionSocialMedia,\n    socialMediaCollapsed,\n  ]);\n\n  const renderSticker = () => {\n    if (loading) {\n      return <ActivityIndicator size=\"small\" color={DARKER_GREY} animating />;\n    } else {\n      return verificationsTexts.length > 0 ? (\n        verificationsTexts.map((verificationText, i) => (\n          <View key={`verificationView-${i}`} style={styles.verificationBox}>\n            <Text key={`verificationText-${i}`} style={styles.verificationText}>\n              {verificationText}\n            </Text>\n          </View>\n        ))\n      ) : (\n        <UnverifiedSticker width={100} height={19} />\n      );\n    }\n  };\n\n  const connectionHeader = (\n    <>\n      <View style={styles.profile}>\n        <View style={styles.photoContainer}>\n          <TouchableWithoutFeedback\n            onPress={() => {\n              navigation.navigate('FullScreenPhoto', {\n                photo: connection.photo,\n              });\n            }}\n          >\n            <Image\n              source={imageSource}\n              style={styles.profilePhoto}\n              resizeMode=\"cover\"\n              onError={(e) => {\n                console.log(e);\n              }}\n              accessible={true}\n              accessibilityLabel={t('common.accessibilityLabel.userPhoto')}\n            />\n          </TouchableWithoutFeedback>\n          <View style={styles.connectionInfo}>\n            <View style={styles.connectionTimestamp}>\n              <Text style={styles.connectionTimestampText}>\n                {loading\n                  ? t('connectionDetails.tags.loading')\n                  : t('connectionDetails.tags.connectedAt', {\n                      date: `${moment(\n                        parseInt(String(connectedAt), 10),\n                      ).fromNow()}`,\n                    })}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.nameContainer}>\n          <View style={styles.nameLabel}>\n            <Text style={styles.name} numberOfLines={1}>\n              {connection.name}\n            </Text>\n          </View>\n          <View style={styles.profileDivider} />\n          <View style={styles.verificationsContainer}>{renderSticker()}</View>\n        </View>\n      </View>\n\n      <View style={styles.trustLevelContainer}>\n        <TrustLevelView level={connection.level} connectionId={connection.id} />\n      </View>\n    </>\n  );\n\n  const connectionFooter =\n    connection.level !== connection_levels.REPORTED ? (\n      <TouchableOpacity\n        testID=\"ReportBtn\"\n        style={styles.reportBtn}\n        onPress={() => {\n          navigation.navigate('ReportReason', {\n            connectionId: connection.id,\n            connectionName: connection.name,\n            reporting: true,\n            source: report_sources.PROFILE\n          });\n        }}\n      >\n        <Text style={styles.reportBtnText}>\n          {t('connectionDetails.button.report')}\n        </Text>\n      </TouchableOpacity>\n    ) : (\n      <TouchableOpacity\n        testID=\"UnReportBtn\"\n        style={styles.unReportBtn}\n        onPress={() => {\n          navigation.navigate('ReportReason', {\n            connectionId: connection.id,\n            connectionName: connection.name,\n            reportReason: connection.reportReason,\n            reporting: false,\n            source: report_sources.PROFILE\n          });\n        }}\n      >\n        <Text style={styles.unReportBtnText}>\n          {t('connectionDetails.button.undoReport')}\n        </Text>\n      </TouchableOpacity>\n    );\n\n  const renderItem = ({ item, index, section }) => {\n    if (section.key === ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS) {\n      return renderRecoveryItem({ item, index });\n    }\n    if (section.key === ConnectionScreenSectionKeys.SOCIAL_MEDIA) {\n      return renderSocialMediaVariations({ item, index });\n    }\n    const testID = `${section.key}-${index}`;\n    console.log(\n      `Rendering Section ${section.key} item ${index} (${item.name}) - testID ${testID}`,\n    );\n    return (\n      <View testID={testID} style={styles.itemContainer}>\n        <View style={styles.itemPhoto}>{renderPhoto(item)}</View>\n        <View style={styles.itemLabel}>\n          <Text style={styles.itemLabelText}>{item.name}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  const renderSocialMediaVariations = ({\n    item,\n    index,\n  }: {\n    item: SocialMediaOnConnectionPage[];\n    index: number;\n  }) => {\n    return (\n      <FlatList\n        style={styles.socialMediaVariations}\n        columnWrapperStyle={styles.socialMediaVariationsColumn}\n        data={item}\n        numColumns={5}\n        renderItem={renderSocialMediaVariation}\n        keyExtractor={socialMediaVariationsKeyExtractor}\n      />\n    );\n  };\n\n  const socialMediaVariationsKeyExtractor = (\n    item: SocialMediaOnConnectionPage,\n  ) => {\n    return item.id;\n  };\n\n  const renderSocialMediaVariation = ({\n    item,\n  }: {\n    item: SocialMediaOnConnectionPage;\n  }) => {\n    return (\n      <TouchableWithoutFeedback\n        onPress={() => {\n          if (item.shareActionData) {\n            const data = item.shareActionData;\n            if (item.shareActionType === SocialMediaShareActionType.OPEN_LINK) {\n              Linking.openURL(data);\n            } else if (\n              item.shareActionType === SocialMediaShareActionType.COPY\n            ) {\n              Clipboard.setString(data);\n              if (Platform.OS === 'android') {\n                ToastAndroid.show(\n                  t('connectionDetails.text.copied'),\n                  ToastAndroid.LONG,\n                );\n              } else {\n                Alert.alert(t('connectionDetails.text.copied'));\n              }\n            }\n          }\n        }}\n      >\n        <SvgXml\n          xml={item.icon}\n          width={DEVICE_LARGE ? 40 : 36}\n          height={DEVICE_LARGE ? 40 : 36}\n        />\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  const renderRecoveryItem = ({ item, index }) => {\n    const testID = `recoveryConnections-${index}`;\n    console.log(\n      `Rendering Section recoveryConnections item ${index} (${item.id}) - testID ${testID}`,\n    );\n    const activeAfter = item.activeAfter\n      ? `(activates in ${moment\n          .duration(item.activeAfter, 'milliseconds')\n          .humanize()})`\n      : '';\n    const activeBefore = item.activeBefore\n      ? `(deactivates in ${moment\n          .duration(item.activeBefore, 'milliseconds')\n          .humanize()})`\n      : '';\n    return (\n      <View testID={testID} style={styles.itemContainer}>\n        <View style={styles.itemPhoto}>{renderRecoveryPhoto(item.conn)}</View>\n        <View style={styles.itemLabel}>\n          <Text style={styles.itemLabelText}>\n            {item?.conn?.name\n              ? item.conn.name\n              : t('connectionDetails.text.unkownRecoveryConnection')}{' '}\n            {activeAfter} {activeBefore}{' '}\n          </Text>\n        </View>\n      </View>\n    );\n  };\n\n  const renderRecoveryPhoto = (item) => {\n    const source = item?.photo?.filename\n      ? { uri: `file://${photoDirectory()}/${item.photo.filename}` }\n      : require('@/static/default_profile.jpg');\n    return (\n      <Image\n        source={source}\n        style={styles.photo}\n        resizeMode=\"cover\"\n        onError={(e) => {\n          console.log(e);\n        }}\n        accessible={true}\n        accessibilityLabel=\"photo\"\n      />\n    );\n  };\n\n  const renderPhoto = (item) => {\n    if (item?.photo?.filename) {\n      return (\n        <Image\n          source={{ uri: `file://${photoDirectory()}/${item.photo.filename}` }}\n          style={styles.photo}\n          resizeMode=\"cover\"\n          onError={(e) => {\n            console.log(e);\n          }}\n          accessible={true}\n          accessibilityLabel=\"photo\"\n        />\n      );\n    } else {\n      return (\n        <GroupAvatar\n          width={DEVICE_LARGE ? 40 : 36}\n          height={DEVICE_LARGE ? 40 : 36}\n        />\n      );\n    }\n  };\n\n  const renderSectionHeader = ({ section }: { section: Section }) => {\n    let collapsed;\n    switch (section.key) {\n      case ConnectionScreenSectionKeys.CONNECTIONS:\n        collapsed = connectionsCollapsed;\n        break;\n      case ConnectionScreenSectionKeys.GROUPS:\n        collapsed = groupsCollapsed;\n        break;\n      case ConnectionScreenSectionKeys.RECOVERY_CONNECTIONS:\n        collapsed = recoveryConnectionsCollapsed;\n        break;\n      case ConnectionScreenSectionKeys.DUPLICATES:\n        collapsed = possibleDuplicatesCollapsed;\n        break;\n      case ConnectionScreenSectionKeys.SOCIAL_MEDIA:\n        collapsed = socialMediaCollapsed;\n        break;\n    }\n    return (\n      <View style={styles.header}>\n        <View style={styles.headerLabel}>\n          <Text style={styles.headerLabelText}>{section.title}</Text>\n        </View>\n        <View style={styles.headerContent}>\n          <View style={styles.headerCount}>\n            <Text\n              testID={`${section.key}-count`}\n              style={styles.headerContentText}\n            >\n              {section.numEntries}\n            </Text>\n          </View>\n          <TouchableOpacity\n            testID={`${section.key}-toggleBtn`}\n            style={styles.collapseButton}\n            onPress={() => toggleSection(section.key)}\n            disabled={section.numEntries < 1}\n          >\n            <Chevron\n              width={DEVICE_LARGE ? 18 : 16}\n              height={DEVICE_LARGE ? 18 : 16}\n              color={section.numEntries ? DARK_BLUE : LIGHT_GREY}\n              direction={collapsed ? 'down' : 'up'}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.orangeTop} />\n      <View testID=\"ConnectionScreen\" style={styles.container}>\n        <SectionList\n          contentContainerStyle={{ flexGrow: 1, paddingBottom: 50 }}\n          sections={getSections}\n          keyExtractor={(item) => item.id}\n          renderItem={renderItem}\n          renderSectionHeader={renderSectionHeader}\n          ListHeaderComponent={connectionHeader}\n          ListFooterComponent={connectionFooter}\n          // @ts-ignore: mistyped\n          ListFooterComponentStyle={styles.connectionFooter}\n          ItemSeparatorComponent={ItemSeparator}\n        />\n      </View>\n    </>\n  );\n}\n\nconst ItemSeparator = () => {\n  return (\n    <View\n      style={{\n        height: StyleSheet.hairlineWidth,\n        backgroundColor: ORANGE,\n      }}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  socialMediaVariations: {\n    marginTop: DEVICE_LARGE ? 8 : 6,\n    marginBottom: DEVICE_LARGE ? 8 : 6,\n  },\n  socialMediaVariationsColumn: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    marginRight: 10,\n    marginTop: DEVICE_LARGE ? 10 : 8,\n    marginBottom: DEVICE_LARGE ? 10 : 8,\n  },\n  orangeTop: {\n    backgroundColor: ORANGE,\n    height: DEVICE_LARGE ? 70 : 65,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: WHITE,\n    borderTopLeftRadius: 58,\n    marginTop: -58,\n    marginBottom: 5,\n    paddingLeft: '8%',\n    paddingRight: '8%',\n    paddingTop: DEVICE_LARGE ? 20 : 18,\n    overflow: 'hidden',\n    zIndex: 10,\n  },\n  profile: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  photoContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minWidth: '45%',\n  },\n  profilePhoto: {\n    borderRadius: DEVICE_LARGE ? 45 : 39,\n    width: DEVICE_LARGE ? 90 : 78,\n    height: DEVICE_LARGE ? 90 : 78,\n    marginLeft: DEVICE_LARGE ? -5 : -4,\n  },\n  nameContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginLeft: -3,\n    flexGrow: 1,\n    maxWidth: '60%',\n  },\n  nameLabel: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[17],\n    color: BLACK,\n  },\n  verificationsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 6,\n    marginBottom: DEVICE_LARGE ? 10 : 0,\n    width: '100%',\n    backgroundColor: WHITE,\n  },\n  verificationBox: {\n    margin: 1,\n  },\n  verificationText: {\n    paddingLeft: 3,\n    paddingRight: 3,\n    paddingTop: 3,\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[11],\n    color: BLUE,\n    borderColor: BLUE,\n    borderWidth: 1,\n    borderRadius: 8,\n    textAlign: 'center',\n  },\n  profileDivider: {\n    borderBottomWidth: 2,\n    borderBottomColor: ORANGE,\n    paddingBottom: 3,\n    width: '98%',\n  },\n  connectionInfo: {\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  connectionTimestamp: {\n    // width: '100%',\n  },\n  connectionTimestampText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[10],\n    color: ORANGE,\n  },\n  trustLevelContainer: {\n    marginTop: DEVICE_LARGE ? 16 : 15,\n    marginBottom: 10,\n  },\n  reportBtn: {\n    width: '90%',\n    borderRadius: 100,\n    borderColor: ORANGE,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: DEVICE_LARGE ? 13 : 12,\n    paddingBottom: DEVICE_LARGE ? 13 : 12,\n  },\n  reportBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: ORANGE,\n    marginLeft: DEVICE_LARGE ? 10 : 8,\n  },\n  unReportBtn: {\n    width: '75%',\n    borderRadius: 100,\n    borderColor: DARK_GREEN,\n    borderWidth: 1,\n    backgroundColor: WHITE,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: DEVICE_LARGE ? 13 : 12,\n    paddingBottom: DEVICE_LARGE ? 13 : 12,\n  },\n  unReportBtnText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: fontSize[16],\n    color: DARK_GREEN,\n    marginLeft: DEVICE_LARGE ? 10 : 8,\n  },\n  header: {\n    marginBottom: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerLabel: {\n    // flex: 2,\n  },\n  headerLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    color: BLACK,\n  },\n  headerContent: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  headerCount: {\n    minWidth: 28,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  headerContentText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[17],\n    color: ORANGE,\n  },\n  collapseButton: {\n    paddingLeft: 5,\n    paddingBottom: 5,\n    paddingTop: 5,\n  },\n  chevron: {\n    margin: DEVICE_LARGE ? 7 : 6,\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  itemPhoto: {\n    margin: 10,\n  },\n  photo: {\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n  },\n  itemLabel: {},\n  itemLabelText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  connectionFooter: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ConnectionScreen;\n"]},"metadata":{},"sourceType":"module"}