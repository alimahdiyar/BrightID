{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useContext } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BlurWidget from \"../BlurWidget/BlurWidget.web\";\nimport Spinner from 'react-native-spinkit';\nimport { setInternetCredentials } from 'react-native-keychain';\nimport { useTranslation } from 'react-i18next';\nimport { NodeApiContext } from \"../NodeApiGate\";\nimport { BACKUP_URL, ORANGE } from \"../../utils/constants\";\nimport { DEVICE_LARGE, DEVICE_IOS } from \"../../utils/deviceConstants\";\nimport { DARK_ORANGE, LIGHT_GREY, DARKER_GREY, WHITE, BLACK, LIGHT_BLACK, GREEN, GREY } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { useDispatch, useSelector } from \"../../store\";\nimport { validatePass } from \"../../utils/password\";\nimport { setBackupCompleted, setPassword, updateNotifications } from \"../../actions\";\nimport { backupAppData } from \"../Onboarding/RecoveryFlow/thunks/backupThunks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar UploadAnimation = function UploadAnimation() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return _jsxs(View, {\n    style: styles.uploadAnimationContainer,\n    children: [_jsx(Text, {\n      style: styles.textInfo,\n      children: t('common.text.uploadingData')\n    }), _jsx(Spinner, {\n      isVisible: true,\n      size: DEVICE_LARGE ? 80 : 65,\n      type: \"Wave\",\n      color: ORANGE\n    })]\n  });\n};\n\nvar ChangePasswordModal = function ChangePasswordModal(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var api = useContext(NodeApiContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      oldPassword = _useState2[0],\n      setOldPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPassword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPasswordAgain = _useState6[0],\n      setNewPasswordAgain = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      backupInProgress = _useState8[0],\n      setBackupInProgress = _useState8[1];\n\n  var password = useSelector(function (state) {\n    return state.user.password;\n  });\n  var id = useSelector(function (state) {\n    return state.user.id;\n  });\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  var savePasswordHandler = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(password && oldPassword !== password)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(t('profile.alert.title.passwordMatch'), t('profile.alert.text.passwordMatch'));\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (validatePass(newPassword, newPasswordAgain)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(setInternetCredentials(BACKUP_URL, id, newPassword));\n\n          case 8:\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0.message);\n\n          case 13:\n            dispatch(setPassword(newPassword));\n            setBackupInProgress(true);\n            _context.prev = 15;\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(dispatch(backupAppData()));\n\n          case 18:\n            dispatch(setBackupCompleted(true));\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t1 = _context[\"catch\"](15);\n            console.warn(_context.t1);\n\n          case 24:\n            setBackupInProgress(false);\n            dispatch(updateNotifications(api));\n            navigation.goBack();\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 10], [15, 21]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BlurWidget, {\n      style: styles.blurView,\n      blurType: \"dark\",\n      blurAmount: 5,\n      reducedTransparencyFallbackColor: BLACK\n    }), _jsx(View, {\n      style: styles.modalContainer,\n      children: backupInProgress ? _jsx(UploadAnimation, {}) : _jsxs(_Fragment, {\n        children: [password ? _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: t('profile.label.currentPassword')\n          }), _jsx(TextInput, {\n            autoComplete: \"password\",\n            autoCorrect: false,\n            onChangeText: setOldPassword,\n            value: oldPassword,\n            placeholder: t('profile.label.currentPassword'),\n            placeholderTextColor: GREY,\n            secureTextEntry: true,\n            style: styles.textInput,\n            textContentType: \"password\",\n            underlineColorAndroid: \"transparent\"\n          })]\n        }) : null, _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: password ? t('profile.label.newPassword') : t('profile.label.password')\n          }), _jsx(TextInput, {\n            autoComplete: \"password\",\n            autoCorrect: false,\n            onChangeText: setNewPassword,\n            value: newPassword,\n            placeholder: password ? t('profile.placeholder.newPassword') : t('profile.placeholder.password'),\n            placeholderTextColor: GREY,\n            secureTextEntry: true,\n            style: styles.textInput,\n            textContentType: \"password\",\n            underlineColorAndroid: \"transparent\"\n          })]\n        }), _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: t('profile.label.newPasswordAgain')\n          }), _jsx(TextInput, {\n            autoComplete: \"password\",\n            autoCorrect: false,\n            onChangeText: setNewPasswordAgain,\n            value: newPasswordAgain,\n            placeholder: t('profile.placeholder.newPasswordAgain'),\n            placeholderTextColor: GREY,\n            secureTextEntry: true,\n            style: styles.textInput,\n            textContentType: \"password\",\n            underlineColorAndroid: \"transparent\"\n          })]\n        }), _jsxs(View, {\n          style: styles.saveContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.saveButton,\n            onPress: savePasswordHandler,\n            children: _jsx(Text, {\n              style: styles.saveButtonText,\n              children: t('common.button.save')\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.cancelButton,\n            onPress: function onPress() {\n              navigation.goBack();\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButtonText,\n              children: t('common.button.cancel')\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  blurView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  },\n  photo: {\n    width: '100%',\n    flex: 1\n  },\n  modalContainer: {\n    backgroundColor: WHITE,\n    width: '75%',\n    borderRadius: 25,\n    padding: DEVICE_LARGE ? 36 : 30\n  },\n  inputGroup: {\n    borderBottomColor: LIGHT_GREY,\n    borderBottomWidth: 1,\n    marginBottom: DEVICE_LARGE ? 12 : 10\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: DARK_ORANGE,\n    marginBottom: DEVICE_IOS ? DEVICE_LARGE ? 15 : 13 : 0\n  },\n  textInput: {\n    fontSize: fontSize[12],\n    marginBottom: DEVICE_IOS ? DEVICE_LARGE ? 10 : 8 : 0\n  },\n  saveContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 14 : 12\n  },\n  saveButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: GREEN,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    marginRight: DEVICE_LARGE ? 22 : 18\n  },\n  saveButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12]\n  },\n  cancelButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: DARKER_GREY\n  },\n  cancelButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARKER_GREY\n  },\n  textInfo: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: LIGHT_BLACK,\n    margin: DEVICE_LARGE ? 12 : 10\n  },\n  uploadAnimationContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  }\n});\nexport default ChangePasswordModal;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/EditProfile/ChangePasswordModal.tsx"],"names":["UploadAnimation","t","useTranslation","styles","DEVICE_LARGE","ChangePasswordModal","navigation","dispatch","useDispatch","api","useContext","oldPassword","setOldPassword","useState","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","backupInProgress","setBackupInProgress","password","useSelector","state","id","savePasswordHandler","Alert","validatePass","setInternetCredentials","console","setPassword","backupAppData","setBackupCompleted","updateNotifications","StyleSheet","container","flex","alignItems","justifyContent","blurView","position","left","right","top","bottom","photo","width","modalContainer","backgroundColor","borderRadius","padding","inputGroup","borderBottomColor","borderBottomWidth","marginBottom","label","fontFamily","fontSize","color","DEVICE_IOS","textInput","saveContainer","flexDirection","marginTop","saveButton","paddingTop","paddingBottom","marginRight","saveButtonText","cancelButton","borderWidth","borderColor","cancelButtonText","textInfo","margin","uploadAnimationContainer"],"mappings":";;AAAA,SAAA,QAAA,EAAA,UAAA,QAAA,OAAA;;;;;;;AASA,OAAA,UAAA;AACA,OAAA,OAAA,MAAA,sBAAA;AACA,SAAA,sBAAA,QAAA,uBAAA;AACA,SAAA,cAAA,QAAA,eAAA;AAEA,SAAA,cAAA;AACA,SAAA,UAAA,EAAA,MAAA;AACA,SAAA,YAAA,EAAA,UAAA;AACA,SAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA;AAUA,SAAA,QAAA;AACA,SAAA,WAAA,EAAA,WAAA;AACA,SAAA,YAAA;AACA,SAAA,kBAAA,EAAA,WAAA,EAAA,mBAAA;AAKA,SAAA,aAAA;;;;;AAEA,IAAMA,eAAe,GAAfA,SAAAA,eAAAA,GAAwB;EAC5B,IAAA,eAAA,GAAcE,cAAd,EAAA;EAAA,IAAQD,CAAR,GAAA,eAAA,CAAA,CAAA;;EAEA,OACE,KAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAEE,MAAM,CAAnB,wBAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,QAAA;MAAA,QAAA,EAA+BF,CAAC,CADlC,2BACkC;IAAhC,CAAA,CADF,EAEE,IAAA,CAAA,OAAA,EAAA;MACE,SAAS,EADX,IAAA;MAEE,IAAI,EAAEG,YAAY,GAAA,EAAA,GAFpB,EAAA;MAGE,IAAI,EAHN,MAAA;MAIE,KAAK,EAPX;IAGI,CAAA,CAFF;EAAA,CAAA,CADF;AAHF,CAAA;;AAkBA,IAAMC,mBAAmB,GAAnBA,SAAAA,mBAAAA,CAAsB,IAAtBA,EAAiD;EAAxBC,IAAAA,UAAwB,GAAA,IAAA,CAAxBA,UAAAA;EAC7B,IAAMC,QAAQ,GAAGC,WAAjB,EAAA;EACA,IAAMC,GAAG,GAAGC,UAAU,CAAtB,cAAsB,CAAtB;;EAEA,IAAA,SAAA,GAAsCG,QAAQ,CAA9C,EAA8C,CAA9C;EAAA,IAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;EAAA,IAAOF,WAAP,GAAA,UAAA,CAAA,CAAA,CAAA;EAAA,IAAoBC,cAApB,GAAA,UAAA,CAAA,CAAA,CAAA;;EACA,IAAA,UAAA,GAAsCC,QAAQ,CAA9C,EAA8C,CAA9C;EAAA,IAAA,UAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;EAAA,IAAOC,WAAP,GAAA,UAAA,CAAA,CAAA,CAAA;EAAA,IAAoBC,cAApB,GAAA,UAAA,CAAA,CAAA,CAAA;;EACA,IAAA,UAAA,GAAgDF,QAAQ,CAAxD,EAAwD,CAAxD;EAAA,IAAA,UAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;EAAA,IAAOG,gBAAP,GAAA,UAAA,CAAA,CAAA,CAAA;EAAA,IAAyBC,mBAAzB,GAAA,UAAA,CAAA,CAAA,CAAA;;EACA,IAAA,UAAA,GAAgDJ,QAAQ,CAAxD,KAAwD,CAAxD;EAAA,IAAA,UAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;EAAA,IAAOK,gBAAP,GAAA,UAAA,CAAA,CAAA,CAAA;EAAA,IAAyBC,mBAAzB,GAAA,UAAA,CAAA,CAAA,CAAA;;EAEA,IAAMC,QAAQ,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAAkBC,KAAK,CAALA,IAAAA,CAAlB,QAAA;EAA7B,CAA4B,CAA5B;EACA,IAAMC,EAAE,GAAGF,WAAW,CAAC,UAAA,KAAA,EAAA;IAAA,OAAkBC,KAAK,CAALA,IAAAA,CAAlB,EAAA;EAAvB,CAAsB,CAAtB;;EAEA,IAAA,gBAAA,GAAcpB,cAAd,EAAA;EAAA,IAAQD,CAAR,GAAA,gBAAA,CAAA,CAAA;;EAEA,IAAMuB,mBAAmB,GAAG,SAAA,OAAA,GAAA;IAAA,OAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;MAAA,OAAA,CAAA,EAAA;QAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;UAAA,KAAA,CAAA;YAAA,IAAA,EAEtBJ,QAAQ,IAAIT,WAAW,KAFD,QAAA,CAAA,EAAA;cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;cAAA;YAGxBc;;YAAAA,KAAK,CAALA,KAAAA,CACExB,CAAC,CADHwB,mCACG,CADHA,EAEExB,CAAC,CAFHwB,kCAEG,CAFHA;YAHwB,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA;;UAAA,KAAA,CAAA;YAAA,IASrBC,YAAY,CAAA,WAAA,EATS,gBAST,CATS,EAAA;cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;cAAA;YAAA;;YAAA,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA;;UAAA,KAAA,CAAA;YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;YAAA,OAAA,mBAAA,CAAA,KAAA,CAalBC,sBAAsB,CAAA,UAAA,EAAA,EAAA,EAbJ,WAaI,CAbJ,CAAA;;UAAA,KAAA,CAAA;YAAA,QAAA,CAAA,IAAA,GAAA,EAAA;YAAA;;UAAA,KAAA,EAAA;YAAA,QAAA,CAAA,IAAA,GAAA,EAAA;YAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;YAexBC,OAAO,CAAPA,GAAAA,CAAY,QAAA,CAAA,EAAA,CAAZA,OAAAA;;UAfwB,KAAA,EAAA;YAiB1BrB,QAAQ,CAACsB,WAAW,CAApBtB,WAAoB,CAAZ,CAARA;YAGAY,mBAAmB,CAAnBA,IAAmB,CAAnBA;YApB0B,QAAA,CAAA,IAAA,GAAA,EAAA;YAAA,QAAA,CAAA,IAAA,GAAA,EAAA;YAAA,OAAA,mBAAA,CAAA,KAAA,CAsBlBZ,QAAQ,CAACuB,aAtBS,EAsBV,CAtBU,CAAA;;UAAA,KAAA,EAAA;YAuBxBvB,QAAQ,CAACwB,kBAAkB,CAA3BxB,IAA2B,CAAnB,CAARA;YAvBwB,QAAA,CAAA,IAAA,GAAA,EAAA;YAAA;;UAAA,KAAA,EAAA;YAAA,QAAA,CAAA,IAAA,GAAA,EAAA;YAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;YAyBxBqB,OAAO,CAAPA,IAAAA,CAAAA,QAAAA,CAAAA,EAAAA;;UAzBwB,KAAA,EAAA;YA2B1BT,mBAAmB,CAAnBA,KAAmB,CAAnBA;YAGAZ,QAAQ,CAACyB,mBAAmB,CAA5BzB,GAA4B,CAApB,CAARA;YAGAD,UAAU,CAAVA,MAAAA;;UAjC0B,KAAA,EAAA;UAAA,KAAA,KAAA;YAAA,OAAA,QAAA,CAAA,IAAA,EAAA;QAAA;MAAA;IAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA;EAA5B,CAAA;;EAoCA,OACE,KAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAEH,MAAM,CAAnB,SAAA;IAAA,QAAA,EAAA,CACE,IAAA,CAAA,UAAA,EAAA;MACE,KAAK,EAAEA,MAAM,CADf,QAAA;MAEE,QAAQ,EAFV,MAAA;MAGE,UAAU,EAHZ,CAAA;MAIE,gCAAgC,EALpC;IACE,CAAA,CADF,EAOE,IAAA,CAAA,IAAA,EAAA;MAAM,KAAK,EAAEA,MAAM,CAAnB,cAAA;MAAA,QAAA,EACGe,gBAAgB,GACf,IAAA,CAAA,eAAA,EADe,EACf,CADe,GAGf,KAAA,CAAA,SAAA,EAAA;QAAA,QAAA,EAAA,CACGE,QAAQ,GACP,KAAA,CAAA,IAAA,EAAA;UAAM,KAAK,EAAEjB,MAAM,CAAnB,UAAA;UAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;YAAM,KAAK,EAAEA,MAAM,CAAnB,KAAA;YAAA,QAAA,EACGF,CAAC,CAFN,+BAEM;UADJ,CAAA,CADF,EAIE,IAAA,CAAA,SAAA,EAAA;YACE,YAAY,EADd,UAAA;YAEE,WAAW,EAFb,KAAA;YAGE,YAAY,EAHd,cAAA;YAIE,KAAK,EAJP,WAAA;YAKE,WAAW,EAAEA,CAAC,CALhB,+BAKgB,CALhB;YAME,oBAAoB,EANtB,IAAA;YAOE,eAAe,EAPjB,IAAA;YAQE,KAAK,EAAEE,MAAM,CARf,SAAA;YASE,eAAe,EATjB,UAAA;YAUE,qBAAqB,EAflB;UAKL,CAAA,CAJF;QAAA,CAAA,CADO,GADX,IAAA,EAoBE,KAAA,CAAA,IAAA,EAAA;UAAM,KAAK,EAAEA,MAAM,CAAnB,UAAA;UAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;YAAM,KAAK,EAAEA,MAAM,CAAnB,KAAA;YAAA,QAAA,EACGiB,QAAQ,GACLnB,CAAC,CADI,2BACJ,CADI,GAELA,CAAC,CAJT,wBAIS;UAHP,CAAA,CADF,EAME,IAAA,CAAA,SAAA,EAAA;YACE,YAAY,EADd,UAAA;YAEE,WAAW,EAFb,KAAA;YAGE,YAAY,EAHd,cAAA;YAIE,KAAK,EAJP,WAAA;YAKE,WAAW,EACTmB,QAAQ,GACJnB,CAAC,CADG,iCACH,CADG,GAEJA,CAAC,CART,8BAQS,CART;YAUE,oBAAoB,EAVtB,IAAA;YAWE,eAAe,EAXjB,IAAA;YAYE,KAAK,EAAEE,MAAM,CAZf,SAAA;YAaE,eAAe,EAbjB,UAAA;YAcE,qBAAqB,EAxC3B;UA0BI,CAAA,CANF;QAAA,CAAA,CApBF,EA2CE,KAAA,CAAA,IAAA,EAAA;UAAM,KAAK,EAAEA,MAAM,CAAnB,UAAA;UAAA,QAAA,EAAA,CACE,IAAA,CAAA,IAAA,EAAA;YAAM,KAAK,EAAEA,MAAM,CAAnB,KAAA;YAAA,QAAA,EACGF,CAAC,CAFN,gCAEM;UADJ,CAAA,CADF,EAIE,IAAA,CAAA,SAAA,EAAA;YACE,YAAY,EADd,UAAA;YAEE,WAAW,EAFb,KAAA;YAGE,YAAY,EAHd,mBAAA;YAIE,KAAK,EAJP,gBAAA;YAKE,WAAW,EAAEA,CAAC,CALhB,sCAKgB,CALhB;YAME,oBAAoB,EANtB,IAAA;YAOE,eAAe,EAPjB,IAAA;YAQE,KAAK,EAAEE,MAAM,CARf,SAAA;YASE,eAAe,EATjB,UAAA;YAUE,qBAAqB,EAzD3B;UA+CI,CAAA,CAJF;QAAA,CAAA,CA3CF,EA4DE,KAAA,CAAA,IAAA,EAAA;UAAM,KAAK,EAAEA,MAAM,CAAnB,aAAA;UAAA,QAAA,EAAA,CACE,IAAA,CAAA,gBAAA,EAAA;YACE,KAAK,EAAEA,MAAM,CADf,UAAA;YAEE,OAAO,EAFT,mBAAA;YAAA,QAAA,EAIE,IAAA,CAAA,IAAA,EAAA;cAAM,KAAK,EAAEA,MAAM,CAAnB,cAAA;cAAA,QAAA,EACGF,CAAC,CANR,oBAMQ;YADJ,CAAA;UAJF,CAAA,CADF,EASE,IAAA,CAAA,gBAAA,EAAA;YACE,KAAK,EAAEE,MAAM,CADf,YAAA;YAEE,OAAO,EAAE,SAAA,OAAA,GAAM;cACbG,UAAU,CAAVA,MAAAA;YAHJ,CAAA;YAAA,QAAA,EAME,IAAA,CAAA,IAAA,EAAA;cAAM,KAAK,EAAEH,MAAM,CAAnB,gBAAA;cAAA,QAAA,EACGF,CAAC,CAxFlB,sBAwFkB;YADJ,CAAA;UANF,CAAA,CATF;QAAA,CAAA,CA5DF;MAAA,CAAA;IAJJ,CAAA,CAPF;EAAA,CAAA,CADF;AAlDF,CAAA;;AAqJA,IAAME,MAAM,GAAG8B,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EADK,CAAA;IAETC,UAAU,EAFD,QAAA;IAGTC,cAAc,EAJe;EACpB,CADoB;EAM/BC,QAAQ,EAAE;IACRC,QAAQ,EADA,UAAA;IAERC,IAAI,EAFI,CAAA;IAGRC,KAAK,EAHG,CAAA;IAIRC,GAAG,EAJK,CAAA;IAKRC,MAAM,EAXuB;EAMrB,CANqB;EAa/BC,KAAK,EAAE;IACLC,KAAK,EADA,MAAA;IAELV,IAAI,EAfyB;EAaxB,CAbwB;EAiB/BW,cAAc,EAAE;IACdC,eAAe,EADD,KAAA;IAEdF,KAAK,EAFS,KAAA;IAGdG,YAAY,EAHE,EAAA;IAIdC,OAAO,EAAE7C,YAAY,GAAA,EAAA,GArBQ;EAiBf,CAjBe;EAuB/B8C,UAAU,EAAE;IACVC,iBAAiB,EADP,UAAA;IAEVC,iBAAiB,EAFP,CAAA;IAGVC,YAAY,EAAEjD,YAAY,GAAA,EAAA,GA1BG;EAuBnB,CAvBmB;EA4B/BkD,KAAK,EAAE;IACLC,UAAU,EADL,gBAAA;IAELC,QAAQ,EAAEA,QAAQ,CAFb,EAEa,CAFb;IAGLC,KAAK,EAHA,WAAA;IAILJ,YAAY,EAAEK,UAAU,GAAItD,YAAY,GAAA,EAAA,GAAhB,EAAA,GAhCK;EA4BxB,CA5BwB;EAkC/BuD,SAAS,EAAE;IACTH,QAAQ,EAAEA,QAAQ,CADT,EACS,CADT;IAETH,YAAY,EAAEK,UAAU,GAAItD,YAAY,GAAA,EAAA,GAAhB,CAAA,GApCK;EAkCpB,CAlCoB;EAsC/BwD,aAAa,EAAE;IACbf,KAAK,EADQ,MAAA;IAEbgB,aAAa,EAFA,KAAA;IAGbxB,cAAc,EAHD,QAAA;IAIbD,UAAU,EAJG,QAAA;IAKb0B,SAAS,EAAE1D,YAAY,GAAA,EAAA,GA3CM;EAsChB,CAtCgB;EA6C/B2D,UAAU,EAAE;IACVlB,KAAK,EAAEzC,YAAY,GAAA,EAAA,GADT,EAAA;IAEV4D,UAAU,EAFA,CAAA;IAGVC,aAAa,EAHH,CAAA;IAIVlB,eAAe,EAJL,KAAA;IAKVX,UAAU,EALA,QAAA;IAMVC,cAAc,EANJ,QAAA;IAOVW,YAAY,EAPF,EAAA;IAQVkB,WAAW,EAAE9D,YAAY,GAAA,EAAA,GArDI;EA6CnB,CA7CmB;EAuD/B+D,cAAc,EAAE;IACdZ,UAAU,EADI,gBAAA;IAEdC,QAAQ,EAAEA,QAAQ,CAzDW,EAyDX;EAFJ,CAvDe;EA2D/BY,YAAY,EAAE;IACZvB,KAAK,EAAEzC,YAAY,GAAA,EAAA,GADP,EAAA;IAEZ4D,UAAU,EAFE,CAAA;IAGZC,aAAa,EAHD,CAAA;IAIZlB,eAAe,EAJH,KAAA;IAKZX,UAAU,EALE,QAAA;IAMZC,cAAc,EANF,QAAA;IAOZW,YAAY,EAPA,EAAA;IAQZqB,WAAW,EARC,CAAA;IASZC,WAAW,EApEkB;EA2DjB,CA3DiB;EAsE/BC,gBAAgB,EAAE;IAChBhB,UAAU,EADM,gBAAA;IAEhBC,QAAQ,EAAEA,QAAQ,CAFF,EAEE,CAFF;IAGhBC,KAAK,EAzEwB;EAsEb,CAtEa;EA2E/Be,QAAQ,EAAE;IACRjB,UAAU,EADF,iBAAA;IAERC,QAAQ,EAAEA,QAAQ,CAFV,EAEU,CAFV;IAGRC,KAAK,EAHG,WAAA;IAIRgB,MAAM,EAAErE,YAAY,GAAA,EAAA,GA/ES;EA2ErB,CA3EqB;EAiF/BsE,wBAAwB,EAAE;IACxBtC,UAAU,EADc,QAAA;IAExBC,cAAc,EAFU,QAAA;IAGxBQ,KAAK,EApFT;EAiF4B;AAjFK,CAAlBZ,CAAf;AAwFA,eAAA,mBAAA","sourcesContent":["import React, { useState, useContext } from 'react';\nimport {\n  Alert,\n  View,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from 'react-native';\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport Spinner from 'react-native-spinkit';\nimport { setInternetCredentials } from 'react-native-keychain';\nimport { useTranslation } from 'react-i18next';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { NodeApiContext } from '@/components/NodeApiGate';\nimport { BACKUP_URL, ORANGE } from '@/utils/constants';\nimport { DEVICE_LARGE, DEVICE_IOS } from '@/utils/deviceConstants';\nimport {\n  DARK_ORANGE,\n  LIGHT_GREY,\n  DARKER_GREY,\n  WHITE,\n  BLACK,\n  LIGHT_BLACK,\n  GREEN,\n  GREY,\n} from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { useDispatch, useSelector } from '@/store';\nimport { validatePass } from '@/utils/password';\nimport {\n  setBackupCompleted,\n  setPassword,\n  updateNotifications,\n} from '@/actions';\nimport { backupAppData } from '@/components/Onboarding/RecoveryFlow/thunks/backupThunks';\n\nconst UploadAnimation = () => {\n  const { t } = useTranslation();\n\n  return (\n    <View style={styles.uploadAnimationContainer}>\n      <Text style={styles.textInfo}>{t('common.text.uploadingData')}</Text>\n      <Spinner\n        isVisible={true}\n        size={DEVICE_LARGE ? 80 : 65}\n        type=\"Wave\"\n        color={ORANGE}\n      />\n    </View>\n  );\n};\n\ntype props = StackScreenProps<ModalStackParamList, 'ChangePassword'>;\n\nconst ChangePasswordModal = ({ navigation }: props) => {\n  const dispatch = useDispatch();\n  const api = useContext(NodeApiContext);\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordAgain, setNewPasswordAgain] = useState('');\n  const [backupInProgress, setBackupInProgress] = useState(false);\n\n  const password = useSelector((state: State) => state.user.password);\n  const id = useSelector((state: State) => state.user.id);\n\n  const { t } = useTranslation();\n\n  const savePasswordHandler = async () => {\n    // check inputs\n    if (password && oldPassword !== password) {\n      Alert.alert(\n        t('profile.alert.title.passwordMatch'),\n        t('profile.alert.text.passwordMatch'),\n      );\n      return;\n    }\n    if (!validatePass(newPassword, newPasswordAgain)) return;\n\n    // save new password\n    try {\n      await setInternetCredentials(BACKUP_URL, id, newPassword);\n    } catch (err) {\n      console.log(err.message);\n    }\n    dispatch(setPassword(newPassword));\n\n    // backup data\n    setBackupInProgress(true);\n    try {\n      await dispatch(backupAppData());\n      dispatch(setBackupCompleted(true));\n    } catch (err) {\n      console.warn(err);\n    }\n    setBackupInProgress(false);\n\n    // update notifications to make sure the `set backup password` notification is removed\n    dispatch(updateNotifications(api));\n\n    // finally close modal\n    navigation.goBack();\n  };\n\n  return (\n    <View style={styles.container}>\n      <BlurWidget\n        style={styles.blurView}\n        blurType=\"dark\"\n        blurAmount={5}\n        reducedTransparencyFallbackColor={BLACK}\n      />\n      <View style={styles.modalContainer}>\n        {backupInProgress ? (\n          <UploadAnimation />\n        ) : (\n          <>\n            {password ? (\n              <View style={styles.inputGroup}>\n                <Text style={styles.label}>\n                  {t('profile.label.currentPassword')}\n                </Text>\n                <TextInput\n                  autoComplete=\"password\"\n                  autoCorrect={false}\n                  onChangeText={setOldPassword}\n                  value={oldPassword}\n                  placeholder={t('profile.label.currentPassword')}\n                  placeholderTextColor={GREY}\n                  secureTextEntry={true}\n                  style={styles.textInput}\n                  textContentType=\"password\"\n                  underlineColorAndroid=\"transparent\"\n                />\n              </View>\n            ) : null}\n            <View style={styles.inputGroup}>\n              <Text style={styles.label}>\n                {password\n                  ? t('profile.label.newPassword')\n                  : t('profile.label.password')}\n              </Text>\n              <TextInput\n                autoComplete=\"password\"\n                autoCorrect={false}\n                onChangeText={setNewPassword}\n                value={newPassword}\n                placeholder={\n                  password\n                    ? t('profile.placeholder.newPassword')\n                    : t('profile.placeholder.password')\n                }\n                placeholderTextColor={GREY}\n                secureTextEntry={true}\n                style={styles.textInput}\n                textContentType=\"password\"\n                underlineColorAndroid=\"transparent\"\n              />\n            </View>\n            <View style={styles.inputGroup}>\n              <Text style={styles.label}>\n                {t('profile.label.newPasswordAgain')}\n              </Text>\n              <TextInput\n                autoComplete=\"password\"\n                autoCorrect={false}\n                onChangeText={setNewPasswordAgain}\n                value={newPasswordAgain}\n                placeholder={t('profile.placeholder.newPasswordAgain')}\n                placeholderTextColor={GREY}\n                secureTextEntry={true}\n                style={styles.textInput}\n                textContentType=\"password\"\n                underlineColorAndroid=\"transparent\"\n              />\n            </View>\n            <View style={styles.saveContainer}>\n              <TouchableOpacity\n                style={styles.saveButton}\n                onPress={savePasswordHandler}\n              >\n                <Text style={styles.saveButtonText}>\n                  {t('common.button.save')}\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.cancelButton}\n                onPress={() => {\n                  navigation.goBack();\n                }}\n              >\n                <Text style={styles.cancelButtonText}>\n                  {t('common.button.cancel')}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  blurView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  photo: {\n    width: '100%',\n    flex: 1,\n  },\n  modalContainer: {\n    backgroundColor: WHITE,\n    width: '75%',\n    borderRadius: 25,\n    padding: DEVICE_LARGE ? 36 : 30,\n  },\n  inputGroup: {\n    borderBottomColor: LIGHT_GREY,\n    borderBottomWidth: 1,\n    marginBottom: DEVICE_LARGE ? 12 : 10,\n  },\n  label: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: DARK_ORANGE,\n    marginBottom: DEVICE_IOS ? (DEVICE_LARGE ? 15 : 13) : 0,\n  },\n  textInput: {\n    fontSize: fontSize[12],\n    marginBottom: DEVICE_IOS ? (DEVICE_LARGE ? 10 : 8) : 0,\n  },\n  saveContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: DEVICE_LARGE ? 14 : 12,\n  },\n  saveButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: GREEN,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    marginRight: DEVICE_LARGE ? 22 : 18,\n  },\n  saveButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n  },\n  cancelButton: {\n    width: DEVICE_LARGE ? 92 : 80,\n    paddingTop: 8,\n    paddingBottom: 7,\n    backgroundColor: WHITE,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: DARKER_GREY,\n  },\n  cancelButtonText: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[12],\n    color: DARKER_GREY,\n  },\n  textInfo: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[16],\n    color: LIGHT_BLACK,\n    margin: DEVICE_LARGE ? 12 : 10,\n  },\n  uploadAnimationContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n});\n\nexport default ChangePasswordModal;\n"]},"metadata":{},"sourceType":"module"}