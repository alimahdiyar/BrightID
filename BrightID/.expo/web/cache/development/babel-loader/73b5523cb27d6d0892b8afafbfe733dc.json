{"ast":null,"code":"import I18nManager from \"../I18nManager\";\nimport multiplyStyleLengthValue from \"../../modules/multiplyStyleLengthValue\";\nvar emptyObject = {};\nvar borderTopLeftRadius = 'borderTopLeftRadius';\nvar borderTopRightRadius = 'borderTopRightRadius';\nvar borderBottomLeftRadius = 'borderBottomLeftRadius';\nvar borderBottomRightRadius = 'borderBottomRightRadius';\nvar borderLeftColor = 'borderLeftColor';\nvar borderLeftStyle = 'borderLeftStyle';\nvar borderLeftWidth = 'borderLeftWidth';\nvar borderRightColor = 'borderRightColor';\nvar borderRightStyle = 'borderRightStyle';\nvar borderRightWidth = 'borderRightWidth';\nvar right = 'right';\nvar marginLeft = 'marginLeft';\nvar marginRight = 'marginRight';\nvar paddingLeft = 'paddingLeft';\nvar paddingRight = 'paddingRight';\nvar left = 'left';\nvar PROPERTIES_FLIP = {\n  borderTopLeftRadius: borderTopRightRadius,\n  borderTopRightRadius: borderTopLeftRadius,\n  borderBottomLeftRadius: borderBottomRightRadius,\n  borderBottomRightRadius: borderBottomLeftRadius,\n  borderLeftColor: borderRightColor,\n  borderLeftStyle: borderRightStyle,\n  borderLeftWidth: borderRightWidth,\n  borderRightColor: borderLeftColor,\n  borderRightStyle: borderLeftStyle,\n  borderRightWidth: borderLeftWidth,\n  left: right,\n  marginLeft: marginRight,\n  marginRight: marginLeft,\n  paddingLeft: paddingRight,\n  paddingRight: paddingLeft,\n  right: left\n};\nvar PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\nvar PROPERTIES_VALUE = {\n  clear: true,\n  float: true,\n  textAlign: true\n};\n\nvar additiveInverse = function additiveInverse(value) {\n  return multiplyStyleLengthValue(value, -1);\n};\n\nvar i18nStyle = function i18nStyle(originalStyle) {\n  var _I18nManager$getConst = I18nManager.getConstants(),\n      doLeftAndRightSwapInRTL = _I18nManager$getConst.doLeftAndRightSwapInRTL,\n      isRTL = _I18nManager$getConst.isRTL;\n\n  var style = originalStyle || emptyObject;\n  var frozenProps = {};\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp)) {\n      continue;\n    }\n\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n      var convertedProp = PROPERTIES_I18N[originalProp];\n      prop = isRTL ? PROPERTIES_FLIP[convertedProp] : convertedProp;\n    } else if (isRTL && doLeftAndRightSwapInRTL && PROPERTIES_FLIP[originalProp]) {\n      prop = PROPERTIES_FLIP[originalProp];\n    }\n\n    if (PROPERTIES_VALUE.hasOwnProperty(originalProp)) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        if (originalValue === 'left') {\n          value = 'right';\n        } else if (originalValue === 'right') {\n          value = 'left';\n        }\n      }\n    }\n\n    if (prop === 'transitionProperty') {\n      if (PROPERTIES_I18N.hasOwnProperty(value)) {\n        var convertedValue = PROPERTIES_I18N[originalValue];\n        value = isRTL ? PROPERTIES_FLIP[convertedValue] : convertedValue;\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        var flippedValue = PROPERTIES_FLIP[originalValue];\n\n        if (flippedValue != null) {\n          value = flippedValue;\n        }\n      }\n    }\n\n    if (isRTL && prop === 'textShadowOffset') {\n      var invertedValue = additiveInverse(value.width);\n      value.width = invertedValue;\n      nextStyle[prop] = value;\n    } else if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (PROPERTIES_I18N[originalProp]) {\n      frozenProps[prop] = true;\n    }\n  }\n\n  return nextStyle;\n};\n\nexport default i18nStyle;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/exports/StyleSheet/i18nStyle.js"],"names":["emptyObject","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRightColor","borderRightStyle","borderRightWidth","right","marginLeft","marginRight","paddingLeft","paddingRight","left","PROPERTIES_FLIP","PROPERTIES_I18N","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartColor","borderStartStyle","borderStartWidth","borderEndColor","borderEndStyle","borderEndWidth","end","marginStart","marginEnd","paddingStart","paddingEnd","start","PROPERTIES_VALUE","clear","float","textAlign","additiveInverse","multiplyStyleLengthValue","i18nStyle","doLeftAndRightSwapInRTL","isRTL","I18nManager","style","originalStyle","frozenProps","nextStyle","Object","originalValue","prop","value","convertedProp","convertedValue","flippedValue","invertedValue"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport I18nManager from '../I18nManager';\nimport multiplyStyleLengthValue from '../../modules/multiplyStyleLengthValue';\n\nconst emptyObject = {};\n\nconst borderTopLeftRadius = 'borderTopLeftRadius';\nconst borderTopRightRadius = 'borderTopRightRadius';\nconst borderBottomLeftRadius = 'borderBottomLeftRadius';\nconst borderBottomRightRadius = 'borderBottomRightRadius';\nconst borderLeftColor = 'borderLeftColor';\nconst borderLeftStyle = 'borderLeftStyle';\nconst borderLeftWidth = 'borderLeftWidth';\nconst borderRightColor = 'borderRightColor';\nconst borderRightStyle = 'borderRightStyle';\nconst borderRightWidth = 'borderRightWidth';\nconst right = 'right';\nconst marginLeft = 'marginLeft';\nconst marginRight = 'marginRight';\nconst paddingLeft = 'paddingLeft';\nconst paddingRight = 'paddingRight';\nconst left = 'left';\n\n// Map of LTR property names to their BiDi equivalent.\nconst PROPERTIES_FLIP = {\n  borderTopLeftRadius: borderTopRightRadius,\n  borderTopRightRadius: borderTopLeftRadius,\n  borderBottomLeftRadius: borderBottomRightRadius,\n  borderBottomRightRadius: borderBottomLeftRadius,\n  borderLeftColor: borderRightColor,\n  borderLeftStyle: borderRightStyle,\n  borderLeftWidth: borderRightWidth,\n  borderRightColor: borderLeftColor,\n  borderRightStyle: borderLeftStyle,\n  borderRightWidth: borderLeftWidth,\n  left: right,\n  marginLeft: marginRight,\n  marginRight: marginLeft,\n  paddingLeft: paddingRight,\n  paddingRight: paddingLeft,\n  right: left\n};\n\n// Map of I18N property names to their LTR equivalent.\nconst PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\n\nconst PROPERTIES_VALUE = {\n  clear: true,\n  float: true,\n  textAlign: true\n};\n\n// Invert the sign of a numeric-like value\nconst additiveInverse = (value: string | number) => multiplyStyleLengthValue(value, -1);\n\nconst i18nStyle = <T: {| [key: string]: any |}>(originalStyle: T): T => {\n  const { doLeftAndRightSwapInRTL, isRTL } = I18nManager.getConstants();\n  const style = originalStyle || emptyObject;\n  const frozenProps = {};\n  const nextStyle = {};\n\n  for (const originalProp in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp)) {\n      continue;\n    }\n    const originalValue = style[originalProp];\n    let prop = originalProp;\n    let value = originalValue;\n\n    // BiDi flip properties\n    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n      // convert start/end\n      const convertedProp = PROPERTIES_I18N[originalProp];\n      prop = isRTL ? PROPERTIES_FLIP[convertedProp] : convertedProp;\n    } else if (isRTL && doLeftAndRightSwapInRTL && (PROPERTIES_FLIP[originalProp]: any)) {\n      prop = PROPERTIES_FLIP[originalProp];\n    }\n\n    // BiDi flip values\n    if (PROPERTIES_VALUE.hasOwnProperty(originalProp)) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        if (originalValue === 'left') {\n          value = 'right';\n        } else if (originalValue === 'right') {\n          value = 'left';\n        }\n      }\n    }\n\n    // BiDi flip transitionProperty value\n    if (prop === 'transitionProperty') {\n      // BiDi flip properties\n      if (PROPERTIES_I18N.hasOwnProperty(value)) {\n        // convert start/end\n        const convertedValue = PROPERTIES_I18N[originalValue];\n        value = isRTL ? PROPERTIES_FLIP[convertedValue] : convertedValue;\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        const flippedValue = PROPERTIES_FLIP[(originalValue: any)];\n        if (flippedValue != null) {\n          value = flippedValue;\n        }\n      }\n    }\n\n    // Create finalized style\n    if (isRTL && prop === 'textShadowOffset') {\n      const invertedValue = additiveInverse((value: any).width);\n      (value: any).width = invertedValue;\n      nextStyle[prop] = value;\n    } else if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (PROPERTIES_I18N[originalProp]) {\n      frozenProps[prop] = true;\n    }\n  }\n\n  // $FlowIgnore\n  return nextStyle;\n};\n\nexport default i18nStyle;\n"]},"metadata":{},"sourceType":"module"}