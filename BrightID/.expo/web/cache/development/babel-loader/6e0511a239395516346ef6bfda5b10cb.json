{"ast":null,"code":"'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedProps from \"./nodes/AnimatedProps\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/vendor/react-native/Animated/AnimatedImplementation.js"],"names":["keys","Object","symbols","i","arguments","source","ownKeys","_defineProperty","key","value","enumerable","configurable","writable","obj","add","subtract","divide","multiply","modulo","diffClamp","_combineCallbacks","callback","config","maybeVectorAnim","configX","_objectSpread","configY","_config$key","x","y","aX","anim","aY","parallel","stopTogether","spring","_start","singleValue","singleConfig","configuration","start","stop","reset","_startNativeLoop","iterations","_isUsingNativeDriver","timing","_start2","decay","_start3","sequence","current","onComplete","result","animations","finished","idx","animation","doneCount","hasEnded","cb","endResult","delay","toValue","duration","useNativeDriver","stagger","time","loop","_ref","_temp","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","event","listener","animatedEvent","Value","ValueXY","Interpolation","Node","createAnimatedComponent","attachNativeEvent","forkEvent","unforkEvent","Event","__PropsOnlyForTests"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY); // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0; // Make sure we only call stop() at most once for each animation\n\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated.html\n */\n\n\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated.html#decay\n   */\n  decay: decay,\n\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated.html#timing\n   */\n  timing: timing,\n\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated.html#spring\n   */\n  spring: spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#add\n   */\n  add: add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#subtract\n   */\n  subtract: subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#divide\n   */\n  divide: divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#multiply\n   */\n  multiply: multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#modulo\n   */\n  modulo: modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated.html#diffclamp\n   */\n  diffClamp: diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated.html#delay\n   */\n  delay: delay,\n\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated.html#sequence\n   */\n  sequence: sequence,\n\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated.html#parallel\n   */\n  parallel: parallel,\n\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated.html#stagger\n   */\n  stagger: stagger,\n\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated.html#loop\n   */\n  loop: loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated.html#event\n   */\n  event: event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent: createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent: attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#forkevent\n   */\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};"]},"metadata":{},"sourceType":"module"}