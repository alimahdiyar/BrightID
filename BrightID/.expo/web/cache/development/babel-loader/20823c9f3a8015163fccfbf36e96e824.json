{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _filesystem = require(\"../../utils/filesystem\");\n\nvar _blur = require(\"@react-native-community/blur\");\n\nvar _colors = require(\"../../theme/colors\");\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/FullScreenPhoto.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar FullScreenPhoto = function FullScreenPhoto(_ref) {\n  var _route$params, _route$params2;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var photo = (_route$params = route.params) == null ? void 0 : _route$params.photo;\n  var base64 = (_route$params2 = route.params) == null ? void 0 : _route$params2.base64;\n  var uri = base64 ? photo : \"file://\" + (0, _filesystem.photoDirectory)() + \"/\" + (photo == null ? void 0 : photo.filename);\n  var imageSource = photo != null && photo.filename || base64 ? {\n    uri: uri\n  } : require(\"../../static/default_profile.jpg\");\n  var pan = (0, _react.useRef)(new _reactNative.Animated.ValueXY()).current;\n  var panResponder = (0, _react.useRef)(_reactNative.PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n      return true;\n    },\n    onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n      return true;\n    },\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n      return true;\n    },\n    onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      pan.setOffset({\n        x: pan.x._value,\n        y: pan.y._value\n      });\n    },\n    onPanResponderMove: _reactNative.Animated.event([null, {\n      dx: pan.x,\n      dy: pan.y\n    }], {\n      useNativeDriver: false\n    }),\n    onPanResponderRelease: function onPanResponderRelease() {\n      navigation.goBack();\n    }\n  })).current;\n  return _react.default.createElement(_blur.BlurView, {\n    style: [styles.container],\n    blurType: \"dark\",\n    blurAmount: 10,\n    reducedTransparencyFallbackColor: _colors.BLACK,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Animated.Image, (0, _extends2.default)({\n    source: imageSource,\n    style: [styles.photo, {\n      transform: [{\n        translateX: pan.x\n      }, {\n        translateY: pan.y\n      }]\n    }],\n    resizeMethod: \"scale\",\n    resizeMode: \"contain\"\n  }, panResponder.panHandlers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent'\n  },\n  photo: {\n    width: '100%',\n    flex: 1\n  }\n});\n\nvar _default = FullScreenPhoto;\nexports.default = _default;","map":{"version":3,"names":["FullScreenPhoto","route","navigation","photo","params","base64","uri","photoDirectory","filename","imageSource","require","pan","useRef","Animated","ValueXY","current","panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","setOffset","x","_value","y","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","goBack","styles","container","BLACK","transform","translateX","translateY","panHandlers","StyleSheet","flex","width","height","alignItems","justifyContent","backgroundColor"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Helpers/FullScreenPhoto.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Animated, StyleSheet, PanResponder } from 'react-native';\nimport { photoDirectory } from '@/utils/filesystem';\nimport BlurWidget from '@/components/BlurWidget/BlurWidget.web';\nimport { BLACK } from '@/theme/colors';\nimport { StackScreenProps } from '@react-navigation/stack';\n\ntype props = StackScreenProps<ModalStackParamList, 'FullScreenPhoto'>;\n\nconst FullScreenPhoto = ({ route, navigation }: props) => {\n  const photo = route.params?.photo;\n  const base64 = route.params?.base64;\n  const uri = base64 ? photo : `file://${photoDirectory()}/${photo?.filename}`;\n\n  const imageSource =\n    photo?.filename || base64\n      ? {\n          uri,\n        }\n      : require('@/static/default_profile.jpg');\n\n  const pan = useRef(new Animated.ValueXY()).current;\n\n  const panResponder = useRef(\n    PanResponder.create({\n      // Ask to be the responder:\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onPanResponderGrant: () => {\n        pan.setOffset({\n          // @ts-ignore\n          x: pan.x._value,\n          // @ts-ignore\n          y: pan.y._value,\n        });\n      },\n      onPanResponderMove: Animated.event([null, { dx: pan.x, dy: pan.y }], {\n        useNativeDriver: false,\n      }),\n      onPanResponderRelease: () => {\n        navigation.goBack();\n      },\n    }),\n  ).current;\n\n  return (\n    <BlurView\n      style={[styles.container]}\n      blurType=\"dark\"\n      blurAmount={10}\n      reducedTransparencyFallbackColor={BLACK}\n    >\n      <Animated.Image\n        source={imageSource}\n        style={[\n          styles.photo,\n          {\n            transform: [{ translateX: pan.x }, { translateY: pan.y }],\n          },\n        ]}\n        resizeMethod=\"scale\"\n        resizeMode=\"contain\"\n        {...panResponder.panHandlers}\n      />\n    </BlurView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  photo: {\n    width: '100%',\n    flex: 1,\n  },\n});\n\nexport default FullScreenPhoto;\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAKA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAkC;EAAA;;EAAA,IAA/BC,KAA+B,QAA/BA,KAA+B;EAAA,IAAxBC,UAAwB,QAAxBA,UAAwB;EACxD,IAAMC,KAAK,oBAAGF,KAAK,CAACG,MAAT,qBAAG,cAAcD,KAA5B;EACA,IAAME,MAAM,qBAAGJ,KAAK,CAACG,MAAT,qBAAG,eAAcC,MAA7B;EACA,IAAMC,GAAG,GAAGD,MAAM,GAAGF,KAAH,eAAqB,IAAAI,0BAAA,GAArB,UAAyCJ,KAAzC,oBAAyCA,KAAK,CAAEK,QAAhD,CAAlB;EAEA,IAAMC,WAAW,GACfN,KAAK,QAAL,IAAAA,KAAK,CAAEK,QAAP,IAAmBH,MAAnB,GACI;IACEC,GAAG,EAAHA;EADF,CADJ,GAIII,OAAO,oCALb;EAOA,IAAMC,GAAG,GAAG,IAAAC,aAAA,EAAO,IAAIC,qBAAA,CAASC,OAAb,EAAP,EAA+BC,OAA3C;EAEA,IAAMC,YAAY,GAAG,IAAAJ,aAAA,EACnBK,yBAAA,CAAaC,MAAb,CAAoB;IAElBC,4BAA4B,EAAE,sCAACC,GAAD,EAAMC,YAAN;MAAA,OAAuB,IAAvB;IAAA,CAFZ;IAGlBC,mCAAmC,EAAE,6CAACF,GAAD,EAAMC,YAAN;MAAA,OAAuB,IAAvB;IAAA,CAHnB;IAIlBE,2BAA2B,EAAE,qCAACH,GAAD,EAAMC,YAAN;MAAA,OAAuB,IAAvB;IAAA,CAJX;IAKlBG,kCAAkC,EAAE,4CAACJ,GAAD,EAAMC,YAAN;MAAA,OAAuB,IAAvB;IAAA,CALlB;IAMlBI,mBAAmB,EAAE,+BAAM;MACzBd,GAAG,CAACe,SAAJ,CAAc;QAEZC,CAAC,EAAEhB,GAAG,CAACgB,CAAJ,CAAMC,MAFG;QAIZC,CAAC,EAAElB,GAAG,CAACkB,CAAJ,CAAMD;MAJG,CAAd;IAMD,CAbiB;IAclBE,kBAAkB,EAAEjB,qBAAA,CAASkB,KAAT,CAAe,CAAC,IAAD,EAAO;MAAEC,EAAE,EAAErB,GAAG,CAACgB,CAAV;MAAaM,EAAE,EAAEtB,GAAG,CAACkB;IAArB,CAAP,CAAf,EAAiD;MACnEK,eAAe,EAAE;IADkD,CAAjD,CAdF;IAiBlBC,qBAAqB,EAAE,iCAAM;MAC3BjC,UAAU,CAACkC,MAAX;IACD;EAnBiB,CAApB,CADmB,EAsBnBrB,OAtBF;EAwBA,OACE,6BAAC,cAAD;IACE,KAAK,EAAE,CAACsB,MAAM,CAACC,SAAR,CADT;IAEE,QAAQ,EAAC,MAFX;IAGE,UAAU,EAAE,EAHd;IAIE,gCAAgC,EAAEC,aAJpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAME,6BAAC,qBAAD,CAAU,KAAV;IACE,MAAM,EAAE9B,WADV;IAEE,KAAK,EAAE,CACL4B,MAAM,CAAClC,KADF,EAEL;MACEqC,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAE9B,GAAG,CAACgB;MAAlB,CAAD,EAAwB;QAAEe,UAAU,EAAE/B,GAAG,CAACkB;MAAlB,CAAxB;IADb,CAFK,CAFT;IAQE,YAAY,EAAC,OARf;IASE,UAAU,EAAC;EATb,GAUMb,YAAY,CAAC2B,WAVnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GANF,CADF;AAqBD,CA3DD;;AA6DA,IAAMN,MAAM,GAAGO,uBAAA,CAAW1B,MAAX,CAAkB;EAC/BoB,SAAS,EAAE;IACTO,IAAI,EAAE,CADG;IAETC,KAAK,EAAE,MAFE;IAGTC,MAAM,EAAE,MAHC;IAITC,UAAU,EAAE,QAJH;IAKTC,cAAc,EAAE,QALP;IAMTC,eAAe,EAAE;EANR,CADoB;EAS/B/C,KAAK,EAAE;IACL2C,KAAK,EAAE,MADF;IAELD,IAAI,EAAE;EAFD;AATwB,CAAlB,CAAf;;eAee7C,e"},"metadata":{},"sourceType":"script"}