{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport CryptoJS from 'crypto-js';\nimport { eqProps } from 'ramda';\nimport nacl from 'tweetnacl';\nimport { convertPublicKey, convertSecretKey } from 'ed2curve';\nimport store from \"../store\";\nimport { b64ToUint8Array, randomKey, uInt8ArrayToB64 } from \"./encoding\";\nimport { selectConnectionById } from \"../reducer/connectionsSlice\";\nimport { saveImage } from \"./filesystem\";\nimport { INVITE_ACTIVE } from \"./constants\";\nexport var getInviteGroup = function _callee(inviteInfo, api) {\n  var _store$getState, secretKey, groups, existingGroup, conn, _await$api$getProfile, signingKeys, pub, msg, nonce, decryptedMessage, groupAesKey, group, res, data, infoString, info, groupObj, filename;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('getting invite group info', inviteInfo);\n          _store$getState = store.getState(), secretKey = _store$getState.keypair.secretKey, groups = _store$getState.groups.groups;\n          existingGroup = groups.find(function (g) {\n            return g.id === inviteInfo.group;\n          });\n\n          if (!(existingGroup && existingGroup.name && existingGroup.aesKey && existingGroup.aesKey !== '')) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", existingGroup);\n\n        case 6:\n          if (inviteInfo.data) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", undefined);\n\n        case 8:\n          conn = selectConnectionById(store.getState(), inviteInfo.inviter);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(api.getProfile(conn.id));\n\n        case 11:\n          _await$api$getProfile = _context.sent;\n          signingKeys = _await$api$getProfile.signingKeys;\n          pub = convertPublicKey(b64ToUint8Array(signingKeys[0]));\n          msg = b64ToUint8Array(inviteInfo.data.split('_')[0]);\n          nonce = b64ToUint8Array(inviteInfo.data.split('_')[1]);\n          decryptedMessage = nacl.box.open(msg, nonce, pub, convertSecretKey(secretKey));\n\n          if (decryptedMessage) {\n            _context.next = 19;\n            break;\n          }\n\n          return _context.abrupt(\"return\", undefined);\n\n        case 19:\n          groupAesKey = uInt8ArrayToB64(decryptedMessage);\n\n          if (groupAesKey) {\n            _context.next = 22;\n            break;\n          }\n\n          return _context.abrupt(\"return\", undefined);\n\n        case 22:\n          _context.next = 24;\n          return _regeneratorRuntime.awrap(api.getGroup(inviteInfo.group));\n\n        case 24:\n          group = _context.sent;\n          _context.next = 27;\n          return _regeneratorRuntime.awrap(fetch(group.url));\n\n        case 27:\n          res = _context.sent;\n          _context.next = 30;\n          return _regeneratorRuntime.awrap(res.text());\n\n        case 30:\n          data = _context.sent;\n\n          if (data) {\n            _context.next = 33;\n            break;\n          }\n\n          return _context.abrupt(\"return\", undefined);\n\n        case 33:\n          infoString = CryptoJS.AES.decrypt(data, groupAesKey).toString(CryptoJS.enc.Utf8);\n          info = JSON.parse(infoString);\n          groupObj = _objectSpread(_objectSpread({}, info), group);\n          filename = '';\n\n          if (!groupObj.photo) {\n            _context.next = 41;\n            break;\n          }\n\n          _context.next = 40;\n          return _regeneratorRuntime.awrap(saveImage({\n            imageName: groupObj.id,\n            base64Image: groupObj.photo\n          }));\n\n        case 40:\n          filename = _context.sent;\n\n        case 41:\n          groupObj.photo = {\n            filename: filename\n          };\n          groupObj.aesKey = groupAesKey;\n          return _context.abrupt(\"return\", groupObj);\n\n        case 46:\n          _context.prev = 46;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"error in getting invite info \" + _context.t0.message);\n          return _context.abrupt(\"return\", undefined);\n\n        case 50:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 46]], Promise);\n};\nexport var getInvites = function _callee3(api) {\n  var _store$getState2, id, _store$getState2$grou, oldInvites, inviteInfos, invites;\n\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _store$getState2 = store.getState(), id = _store$getState2.user.id, _store$getState2$grou = _store$getState2.groups.invites, oldInvites = _store$getState2$grou === void 0 ? [] : _store$getState2$grou;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(api.getInvites(id));\n\n        case 4:\n          inviteInfos = _context3.sent;\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(Promise.all(inviteInfos.map(function _callee2(inviteInfo) {\n            var oldInvite;\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    oldInvite = oldInvites.find(eqProps('id', inviteInfo));\n\n                    if (!(oldInvite && (oldInvite.group.name || !oldInvite.data))) {\n                      _context2.next = 5;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", _objectSpread(_objectSpread({}, inviteInfo), {}, {\n                      group: oldInvite.group,\n                      state: oldInvite.state\n                    }));\n\n                  case 5:\n                    _context2.t0 = _objectSpread;\n                    _context2.t1 = _objectSpread({}, inviteInfo);\n                    _context2.t2 = {};\n                    _context2.next = 10;\n                    return _regeneratorRuntime.awrap(getInviteGroup(inviteInfo, api));\n\n                  case 10:\n                    _context2.t3 = _context2.sent;\n                    _context2.t4 = INVITE_ACTIVE;\n                    _context2.t5 = {\n                      group: _context2.t3,\n                      state: _context2.t4\n                    };\n                    return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t1, _context2.t2, _context2.t5));\n\n                  case 14:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          })));\n\n        case 7:\n          invites = _context3.sent;\n          return _context3.abrupt(\"return\", invites.filter(function (invite) {\n            return invite.group;\n          }));\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"error in getting invite info \" + _context3.t0.message);\n          return _context3.abrupt(\"return\", []);\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\nexport var encryptAesKey = function _callee4(aesKey, signingKey) {\n  var secretKey, pub, msg, nonce;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          secretKey = store.getState().keypair.secretKey;\n          pub = convertPublicKey(b64ToUint8Array(signingKey));\n          msg = b64ToUint8Array(aesKey);\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(randomKey(24));\n\n        case 6:\n          nonce = _context4.sent;\n          return _context4.abrupt(\"return\", uInt8ArrayToB64(nacl.box(msg, b64ToUint8Array(nonce), pub, convertSecretKey(secretKey))) + \"_\" + nonce);\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0.message);\n          return _context4.abrupt(\"return\", '');\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};","map":{"version":3,"names":["CryptoJS","eqProps","nacl","convertPublicKey","convertSecretKey","store","b64ToUint8Array","randomKey","uInt8ArrayToB64","selectConnectionById","saveImage","INVITE_ACTIVE","getInviteGroup","inviteInfo","api","console","log","getState","secretKey","keypair","groups","existingGroup","find","g","id","group","name","aesKey","data","undefined","conn","inviter","getProfile","signingKeys","pub","msg","split","nonce","decryptedMessage","box","open","groupAesKey","getGroup","fetch","url","res","text","infoString","AES","decrypt","toString","enc","Utf8","info","JSON","parse","groupObj","filename","photo","imageName","base64Image","message","getInvites","user","invites","oldInvites","inviteInfos","Promise","all","map","oldInvite","state","filter","invite","encryptAesKey","signingKey"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/utils/invites.ts"],"sourcesContent":["import CryptoJS from 'crypto-js';\nimport { eqProps } from 'ramda';\nimport nacl from 'tweetnacl';\nimport { convertPublicKey, convertSecretKey } from 'ed2curve';\nimport store from '@/store';\nimport { b64ToUint8Array, randomKey, uInt8ArrayToB64 } from '@/utils/encoding';\nimport { selectConnectionById } from '@/reducer/connectionsSlice';\nimport { saveImage } from './filesystem';\nimport { INVITE_ACTIVE } from './constants';\nimport { NodeApi } from '@/api/brightId';\n\nexport const getInviteGroup = async (inviteInfo: InviteInfo, api: NodeApi) => {\n  try {\n    console.log('getting invite group info', inviteInfo);\n\n    const {\n      keypair: { secretKey },\n      groups: { groups },\n    } = store.getState();\n\n    const existingGroup = groups.find((g) => g.id === inviteInfo.group);\n    if (\n      existingGroup &&\n      existingGroup.name &&\n      existingGroup.aesKey &&\n      existingGroup.aesKey !== ''\n    ) {\n      return existingGroup;\n    }\n\n    if (!inviteInfo.data) {\n      return undefined;\n    }\n\n    const conn = selectConnectionById(store.getState(), inviteInfo.inviter);\n    const { signingKeys } = await api.getProfile(conn.id);\n    const pub = convertPublicKey(b64ToUint8Array(signingKeys[0]));\n    const msg = b64ToUint8Array(inviteInfo.data.split('_')[0]);\n    const nonce = b64ToUint8Array(inviteInfo.data.split('_')[1]);\n    const decryptedMessage = nacl.box.open(\n      msg,\n      nonce,\n      pub,\n      convertSecretKey(secretKey),\n    );\n    if (!decryptedMessage) {\n      // can happen if the user recovered his account after the invitation was created\n      return undefined;\n    }\n    const groupAesKey = uInt8ArrayToB64(decryptedMessage);\n    if (!groupAesKey) {\n      return undefined;\n    }\n\n    // const uuidKey = invite.url.split('/').pop();\n    const group = await api.getGroup(inviteInfo.group);\n    const res = await fetch(group.url);\n    const data = await res.text();\n    if (!data) {\n      return undefined;\n    }\n\n    const infoString = CryptoJS.AES.decrypt(data, groupAesKey).toString(\n      CryptoJS.enc.Utf8,\n    );\n    const info = JSON.parse(infoString);\n    const groupObj = { ...info, ...group };\n    let filename = '';\n    if (groupObj.photo) {\n      filename = await saveImage({\n        imageName: groupObj.id,\n        base64Image: groupObj.photo,\n      });\n    }\n    groupObj.photo = { filename };\n    groupObj.aesKey = groupAesKey;\n    return groupObj;\n  } catch (err) {\n    console.log(`error in getting invite info ${err.message}`);\n    return undefined;\n  }\n};\n\nexport const getInvites = async (api: NodeApi) => {\n  try {\n    const {\n      user: { id },\n      groups: { invites: oldInvites = [] },\n    } = store.getState();\n    const inviteInfos = await api.getInvites(id);\n    const invites: Array<Invite> = await Promise.all(\n      inviteInfos.map(async (inviteInfo) => {\n        const oldInvite = oldInvites.find(eqProps('id', inviteInfo));\n        if (oldInvite && (oldInvite.group.name || !oldInvite.data)) {\n          return {\n            ...inviteInfo,\n            group: oldInvite.group,\n            state: oldInvite.state,\n          };\n        } else {\n          return {\n            ...inviteInfo,\n            group: await getInviteGroup(inviteInfo, api),\n            state: INVITE_ACTIVE,\n          };\n        }\n      }),\n    );\n    // exclude invites where group could not be determined\n    return invites.filter((invite) => invite.group);\n  } catch (err) {\n    console.log(`error in getting invite info ${err.message}`);\n    return [];\n  }\n};\n\n/**\n *\n * @param {string} aesKey\n * @param {string} signingKey\n * @returns string\n */\n\nexport const encryptAesKey = async (aesKey: string, signingKey: string) => {\n  try {\n    const { secretKey } = store.getState().keypair;\n\n    const pub = convertPublicKey(b64ToUint8Array(signingKey));\n    const msg = b64ToUint8Array(aesKey);\n    const nonce = await randomKey(24);\n    return `${uInt8ArrayToB64(\n      nacl.box(msg, b64ToUint8Array(nonce), pub, convertSecretKey(secretKey)),\n    )}_${nonce}`;\n  } catch (err) {\n    console.log(err.message);\n    return '';\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}