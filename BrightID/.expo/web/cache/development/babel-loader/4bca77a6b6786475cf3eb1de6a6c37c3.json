{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HomeDrawer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNativeCodePush = _interopRequireDefault(require(\"react-native-code-push\"));\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _store = require(\"../store\");\n\nvar _walkthroughSlice = require(\"../reducer/walkthroughSlice\");\n\nvar _HomeScreen = _interopRequireDefault(require(\"../components/HomeScreen\"));\n\nvar _colors = require(\"../theme/colors\");\n\nvar _fonts = require(\"../theme/fonts\");\n\nvar _deviceConstants = require(\"../utils/deviceConstants\");\n\nvar _filesystem = require(\"../utils/filesystem\");\n\nvar _Home = _interopRequireDefault(require(\"../components/Icons/Home\"));\n\nvar _Pencil = _interopRequireDefault(require(\"../components/Icons/Pencil\"));\n\nvar _RecoveryAccount = _interopRequireDefault(require(\"../components/Icons/RecoveryAccount\"));\n\nvar _List = _interopRequireDefault(require(\"../components/Icons/List\"));\n\nvar _GraphQl = _interopRequireDefault(require(\"../components/Icons/GraphQl\"));\n\nvar _Faq = _interopRequireDefault(require(\"../components/Icons/Faq\"));\n\nvar _Mail = _interopRequireDefault(require(\"../components/Icons/Mail\"));\n\nvar _FindFriendsScreen = _interopRequireDefault(require(\"../components/FindFriends/FindFriendsScreen\"));\n\nvar _Devices = _interopRequireDefault(require(\"../components/Icons/Devices\"));\n\nvar _TasksScreen = _interopRequireDefault(require(\"../components/Tasks/TasksScreen\"));\n\nvar _BituVerificationScreen = _interopRequireDefault(require(\"../components/Tasks/BituVerificationScreen\"));\n\nvar _GraphExplorerScreen = _interopRequireDefault(require(\"../components/SideMenu/GraphExplorerScreen\"));\n\nvar _ContactUsScreen = _interopRequireDefault(require(\"../components/SideMenu/ContactUsScreen\"));\n\nvar _EditProfileScreen = _interopRequireDefault(require(\"../components/EditProfile/EditProfileScreen\"));\n\nvar _RecoveryConnectionsScreen = _interopRequireDefault(require(\"../components/RecoveryConnections/RecoveryConnectionsScreen\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/HomeDrawer.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar GroupsDrawerIcon = \"<svg width=\\\"27\\\" height=\\\"15\\\" viewBox=\\\"0 0 27 15\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M20.6249 8.55937C21.9093 9.43125 22.8093 10.6125 22.8093 12.1875V15H26.5593V12.1875C26.5593 10.1437 23.2124 8.93437 20.6249 8.55937Z\\\" fill=\\\"#ED7A5D\\\"/>\\n<path d=\\\"M13.4343 7.5C15.5054 7.5 17.1843 5.82107 17.1843 3.75C17.1843 1.67893 15.5054 0 13.4343 0C11.3633 0 9.68433 1.67893 9.68433 3.75C9.68433 5.82107 11.3633 7.5 13.4343 7.5Z\\\" fill=\\\"black\\\"/>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M19.0593 7.5C21.1312 7.5 22.8093 5.82187 22.8093 3.75C22.8093 1.67812 21.1312 0 19.0593 0C18.6187 0 18.2062 0.0937498 17.8124 0.225C18.5906 1.19062 19.0593 2.41875 19.0593 3.75C19.0593 5.08125 18.5906 6.30937 17.8124 7.275C18.2062 7.40625 18.6187 7.5 19.0593 7.5Z\\\" fill=\\\"#ED7A5D\\\"/>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M5.93439 8.55937C4.65001 9.43125 3.75001 10.6125 3.75001 12.1875V15H1.37877e-05V12.1875C1.37877e-05 10.1437 3.34689 8.93437 5.93439 8.55937Z\\\" fill=\\\"#ED7A5D\\\"/>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M7.50001 7.5C5.42814 7.5 3.75001 5.82187 3.75001 3.75C3.75001 1.67812 5.42814 0 7.50001 0C7.94064 0 8.35314 0.0937498 8.74689 0.225C7.96876 1.19062 7.50001 2.41875 7.50001 3.75C7.50001 5.08125 7.96876 6.30937 8.74689 7.275C8.35314 7.40625 7.94064 7.5 7.50001 7.5Z\\\" fill=\\\"#ED7A5D\\\"/>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M13.4343 8.4375C10.9312 8.4375 5.93433 9.69375 5.93433 12.1875V15H20.9343V12.1875C20.9343 9.69375 15.9374 8.4375 13.4343 8.4375Z\\\" fill=\\\"black\\\"/>\\n</svg>\\n\";\nvar FindFriendsIcon = \"<svg width=\\\"18\\\" height=\\\"22\\\" viewBox=\\\"0 0 18 22\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M11.4896 10.4896C14.3862 10.4896 16.7344 8.14142 16.7344 5.2448C16.7344 2.34818 14.3862 0 11.4896 0C8.59299 0 6.24481 2.34818 6.24481 5.2448C6.24481 8.14142 8.59299 10.4896 11.4896 10.4896Z\\\" fill=\\\"black\\\"/>\\n<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M9.29993 11.9713C7.50358 13.1907 6.24483 14.8428 6.24483 17.0456V20.9792H1.00003V17.0456C1.00003 14.1872 5.68102 12.4958 9.29993 11.9713Z\\\" fill=\\\"black\\\"/>\\n<path d=\\\"M3.0979 6.99307V11.1889\\\" stroke=\\\"#ED7A5D\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n<path d=\\\"M1 9.09097H5.19584\\\" stroke=\\\"#ED7A5D\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n<circle cx=\\\"12.0009\\\" cy=\\\"16.6029\\\" r=\\\"2.92964\\\" transform=\\\"rotate(-1.09823 12.0009 16.6029)\\\" stroke=\\\"#ED7A5D\\\" stroke-width=\\\"2\\\"/>\\n<path d=\\\"M14.4035 18.9151L16.4056 20.8419\\\" stroke=\\\"#ED7A5D\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\"/>\\n</svg>\\n\";\n\nvar CustomItem = function CustomItem(_ref) {\n  var onPress = _ref.onPress,\n      label = _ref.label,\n      Icon = _ref.icon,\n      focused = _ref.focused,\n      inactiveTintColor = _ref.inactiveTintColor,\n      activeTintColor = _ref.activeTintColor,\n      activeBackgroundColor = _ref.activeBackgroundColor,\n      inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n      testId = _ref.testId;\n  var dispatch = (0, _store.useDispatch)();\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    testID: testId,\n    activeOpacity: 0.3,\n    style: [styles.drawerItem, {\n      backgroundColor: focused ? activeBackgroundColor : inactiveBackgroundColor\n    }],\n    onPress: onPress,\n    onLayout: function onLayout(e) {\n      if (label === 'Edit Profile') {\n        var _e$nativeEvent;\n\n        dispatch((0, _walkthroughSlice.setEditProfileMenuLayout)((_e$nativeEvent = e.nativeEvent) == null ? void 0 : _e$nativeEvent.layout));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Icon, {\n    focused: focused,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: [styles.labelStyle, {\n      color: focused ? activeTintColor : inactiveTintColor\n    }],\n    onLayout: function onLayout(e) {\n      if (label === 'Edit Profile') {\n        var _e$nativeEvent2;\n\n        dispatch((0, _walkthroughSlice.setEditProfileTextLayout)((_e$nativeEvent2 = e.nativeEvent) == null ? void 0 : _e$nativeEvent2.layout));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, label));\n};\n\nvar CustomDrawerContent = function CustomDrawerContent(props) {\n  var state = props.state,\n      navigation = props.navigation;\n  var photoFilename = (0, _store.useSelector)(function (state) {\n    return state.user.photo.filename;\n  });\n  var name = (0, _store.useSelector)(function (state) {\n    return state.user.name;\n  });\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      profilePhoto = _useState2[0],\n      setProfilePhoto = _useState2[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _filesystem.retrieveImage)(photoFilename).then(setProfilePhoto);\n  var profileSource = profilePhoto ? {\n    uri: profilePhoto\n  } : {\n    uri: \"file://\" + (0, _filesystem.photoDirectory)() + \"/\" + photoFilename\n  };\n  return _react.default.createElement(_drawer.DrawerContentScrollView, (0, _extends2.default)({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.profileContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: profileSource,\n    style: styles.drawerPhoto,\n    accessibilityLabel: \"user photo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, name)), _react.default.createElement(CustomItem, {\n    testId: \"drawerHomeBtn\",\n    focused: false,\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.home'),\n    icon: function icon(_ref2) {\n      var focused = _ref2.focused;\n      return _react.default.createElement(_Home.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Home'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    testId: \"drawerEditProfileBtn\",\n    focused: state.routeNames[state.index] === 'Edit Profile',\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.editProfile'),\n    icon: function icon(_ref3) {\n      var focused = _ref3.focused;\n      return _react.default.createElement(_Pencil.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'Edit Profile'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    testId: \"drawerRecoveryConnectionsBtn\",\n    focused: state.routeNames[state.index] === 'Recovery Connections',\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: \"Recovery Connections\",\n    icon: function icon(_ref4) {\n      var focused = _ref4.focused;\n      return _react.default.createElement(_RecoveryAccount.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'Recovery Connections'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    testId: \"drawerAchievementsBtn\",\n    focused: state.routeNames[state.index] === 'Achievements',\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.achievements'),\n    icon: function icon(_ref5) {\n      var focused = _ref5.focused;\n      return _react.default.createElement(_List.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'Achievements'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    testId: \"drawerExplorerCodeBtn\",\n    focused: state.routeNames[state.index] === 'Copy Explorer Code',\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.copyExplorerCode'),\n    icon: function icon(_ref6) {\n      var focused = _ref6.focused;\n      return _react.default.createElement(_GraphQl.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'Copy Explorer Code'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    focused: false,\n    testId: \"groupsBtn\",\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.groups'),\n    icon: function icon() {\n      return _react.default.createElement(_reactNativeSvg.SvgXml, {\n        xml: GroupsDrawerIcon,\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'Groups'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    focused: false,\n    testId: \"findFriendsBtn\",\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.findFriends'),\n    icon: function icon() {\n      return _react.default.createElement(_reactNativeSvg.SvgXml, {\n        xml: FindFriendsIcon,\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'FindFriendsScreen'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    focused: false,\n    testId: \"devicesBtn\",\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.devices'),\n    icon: function icon(_ref7) {\n      var focused = _ref7.focused;\n      return _react.default.createElement(_Devices.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Devices'\n        }, {\n          name: 'Devices',\n          params: {\n            syncing: false,\n            asScanner: false\n          }\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    testId: \"drawerUpdateBtn\",\n    focused: false,\n    inactiveTintColor: _colors.BLACK,\n    inactiveBackgroundColor: _colors.WHITE,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.checkForUpdates'),\n    icon: function icon(_ref8) {\n      var focused = _ref8.focused;\n      return _react.default.createElement(_Faq.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      _reactNativeCodePush.default.sync({\n        updateDialog: {},\n        installMode: _reactNativeCodePush.default.InstallMode.IMMEDIATE\n      }, function (status) {\n        if (status === _reactNativeCodePush.default.SyncStatus.UP_TO_DATE) {\n          _reactNative.Alert.alert(t('drawer.alert.title.upToDate'), t('drawer.alert.text.upToDate'));\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(CustomItem, {\n    testId: \"drawerContactUsBtn\",\n    focused: state.routeNames[state.index] === 'ContactUs',\n    inactiveBackgroundColor: _colors.WHITE,\n    inactiveTintColor: _colors.BLACK,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: t('drawer.label.contactUs'),\n    icon: function icon(_ref9) {\n      var focused = _ref9.focused;\n      return _react.default.createElement(_Mail.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'ContactUs'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }\n  }), __DEV__ && _react.default.createElement(CustomItem, {\n    testId: \"drawerIconsBtn\",\n    focused: state.routeNames[state.index] === 'SampleIconPage',\n    inactiveBackgroundColor: _colors.WHITE,\n    inactiveTintColor: _colors.BLACK,\n    activeTintColor: _colors.WHITE,\n    activeBackgroundColor: _colors.ORANGE,\n    label: \"Sample Icon Page\",\n    icon: function icon(_ref10) {\n      var focused = _ref10.focused;\n      return _react.default.createElement(_List.default, {\n        width: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        height: _deviceConstants.DEVICE_LARGE ? 28 : 24,\n        color: focused ? _colors.GREY : _colors.BLACK,\n        highlight: focused ? _colors.WHITE : _colors.ORANGE,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }\n      });\n    },\n    onPress: function onPress() {\n      navigation.reset({\n        index: 1,\n        routes: [{\n          name: 'Home'\n        }, {\n          name: 'SampleIconPage'\n        }]\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar Drawer = (0, _drawer.createDrawerNavigator)();\n\nvar HomeDrawer = function HomeDrawer() {\n  var headerHeight = (0, _stack.useHeaderHeight)();\n\n  if (_deviceConstants.DEVICE_IOS && _deviceConstants.DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  return _react.default.createElement(Drawer.Navigator, {\n    drawerType: \"front\",\n    sceneContainerStyle: [styles.sceneContainer],\n    drawerStyle: [styles.drawer, {\n      marginTop: headerHeight\n    }],\n    drawerContentOptions: {\n      activeTintColor: _colors.WHITE,\n      inactiveTintColor: _colors.BLACK,\n      activeBackgroundColor: _colors.ORANGE,\n      inactiveBackgroundColor: _colors.WHITE,\n      itemStyle: styles.drawerItem,\n      labelStyle: styles.labelStyle\n    },\n    overlayColor: \"transparent\",\n    drawerContent: function drawerContent(props) {\n      return _react.default.createElement(CustomDrawerContent, (0, _extends2.default)({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: _HomeScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"Achievements\",\n    component: _TasksScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"FindFriendsScreen\",\n    component: _FindFriendsScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"BituVerification\",\n    component: _BituVerificationScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"Edit Profile\",\n    component: _EditProfileScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"Recovery Connections\",\n    component: _RecoveryConnectionsScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"Copy Explorer Code\",\n    component: _GraphExplorerScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Drawer.Screen, {\n    name: \"ContactUs\",\n    component: _ContactUsScreen.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }\n  }), __DEV__ && _react.default.createElement(Drawer.Screen, {\n    name: \"SampleIconPage\",\n    component: require(\"../components/Icons/SamplePage\").default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 9\n    }\n  }));\n};\n\nexports.HomeDrawer = HomeDrawer;\n\nvar styles = _reactNative.StyleSheet.create({\n  sceneContainer: {\n    backgroundColor: _colors.WHITE\n  },\n  drawer: {\n    width: '85%',\n    borderTopRightRadius: 40,\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  drawerPhoto: {\n    width: _deviceConstants.DEVICE_LARGE ? 48 : 42,\n    height: _deviceConstants.DEVICE_LARGE ? 48 : 42,\n    borderRadius: 71\n  },\n  profileContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    alignItems: 'center',\n    paddingLeft: _deviceConstants.DEVICE_LARGE ? 45 : 35,\n    paddingTop: _deviceConstants.DEVICE_LARGE ? 20 : 18,\n    paddingBottom: _deviceConstants.DEVICE_LARGE ? 30 : 25\n  },\n  userName: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    marginLeft: _deviceConstants.DEVICE_LARGE ? 20 : 18\n  },\n  drawerItem: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    marginVertical: 4,\n    marginHorizontal: 10,\n    overflow: 'hidden',\n    paddingLeft: _deviceConstants.DEVICE_LARGE ? 43 : 34,\n    paddingVertical: 10\n  },\n  labelStyle: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: _fonts.fontSize[16],\n    marginLeft: 16\n  }\n});","map":{"version":3,"names":["CustomItem","onPress","label","Icon","icon","focused","inactiveTintColor","activeTintColor","activeBackgroundColor","inactiveBackgroundColor","testId","dispatch","useDispatch","styles","drawerItem","backgroundColor","e","setEditProfileMenuLayout","nativeEvent","layout","labelStyle","color","setEditProfileTextLayout","CustomDrawerContent","props","state","navigation","photoFilename","useSelector","user","photo","filename","name","useState","profilePhoto","setProfilePhoto","useTranslation","t","retrieveImage","then","profileSource","uri","photoDirectory","profileContainer","drawerPhoto","userName","BLACK","WHITE","ORANGE","DEVICE_LARGE","GREY","reset","index","routes","routeNames","GroupsDrawerIcon","FindFriendsIcon","params","syncing","asScanner","codePush","sync","updateDialog","installMode","InstallMode","IMMEDIATE","status","SyncStatus","UP_TO_DATE","Alert","alert","__DEV__","Drawer","createDrawerNavigator","HomeDrawer","headerHeight","useHeaderHeight","DEVICE_IOS","sceneContainer","drawer","marginTop","itemStyle","HomeScreen","TasksScreen","FindFriendsScreen","BituVerificationScreen","EditProfileScreen","RecoveryConnectionsScreen","GraphExplorerScreen","ContactUsScreen","require","default","StyleSheet","create","width","borderTopRightRadius","shadowColor","shadowOpacity","shadowRadius","elevation","shadowOffset","height","borderRadius","flexDirection","alignItems","paddingLeft","paddingTop","paddingBottom","fontFamily","fontSize","marginLeft","justifyContent","marginVertical","marginHorizontal","overflow","paddingVertical"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/HomeDrawer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Alert,\n  Image,\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { useTranslation } from 'react-i18next';\nimport codePush from 'react-native-code-push';\nimport { SvgXml } from 'react-native-svg';\nimport { useDispatch, useSelector } from '@/store';\nimport {\n  setEditProfileMenuLayout,\n  setEditProfileTextLayout,\n} from '@/reducer/walkthroughSlice';\nimport HomeScreen from '@/components/HomeScreen';\nimport { BLACK, ORANGE, WHITE, GREY } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { DEVICE_LARGE, DEVICE_IOS } from '@/utils/deviceConstants';\nimport { retrieveImage, photoDirectory } from '@/utils/filesystem';\nimport Home from '@/components/Icons/Home';\nimport Pencil from '@/components/Icons/Pencil';\nimport RecoveryAccount from '@/components/Icons/RecoveryAccount';\nimport List from '@/components/Icons/List';\nimport GraphQl from '@/components/Icons/GraphQl';\nimport Faq from '@/components/Icons/Faq';\nimport Mail from '@/components/Icons/Mail';\nimport FindFriendsScreen from '@/components/FindFriends/FindFriendsScreen';\nimport Devices from '@/components/Icons/Devices';\nimport TasksScreen from '@/components/Tasks/TasksScreen';\nimport BituVerificationScreen from '@/components/Tasks/BituVerificationScreen';\nimport GraphExplorerScreen from '@/components/SideMenu/GraphExplorerScreen';\nimport ContactUsScreen from '@/components/SideMenu/ContactUsScreen';\nimport EditProfileScreen from '@/components/EditProfile/EditProfileScreen';\nimport RecoveryConnectionsScreen from '@/components/RecoveryConnections/RecoveryConnectionsScreen';\nimport GroupsDrawerIcon from '@/static/groups_drawer.svg';\nimport FindFriendsIcon from '@/static/findfriends_drawer.svg';\n\nconst CustomItem = ({\n  onPress,\n  label,\n  icon: Icon,\n  focused,\n  inactiveTintColor,\n  activeTintColor,\n  activeBackgroundColor,\n  inactiveBackgroundColor,\n  testId,\n}) => {\n  const dispatch = useDispatch();\n  return (\n    <TouchableOpacity\n      testID={testId}\n      activeOpacity={0.3}\n      style={[\n        styles.drawerItem,\n        {\n          backgroundColor: focused\n            ? activeBackgroundColor\n            : inactiveBackgroundColor,\n        },\n      ]}\n      onPress={onPress}\n      onLayout={(e) => {\n        if (label === 'Edit Profile') {\n          //  X / Y / Height of the entire menu element for walkthough box\n          dispatch(setEditProfileMenuLayout(e.nativeEvent?.layout));\n        }\n      }}\n    >\n      <Icon focused={focused} />\n      <Text\n        style={[\n          styles.labelStyle,\n          {\n            color: focused ? activeTintColor : inactiveTintColor,\n          },\n        ]}\n        onLayout={(e) => {\n          if (label === 'Edit Profile') {\n            // use text to determine proper width of walkthrough box\n            dispatch(setEditProfileTextLayout(e.nativeEvent?.layout));\n          }\n        }}\n      >\n        {label}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst CustomDrawerContent = (props) => {\n  const { state, navigation } = props;\n  // selectors\n  const photoFilename = useSelector(\n    (state: State) => state.user.photo.filename,\n  );\n  const name = useSelector((state: State) => state.user.name);\n  // keep profile photo up to date\n  const [profilePhoto, setProfilePhoto] = useState('');\n  const { t } = useTranslation();\n\n  retrieveImage(photoFilename).then(setProfilePhoto);\n\n  // prevent console error and blank photo\n  const profileSource = profilePhoto\n    ? {\n        uri: profilePhoto,\n      }\n    : {\n        uri: `file://${photoDirectory()}/${photoFilename}`,\n      };\n\n  return (\n    <DrawerContentScrollView {...props}>\n      <View style={styles.profileContainer}>\n        <Image\n          source={profileSource}\n          style={styles.drawerPhoto}\n          accessibilityLabel=\"user photo\"\n        />\n        <Text style={styles.userName}>{name}</Text>\n      </View>\n      <CustomItem\n        testId=\"drawerHomeBtn\"\n        focused={false}\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.home')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={({ focused }) => (\n          <Home\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 0,\n            routes: [{ name: 'Home' }],\n          });\n        }}\n      />\n      <CustomItem\n        testId=\"drawerEditProfileBtn\"\n        focused={state.routeNames[state.index] === 'Edit Profile'}\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.editProfile')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={({ focused }) => (\n          <Pencil\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'Edit Profile' }],\n          });\n        }}\n      />\n      <CustomItem\n        testId=\"drawerRecoveryConnectionsBtn\"\n        focused={state.routeNames[state.index] === 'Recovery Connections'}\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label=\"Recovery Connections\"\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={({ focused }) => (\n          <RecoveryAccount\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'Recovery Connections' }],\n          });\n        }}\n      />\n      <CustomItem\n        testId=\"drawerAchievementsBtn\"\n        focused={state.routeNames[state.index] === 'Achievements'}\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.achievements')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={({ focused }) => (\n          <List\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'Achievements' }],\n          });\n        }}\n      />\n\n      <CustomItem\n        testId=\"drawerExplorerCodeBtn\"\n        focused={state.routeNames[state.index] === 'Copy Explorer Code'}\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.copyExplorerCode')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={({ focused }) => (\n          <GraphQl\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'Copy Explorer Code' }],\n          });\n        }}\n      />\n      <CustomItem\n        focused={false}\n        testId=\"groupsBtn\"\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.groups')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={() => (\n          <SvgXml\n            xml={GroupsDrawerIcon}\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'Groups' }],\n          });\n        }}\n      />\n      <CustomItem\n        focused={false}\n        testId=\"findFriendsBtn\"\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.findFriends')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={() => (\n          <SvgXml\n            xml={FindFriendsIcon}\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'FindFriendsScreen' }],\n          });\n        }}\n      />\n\n      <CustomItem\n        focused={false}\n        testId=\"devicesBtn\"\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.devices')}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        icon={({ focused }) => (\n          <Devices\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [\n              { name: 'Devices' },\n              { name: 'Devices', params: { syncing: false, asScanner: false } },\n            ],\n          });\n        }}\n      />\n\n      <CustomItem\n        testId=\"drawerUpdateBtn\"\n        focused={false}\n        inactiveTintColor={BLACK}\n        inactiveBackgroundColor={WHITE}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.checkForUpdates')}\n        icon={({ focused }) => (\n          <Faq\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          codePush.sync(\n            {\n              updateDialog: {},\n              installMode: codePush.InstallMode.IMMEDIATE,\n            },\n            (status) => {\n              if (status === codePush.SyncStatus.UP_TO_DATE) {\n                Alert.alert(\n                  t('drawer.alert.title.upToDate'),\n                  t('drawer.alert.text.upToDate'),\n                );\n              }\n            },\n          );\n        }}\n      />\n      <CustomItem\n        testId=\"drawerContactUsBtn\"\n        focused={state.routeNames[state.index] === 'ContactUs'}\n        // style={styles.drawerItem}\n        // labelStyle={styles.labelStyle}\n        inactiveBackgroundColor={WHITE}\n        inactiveTintColor={BLACK}\n        activeTintColor={WHITE}\n        activeBackgroundColor={ORANGE}\n        label={t('drawer.label.contactUs')}\n        icon={({ focused }) => (\n          <Mail\n            width={DEVICE_LARGE ? 28 : 24}\n            height={DEVICE_LARGE ? 28 : 24}\n            color={focused ? GREY : BLACK}\n            highlight={focused ? WHITE : ORANGE}\n          />\n        )}\n        onPress={() => {\n          navigation.reset({\n            index: 1,\n            routes: [{ name: 'Home' }, { name: 'ContactUs' }],\n          });\n        }}\n      />\n      {__DEV__ && (\n        <CustomItem\n          testId=\"drawerIconsBtn\"\n          focused={state.routeNames[state.index] === 'SampleIconPage'}\n          // style={styles.drawerItem}\n          // labelStyle={styles.labelStyle}\n          inactiveBackgroundColor={WHITE}\n          inactiveTintColor={BLACK}\n          activeTintColor={WHITE}\n          activeBackgroundColor={ORANGE}\n          label=\"Sample Icon Page\"\n          icon={({ focused }) => (\n            <List\n              width={DEVICE_LARGE ? 28 : 24}\n              height={DEVICE_LARGE ? 28 : 24}\n              color={focused ? GREY : BLACK}\n              highlight={focused ? WHITE : ORANGE}\n            />\n          )}\n          onPress={() => {\n            navigation.reset({\n              index: 1,\n              routes: [{ name: 'Home' }, { name: 'SampleIconPage' }],\n            });\n          }}\n        />\n      )}\n    </DrawerContentScrollView>\n  );\n};\n\nconst Drawer = createDrawerNavigator();\n\nexport const HomeDrawer = () => {\n  let headerHeight = useHeaderHeight();\n  if (DEVICE_IOS && DEVICE_LARGE) {\n    headerHeight += 7;\n  }\n\n  return (\n    <Drawer.Navigator\n      drawerType=\"front\"\n      sceneContainerStyle={[styles.sceneContainer]}\n      drawerStyle={[styles.drawer, { marginTop: headerHeight }]}\n      drawerContentOptions={{\n        activeTintColor: WHITE,\n        inactiveTintColor: BLACK,\n        activeBackgroundColor: ORANGE,\n        inactiveBackgroundColor: WHITE,\n        itemStyle: styles.drawerItem,\n        labelStyle: styles.labelStyle,\n      }}\n      overlayColor=\"transparent\"\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\n    >\n      <Drawer.Screen name=\"Home\" component={HomeScreen} />\n      <Drawer.Screen name=\"Achievements\" component={TasksScreen} />\n      <Drawer.Screen name=\"FindFriendsScreen\" component={FindFriendsScreen} />\n      <Drawer.Screen\n        name=\"BituVerification\"\n        component={BituVerificationScreen}\n      />\n      <Drawer.Screen name=\"Edit Profile\" component={EditProfileScreen} />\n      <Drawer.Screen\n        name=\"Recovery Connections\"\n        component={RecoveryConnectionsScreen}\n      />\n      <Drawer.Screen\n        name=\"Copy Explorer Code\"\n        component={GraphExplorerScreen}\n      />\n      <Drawer.Screen name=\"ContactUs\" component={ContactUsScreen} />\n      {__DEV__ && (\n        <Drawer.Screen\n          name=\"SampleIconPage\"\n          component={require('@/components/Icons/SamplePage').default}\n        />\n      )}\n    </Drawer.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sceneContainer: {\n    backgroundColor: WHITE,\n  },\n  drawer: {\n    width: '85%',\n    borderTopRightRadius: 40,\n    shadowColor: 'rgba(196, 196, 196, 0.25)',\n    shadowOpacity: 1,\n    shadowRadius: 15,\n    elevation: 15,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n  },\n  drawerPhoto: {\n    width: DEVICE_LARGE ? 48 : 42,\n    height: DEVICE_LARGE ? 48 : 42,\n    borderRadius: 71,\n  },\n  profileContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    alignItems: 'center',\n    paddingLeft: DEVICE_LARGE ? 45 : 35,\n    paddingTop: DEVICE_LARGE ? 20 : 18,\n    paddingBottom: DEVICE_LARGE ? 30 : 25,\n  },\n  userName: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    marginLeft: DEVICE_LARGE ? 20 : 18,\n  },\n  drawerItem: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    marginVertical: 4,\n    marginHorizontal: 10,\n    overflow: 'hidden',\n    paddingLeft: DEVICE_LARGE ? 43 : 34,\n    paddingVertical: 10,\n  },\n  labelStyle: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n    marginLeft: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}