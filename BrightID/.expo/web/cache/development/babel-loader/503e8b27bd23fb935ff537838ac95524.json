{"ast":null,"code":"'use strict';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport invariant from 'fbjs/lib/invariant';\n\nvar ViewabilityHelper = function () {\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  };\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange: renderRange,\n        itemCount: itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  };\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  };\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  };\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    var _this2 = this;\n\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          key = _step$value[0],\n          viewable = _step$value[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          _key = _step2$value[0],\n          _viewable = _step2$value[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js"],"names":["keys","Object","symbols","i","arguments","source","ownKeys","_defineProperty","key","value","enumerable","configurable","writable","obj","o","Symbol","Array","it","_unsupportedIterableToArray","allowArrayLike","done","_arrayLikeToArray","n","len","arr","arr2","ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_proto","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","invariant","viewableIndices","itemCount","firstVisible","_ref","renderRange","first","last","console","JSON","idx","metrics","getFrameMetrics","top","bottom","_isViewable","_this","v","handle","setTimeout","_this2","viewableIndicesToCheck","prevItems","nextItems","viewable","createViewToken","changed","_iterator","_createForOfIteratorHelperLoose","_step","_step$value","_iterator2","_step2","_step2$value","_key","_viewable","_objectSpread","isViewable","onViewableItemsChanged","viewableItems","viewabilityConfig","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nvar ViewabilityHelper = /*#__PURE__*/function () {\n  function ViewabilityHelper(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  var _proto = ViewabilityHelper.prototype;\n\n  _proto.dispose = function dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  ;\n\n  _proto.computeViewableItems = function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange: renderRange,\n        itemCount: itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  ;\n\n  _proto.onUpdate = function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n    var _this = this;\n\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n      return v === viewableIndices[ii];\n    })) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(function () {\n        _this._timers.delete(handle);\n\n        _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  ;\n\n  _proto.resetViewableIndices = function resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  ;\n\n  _proto.recordInteraction = function recordInteraction() {\n    this._hasInteracted = true;\n  };\n\n  _proto._onUpdateSync = function _onUpdateSync( // $FlowFixMe\n  viewableIndicesToCheck, // $FlowFixMe\n  onViewableItemsChanged, // $FlowFixMe\n  createViewToken) {\n    var _this2 = this;\n\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n      return _this2._viewableIndices.includes(ii);\n    });\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          key = _step$value[0],\n          viewable = _step$value[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          _key = _step2$value[0],\n          _viewable = _step2$value[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed: changed,\n        viewabilityConfig: this._config\n      });\n    }\n  };\n\n  return ViewabilityHelper;\n}();\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;"]},"metadata":{},"sourceType":"module"}