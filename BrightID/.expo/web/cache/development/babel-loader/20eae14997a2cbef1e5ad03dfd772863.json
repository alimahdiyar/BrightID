{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { create } from 'apisauce';\nimport nacl from 'tweetnacl';\nimport stringify from 'fast-json-stable-stringify';\nimport { strToUint8Array, uInt8ArrayToB64, hash, b64ToUint8Array } from \"../utils/encoding\";\nimport BrightidError from \"./brightidError\";\nvar v = 6;\nexport var NodeApi = function () {\n  function NodeApi(_ref) {\n    var url = _ref.url,\n        secretKey = _ref.secretKey,\n        id = _ref.id,\n        monitor = _ref.monitor;\n\n    _classCallCheck(this, NodeApi);\n\n    this.baseUrlInternal = url;\n    this.id = id;\n    this.secretKey = secretKey;\n    this.api = create({\n      baseURL: this.apiUrl,\n      headers: {\n        'Cache-Control': 'no-cache'\n      },\n      timeout: 60 * 1000\n    });\n    monitor && this.api.addMonitor(function (response) {\n      return monitor(response);\n    });\n  }\n\n  _createClass(NodeApi, [{\n    key: \"baseUrl\",\n    get: function get() {\n      return this.baseUrlInternal;\n    },\n    set: function set(url) {\n      this.baseUrlInternal = url;\n      this.api.setBaseURL(this.apiUrl);\n    }\n  }, {\n    key: \"apiUrl\",\n    get: function get() {\n      return this.baseUrl + \"/brightid/v\" + v;\n    }\n  }, {\n    key: \"submitOp\",\n    value: function submitOp(signedOp, message) {\n      var res, submittedOp;\n      return _regeneratorRuntime.async(function submitOp$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.api.post(\"/operations\", signedOp));\n\n            case 2:\n              res = _context.sent;\n              NodeApi.throwOnError(res);\n              submittedOp = signedOp;\n              submittedOp.hash = NodeApi.checkHash(res, message);\n              submittedOp.postTimestamp = Date.now();\n              return _context.abrupt(\"return\", submittedOp);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"requiresCredentials\",\n    value: function requiresCredentials() {\n      if (this.id === undefined || this.secretKey === undefined) {\n        throw new Error('Missing API credentials');\n      }\n    }\n  }, {\n    key: \"addConnection\",\n    value: function addConnection(id1, id2, level, timestamp, reportReason, requestProof, fakeUser) {\n      var sk, name, op, message;\n      return _regeneratorRuntime.async(function addConnection$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.requiresCredentials();\n              sk = fakeUser ? b64ToUint8Array(fakeUser.secretKey) : this.secretKey;\n              name = 'Connect';\n              op = {\n                name: name,\n                id1: id1,\n                id2: id2,\n                level: level,\n                timestamp: timestamp,\n                v: v\n              };\n\n              if (reportReason) {\n                op.reportReason = reportReason;\n              }\n\n              if (requestProof) {\n                op.requestProof = requestProof;\n              }\n\n              message = stringify(op);\n              console.log(\"Connect message: \" + message);\n              op.sig1 = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), sk));\n              return _context2.abrupt(\"return\", this.submitOp(op, message));\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"createGroup\",\n    value: function createGroup(groupId, url, type) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function createGroup$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Add Group';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                group: groupId,\n                url: url,\n                type: type,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context3.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(dismissee, group) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function dismiss$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Dismiss';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                dismisser: this.id,\n                dismissee: dismissee,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context4.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"invite\",\n    value: function invite(invitee, group, data) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function invite$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Invite';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                inviter: this.id,\n                invitee: invitee,\n                group: group,\n                data: data,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context5.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addAdmin\",\n    value: function addAdmin(newAdmin, group) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function addAdmin$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Add Admin';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                admin: newAdmin,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context6.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"deleteGroup\",\n    value: function deleteGroup(group) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function deleteGroup$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Remove Group';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context7.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"joinGroup\",\n    value: function joinGroup(group, fakeUser) {\n      var brightId, secretKey, name, timestamp, op, message;\n      return _regeneratorRuntime.async(function joinGroup$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this.requiresCredentials();\n\n              if (fakeUser) {\n                brightId = fakeUser.id;\n                secretKey = b64ToUint8Array(fakeUser.secretKey);\n              } else {\n                brightId = this.id;\n                secretKey = this.secretKey;\n              }\n\n              name = 'Add Membership';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: brightId,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), secretKey));\n              return _context8.abrupt(\"return\", this.submitOp(op, message));\n\n            case 8:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"leaveGroup\",\n    value: function leaveGroup(group) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function leaveGroup$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Remove Membership';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                group: group,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context9.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"socialRecovery\",\n    value: function socialRecovery(params) {\n      var op, message;\n      return _regeneratorRuntime.async(function socialRecovery$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              op = {\n                name: 'Social Recovery',\n                id: params.id,\n                signingKey: params.signingKey,\n                timestamp: params.timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.id1 = params.id1;\n              op.id2 = params.id2;\n              op.sig1 = params.sig1;\n              op.sig2 = params.sig2;\n              return _context10.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addSigningKey\",\n    value: function addSigningKey(signingKey) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function addSigningKey$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Add Signing Key';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                signingKey: signingKey,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context11.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"removeSigningKey\",\n    value: function removeSigningKey(signingKey) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function removeSigningKey$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Remove Signing Key';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                signingKey: signingKey,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              return _context12.abrupt(\"return\", this.submitOp(op, message));\n\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"linkContextId\",\n    value: function linkContextId(context, contextId) {\n      var name, timestamp, op, message, api, res, submittedOp;\n      return _regeneratorRuntime.async(function linkContextId$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              this.requiresCredentials();\n              name = 'Link ContextId';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                id: this.id,\n                context: context,\n                contextId: contextId,\n                timestamp: timestamp,\n                v: 5\n              };\n              message = stringify(op);\n              op.sig = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), this.secretKey));\n              api = create({\n                baseURL: this.baseUrl + \"/brightid/v5\",\n                headers: {\n                  'Cache-Control': 'no-cache'\n                }\n              });\n              _context13.next = 9;\n              return _regeneratorRuntime.awrap(api.post(\"/operations\", op));\n\n            case 9:\n              res = _context13.sent;\n              NodeApi.throwOnError(res);\n              submittedOp = op;\n              submittedOp.hash = NodeApi.checkHash(res, message);\n              submittedOp.postTimestamp = Date.now();\n              return _context13.abrupt(\"return\", submittedOp);\n\n            case 15:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(id) {\n      var res;\n      return _regeneratorRuntime.async(function getGroup$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/groups/\" + id));\n\n            case 2:\n              res = _context14.sent;\n              NodeApi.throwOnError(res);\n              return _context14.abrupt(\"return\", res.data.data);\n\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(id) {\n      var requester, url, res;\n      return _regeneratorRuntime.async(function getProfile$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              requester = this.id;\n              url = \"/users/\" + id + \"/profile/\" + (requester || '');\n              _context15.next = 4;\n              return _regeneratorRuntime.awrap(this.api.get(url));\n\n            case 4:\n              res = _context15.sent;\n              NodeApi.throwOnError(res);\n              return _context15.abrupt(\"return\", res.data.data);\n\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getVerifications\",\n    value: function getVerifications(id) {\n      var res;\n      return _regeneratorRuntime.async(function getVerifications$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/users/\" + id + \"/verifications\"));\n\n            case 2:\n              res = _context16.sent;\n              NodeApi.throwOnError(res);\n              return _context16.abrupt(\"return\", res.data.data.verifications);\n\n            case 5:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getConnections\",\n    value: function getConnections(id, direction) {\n      var _data;\n\n      var res;\n      return _regeneratorRuntime.async(function getConnections$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/users/\" + id + \"/connections/\" + direction));\n\n            case 2:\n              res = _context17.sent;\n              NodeApi.throwOnError(res);\n              return _context17.abrupt(\"return\", (_data = res.data.data) == null ? void 0 : _data.connections);\n\n            case 5:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getMemberships\",\n    value: function getMemberships(id) {\n      var _data2;\n\n      var res;\n      return _regeneratorRuntime.async(function getMemberships$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/users/\" + id + \"/memberships\"));\n\n            case 2:\n              res = _context18.sent;\n              NodeApi.throwOnError(res);\n              return _context18.abrupt(\"return\", (_data2 = res.data.data) == null ? void 0 : _data2.memberships);\n\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getInvites\",\n    value: function getInvites(id) {\n      var _data3;\n\n      var res;\n      return _regeneratorRuntime.async(function getInvites$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/users/\" + id + \"/invites\"));\n\n            case 2:\n              res = _context19.sent;\n              NodeApi.throwOnError(res);\n              return _context19.abrupt(\"return\", (_data3 = res.data.data) == null ? void 0 : _data3.invites);\n\n            case 5:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getOperationState\",\n    value: function getOperationState(opHash) {\n      var res;\n      return _regeneratorRuntime.async(function getOperationState$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/operations/\" + opHash));\n\n            case 2:\n              res = _context20.sent;\n\n              if (!(res.status === 404)) {\n                _context20.next = 5;\n                break;\n              }\n\n              return _context20.abrupt(\"return\", {\n                state: 'unknown',\n                result: ''\n              });\n\n            case 5:\n              NodeApi.throwOnError(res);\n              return _context20.abrupt(\"return\", res.data.data);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getApps\",\n    value: function getApps() {\n      var _data4;\n\n      var res;\n      return _regeneratorRuntime.async(function getApps$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/apps\"));\n\n            case 2:\n              res = _context21.sent;\n              NodeApi.throwOnError(res);\n              return _context21.abrupt(\"return\", (_data4 = res.data.data) == null ? void 0 : _data4.apps);\n\n            case 5:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      var res;\n      return _regeneratorRuntime.async(function getState$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/state\"));\n\n            case 2:\n              res = _context22.sent;\n              NodeApi.throwOnError(res);\n              return _context22.abrupt(\"return\", res.data.data);\n\n            case 5:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getPublic\",\n    value: function getPublic(app, roundedTimestamp, verification) {\n      var res;\n      return _regeneratorRuntime.async(function getPublic$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              console.log(15, app, roundedTimestamp, verification);\n              _context23.next = 3;\n              return _regeneratorRuntime.awrap(this.api.get(\"/verifications/blinded/public\", {\n                app: app,\n                roundedTimestamp: roundedTimestamp,\n                verification: verification\n              }));\n\n            case 3:\n              res = _context23.sent;\n              NodeApi.throwOnError(res);\n              return _context23.abrupt(\"return\", res.data.data.public);\n\n            case 6:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getBlindedSig\",\n    value: function getBlindedSig(pub, sig, e) {\n      var res;\n      return _regeneratorRuntime.async(function getBlindedSig$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/verifications/blinded/sig/\" + this.id, {\n                public: pub,\n                sig: sig,\n                e: e\n              }));\n\n            case 2:\n              res = _context24.sent;\n              NodeApi.throwOnError(res);\n              return _context24.abrupt(\"return\", res.data.data.response);\n\n            case 5:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"linkAppId\",\n    value: function linkAppId(sig, appId) {\n      var res;\n      return _regeneratorRuntime.async(function linkAppId$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              console.log(\"/verifications/\" + sig.app + \"/\" + appId);\n              console.log({\n                sig: sig.sig,\n                uid: sig.uid,\n                verification: sig.verification,\n                roundedTimestamp: sig.roundedTimestamp\n              });\n              _context25.next = 4;\n              return _regeneratorRuntime.awrap(this.api.post(\"/verifications/\" + sig.app + \"/\" + appId, {\n                sig: sig.sig,\n                uid: sig.uid,\n                verification: sig.verification,\n                roundedTimestamp: sig.roundedTimestamp\n              }));\n\n            case 4:\n              res = _context25.sent;\n              NodeApi.throwOnError(res);\n\n            case 6:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"spendSponsorship\",\n    value: function spendSponsorship(appId, appUserId) {\n      var name, timestamp, op, message;\n      return _regeneratorRuntime.async(function spendSponsorship$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              name = 'Spend Sponsorship';\n              timestamp = Date.now();\n              op = {\n                name: name,\n                app: appId,\n                appUserId: appUserId,\n                timestamp: timestamp,\n                v: v\n              };\n              message = stringify(op);\n              return _context26.abrupt(\"return\", this.submitOp(op, message));\n\n            case 5:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSponsorship\",\n    value: function getSponsorship(appUserId) {\n      var res;\n      return _regeneratorRuntime.async(function getSponsorship$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return _regeneratorRuntime.awrap(this.api.get(\"/sponsorships/\" + appUserId));\n\n            case 2:\n              res = _context27.sent;\n              NodeApi.throwOnError(res);\n              return _context27.abrupt(\"return\", res.data.data);\n\n            case 5:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"checkHash\",\n    value: function checkHash(response, message) {\n      var _response$data$data, _response$data$data2;\n\n      if (((_response$data$data = response.data.data) == null ? void 0 : _response$data$data.hash) !== hash(message)) {\n        throw new Error('Invalid operation hash returned from server');\n      }\n\n      return (_response$data$data2 = response.data.data) == null ? void 0 : _response$data$data2.hash;\n    }\n  }, {\n    key: \"throwOnError\",\n    value: function throwOnError(response) {\n      if (response.ok) {\n        return true;\n      } else if (response.data && response.data.errorNum) {\n        throw new BrightidError(response.data);\n      } else {\n        throw new Error(response.problem);\n      }\n    }\n  }]);\n\n  return NodeApi;\n}();","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/api/brightId.ts"],"names":["v","NodeApi","url","secretKey","id","monitor","create","baseURL","headers","timeout","hash","response","res","submittedOp","Date","sk","fakeUser","b64ToUint8Array","name","op","id1","id2","level","timestamp","message","stringify","console","uInt8ArrayToB64","nacl","strToUint8Array","group","type","dismisser","dismissee","inviter","invitee","data","admin","brightId","params","signingKey","context","contextId","api","requester","state","result","app","roundedTimestamp","verification","public","sig","e","uid","appUserId"],"mappings":"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","sourcesContent":["import { create, ApisauceInstance, ApiResponse, ApiOkResponse } from 'apisauce';\nimport nacl from 'tweetnacl';\nimport stringify from 'fast-json-stable-stringify';\nimport {\n  strToUint8Array,\n  uInt8ArrayToB64,\n  hash,\n  b64ToUint8Array,\n} from '@/utils/encoding';\nimport BrightidError from '@/api/brightidError';\n\nconst v = 6;\n\nexport class NodeApi {\n  api: ApisauceInstance;\n\n  baseUrlInternal: string;\n\n  secretKey: Uint8Array | undefined;\n\n  id: string | undefined;\n\n  constructor({\n    url,\n    secretKey,\n    id,\n    monitor,\n  }: {\n    url: string;\n    secretKey: Uint8Array | undefined;\n    id: string | undefined;\n    monitor?: (response: ApiResponse<any>) => void;\n  }) {\n    this.baseUrlInternal = url;\n    this.id = id;\n    this.secretKey = secretKey;\n    this.api = create({\n      baseURL: this.apiUrl,\n      headers: { 'Cache-Control': 'no-cache' },\n      timeout: 60 * 1000, // one minute timeout for requests\n    });\n    monitor && this.api.addMonitor((response) => monitor(response));\n  }\n\n  get baseUrl() {\n    return this.baseUrlInternal;\n  }\n\n  set baseUrl(url: string) {\n    this.baseUrlInternal = url;\n    this.api.setBaseURL(this.apiUrl);\n  }\n\n  get apiUrl() {\n    return `${this.baseUrl}/brightid/v${v}`;\n  }\n\n  static checkHash(response: ApiOkResponse<OperationPostRes>, message: string) {\n    if (response.data.data?.hash !== hash(message)) {\n      throw new Error('Invalid operation hash returned from server');\n    }\n    return response.data.data?.hash;\n  }\n\n  static throwOnError(response: ApiResponse<NodeApiRes, ErrRes>) {\n    if (response.ok) {\n      return true;\n    } else if (response.data && (response.data as ErrRes).errorNum) {\n      throw new BrightidError(response.data as ErrRes);\n    } else {\n      throw new Error(response.problem);\n    }\n  }\n\n  async submitOp(signedOp: NodeOps, message: string): Promise<SubmittedOp> {\n    // post to node and check result\n    const res = await this.api.post<OperationPostRes, ErrRes>(\n      `/operations`,\n      signedOp,\n    );\n    NodeApi.throwOnError(res);\n\n    // posted successfully. Add hash and postTimestamp to op.\n    const submittedOp = signedOp as SubmittedOp;\n    submittedOp.hash = NodeApi.checkHash(\n      res as ApiOkResponse<OperationPostRes>,\n      message,\n    );\n    submittedOp.postTimestamp = Date.now();\n    return submittedOp;\n  }\n\n  requiresCredentials() {\n    if (this.id === undefined || this.secretKey === undefined) {\n      throw new Error('Missing API credentials');\n    }\n  }\n\n  async addConnection(\n    id1: string,\n    id2: string,\n    level: string,\n    timestamp: number,\n    reportReason?: ReportReason,\n    requestProof?: string,\n    fakeUser?: FakeUser,\n  ) {\n    this.requiresCredentials();\n    const sk = fakeUser ? b64ToUint8Array(fakeUser.secretKey) : this.secretKey;\n\n    const name = 'Connect';\n\n    const op: ConnectOp = {\n      name,\n      id1,\n      id2,\n      level,\n      timestamp,\n      v,\n    };\n\n    if (reportReason) {\n      op.reportReason = reportReason;\n    }\n    if (requestProof) {\n      op.requestProof = requestProof;\n    }\n\n    const message = stringify(op);\n    console.log(`Connect message: ${message}`);\n    op.sig1 = uInt8ArrayToB64(nacl.sign.detached(strToUint8Array(message), sk));\n    return this.submitOp(op, message);\n  }\n\n  async createGroup(groupId: string, url: string, type: string) {\n    this.requiresCredentials();\n    const name = 'Add Group';\n    const timestamp = Date.now();\n\n    const op: AddGroupOp = {\n      name,\n      id: this.id,\n      group: groupId,\n      url,\n      type,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async dismiss(dismissee: string, group: string) {\n    this.requiresCredentials();\n    const name = 'Dismiss';\n    const timestamp = Date.now();\n\n    const op: DismissOp = {\n      name,\n      dismisser: this.id,\n      dismissee,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async invite(invitee: string, group: string, data: string) {\n    this.requiresCredentials();\n    const name = 'Invite';\n    const timestamp = Date.now();\n\n    const op: InviteOp = {\n      name,\n      inviter: this.id,\n      invitee,\n      group,\n      data,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async addAdmin(newAdmin: string, group: string) {\n    this.requiresCredentials();\n    const name = 'Add Admin';\n    const timestamp = Date.now();\n\n    const op: AddAdminOp = {\n      name,\n      id: this.id,\n      admin: newAdmin,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async deleteGroup(group: string) {\n    this.requiresCredentials();\n    const name = 'Remove Group';\n    const timestamp = Date.now();\n\n    const op: RemoveGroupOp = {\n      name,\n      id: this.id,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async joinGroup(group: string, fakeUser?: FakeUser) {\n    this.requiresCredentials();\n    let brightId, secretKey;\n    if (fakeUser) {\n      brightId = fakeUser.id;\n      secretKey = b64ToUint8Array(fakeUser.secretKey);\n    } else {\n      // use real user data\n      brightId = this.id;\n      secretKey = this.secretKey;\n    }\n\n    const name = 'Add Membership';\n    const timestamp = Date.now();\n\n    const op: AddMembershipOp = {\n      name,\n      id: brightId,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async leaveGroup(group: string) {\n    this.requiresCredentials();\n    const name = 'Remove Membership';\n    const timestamp = Date.now();\n\n    const op: RemoveMembershipOp = {\n      name,\n      id: this.id,\n      group,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async socialRecovery(params: {\n    id: string;\n    signingKey: string;\n    timestamp: number;\n    id1: string;\n    id2: string;\n    sig1: string;\n    sig2: string;\n  }) {\n    const op: SocialRecoveryOp = {\n      name: 'Social Recovery',\n      id: params.id,\n      signingKey: params.signingKey,\n      timestamp: params.timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.id1 = params.id1;\n    op.id2 = params.id2;\n    op.sig1 = params.sig1;\n    op.sig2 = params.sig2;\n    return this.submitOp(op, message);\n  }\n\n  async addSigningKey(signingKey: string) {\n    this.requiresCredentials();\n    const name = 'Add Signing Key';\n    const timestamp = Date.now();\n\n    const op: AddSigningKeyOp = {\n      name,\n      id: this.id,\n      signingKey,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  async removeSigningKey(signingKey: string) {\n    this.requiresCredentials();\n    const name = 'Remove Signing Key';\n    const timestamp = Date.now();\n\n    const op: RemoveSigningKeyOp = {\n      name,\n      id: this.id,\n      signingKey,\n      timestamp,\n      v,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    return this.submitOp(op, message);\n  }\n\n  /*\n    The \"Link Context\" operation is only available on api version 5.\n    -> create local ApiSauceInstance with baseUrl .../v5 instead of default .../v6\n   */\n  async linkContextId(context: string, contextId: string) {\n    this.requiresCredentials();\n    const name = 'Link ContextId';\n    const timestamp = Date.now();\n\n    const op: LinkContextIdOp = {\n      name,\n      id: this.id,\n      context,\n      contextId,\n      timestamp,\n      v: 5,\n    };\n\n    const message = stringify(op);\n    op.sig = uInt8ArrayToB64(\n      nacl.sign.detached(strToUint8Array(message), this.secretKey),\n    );\n    const api = create({\n      baseURL: `${this.baseUrl}/brightid/v5`,\n      headers: { 'Cache-Control': 'no-cache' },\n    });\n    const res = await api.post<OperationPostRes, ErrRes>(`/operations`, op);\n    NodeApi.throwOnError(res);\n    const submittedOp = op as SubmittedOp;\n    submittedOp.hash = NodeApi.checkHash(\n      res as ApiOkResponse<OperationPostRes>,\n      message,\n    );\n    submittedOp.postTimestamp = Date.now();\n    return submittedOp;\n  }\n\n  async getGroup(id: string) {\n    const res = await this.api.get<GroupRes, ErrRes>(`/groups/${id}`);\n    NodeApi.throwOnError(res);\n    return (res.data as GroupRes).data;\n  }\n\n  async getProfile(id: string) {\n    const requester = this.id;\n    const url = `/users/${id}/profile/${requester || ''}`;\n    const res = await this.api.get<UserProfileRes, ErrRes>(url);\n    NodeApi.throwOnError(res);\n    return (res.data as UserProfileRes).data;\n  }\n\n  async getVerifications(id: string) {\n    const res = await this.api.get<UserVerificationsRes, ErrRes>(\n      `/users/${id}/verifications`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserVerificationsRes).data.verifications;\n  }\n\n  async getConnections(id: string, direction: 'inbound' | 'outbound') {\n    const res = await this.api.get<UserConnectionsRes, ErrRes>(\n      `/users/${id}/connections/${direction}`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserConnectionsRes).data?.connections;\n  }\n\n  async getMemberships(id: string) {\n    const res = await this.api.get<UserMembershipsRes, ErrRes>(\n      `/users/${id}/memberships`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserMembershipsRes).data?.memberships;\n  }\n\n  async getInvites(id: string) {\n    const res = await this.api.get<UserInvitesRes, ErrRes>(\n      `/users/${id}/invites`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as UserInvitesRes).data?.invites;\n  }\n\n  async getOperationState(opHash: string) {\n    const res = await this.api.get<OperationRes, ErrRes>(\n      `/operations/${opHash}`,\n    );\n    if (res.status === 404) {\n      // operation is not existing on server. Don't throw an error, as a client might try to check\n      // operations sent by other clients without knowing if they have been submitted already.\n      return {\n        state: 'unknown',\n        result: '',\n      };\n    }\n    NodeApi.throwOnError(res);\n    return (res.data as OperationRes).data;\n  }\n\n  async getApps() {\n    const res = await this.api.get<AppsRes, ErrRes>(`/apps`);\n    NodeApi.throwOnError(res);\n    return (res.data as AppsRes).data?.apps;\n  }\n\n  async getState() {\n    const res = await this.api.get<StateRes, ErrRes>(`/state`);\n    NodeApi.throwOnError(res);\n    return (res.data as StateRes).data;\n  }\n\n  async getPublic(app: string, roundedTimestamp: number, verification: string) {\n    console.log(15, app, roundedTimestamp, verification);\n    const res = await this.api.get<PublicRes, ErrRes>(\n      `/verifications/blinded/public`,\n      { app, roundedTimestamp, verification },\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as PublicRes).data.public;\n  }\n\n  async getBlindedSig(pub: string, sig: string, e: string) {\n    const res = await this.api.get<BlindSigRes, ErrRes>(\n      `/verifications/blinded/sig/${this.id}`,\n      { public: pub, sig, e },\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as BlindSigRes).data.response;\n  }\n\n  async linkAppId(sig: SigInfo, appId: string) {\n    console.log(`/verifications/${sig.app}/${appId}`);\n    console.log({\n      sig: sig.sig,\n      uid: sig.uid,\n      verification: sig.verification,\n      roundedTimestamp: sig.roundedTimestamp,\n    });\n    const res = await this.api.post<OperationPostRes, ErrRes>(\n      `/verifications/${sig.app}/${appId}`,\n      {\n        sig: sig.sig,\n        uid: sig.uid,\n        verification: sig.verification,\n        roundedTimestamp: sig.roundedTimestamp,\n      },\n    );\n\n    NodeApi.throwOnError(res);\n  }\n\n  async spendSponsorship(appId: string, appUserId: string) {\n    const name = 'Spend Sponsorship';\n    const timestamp = Date.now();\n    const op: SpendSponsorshipOp = {\n      name,\n      app: appId,\n      appUserId,\n      timestamp,\n      v,\n    };\n    const message = stringify(op);\n    return this.submitOp(op, message);\n  }\n\n  async getSponsorship(appUserId: string) {\n    const res = await this.api.get<SponsorshipRes, ErrRes>(\n      `/sponsorships/${appUserId}`,\n    );\n    NodeApi.throwOnError(res);\n    return (res.data as SponsorshipRes).data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}