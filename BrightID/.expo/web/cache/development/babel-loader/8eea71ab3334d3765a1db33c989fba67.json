{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport moment from 'moment';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from \"../../store\";\nimport { CONNECTION_STALE_AGE, ORANGE } from \"../../utils/constants\";\nimport { photoDirectory } from \"../../utils/filesystem\";\nimport { staleConnection } from \"../../actions\";\nimport { DEVICE_LARGE, WIDTH } from \"../../utils/deviceConstants\";\nimport { WHITE, LIGHT_ORANGE, DARK_ORANGE, RED, BLUE } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport Pencil from \"../Icons/Pencil\";\nimport { ConnectionStatus } from \"../Helpers/ConnectionStatus\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RecoveryConnectionCard = function RecoveryConnectionCard(props) {\n  var stale_check_timer = useRef(null);\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  var status = props.status,\n      connectionDate = props.connectionDate,\n      id = props.id,\n      name = props.name,\n      photo = props.photo,\n      reportReason = props.reportReason,\n      index = props.index,\n      level = props.level,\n      isModify = props.isModify,\n      isSelectionActive = props.isSelectionActive,\n      onSelect = props.onSelect,\n      isSelected = props.isSelected,\n      activeAfter = props.activeAfter,\n      activeBefore = props.activeBefore;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgErr = _useState2[0],\n      setImgErr = _useState2[1];\n\n  useFocusEffect(useCallback(function () {\n    if (status === 'initiated') {\n      var checkStale = function checkStale() {\n        var ageMs = Date.now() - connectionDate;\n\n        if (ageMs > CONNECTION_STALE_AGE) {\n          console.log(\"Connection \" + name + \" is stale (age: \" + ageMs + \" ms)\");\n          return true;\n        }\n\n        return false;\n      };\n\n      if (checkStale()) {\n        dispatch(staleConnection(id));\n      } else {\n        var checkTime = connectionDate + CONNECTION_STALE_AGE + 5000 - Date.now();\n\n        if (checkTime < 0) {\n          console.log(\"Warning - checkTime in past: \" + checkTime);\n          checkTime = 1000;\n        }\n\n        if (stale_check_timer.current) {\n          clearTimeout(stale_check_timer.current);\n        }\n\n        console.log(\"Marking connection as stale in \" + checkTime + \"ms.\");\n        stale_check_timer.current = setTimeout(function () {\n          if (checkStale()) {\n            dispatch(staleConnection(id));\n          }\n        }, checkTime);\n      }\n    }\n\n    return function () {\n      if (stale_check_timer.current) {\n        clearTimeout(stale_check_timer.current);\n        stale_check_timer.current = null;\n      }\n    };\n  }, [connectionDate, dispatch, id, name, status]));\n  useEffect(function () {\n    if (stale_check_timer.current && status === 'verified') {\n      console.log(\"Connection \" + name + \" changed 'initiated' -> 'verified'. Stopping stale_check_timer ID \" + stale_check_timer.current + \".\");\n      clearTimeout(stale_check_timer.current);\n      stale_check_timer.current = null;\n    }\n  }, [name, status]);\n\n  var ModifyConnection = function ModifyConnection() {\n    return _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: function onPress() {\n        navigation.navigate('SetTrustlevel', {\n          connectionId: id\n        });\n      },\n      children: _jsx(Pencil, {\n        highlight: WHITE,\n        color: BLUE\n      })\n    });\n  };\n\n  var Selection = function Selection() {\n    return _jsx(TouchableOpacity, {\n      style: {\n        flexGrow: 1,\n        paddingRight: DEVICE_LARGE ? 15 : 13.5,\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        alignSelf: 'center'\n      },\n      onPress: function onPress() {\n        return onSelect(id);\n      },\n      children: _jsx(IonIcons, {\n        name: isSelected ? 'checkbox' : 'md-square-outline',\n        color: ORANGE,\n        size: DEVICE_LARGE ? 26 : 24\n      })\n    });\n  };\n\n  var imageSource = photo != null && photo.filename && !imgErr ? {\n    uri: \"file://\" + photoDirectory() + \"/\" + (photo == null ? void 0 : photo.filename)\n  } : require(\"../../static/default_profile.jpg\");\n  var s1 = activeAfter ? \"activates in \" + moment.duration(activeAfter, 'milliseconds').humanize() : '';\n  var s2 = activeBefore ? \"deactivates in \" + moment.duration(activeBefore, 'milliseconds').humanize() : '';\n  var activeTime = s1 + \" \" + s2;\n  return _jsx(View, {\n    style: styles.container,\n    testID: \"connectionCardContainer\",\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('FullScreenPhoto', {\n            photo: photo\n          });\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewPhoto'),\n        accessibilityRole: \"imagebutton\",\n        children: _jsx(Image, {\n          source: imageSource,\n          style: styles.photo,\n          accessibilityLabel: t('connections.accessibilityLabel.connectionPhoto'),\n          onError: function onError() {\n            console.log('settingImgErr');\n            setImgErr(true);\n          }\n        })\n      }), _jsx(TouchableOpacity, {\n        testID: \"ConnectionCard-\" + index,\n        onPress: function onPress() {\n          navigation.navigate('Connection', {\n            connectionId: id\n          });\n        },\n        accessibilityLabel: t('connections.accessibilityLabel.viewConnectionDetails'),\n        children: _jsxs(View, {\n          style: [styles.info, {\n            maxWidth: WIDTH * 0.56,\n            flexGrow: 1\n          }],\n          children: [_jsx(View, {\n            style: [styles.nameContainer],\n            testID: \"connection_name-\" + index,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.name,\n              testID: \"connectionCardText-\" + index,\n              children: name\n            })\n          }), _jsx(ConnectionStatus, {\n            index: index,\n            status: status,\n            reportReason: reportReason,\n            infoText: activeTime,\n            level: level\n          })]\n        })\n      }), isSelectionActive && _jsx(Selection, {}), isModify && _jsx(ModifyConnection, {})]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent'\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16]\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[12],\n    marginTop: DEVICE_LARGE ? 3 : 1\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: DARK_ORANGE\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: LIGHT_ORANGE,\n    marginTop: DEVICE_LARGE ? 2 : 0\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: RED,\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize'\n  },\n  editButton: {\n    width: DEVICE_LARGE ? 60 : 56,\n    position: 'absolute',\n    right: 0\n  },\n  activeText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: RED,\n    fontStyle: 'italic'\n  }\n});\nexport default RecoveryConnectionCard;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/RecoveryConnections/RecoverConnectionsCard.tsx"],"names":["RecoveryConnectionCard","stale_check_timer","useRef","navigation","useNavigation","dispatch","useDispatch","status","connectionDate","id","name","photo","reportReason","index","level","isModify","isSelectionActive","onSelect","isSelected","activeAfter","activeBefore","props","t","useTranslation","imgErr","setImgErr","useState","useFocusEffect","useCallback","checkStale","ageMs","Date","console","staleConnection","checkTime","clearTimeout","setTimeout","useEffect","ModifyConnection","styles","connectionId","Selection","flexGrow","paddingRight","DEVICE_LARGE","alignItems","justifyContent","alignSelf","imageSource","uri","photoDirectory","require","s1","moment","s2","activeTime","maxWidth","WIDTH","StyleSheet","container","flexDirection","height","backgroundColor","card","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","marginLeft","marginTop","info","flex","nameContainer","fontFamily","fontSize","statusContainer","connectionLevel","connectionTime","color","moreIcon","marginRight","waitingMessage","deletedMessage","textTransform","editButton","position","right","activeText","fontStyle"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport IonIcons from 'react-native-vector-icons/Ionicons';\nimport moment from 'moment';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from '@/store';\nimport { CONNECTION_STALE_AGE, ORANGE } from '@/utils/constants';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { staleConnection } from '@/actions';\nimport { DEVICE_LARGE, WIDTH } from '@/utils/deviceConstants';\nimport { WHITE, LIGHT_ORANGE, DARK_ORANGE, RED, BLUE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport Pencil from '@/components/Icons/Pencil';\nimport { ConnectionStatus } from '@/components/Helpers/ConnectionStatus';\n\n/**\n * Connection Card in the Connections Screen\n * is created from an array of connections\n * each connection should have:\n * @prop name\n * @prop connectionTime\n * @prop photo\n */\n\ntype Props = Connection & {\n  isSelectionActive?: boolean;\n  onSelect?: (id: string) => void;\n  isSelected?: boolean;\n  isModify?: boolean;\n  index: number;\n  activeBefore: number;\n  activeAfter: number;\n};\n\nconst RecoveryConnectionCard = (props: Props) => {\n  const stale_check_timer = useRef<TimeoutId>(null);\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const {\n    status,\n    connectionDate,\n    id,\n    name,\n    photo,\n    reportReason,\n    index,\n    level,\n    isModify,\n    isSelectionActive,\n    onSelect,\n    isSelected,\n    activeAfter,\n    activeBefore,\n  } = props;\n  const { t } = useTranslation();\n\n  const [imgErr, setImgErr] = useState(false);\n\n  useFocusEffect(\n    useCallback(() => {\n      // if we have a \"waiting\" connection, start timer to handle stale connection requests\n      if (status === 'initiated') {\n        const checkStale = () => {\n          const ageMs = Date.now() - connectionDate;\n          if (ageMs > CONNECTION_STALE_AGE) {\n            console.log(`Connection ${name} is stale (age: ${ageMs} ms)`);\n            return true;\n          }\n          return false;\n        };\n        if (checkStale()) {\n          // this is already old. Immediately mark as \"stale\", no need for a timer.\n          dispatch(staleConnection(id));\n        } else {\n          // start timer to check if connection got verified after maximum channel lifetime\n          let checkTime =\n            connectionDate + CONNECTION_STALE_AGE + 5000 - Date.now(); // add 5 seconds buffer\n          if (checkTime < 0) {\n            console.log(`Warning - checkTime in past: ${checkTime}`);\n            checkTime = 1000; // check in 1 second\n          }\n\n          if (stale_check_timer.current) {\n            clearTimeout(stale_check_timer.current);\n          }\n          console.log(`Marking connection as stale in ${checkTime}ms.`);\n          stale_check_timer.current = setTimeout(() => {\n            if (checkStale()) {\n              dispatch(staleConnection(id));\n            }\n          }, checkTime);\n        }\n      }\n      return () => {\n        // clear timer if it is set\n        if (stale_check_timer.current) {\n          clearTimeout(stale_check_timer.current);\n          stale_check_timer.current = null;\n        }\n      };\n    }, [connectionDate, dispatch, id, name, status]),\n  );\n\n  useEffect(() => {\n    if (stale_check_timer.current && status === 'verified') {\n      console.log(\n        `Connection ${name} changed 'initiated' -> 'verified'. Stopping stale_check_timer ID ${stale_check_timer.current}.`,\n      );\n      clearTimeout(stale_check_timer.current);\n      stale_check_timer.current = null;\n    }\n  }, [name, status]);\n\n  const ModifyConnection = () => (\n    <TouchableOpacity\n      style={styles.editButton}\n      onPress={() => {\n        navigation.navigate('SetTrustlevel', {\n          connectionId: id,\n        });\n      }}\n    >\n      <Pencil highlight={WHITE} color={BLUE} />\n    </TouchableOpacity>\n  );\n\n  const Selection = () => {\n    return (\n      <TouchableOpacity\n        style={{\n          flexGrow: 1,\n          paddingRight: DEVICE_LARGE ? 15 : 13.5,\n          alignItems: 'flex-end',\n          justifyContent: 'center',\n          alignSelf: 'center',\n        }}\n        onPress={() => onSelect(id)}\n      >\n        <IonIcons\n          name={isSelected ? 'checkbox' : 'md-square-outline'}\n          color={ORANGE}\n          size={DEVICE_LARGE ? 26 : 24}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  const imageSource =\n    photo?.filename && !imgErr\n      ? {\n          uri: `file://${photoDirectory()}/${photo?.filename}`,\n        }\n      : require('@/static/default_profile.jpg');\n\n  const s1 = activeAfter\n    ? `activates in ${moment.duration(activeAfter, 'milliseconds').humanize()}`\n    : '';\n  const s2 = activeBefore\n    ? `deactivates in ${moment\n        .duration(activeBefore, 'milliseconds')\n        .humanize()}`\n    : '';\n  const activeTime = `${s1} ${s2}`;\n  return (\n    <View style={styles.container} testID=\"connectionCardContainer\">\n      <View style={styles.card}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('FullScreenPhoto', { photo });\n          }}\n          accessibilityLabel={t('connections.accessibilityLabel.viewPhoto')}\n          accessibilityRole=\"imagebutton\"\n        >\n          <Image\n            source={imageSource}\n            style={styles.photo}\n            accessibilityLabel={t(\n              'connections.accessibilityLabel.connectionPhoto',\n            )}\n            onError={() => {\n              console.log('settingImgErr');\n              setImgErr(true);\n            }}\n          />\n        </TouchableOpacity>\n        <TouchableOpacity\n          testID={`ConnectionCard-${index}`}\n          onPress={() => {\n            navigation.navigate('Connection', { connectionId: id });\n          }}\n          accessibilityLabel={t(\n            'connections.accessibilityLabel.viewConnectionDetails',\n          )}\n        >\n          <View style={[styles.info, { maxWidth: WIDTH * 0.56, flexGrow: 1 }]}>\n            <View\n              style={[styles.nameContainer]}\n              testID={`connection_name-${index}`}\n            >\n              <Text\n                numberOfLines={1}\n                style={styles.name}\n                testID={`connectionCardText-${index}`}\n              >\n                {name}\n              </Text>\n            </View>\n            <ConnectionStatus\n              index={index}\n              status={status}\n              reportReason={reportReason}\n              infoText={activeTime}\n              level={level}\n            />\n          </View>\n        </TouchableOpacity>\n        {isSelectionActive && <Selection />}\n        {isModify && <ModifyConnection />}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: DEVICE_LARGE ? 102 : 92,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    backgroundColor: 'transparent',\n  },\n  card: {\n    width: '90%',\n    height: DEVICE_LARGE ? 76 : 71,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    backgroundColor: WHITE,\n    shadowColor: 'rgba(221, 179, 169, 0.3)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 5,\n    elevation: 5,\n    borderTopLeftRadius: DEVICE_LARGE ? 12 : 10,\n    borderBottomLeftRadius: DEVICE_LARGE ? 12 : 10,\n  },\n  photo: {\n    borderRadius: 55,\n    width: DEVICE_LARGE ? 65 : 55,\n    height: DEVICE_LARGE ? 65 : 55,\n    marginLeft: DEVICE_LARGE ? 14 : 12,\n    marginTop: -30,\n  },\n  info: {\n    marginLeft: DEVICE_LARGE ? 22 : 19,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  name: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[16],\n  },\n  statusContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  connectionLevel: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[12],\n    marginTop: DEVICE_LARGE ? 3 : 1,\n  },\n  connectionTime: {\n    fontFamily: 'Poppins-Regular',\n    fontSize: fontSize[10],\n    color: DARK_ORANGE,\n  },\n  moreIcon: {\n    marginRight: DEVICE_LARGE ? 26 : 23,\n  },\n  waitingMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[13],\n    color: LIGHT_ORANGE,\n    marginTop: DEVICE_LARGE ? 2 : 0,\n  },\n  deletedMessage: {\n    fontFamily: 'Poppins-Medium',\n    fontSize: fontSize[14],\n    color: RED,\n    marginTop: DEVICE_LARGE ? 5 : 2,\n    textTransform: 'capitalize',\n  },\n  editButton: {\n    width: DEVICE_LARGE ? 60 : 56,\n    position: 'absolute',\n    right: 0,\n  },\n  activeText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: RED,\n    fontStyle: 'italic',\n  },\n});\n\nexport default RecoveryConnectionCard;\n"]},"metadata":{},"sourceType":"module"}