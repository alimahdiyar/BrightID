{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nexport default function DrawerContentScrollView(_ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n      style = _ref.style,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeArea();\n  return React.createElement(ScrollView, _extends({}, rest, {\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n      paddingRight: drawerPosition === 'right' ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["DrawerContentScrollView.tsx"],"names":["rest","drawerPosition","React","insets","useSafeArea","paddingTop","paddingLeft","paddingRight","styles","container","flex"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,SAAA,WAAA,QAAA,gCAAA;AACA,OAAA,qBAAA;AAMA,eAAe,SAAA,uBAAA,OAKL;EAAA,IALsC,qBAKtC,QALsC,qBAKtC;EAAA,IALsC,KAKtC,QALsC,KAKtC;EAAA,IALsC,QAKtC,QALsC,QAKtC;EAAA,IADLA,IACK;;EACR,IAAMC,cAAc,GAAGC,KAAK,CAALA,UAAAA,CAAvB,qBAAuBA,CAAvB;EACA,IAAMC,MAAM,GAAGC,WAAf,EAAA;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;IAEE,qBAAqB,EAAE,CACrB;MACEC,UAAU,EAAEF,MAAM,CAANA,GAAAA,GADd,CAAA;MAEEG,WAAW,EAAEL,cAAc,KAAdA,MAAAA,GAA4BE,MAAM,CAAlCF,IAAAA,GAFf,CAAA;MAGEM,YAAY,EAAEN,cAAc,KAAdA,OAAAA,GAA6BE,MAAM,CAAnCF,KAAAA,GAA4C;IAH5D,CADqB,EAFzB,qBAEyB,CAFzB;IAUE,KAAK,EAAE,CAACO,MAAM,CAAP,SAAA,EAAA,KAAA;EAVT,CAAA,CAAA,EADF,QACE,CADF;AAgBD;AAED,IAAMA,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps } from 'react-native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function DrawerContentScrollView({\n  contentContainerStyle,\n  style,\n  children,\n  ...rest\n}: Props) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeArea();\n\n  return (\n    <ScrollView\n      {...rest}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingLeft: drawerPosition === 'left' ? insets.left : 0,\n          paddingRight: drawerPosition === 'right' ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}