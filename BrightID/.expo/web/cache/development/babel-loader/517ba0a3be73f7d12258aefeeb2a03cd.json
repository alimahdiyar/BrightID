{"ast":null,"code":"'use strict';\n\nvar pna = require('process-nextick-args');\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n\nmodule.exports = Duplex;\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n\nvar Readable = require(\"./_stream_readable\");\n\nvar Writable = require(\"./_stream_writable\");\n\nutil.inherits(Duplex, Readable);\n{\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  if (options && options.readable === false) this.readable = false;\n  if (options && options.writable === false) this.writable = false;\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\nfunction onend() {\n  if (this.allowHalfOpen || this._writableState.ended) return;\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n  pna.nextTick(cb, err);\n};","map":{"version":3,"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/readable-stream/lib/_stream_duplex.js"],"names":["pna","require","objectKeys","Object","keys","module","util","Readable","Writable","v","method","Duplex","options","enumerable","get","self","set"],"mappings":"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","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};"]},"metadata":{},"sourceType":"script"}