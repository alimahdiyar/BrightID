{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _CountryTheme = require(\"./CountryTheme\");\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    height: 48,\n    width: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    height: 25,\n    width: 25,\n    resizeMode: 'contain'\n  }\n});\n\nvar CloseButtonAndroid = function CloseButtonAndroid(props) {\n  var closeImage = require(\"./assets/images/close.android.png\");\n\n  if (props.image) {\n    closeImage = props.image;\n  }\n\n  var _useTheme = (0, _CountryTheme.useTheme)(),\n      onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, props.style]\n  }, _react.default.createElement(_reactNative.TouchableNativeFeedback, {\n    background: _reactNative.Platform.Version < 21 ? _reactNative.TouchableNativeFeedback.SelectableBackground() : _reactNative.TouchableNativeFeedback.SelectableBackgroundBorderless(),\n    onPress: props.onPress\n  }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  }))));\n};\n\nvar CloseButtonIOS = function CloseButtonIOS(props) {\n  var closeImage = require(\"./assets/images/close.ios.png\");\n\n  if (props.image) {\n    closeImage = props.image;\n  }\n\n  var _useTheme2 = (0, _CountryTheme.useTheme)(),\n      onBackgroundTextColor = _useTheme2.onBackgroundTextColor;\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, props.style]\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: props.onPress\n  }, _react.default.createElement(_reactNative.Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  })));\n};\n\nvar propTypes = {\n  onPress: _propTypes.default.func,\n  image: _propTypes.default.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\n\nvar _default = _reactNative.Platform.select({\n  ios: CloseButtonIOS,\n  android: CloseButtonAndroid,\n  web: CloseButtonIOS\n});\n\nexports.default = _default;","map":{"version":3,"sources":["../src/CloseButton.tsx"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAYA;;AACA;;AAEA,IAAM,MAAM,GAAG,uBAAA,CAAW,MAAX,CAAkB;EAC/B,SAAS,EAAE;IACT,MAAM,EAAE,EADC;IAET,KAAK,EAAE,KAFE;IAGT,UAAU,EAAE,QAHH;IAIT,cAAc,EAAE;EAJP,CADoB;EAO/B,UAAU,EAAE;IACV,MAAM,EAAE,EADE;IAEV,KAAK,EAAE,EAFG;IAGV,UAAU,EAAE;EAHF;AAPmB,CAAlB,CAAf;;AAqBA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,KAAD,EAA4B;EACrD,IAAI,UAAU,GAAG,OAAO,qCAAxB;;EAEA,IAAI,KAAK,CAAC,KAAV,EAAiB;IACf,UAAU,GAAG,KAAK,CAAC,KAAnB;EACD;;EACD,gBAAkC,IAAA,sBAAA,GAAlC;EAAA,IAAQ,qBAAR,aAAQ,qBAAR;;EACA,OACE,cAAA,CAAA,aAAA,CAAC,iBAAD,EAAK;IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB,KAAK,CAAC,KAAzB;EAAR,CAAL,EACE,cAAA,CAAA,aAAA,CAAC,oCAAD,EAAwB;IACtB,UAAU,EACR,qBAAA,CAAS,OAAT,GAAmB,EAAnB,GACI,oCAAA,CAAwB,oBAAxB,EADJ,GAEI,oCAAA,CAAwB,8BAAxB,EAJgB;IAMtB,OAAO,EAAE,KAAK,CAAC;EANO,CAAxB,EAQE,cAAA,CAAA,aAAA,CAAC,iBAAD,EAAK,IAAL,EACE,cAAA,CAAA,aAAA,CAAC,kBAAD,EAAM;IACJ,MAAM,EAAE,UADJ;IAEJ,KAAK,EAAE,CACL,MAAM,CAAC,UADF,EAEL,KAAK,CAAC,UAFD,EAGL;MAAE,SAAS,EAAE;IAAb,CAHK;EAFH,CAAN,CADF,CARF,CADF,CADF;AAuBD,CA9BD;;AAgCA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,KAAD,EAA4B;EACjD,IAAI,UAAU,GAAG,OAAO,iCAAxB;;EAEA,IAAI,KAAK,CAAC,KAAV,EAAiB;IACf,UAAU,GAAG,KAAK,CAAC,KAAnB;EACD;;EACD,iBAAkC,IAAA,sBAAA,GAAlC;EAAA,IAAQ,qBAAR,cAAQ,qBAAR;;EACA,OACE,cAAA,CAAA,aAAA,CAAC,iBAAD,EAAK;IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB,KAAK,CAAC,KAAzB;EAAR,CAAL,EACE,cAAA,CAAA,aAAA,CAAC,6BAAD,EAAiB;IAAC,OAAO,EAAE,KAAK,CAAC;EAAhB,CAAjB,EACE,cAAA,CAAA,aAAA,CAAC,kBAAD,EAAM;IACJ,MAAM,EAAE,UADJ;IAEJ,KAAK,EAAE,CACL,MAAM,CAAC,UADF,EAEL,KAAK,CAAC,UAFD,EAGL;MAAE,SAAS,EAAE;IAAb,CAHK;EAFH,CAAN,CADF,CADF,CADF;AAcD,CArBD;;AAuBA,IAAM,SAAS,GAAG;EAChB,OAAO,EAAE,kBAAA,CAAU,IADH;EAEhB,KAAK,EAAE,kBAAA,CAAU;AAFD,CAAlB;AAIA,cAAc,CAAC,SAAf,GAA2B,SAA3B;AACA,kBAAkB,CAAC,SAAnB,GAA+B,SAA/B;;eAEe,qBAAA,CAAS,MAAT,CAAgB;EAC7B,GAAG,EAAE,cADwB;EAE7B,OAAO,EAAE,kBAFoB;EAG7B,GAAG,EAAE;AAHwB,CAAhB,C","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { Image, TouchableNativeFeedback, View, Platform, TouchableOpacity, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    container: {\n        height: 48,\n        width: '15%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    imageStyle: {\n        height: 25,\n        width: 25,\n        resizeMode: 'contain'\n    }\n});\nconst CloseButtonAndroid = (props) => {\n    let closeImage = require('./assets/images/close.android.png');\n    if (props.image) {\n        closeImage = props.image;\n    }\n    const { onBackgroundTextColor } = useTheme();\n    return (React.createElement(View, { style: [styles.container, props.style] },\n        React.createElement(TouchableNativeFeedback, { background: Platform.Version < 21\n                ? TouchableNativeFeedback.SelectableBackground()\n                : TouchableNativeFeedback.SelectableBackgroundBorderless(), onPress: props.onPress },\n            React.createElement(View, null,\n                React.createElement(Image, { source: closeImage, style: [\n                        styles.imageStyle,\n                        props.imageStyle,\n                        { tintColor: onBackgroundTextColor }\n                    ] })))));\n};\nconst CloseButtonIOS = (props) => {\n    let closeImage = require('./assets/images/close.ios.png');\n    if (props.image) {\n        closeImage = props.image;\n    }\n    const { onBackgroundTextColor } = useTheme();\n    return (React.createElement(View, { style: [styles.container, props.style] },\n        React.createElement(TouchableOpacity, { onPress: props.onPress },\n            React.createElement(Image, { source: closeImage, style: [\n                    styles.imageStyle,\n                    props.imageStyle,\n                    { tintColor: onBackgroundTextColor }\n                ] }))));\n};\nconst propTypes = {\n    onPress: PropTypes.func,\n    image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n    ios: CloseButtonIOS,\n    android: CloseButtonAndroid,\n    web: CloseButtonIOS\n});\n//# sourceMappingURL=CloseButton.js.map"]},"metadata":{},"sourceType":"script"}