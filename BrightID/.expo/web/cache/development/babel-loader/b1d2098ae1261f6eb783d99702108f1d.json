{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport moment from 'moment';\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { photoDirectory } from \"../../../utils/filesystem\";\nimport { DEVICE_LARGE } from \"../../../utils/deviceConstants\";\nimport { GREY, WHITE, GREEN, BLACK, LIGHT_GREY } from \"../../../theme/colors\";\nimport { fontSize } from \"../../../theme/fonts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var NewGroupCard = function NewGroupCard(_ref) {\n  var id = _ref.id,\n      connectionDate = _ref.connectionDate,\n      photo = _ref.photo,\n      name = _ref.name,\n      selected = _ref.selected,\n      toggleInvitee = _ref.toggleInvitee;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgErr = _useState2[0],\n      setImgErr = _useState2[1];\n\n  var renderActionButton = function renderActionButton() {\n    return _jsx(TouchableOpacity, {\n      testID: \"checkInviteeBtn\",\n      style: styles.moreIcon,\n      onPress: handleGroupSelect,\n      children: _jsx(AntDesign, {\n        size: 30.4,\n        name: selected ? 'checkcircle' : 'checkcircleo',\n        color: selected ? GREEN : BLACK\n      })\n    });\n  };\n\n  var handleGroupSelect = function handleGroupSelect() {\n    toggleInvitee(id);\n  };\n\n  var imageSource = photo != null && photo.filename && !imgErr ? {\n    uri: \"file://\" + photoDirectory() + \"/\" + (photo == null ? void 0 : photo.filename)\n  } : require(\"../../../static/default_profile.jpg\");\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: imageSource,\n      style: styles.photo,\n      onError: function onError() {\n        console.log('settingImgErr');\n        setImgErr(true);\n      },\n      accessibilityLabel: \"profile picture\"\n    }), _jsxs(View, {\n      style: styles.info,\n      children: [_jsx(Text, {\n        style: styles.name,\n        children: name\n      }), _jsx(Text, {\n        style: styles.connectedText,\n        children: t('common.tag.connectionDate', {\n          date: moment(connectionDate).fromNow()\n        })\n      })]\n    }), renderActionButton()]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: WHITE,\n    height: DEVICE_LARGE ? 94 : 80,\n    marginBottom: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: LIGHT_GREY,\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0,\n    shadowRadius: 0\n  },\n  photo: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginLeft: 14\n  },\n  info: {\n    marginLeft: 25,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly'\n  },\n  name: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic'\n  },\n  moreIcon: {\n    marginRight: 16\n  }\n});","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Groups/NewGroups/NewGroupCard.tsx"],"names":["NewGroupCard","id","connectionDate","photo","name","selected","toggleInvitee","t","useTranslation","imgErr","setImgErr","useState","renderActionButton","styles","handleGroupSelect","imageSource","uri","photoDirectory","require","console","date","moment","StyleSheet","container","width","alignItems","flexDirection","justifyContent","backgroundColor","height","DEVICE_LARGE","marginBottom","borderBottomWidth","borderBottomColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderRadius","marginLeft","info","flex","fontFamily","fontSize","connectedText","color","fontStyle","moreIcon","marginRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport moment from 'moment';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { photoDirectory } from '@/utils/filesystem';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { GREY, WHITE, GREEN, BLACK, LIGHT_GREY } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\n\ntype NewGroupCardProps = {\n  id: string;\n  photo: Photo;\n  name: string;\n  connectionDate: number;\n  toggleInvitee: (string) => void;\n  selected: boolean;\n};\n\nexport const NewGroupCard = ({\n  id,\n  connectionDate,\n  photo,\n  name,\n  selected,\n  toggleInvitee,\n}: NewGroupCardProps) => {\n  const { t } = useTranslation();\n  const [imgErr, setImgErr] = useState(false);\n\n  const renderActionButton = () => {\n    return (\n      <TouchableOpacity\n        testID=\"checkInviteeBtn\"\n        style={styles.moreIcon}\n        onPress={handleGroupSelect}\n      >\n        <AntDesign\n          size={30.4}\n          name={selected ? 'checkcircle' : 'checkcircleo'}\n          color={selected ? GREEN : BLACK}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  const handleGroupSelect = () => {\n    toggleInvitee(id);\n  };\n\n  const imageSource =\n    photo?.filename && !imgErr\n      ? {\n          uri: `file://${photoDirectory()}/${photo?.filename}`,\n        }\n      : require('@/static/default_profile.jpg');\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={imageSource}\n        style={styles.photo}\n        onError={() => {\n          console.log('settingImgErr');\n          setImgErr(true);\n        }}\n        accessibilityLabel=\"profile picture\"\n      />\n      <View style={styles.info}>\n        <Text style={styles.name}>{name}</Text>\n        <Text style={styles.connectedText}>\n          {t('common.tag.connectionDate', {\n            date: moment(connectionDate).fromNow(),\n          })}\n        </Text>\n      </View>\n      {renderActionButton()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: WHITE,\n    height: DEVICE_LARGE ? 94 : 80,\n    marginBottom: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: LIGHT_GREY,\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n  },\n  photo: {\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    marginLeft: 14,\n  },\n  info: {\n    marginLeft: 25,\n    flex: 1,\n    height: DEVICE_LARGE ? 71 : 65,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n  name: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[20],\n    shadowColor: 'rgba(0,0,0,0.32)',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n  },\n  connectedText: {\n    fontFamily: 'ApexNew-Book',\n    fontSize: fontSize[12],\n    color: GREY,\n    fontStyle: 'italic',\n  },\n  moreIcon: {\n    marginRight: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}