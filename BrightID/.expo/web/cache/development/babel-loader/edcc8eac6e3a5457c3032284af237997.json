{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateBlindSigs = exports.updateBlindSig = exports.fetchApps = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _cryptoJs = _interopRequireDefault(require(\"crypto-js\"));\n\nvar _tweetnacl = _interopRequireDefault(require(\"tweetnacl\"));\n\nvar _fastJsonStableStringify = _interopRequireDefault(require(\"fast-json-stable-stringify\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _store = require(\"../store\");\n\nvar _appsSlice = require(\"../reducer/appsSlice\");\n\nvar _encoding = require(\"../utils/encoding\");\n\nvar _brightId = require(\"../api/brightId\");\n\nvar _verifications = require(\"../utils/verifications\");\n\nvar _backupService = _interopRequireDefault(require(\"../api/backupService\"));\n\nvar _brightidError = require(\"../api/brightidError\");\n\nvar _types = require(\"../components/Apps/types.d\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar WISchnorrClient = require(\"../utils/WISchnorrClient\");\n\nvar updateBlindSig = function updateBlindSig(app) {\n  return function _callee2(dispatch, getState) {\n    var _getState, _getState$user, verifications, id, secretKey, sigs, verificationsByName, vel, roundedTimestamp, _loop, _iterator, _step, verification, _ret;\n\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _getState = getState(), _getState$user = _getState.user, verifications = _getState$user.verifications, id = _getState$user.id, secretKey = _getState.keypair.secretKey;\n            sigs = (0, _appsSlice.selectAllSigs)(getState());\n            verificationsByName = _lodash.default.keyBy(verifications, function (v) {\n              return v.name;\n            });\n            vel = app.verificationExpirationLength;\n            roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n\n            _loop = function _callee(verification) {\n              var sigInfo, network, url, api, info, _await$api$getState, wISchnorrPublic, client, pub, uid, challenge, s, sig, response, blindSig, backupData, backupKey;\n\n              return _regenerator.default.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      sigInfo = sigs.find(function (sig) {\n                        return sig.app === app.id && sig.verification === verification && sig.roundedTimestamp === roundedTimestamp;\n                      });\n\n                      if (!(sigInfo && sigInfo.sig)) {\n                        _context.next = 4;\n                        break;\n                      }\n\n                      console.log(\"sig exists for \" + app.name + \" (\" + verification + \")\");\n                      return _context.abrupt(\"return\", \"continue\");\n\n                    case 4:\n                      if ((0, _verifications.isVerified)(verificationsByName, verification)) {\n                        _context.next = 7;\n                        break;\n                      }\n\n                      console.log(\"user is not verified for \" + app.name + \" (\" + verification + \")\");\n                      return _context.abrupt(\"return\", \"continue\");\n\n                    case 7:\n                      _context.prev = 7;\n                      network = __DEV__ ? _types.BrightIdNetwork.TEST : _types.BrightIdNetwork.NODE;\n                      url = app.nodeUrl || \"http://\" + network + \".brightid.org\";\n                      api = new _brightId.NodeApi({\n                        url: url,\n                        id: id,\n                        secretKey: secretKey\n                      });\n                      info = (0, _fastJsonStableStringify.default)({\n                        app: app.id,\n                        roundedTimestamp: roundedTimestamp,\n                        verification: verification\n                      });\n                      console.log(info, 'info');\n                      _context.next = 15;\n                      return _regenerator.default.awrap(api.getState());\n\n                    case 15:\n                      _await$api$getState = _context.sent;\n                      wISchnorrPublic = _await$api$getState.wISchnorrPublic;\n\n                      if (wISchnorrPublic) {\n                        _context.next = 20;\n                        break;\n                      }\n\n                      console.log('wISchnorrPublic is not set');\n                      return _context.abrupt(\"return\", \"continue\");\n\n                    case 20:\n                      client = new WISchnorrClient(wISchnorrPublic);\n\n                      if (sigInfo) {\n                        _context.next = 33;\n                        break;\n                      }\n\n                      _context.next = 24;\n                      return _regenerator.default.awrap(api.getPublic(app.id, roundedTimestamp, verification));\n\n                    case 24:\n                      pub = _context.sent;\n                      uid = _cryptoJs.default.enc.Base64.stringify(_cryptoJs.default.lib.WordArray.random(16));\n                      console.log(\"using \" + uid + \" for \" + app.name + \" (\" + verification + \") as uid\");\n                      challenge = client.GenerateWISchnorrClientChallenge(pub, info, uid);\n                      console.log(challenge, 'challenge');\n                      sigInfo = {\n                        uid: uid,\n                        app: app.id,\n                        roundedTimestamp: roundedTimestamp,\n                        verification: verification,\n                        pub: pub,\n                        challenge: challenge,\n                        linked: false,\n                        linkedTimestamp: 0,\n                        signedTimestamp: Date.now()\n                      };\n                      dispatch((0, _appsSlice.upsertSig)(sigInfo));\n                      _context.next = 34;\n                      break;\n\n                    case 33:\n                      if (sigInfo && !sigInfo.sig) {\n                        pub = sigInfo.pub;\n                        uid = sigInfo.uid;\n                        challenge = sigInfo.challenge;\n                      }\n\n                    case 34:\n                      s = (0, _fastJsonStableStringify.default)({\n                        id: id,\n                        public: pub\n                      });\n                      sig = (0, _encoding.uInt8ArrayToB64)(_tweetnacl.default.sign.detached((0, _encoding.strToUint8Array)(s), secretKey));\n                      _context.next = 38;\n                      return _regenerator.default.awrap(api.getBlindedSig((0, _fastJsonStableStringify.default)(pub), sig, challenge.e));\n\n                    case 38:\n                      response = _context.sent;\n                      console.log(response, 'response');\n                      blindSig = client.GenerateWISchnorrBlindSignature(challenge.t, response);\n                      console.log('final sig', blindSig);\n\n                      if (client.VerifyWISchnorrBlindSignature(blindSig, info, uid)) {\n                        _context.next = 45;\n                        break;\n                      }\n\n                      console.log(\"wrong signature for \" + app.name + \" (\" + verification + \")!\");\n                      return _context.abrupt(\"return\", \"continue\");\n\n                    case 45:\n                      backupData = (0, _fastJsonStableStringify.default)((0, _extends2.default)({}, sigInfo, {\n                        sig: blindSig\n                      }));\n                      backupKey = (0, _encoding.hash)(app.id + \" \" + verification + \" \" + roundedTimestamp);\n                      _context.next = 49;\n                      return _regenerator.default.awrap(encryptAndBackup(backupKey, backupData));\n\n                    case 49:\n                      dispatch((0, _appsSlice.updateSig)({\n                        id: uid,\n                        changes: {\n                          sig: blindSig\n                        }\n                      }));\n                      _context.next = 60;\n                      break;\n\n                    case 52:\n                      _context.prev = 52;\n                      _context.t0 = _context[\"catch\"](7);\n                      console.log(\"error in getting sig for \" + app.name + \" (\" + verification + \")\", _context.t0);\n\n                      if (!(_context.t0.errorNum === _brightidError.CACHED_PARAMS_NOT_FOUND && sigInfo && sigInfo.uid)) {\n                        _context.next = 60;\n                        break;\n                      }\n\n                      console.log('removing sig and retrying');\n                      dispatch((0, _appsSlice.removeSig)(sigInfo.uid));\n                      _context.next = 60;\n                      return _regenerator.default.awrap(dispatch(updateBlindSig(app)));\n\n                    case 60:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[7, 52]], Promise);\n            };\n\n            _iterator = _createForOfIteratorHelperLoose(app.verifications);\n\n          case 7:\n            if ((_step = _iterator()).done) {\n              _context2.next = 16;\n              break;\n            }\n\n            verification = _step.value;\n            _context2.next = 11;\n            return _regenerator.default.awrap(_loop(verification));\n\n          case 11:\n            _ret = _context2.sent;\n\n            if (!(_ret === \"continue\")) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 14);\n\n          case 14:\n            _context2.next = 7;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.updateBlindSig = updateBlindSig;\n\nvar updateBlindSigs = function updateBlindSigs() {\n  return function _callee4(dispatch, getState) {\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function () {\n              _reactNative.InteractionManager.runAfterInteractions(function _callee3() {\n                var expireableBlindSigApps, _iterator2, _step2, app;\n\n                return _regenerator.default.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        expireableBlindSigApps = (0, _appsSlice.selectExpireableBlindSigApps)(getState());\n                        _iterator2 = _createForOfIteratorHelperLoose(expireableBlindSigApps);\n\n                      case 2:\n                        if ((_step2 = _iterator2()).done) {\n                          _context3.next = 8;\n                          break;\n                        }\n\n                        app = _step2.value;\n                        _context3.next = 6;\n                        return _regenerator.default.awrap(dispatch(updateBlindSig(app)));\n\n                      case 6:\n                        _context3.next = 2;\n                        break;\n\n                      case 8:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.updateBlindSigs = updateBlindSigs;\n\nvar encryptAndBackup = function _callee5(key, data) {\n  var _store$getState, _store$getState$user, id, password, hashedId, encrypted;\n\n  return _regenerator.default.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _store$getState = _store.store.getState(), _store$getState$user = _store$getState.user, id = _store$getState$user.id, password = _store$getState$user.password;\n          hashedId = (0, _encoding.hash)(id + password);\n          _context5.prev = 2;\n          encrypted = _cryptoJs.default.AES.encrypt(data, password).toString();\n          _context5.next = 6;\n          return _regenerator.default.awrap(_backupService.default.putRecovery(hashedId, key, encrypted));\n\n        case 6:\n          _context5.next = 11;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](2);\n          _context5.t0 instanceof Error ? console.warn(_context5.t0.message) : console.warn(_context5.t0);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[2, 8]], Promise);\n};\n\nvar fetchApps = function fetchApps(api) {\n  return function _callee6(dispatch, _) {\n    var apps;\n    return _regenerator.default.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regenerator.default.awrap(api.getApps());\n\n          case 3:\n            apps = _context6.sent;\n            _context6.next = 6;\n            return _regenerator.default.awrap(dispatch((0, _appsSlice.setApps)(apps)));\n\n          case 6:\n            _context6.next = 11;\n            break;\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\n\nexports.fetchApps = fetchApps;","map":{"version":3,"names":["WISchnorrClient","require","updateBlindSig","app","dispatch","getState","user","verifications","id","secretKey","keypair","sigs","selectAllSigs","verificationsByName","_","keyBy","v","name","vel","verificationExpirationLength","roundedTimestamp","Math","floor","Date","now","verification","sigInfo","find","sig","console","log","isVerified","network","__DEV__","BrightIdNetwork","TEST","NODE","url","nodeUrl","api","NodeApi","info","stringify","wISchnorrPublic","client","getPublic","pub","uid","CryptoJS","enc","Base64","lib","WordArray","random","challenge","GenerateWISchnorrClientChallenge","linked","linkedTimestamp","signedTimestamp","upsertSig","s","public","uInt8ArrayToB64","nacl","sign","detached","strToUint8Array","getBlindedSig","e","response","blindSig","GenerateWISchnorrBlindSignature","t","VerifyWISchnorrBlindSignature","backupData","backupKey","hash","encryptAndBackup","updateSig","changes","errorNum","CACHED_PARAMS_NOT_FOUND","removeSig","updateBlindSigs","Promise","InteractionManager","runAfterInteractions","expireableBlindSigApps","selectExpireableBlindSigApps","key","data","store","password","hashedId","encrypted","AES","encrypt","toString","backupApi","putRecovery","Error","warn","message","fetchApps","getApps","apps","setApps"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/actions/apps.ts"],"sourcesContent":["import _ from 'lodash';\nimport CryptoJS from 'crypto-js';\nimport nacl from 'tweetnacl';\nimport stringify from 'fast-json-stable-stringify';\nimport { InteractionManager } from 'react-native';\nimport { store } from '@/store';\nimport {\n  setApps,\n  upsertSig,\n  removeSig,\n  updateSig,\n  selectAllSigs,\n  selectExpireableBlindSigApps,\n} from '@/reducer/appsSlice';\nimport { hash, strToUint8Array, uInt8ArrayToB64 } from '@/utils/encoding';\nimport { NodeApi } from '@/api/brightId';\nimport { isVerified } from '@/utils/verifications';\nimport backupApi from '@/api/backupService';\nimport { CACHED_PARAMS_NOT_FOUND } from '@/api/brightidError';\nimport { BrightIdNetwork } from '@/components/Apps/types.d';\n\nconst WISchnorrClient = require('@/utils/WISchnorrClient');\n\nexport const updateBlindSig =\n  (app) => async (dispatch: dispatch, getState: GetState) => {\n    const {\n      user: { verifications, id },\n      keypair: { secretKey },\n    } = getState();\n    const sigs = selectAllSigs(getState());\n    const verificationsByName = _.keyBy(verifications, (v) => v.name);\n    const vel = app.verificationExpirationLength;\n    const roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n    for (const verification of app.verifications) {\n      let sigInfo = sigs.find(\n        (sig) =>\n          sig.app === app.id &&\n          sig.verification === verification &&\n          sig.roundedTimestamp === roundedTimestamp,\n      );\n      if (sigInfo && sigInfo.sig) {\n        console.log(`sig exists for ${app.name} (${verification})`);\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      if (!isVerified(verificationsByName, verification)) {\n        console.log(`user is not verified for ${app.name} (${verification})`);\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      try {\n        const network = __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE;\n        // TODO: Don't fallback to node.brightid.org. 'app.nodeUrl' should be mandatory.\n        // noinspection HttpUrlsUsage\n        const url = app.nodeUrl || `http://${network}.brightid.org`;\n        const api = new NodeApi({ url, id, secretKey });\n        const info = stringify({\n          app: app.id,\n          roundedTimestamp,\n          verification,\n        });\n        console.log(info, 'info');\n        const { wISchnorrPublic } = await api.getState();\n        if (!wISchnorrPublic) {\n          console.log('wISchnorrPublic is not set');\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        const client = new WISchnorrClient(wISchnorrPublic);\n        let pub, uid: string;\n        let challenge: WISchnorrChallenge;\n        if (!sigInfo) {\n          pub = await api.getPublic(app.id, roundedTimestamp, verification);\n          uid = CryptoJS.enc.Base64.stringify(\n            CryptoJS.lib.WordArray.random(16),\n          );\n          console.log(`using ${uid} for ${app.name} (${verification}) as uid`);\n          challenge = client.GenerateWISchnorrClientChallenge(pub, info, uid);\n          console.log(challenge, 'challenge');\n          // store sig info before getting sig to be able to receive sig from server again\n          // if app stopped just after querying the one time sig from the server\n          sigInfo = {\n            uid,\n            app: app.id,\n            roundedTimestamp,\n            verification,\n            pub,\n            challenge,\n            linked: false,\n            linkedTimestamp: 0,\n            signedTimestamp: Date.now(),\n          };\n          dispatch(upsertSig(sigInfo));\n        } else if (sigInfo && !sigInfo.sig) {\n          pub = sigInfo.pub;\n          uid = sigInfo.uid;\n          challenge = sigInfo.challenge;\n        }\n\n        const s = stringify({ id, public: pub });\n        const sig = uInt8ArrayToB64(\n          nacl.sign.detached(strToUint8Array(s), secretKey),\n        );\n\n        const response = await api.getBlindedSig(\n          stringify(pub),\n          sig,\n          challenge.e,\n        );\n        console.log(response, 'response');\n        const blindSig = client.GenerateWISchnorrBlindSignature(\n          challenge.t,\n          response,\n        );\n        console.log('final sig', blindSig);\n        if (!client.VerifyWISchnorrBlindSignature(blindSig, info, uid)) {\n          console.log(`wrong signature for ${app.name} (${verification})!`);\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        const backupData = stringify({ ...sigInfo, sig: blindSig });\n        const backupKey = hash(`${app.id} ${verification} ${roundedTimestamp}`);\n        await encryptAndBackup(backupKey, backupData);\n\n        dispatch(\n          updateSig({\n            id: uid,\n            changes: { sig: blindSig },\n          }),\n        );\n      } catch (err) {\n        console.log(\n          `error in getting sig for ${app.name} (${verification})`,\n          err,\n        );\n        if (\n          err.errorNum === CACHED_PARAMS_NOT_FOUND &&\n          sigInfo &&\n          sigInfo.uid\n        ) {\n          console.log('removing sig and retrying');\n          dispatch(removeSig(sigInfo.uid));\n          await dispatch(updateBlindSig(app));\n        }\n      }\n    }\n  };\n\nexport const updateBlindSigs =\n  () => async (dispatch: dispatch, getState: GetState) => {\n    return new Promise(() => {\n      InteractionManager.runAfterInteractions(async () => {\n        const expireableBlindSigApps = selectExpireableBlindSigApps(getState());\n        for (const app of expireableBlindSigApps) {\n          await dispatch(updateBlindSig(app));\n        }\n      });\n    });\n  };\n\nconst encryptAndBackup = async (key: string, data: string) => {\n  const {\n    user: { id, password },\n  } = store.getState();\n  const hashedId = hash(id + password);\n  try {\n    const encrypted = CryptoJS.AES.encrypt(data, password).toString();\n    await backupApi.putRecovery(hashedId, key, encrypted);\n  } catch (err) {\n    err instanceof Error ? console.warn(err.message) : console.warn(err);\n  }\n};\n\nexport const fetchApps = (api) => async (dispatch: dispatch, _) => {\n  try {\n    const apps = await api.getApps();\n    await dispatch(setApps(apps));\n  } catch (err) {\n    console.log(err);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}