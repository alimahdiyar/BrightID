{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syncStoreTasks = exports.selectTaskIds = exports.selectCompletedTaskIds = exports.resetTask = exports.removeTask = exports.default = exports.completeTask = exports.checkTasks = exports.addTask = void 0;\n\nvar _actions = require(\"../../actions\");\n\nvar _constants = require(\"../../utils/constants\");\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _UserTasks = require(\"./UserTasks\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar initialState = {};\nvar tasksSlice = (0, _toolkit.createSlice)({\n  name: 'tasks',\n  initialState: initialState,\n  reducers: {\n    addTask: function addTask(state, action) {\n      var taskId = action.payload;\n\n      if (!(taskId in state)) {\n        state[taskId] = {\n          id: taskId,\n          completed: false,\n          timestamp: 0\n        };\n      }\n    },\n    removeTask: function removeTask(state, action) {\n      var taskId = action.payload;\n\n      if (taskId in state) {\n        delete state[taskId];\n      }\n    },\n    resetTask: function resetTask(state, action) {\n      var taskId = action.payload;\n\n      if (taskId in state) {\n        state[taskId].completed = false;\n        state[taskId].timestamp = 0;\n      }\n    },\n    completeTask: function completeTask(state, action) {\n      var taskId = action.payload;\n      var task = state[taskId];\n\n      if (task) {\n        task.completed = true;\n        task.timestamp = Date.now();\n      } else {\n        console.log(\"completeTask() called for unknown task \" + taskId);\n      }\n    }\n  },\n  extraReducers: {\n    RESET_STORE: function RESET_STORE(state) {\n      for (var _i = 0, _Object$values = Object.values(state); _i < _Object$values.length; _i++) {\n        var task = _Object$values[_i];\n        task.completed = false;\n        task.timestamp = 0;\n      }\n    }\n  }\n});\nvar _tasksSlice$actions = tasksSlice.actions,\n    addTask = _tasksSlice$actions.addTask,\n    removeTask = _tasksSlice$actions.removeTask,\n    completeTask = _tasksSlice$actions.completeTask,\n    resetTask = _tasksSlice$actions.resetTask;\nexports.resetTask = resetTask;\nexports.completeTask = completeTask;\nexports.removeTask = removeTask;\nexports.addTask = addTask;\n\nvar syncStoreTasks = function syncStoreTasks() {\n  return function (dispatch, getState) {\n    var userTaskIds = Object.keys(_UserTasks.UserTasks);\n    var storeTaskIds = Object.keys(getState().tasks);\n    var idsToRemove = storeTaskIds.filter(function (id) {\n      return !userTaskIds.includes(id);\n    });\n    var idsToAdd = userTaskIds.filter(function (id) {\n      return !storeTaskIds.includes(id);\n    });\n\n    for (var _iterator = _createForOfIteratorHelperLoose(idsToRemove), _step; !(_step = _iterator()).done;) {\n      var id = _step.value;\n\n      if (id !== '_persist') {\n        console.log(\"Removing task \" + id + \" from store\");\n        dispatch(removeTask(id));\n      }\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(idsToAdd), _step2; !(_step2 = _iterator2()).done;) {\n      var _id = _step2.value;\n      console.log(\"Adding task \" + _id + \" to store\");\n      dispatch(addTask(_id));\n    }\n  };\n};\n\nexports.syncStoreTasks = syncStoreTasks;\n\nvar checkTasks = function checkTasks() {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    for (var _i2 = 0, _Object$values2 = Object.values(state.tasks); _i2 < _Object$values2.length; _i2++) {\n      var task = _Object$values2[_i2];\n\n      if (_UserTasks.UserTasks[task.id]) {\n        try {\n          var completed = _UserTasks.UserTasks[task.id].checkFn(state);\n\n          if (completed && !state.tasks[task.id].completed) {\n            console.log(\"Task '\" + _UserTasks.UserTasks[task.id].title + \"' completed.\");\n            dispatch(completeTask(task.id));\n            dispatch((0, _actions.setActiveNotification)({\n              type: _constants.MISC_TYPE,\n              title: _i18next.default.t('achievements.notification.title'),\n              message: _i18next.default.t('achievements.notification.message', {\n                title: _UserTasks.UserTasks[task.id].title\n              }),\n              navigationTarget: null,\n              icon: 'Certificate'\n            }));\n          } else if (!completed && state.tasks[task.id].completed) {\n            console.log(\"Task '\" + _UserTasks.UserTasks[task.id].title + \"' reset.\");\n            dispatch(resetTask(task.id));\n          }\n        } catch (err) {\n          console.log(\"Error while checking task \" + task.id + \": \" + err.message);\n        }\n      }\n    }\n  };\n};\n\nexports.checkTasks = checkTasks;\nvar _default = tasksSlice.reducer;\nexports.default = _default;\nvar selectTaskIds = (0, _toolkit.createSelector)(function (state) {\n  return state.tasks;\n}, function (tasks) {\n  return Object.keys(tasks).filter(function (id) {\n    return id !== '_persist';\n  }).sort(function (a, b) {\n    return _UserTasks.UserTasks[a].sortValue - _UserTasks.UserTasks[b].sortValue;\n  });\n});\nexports.selectTaskIds = selectTaskIds;\nvar selectCompletedTaskIds = (0, _toolkit.createSelector)(selectTaskIds, function (state) {\n  return state.tasks;\n}, function (taskIds, tasks) {\n  return taskIds.filter(function (taskId) {\n    return tasks[taskId].completed;\n  });\n});\nexports.selectCompletedTaskIds = selectCompletedTaskIds;","map":{"version":3,"names":["initialState","tasksSlice","createSlice","name","reducers","addTask","state","action","taskId","payload","id","completed","timestamp","removeTask","resetTask","completeTask","task","Date","now","console","log","extraReducers","RESET_STORE","Object","values","actions","syncStoreTasks","dispatch","getState","userTaskIds","keys","UserTasks","storeTaskIds","tasks","idsToRemove","filter","includes","idsToAdd","checkTasks","checkFn","title","setActiveNotification","type","MISC_TYPE","i18next","t","message","navigationTarget","icon","err","reducer","selectTaskIds","createSelector","sort","a","b","sortValue","selectCompletedTaskIds","taskIds"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TasksSlice.ts"],"sourcesContent":["import { setActiveNotification } from '@/actions';\nimport { MISC_TYPE } from '@/utils/constants';\nimport { createSlice, createSelector } from '@reduxjs/toolkit';\nimport i18next from 'i18next';\nimport { UserTasks } from './UserTasks';\n\n/*\n  Reducer tracking tasks completion. Stores taskID, completion status and timestamp of completion.\n\n  The actual task definitions (id, title, description and validation method) are located in\n  file UserTasks.js. At app startup (bootstrap.js) the ids of new tasks are loaded from\n  UserTasks.js and added to the redux store.\n\n  Example for two tasks:\n   - task with ID 'taskID1' that has been completed on August 10th (timestamp 1597064209249)\n   - task with ID 'taskID2' is not yet completed\n\n  state = {\n    'taskID1': {\n      id: 'taskID1',\n      completed: true,\n      timestamp: 1597064209249\n    }\n    'taskID2': {\n      id: 'taskID2',\n      completed: false,\n      timestamp: 0,\n    }\n  }\n\n */\nconst initialState: TasksState = {};\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask(state, action) {\n      const taskId = action.payload;\n      // only add tasks that are not yet known\n      if (!(taskId in state)) {\n        state[taskId] = {\n          id: taskId,\n          completed: false,\n          timestamp: 0,\n        };\n      }\n    },\n    removeTask(state, action) {\n      const taskId = action.payload;\n      if (taskId in state) {\n        delete state[taskId];\n      }\n    },\n    resetTask(state, action) {\n      const taskId = action.payload;\n      if (taskId in state) {\n        state[taskId].completed = false;\n        state[taskId].timestamp = 0;\n      }\n    },\n    completeTask(state, action) {\n      const taskId = action.payload;\n      const task = state[taskId];\n      if (task) {\n        task.completed = true;\n        task.timestamp = Date.now();\n      } else {\n        console.log(`completeTask() called for unknown task ${taskId}`);\n      }\n    },\n  },\n  extraReducers: {\n    RESET_STORE: (state) => {\n      for (const task of Object.values(state)) {\n        task.completed = false;\n        task.timestamp = 0;\n      }\n    },\n  },\n});\n\nexport const {\n  addTask,\n  removeTask,\n  completeTask,\n  resetTask,\n} = tasksSlice.actions;\n\n// UserTasks.js may have tasks added or removed with an app update. This action takes care\n// that the persisted store always is up to date with the available tasks.\nexport const syncStoreTasks = () => {\n  return (dispatch: dispatch, getState: getState) => {\n    const userTaskIds = Object.keys(UserTasks);\n    const storeTaskIds = Object.keys(getState().tasks);\n    const idsToRemove = storeTaskIds.filter((id) => !userTaskIds.includes(id));\n    const idsToAdd = userTaskIds.filter((id) => !storeTaskIds.includes(id));\n    for (const id of idsToRemove) {\n      if (id !== '_persist') {\n        console.log(`Removing task ${id} from store`);\n        dispatch(removeTask(id));\n      }\n    }\n    for (const id of idsToAdd) {\n      console.log(`Adding task ${id} to store`);\n      dispatch(addTask(id));\n    }\n  };\n};\n\nexport const checkTasks = () => {\n  return (dispatch: dispatch, getState: getState) => {\n    const state = getState();\n    for (const task of Object.values(state.tasks)) {\n      if (UserTasks[task.id]) {\n        try {\n          const completed = UserTasks[task.id].checkFn(state);\n          if (completed && !state.tasks[task.id].completed) {\n            console.log(`Task '${UserTasks[task.id].title}' completed.`);\n            dispatch(completeTask(task.id));\n            dispatch(\n              setActiveNotification({\n                type: MISC_TYPE,\n                title: i18next.t('achievements.notification.title'),\n                message: i18next.t('achievements.notification.message', {\n                  title: UserTasks[task.id].title,\n                }),\n                navigationTarget: null,\n                icon: 'Certificate',\n              }),\n            );\n          } else if (!completed && state.tasks[task.id].completed) {\n            console.log(`Task '${UserTasks[task.id].title}' reset.`);\n            dispatch(resetTask(task.id));\n          }\n        } catch (err) {\n          console.log(`Error while checking task ${task.id}: ${err.message}`);\n        }\n      }\n    }\n  };\n};\n\nexport default tasksSlice.reducer;\n\nexport const selectTaskIds = createSelector(\n  (state: State) => state.tasks,\n  (tasks) => {\n    return Object.keys(tasks)\n      .filter((id) => id !== '_persist')\n      .sort((a, b) => UserTasks[a].sortValue - UserTasks[b].sortValue);\n  },\n);\n\nexport const selectCompletedTaskIds = createSelector(\n  selectTaskIds,\n  (state: State) => state.tasks,\n  (taskIds, tasks) =>\n    taskIds.filter((taskId: string) => tasks[taskId].completed),\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}