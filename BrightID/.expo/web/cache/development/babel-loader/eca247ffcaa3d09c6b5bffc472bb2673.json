{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emoji = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _nodeEmoji = _interopRequireDefault(require(\"node-emoji\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Emoji = (0, _react.memo)(function (_ref) {\n  var name = _ref.name;\n\n  var emoji = _nodeEmoji.default.get(name);\n\n  return _react.default.createElement(_reactNative.Text, {\n    allowFontScaling: false\n  }, emoji);\n});\nexports.Emoji = Emoji;","map":{"version":3,"sources":["../src/Emoji.tsx"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAM,KAAK,GAAG,IAAA,WAAA,EAAK,gBAA+B;EAAA,IAA5B,IAA4B,QAA5B,IAA4B;;EAChD,IAAM,KAAK,GAAG,kBAAA,CAAU,GAAV,CAAc,IAAd,CAAd;;EACA,OAAO,cAAA,CAAA,aAAA,CAAC,iBAAD,EAAK;IAAC,gBAAgB,EAAE;EAAnB,CAAL,EAAgC,KAAhC,CAAP;AACD,CAHa,CAAd","sourceRoot":"","sourcesContent":["import React, { memo } from 'react';\nimport { Text } from 'react-native';\nimport nodeEmoji from 'node-emoji';\nconst Emoji = memo(({ name }) => {\n    const emoji = nodeEmoji.get(name);\n    return React.createElement(Text, { allowFontScaling: false }, emoji);\n});\nexport { Emoji };\n//# sourceMappingURL=Emoji.js.map"]},"metadata":{},"sourceType":"script"}