{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport UIManager from \"../../exports/UIManager\";\nimport createDOMProps from \"../createDOMProps\";\nimport useStable from \"../useStable\";\nimport { useRef } from 'react';\nvar emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, classList, pointerEvents, style, previousStyleRef) {\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents: pointerEvents\n    }, nativeProps), {}, {\n      classList: [classList, nativeProps.className],\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\n\nexport default function usePlatformMethods(_ref) {\n  var classList = _ref.classList,\n      pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    classList: classList,\n    pointerEvents: pointerEvents,\n    style: style\n  };\n  var ref = useStable(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return UIManager.measure(hostNode, callback);\n        };\n\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n\n        hostNode.measureInWindow = function (callback) {\n          return UIManager.measureInWindow(hostNode, callback);\n        };\n\n        hostNode.setNativeProps = function (nativeProps) {\n          var _ref2 = setNativePropsArgsRef.current || emptyObject,\n              classList = _ref2.classList,\n              style = _ref2.style,\n              pointerEvents = _ref2.pointerEvents;\n\n          setNativeProps(hostNode, nativeProps, classList, pointerEvents, style, previousStyleRef);\n        };\n      }\n    };\n  });\n  return ref;\n}","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/dist/modules/usePlatformMethods/index.js"],"names":["keys","Object","symbols","i","arguments","source","ownKeys","_defineProperty","key","value","enumerable","configurable","writable","obj","emptyObject","node","domProps","createDOMProps","_objectSpread","pointerEvents","classList","nativeProps","style","nextDomStyle","previousStyleRef","UIManager","_ref","useRef","setNativePropsArgsRef","ref","useStable","hostNode","_ref2","setNativeProps"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\nimport createDOMProps from '../createDOMProps';\nimport useStable from '../useStable';\nimport { useRef } from 'react';\nvar emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, classList, pointerEvents, style, previousStyleRef) {\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents: pointerEvents\n    }, nativeProps), {}, {\n      classList: [classList, nativeProps.className],\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\n\n\nexport default function usePlatformMethods(_ref) {\n  var classList = _ref.classList,\n      pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    classList: classList,\n    pointerEvents: pointerEvents,\n    style: style\n  }; // Avoid creating a new ref on every render. The props only need to be\n  // available to 'setNativeProps' when it is called.\n\n  var ref = useStable(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return UIManager.measure(hostNode, callback);\n        };\n\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n\n        hostNode.measureInWindow = function (callback) {\n          return UIManager.measureInWindow(hostNode, callback);\n        };\n\n        hostNode.setNativeProps = function (nativeProps) {\n          var _ref2 = setNativePropsArgsRef.current || emptyObject,\n              classList = _ref2.classList,\n              style = _ref2.style,\n              pointerEvents = _ref2.pointerEvents;\n\n          setNativeProps(hostNode, nativeProps, classList, pointerEvents, style, previousStyleRef);\n        };\n      }\n    };\n  });\n  return ref;\n}"]},"metadata":{},"sourceType":"module"}