{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return offsetX + \" \" + offsetY + \" \" + blurRadius + \" \" + color;\n  }\n};\n\nexport default resolveShadowValue;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/exports/StyleSheet/resolveShadowValue.js"],"names":["defaultOffset","height","width","resolveShadowValue","shadowColor","shadowOffset","shadowOpacity","shadowRadius","style","offsetX","normalizeValueWithProperty","offsetY","blurRadius","color","normalizeColor"],"mappings":"AASA,OAAA,cAAA;AACA,OAAA,0BAAA;AAEA,IAAMA,aAAa,GAAG;EAAEC,MAAM,EAAR,CAAA;EAAaC,KAAK,EAAxC;AAAsB,CAAtB;;AAEA,IAAMC,kBAAkB,GAAlBA,SAAAA,kBAAAA,CAAqB,KAArBA,EAAuD;EAC3D,IAAQC,WAAR,GAAmEI,KAAnE,CAAA,WAAA;EAAA,IAAqBH,YAArB,GAAmEG,KAAnE,CAAA,YAAA;EAAA,IAAmCF,aAAnC,GAAmEE,KAAnE,CAAA,aAAA;EAAA,IAAkDD,YAAlD,GAAmEC,KAAnE,CAAA,YAAA;;EACA,IAAA,IAAA,GAA0BH,YAAY,IAAtC,aAAA;EAAA,IAAQJ,MAAR,GAAA,IAAA,CAAA,MAAA;EAAA,IAAgBC,KAAhB,GAAA,IAAA,CAAA,KAAA;;EACA,IAAMO,OAAO,GAAGC,0BAA0B,CAA1C,KAA0C,CAA1C;EACA,IAAMC,OAAO,GAAGD,0BAA0B,CAA1C,MAA0C,CAA1C;EACA,IAAME,UAAU,GAAGF,0BAA0B,CAACH,YAAY,IAA1D,CAA6C,CAA7C;EACA,IAAMM,KAAK,GAAGC,cAAc,CAACV,WAAW,IAAZ,OAAA,EAA5B,aAA4B,CAA5B;;EACA,IAAIS,KAAK,IAALA,IAAAA,IAAiBJ,OAAO,IAAxBI,IAAAA,IAAoCF,OAAO,IAA3CE,IAAAA,IAAuDD,UAAU,IAArE,IAAA,EAA+E;IAC7E,OAAUH,OAAV,GAAA,GAAUA,GAAV,OAAUA,GAAV,GAAUA,GAAV,UAAUA,GAAV,GAAUA,GAAV,KAAA;EAEH;AAVD,CAAA;;AAYA,eAAA,kBAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\nconst defaultOffset = { height: 0, width: 0 };\n\nconst resolveShadowValue = (style: Object): void | string => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport default resolveShadowValue;\n"]},"metadata":{},"sourceType":"module"}