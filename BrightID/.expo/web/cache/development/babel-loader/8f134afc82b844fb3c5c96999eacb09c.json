{"ast":null,"code":"var unitlessNumbers = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true\n};\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\n\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\n\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/react-native-web/src/modules/unitlessNumbers/index.js"],"names":["unitlessNumbers","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexOrder","flexPositive","flexShrink","flexNegative","fontWeight","gridRow","gridRowEnd","gridRowGap","gridRowStart","gridColumn","gridColumnEnd","gridColumnGap","gridColumnStart","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","scale","scaleX","scaleY","scaleZ","shadowOpacity","prefixes","prefixKey","prefix","key","Object"],"mappings":"AAUA,IAAMA,eAAe,GAAG;EACtBC,uBAAuB,EADD,IAAA;EAEtBC,WAAW,EAFW,IAAA;EAGtBC,iBAAiB,EAHK,IAAA;EAItBC,gBAAgB,EAJM,IAAA;EAKtBC,gBAAgB,EALM,IAAA;EAMtBC,OAAO,EANe,IAAA;EAOtBC,YAAY,EAPU,IAAA;EAQtBC,eAAe,EARO,IAAA;EAStBC,WAAW,EATW,IAAA;EAUtBC,IAAI,EAVkB,IAAA;EAWtBC,QAAQ,EAXc,IAAA;EAYtBC,SAAS,EAZa,IAAA;EAatBC,YAAY,EAbU,IAAA;EActBC,UAAU,EAdY,IAAA;EAetBC,YAAY,EAfU,IAAA;EAgBtBC,UAAU,EAhBY,IAAA;EAiBtBC,OAAO,EAjBe,IAAA;EAkBtBC,UAAU,EAlBY,IAAA;EAmBtBC,UAAU,EAnBY,IAAA;EAoBtBC,YAAY,EApBU,IAAA;EAqBtBC,UAAU,EArBY,IAAA;EAsBtBC,aAAa,EAtBS,IAAA;EAuBtBC,aAAa,EAvBS,IAAA;EAwBtBC,eAAe,EAxBO,IAAA;EAyBtBC,SAAS,EAzBa,IAAA;EA0BtBC,OAAO,EA1Be,IAAA;EA2BtBC,KAAK,EA3BiB,IAAA;EA4BtBC,OAAO,EA5Be,IAAA;EA6BtBC,OAAO,EA7Be,IAAA;EA8BtBC,MAAM,EA9BgB,IAAA;EA+BtBC,MAAM,EA/BgB,IAAA;EAgCtBC,IAAI,EAhCkB,IAAA;EAkCtBC,WAAW,EAlCW,IAAA;EAmCtBC,YAAY,EAnCU,IAAA;EAoCtBC,WAAW,EApCW,IAAA;EAqCtBC,eAAe,EArCO,IAAA;EAsCtBC,gBAAgB,EAtCM,IAAA;EAuCtBC,gBAAgB,EAvCM,IAAA;EAwCtBC,aAAa,EAxCS,IAAA;EAyCtBC,WAAW,EAzCW,IAAA;EA2CtBC,KAAK,EA3CiB,IAAA;EA4CtBC,MAAM,EA5CgB,IAAA;EA6CtBC,MAAM,EA7CgB,IAAA;EA8CtBC,MAAM,EA9CgB,IAAA;EAgDtBC,aAAa,EAhDf;AAAwB,CAAxB;AAuDA,IAAMC,QAAQ,GAAG,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAjB,QAAiB,CAAjB;;AACA,IAAMC,SAAS,GAATA,SAAAA,SAAAA,CAAY,MAAZA,EAAY,GAAZA,EAA6C;EACjD,OAAOC,MAAM,GAAGC,GAAG,CAAHA,MAAAA,CAAAA,CAAAA,EAATD,WAASC,EAATD,GAAuCC,GAAG,CAAHA,SAAAA,CAA9C,CAA8CA,CAA9C;AADF,CAAA;;AAGAC,MAAM,CAANA,IAAAA,CAAAA,eAAAA,EAAAA,OAAAA,CAAqC,UAAA,IAAA,EAAU;EAC7CJ,QAAQ,CAARA,OAAAA,CAAiB,UAAA,MAAA,EAAY;IAC3B9C,eAAe,CAAC+C,SAAS,CAAA,MAAA,EAAzB/C,IAAyB,CAAV,CAAfA,GAA2CA,eAAe,CAA1DA,IAA0D,CAA1DA;EADF8C,CAAAA;AADFI,CAAAA;AAMA,eAAA,eAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst unitlessNumbers = {\n  animationIterationCount: true,\n  aspectRatio: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowGap: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnGap: true,\n  gridColumnStart: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  // transform types\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  // RN properties\n  shadowOpacity: true\n};\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['ms', 'Moz', 'O', 'Webkit'];\nconst prefixKey = (prefix: string, key: string) => {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\nObject.keys(unitlessNumbers).forEach((prop) => {\n  prefixes.forEach((prefix) => {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\n\nexport default unitlessNumbers;\n"]},"metadata":{},"sourceType":"module"}