{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport NotificationsScreen from \"../components/Notifications/NotificationsScreen\";\nimport { headerOptions, NavHome } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar topOptions = _objectSpread(_objectSpread({}, headerOptions), {}, {\n  headerLeft: function headerLeft() {\n    return _jsx(NavHome, {});\n  }\n});\n\nvar Notifications = function Notifications() {\n  return _jsx(_Fragment, {\n    children: _jsx(Stack.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreen,\n      options: topOptions\n    })\n  });\n};\n\nexport default Notifications;","map":{"version":3,"names":["React","createStackNavigator","NotificationsScreen","headerOptions","NavHome","Stack","topOptions","headerLeft","Notifications"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/routes/Notifications.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\nimport NotificationsScreen from '@/components/Notifications/NotificationsScreen';\nimport { headerOptions, NavHome } from './helpers';\n\nconst Stack = createStackNavigator();\n\nconst topOptions: StackNavigationOptions = {\n  ...headerOptions,\n  headerLeft: () => <NavHome />,\n};\n\nconst Notifications = () => {\n  return (\n    <>\n      <Stack.Screen\n        name=\"Notifications\"\n        component={NotificationsScreen}\n        options={topOptions}\n      />\n    </>\n  );\n};\n\nexport default Notifications;\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,oBADF,QAGO,yBAHP;AAIA,OAAOC,mBAAP;AACA,SAASC,aAAT,EAAwBC,OAAxB;;;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;;AAEA,IAAMK,UAAkC,mCACnCH,aADmC;EAEtCI,UAAU,EAAE;IAAA,OAAM,KAAC,OAAD,KAAN;EAAA;AAF0B,EAAxC;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,OACE;IAAA,UACE,KAAC,KAAD,CAAO,MAAP;MACE,IAAI,EAAC,eADP;MAEE,SAAS,EAAEN,mBAFb;MAGE,OAAO,EAAEI;IAHX;EADF,EADF;AASD,CAVD;;AAYA,eAAeE,aAAf"},"metadata":{},"sourceType":"module"}