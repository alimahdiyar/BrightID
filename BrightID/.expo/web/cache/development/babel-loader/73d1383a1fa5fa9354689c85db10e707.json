{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DEVICE_LARGE } from \"../../utils/deviceConstants\";\nimport { BLACK, BLUE } from \"../../theme/colors\";\nimport { fontSize } from \"../../theme/fonts\";\nimport { TaskState } from \"./TaskState\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction TaskCard(props) {\n  var title = props.title,\n      description = props.description,\n      fulfilled = props.fulfilled,\n      url = props.url,\n      onClick = props.onClick,\n      navigationTarget = props.navigationTarget;\n  var navigation = useNavigation();\n  var desc = url || navigationTarget ? _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      if (navigationTarget) {\n        navigation.navigate(navigationTarget, {\n          url: url\n        });\n      } else if (url) {\n        Linking.openURL(url);\n      }\n    },\n    children: _jsx(Text, {\n      style: styles.linkifiedDescription,\n      children: description\n    })\n  }) : _jsx(Text, {\n    style: styles.description,\n    children: description\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.taskInfo,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: title\n      }), desc]\n    }), _jsx(TaskState, {\n      complete: fulfilled,\n      onClick: onClick\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: DEVICE_LARGE ? 15 : 12,\n    paddingRight: 0,\n    paddingBottom: DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  taskInfo: {\n    marginRight: 25,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly'\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[20],\n    color: BLACK\n  },\n  description: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[15],\n    color: BLACK\n  },\n  linkifiedDescription: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[15],\n    color: BLUE\n  }\n});\nexport default TaskCard;","map":{"version":3,"names":["React","useNavigation","DEVICE_LARGE","BLACK","BLUE","fontSize","TaskState","TaskCard","props","title","description","fulfilled","url","onClick","navigationTarget","navigation","desc","navigate","Linking","openURL","styles","linkifiedDescription","container","taskInfo","StyleSheet","create","paddingTop","paddingRight","paddingBottom","flexDirection","justifyContent","marginRight","flex","fontFamily","fontStyle","color"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Tasks/TaskCard.tsx"],"sourcesContent":["import {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Linking,\n} from 'react-native';\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DEVICE_LARGE } from '@/utils/deviceConstants';\nimport { BLACK, BLUE } from '@/theme/colors';\nimport { fontSize } from '@/theme/fonts';\nimport { TaskState } from './TaskState';\n\ntype TaskCardProps = {\n  id: string;\n  title: string;\n  description: string;\n  fulfilled: boolean;\n  url: string | null | undefined;\n  navigationTarget: string | null | undefined;\n  onClick: () => any | null | undefined;\n};\n\nfunction TaskCard(props: TaskCardProps) {\n  const { title, description, fulfilled, url, onClick, navigationTarget } =\n    props;\n  const navigation = useNavigation();\n\n  const desc =\n    url || navigationTarget ? (\n      <TouchableOpacity\n        onPress={() => {\n          if (navigationTarget) {\n            navigation.navigate(navigationTarget, { url });\n          } else if (url) {\n            Linking.openURL(url);\n          }\n        }}\n      >\n        <Text style={styles.linkifiedDescription}>{description}</Text>\n      </TouchableOpacity>\n    ) : (\n      <Text style={styles.description}>{description}</Text>\n    );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskInfo}>\n        <Text style={styles.title}>{title}</Text>\n        {desc}\n      </View>\n      <TaskState complete={fulfilled} onClick={onClick} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: DEVICE_LARGE ? 15 : 12,\n    paddingRight: 0,\n    paddingBottom: DEVICE_LARGE ? 15 : 12,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n  },\n  taskInfo: {\n    marginRight: 25,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n  title: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[20],\n    color: BLACK,\n  },\n  description: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[15],\n    color: BLACK,\n  },\n  linkifiedDescription: {\n    fontFamily: 'Poppins-Medium',\n    fontStyle: 'normal',\n    fontSize: fontSize[15],\n    color: BLUE,\n  },\n});\n\nexport default TaskCard;\n"],"mappings":";;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,YAAT;AACA,SAASC,KAAT,EAAgBC,IAAhB;AACA,SAASC,QAAT;AACA,SAASC,SAAT;;;;AAYA,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;EACtC,IAAQC,KAAR,GACED,KADF,CAAQC,KAAR;EAAA,IAAeC,WAAf,GACEF,KADF,CAAeE,WAAf;EAAA,IAA4BC,SAA5B,GACEH,KADF,CAA4BG,SAA5B;EAAA,IAAuCC,GAAvC,GACEJ,KADF,CAAuCI,GAAvC;EAAA,IAA4CC,OAA5C,GACEL,KADF,CAA4CK,OAA5C;EAAA,IAAqDC,gBAArD,GACEN,KADF,CAAqDM,gBAArD;EAEA,IAAMC,UAAU,GAAGd,aAAa,EAAhC;EAEA,IAAMe,IAAI,GACRJ,GAAG,IAAIE,gBAAP,GACE,KAAC,gBAAD;IACE,OAAO,EAAE,mBAAM;MACb,IAAIA,gBAAJ,EAAsB;QACpBC,UAAU,CAACE,QAAX,CAAoBH,gBAApB,EAAsC;UAAEF,GAAG,EAAHA;QAAF,CAAtC;MACD,CAFD,MAEO,IAAIA,GAAJ,EAAS;QACdM,OAAO,CAACC,OAAR,CAAgBP,GAAhB;MACD;IACF,CAPH;IAAA,UASE,KAAC,IAAD;MAAM,KAAK,EAAEQ,MAAM,CAACC,oBAApB;MAAA,UAA2CX;IAA3C;EATF,EADF,GAaE,KAAC,IAAD;IAAM,KAAK,EAAEU,MAAM,CAACV,WAApB;IAAA,UAAkCA;EAAlC,EAdJ;EAiBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEU,MAAM,CAACE,SAApB;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACG,QAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACX,KAApB;QAAA,UAA4BA;MAA5B,EADF,EAEGO,IAFH;IAAA,EADF,EAKE,KAAC,SAAD;MAAW,QAAQ,EAAEL,SAArB;MAAgC,OAAO,EAAEE;IAAzC,EALF;EAAA,EADF;AASD;;AAED,IAAMO,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,UAAU,EAAExB,YAAY,GAAG,EAAH,GAAQ,EADvB;IAETyB,YAAY,EAAE,CAFL;IAGTC,aAAa,EAAE1B,YAAY,GAAG,EAAH,GAAQ,EAH1B;IAIT2B,aAAa,EAAE,KAJN;IAKTC,cAAc,EAAE;EALP,CADoB;EAQ/BP,QAAQ,EAAE;IACRQ,WAAW,EAAE,EADL;IAERC,IAAI,EAAE,CAFE;IAGRH,aAAa,EAAE,QAHP;IAIRC,cAAc,EAAE;EAJR,CARqB;EAc/BrB,KAAK,EAAE;IACLwB,UAAU,EAAE,gBADP;IAELC,SAAS,EAAE,QAFN;IAGL7B,QAAQ,EAAEA,QAAQ,CAAC,EAAD,CAHb;IAIL8B,KAAK,EAAEhC;EAJF,CAdwB;EAoB/BO,WAAW,EAAE;IACXuB,UAAU,EAAE,gBADD;IAEXC,SAAS,EAAE,QAFA;IAGX7B,QAAQ,EAAEA,QAAQ,CAAC,EAAD,CAHP;IAIX8B,KAAK,EAAEhC;EAJI,CApBkB;EA0B/BkB,oBAAoB,EAAE;IACpBY,UAAU,EAAE,gBADQ;IAEpBC,SAAS,EAAE,QAFS;IAGpB7B,QAAQ,EAAEA,QAAQ,CAAC,EAAD,CAHE;IAIpB8B,KAAK,EAAE/B;EAJa;AA1BS,CAAlB,CAAf;AAkCA,eAAeG,QAAf"},"metadata":{},"sourceType":"module"}