{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"get\", \"request\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nfunction usePermission(methods, options) {\n  var isMounted = useRef(true);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _ref = options || {},\n      _ref$get = _ref.get,\n      get = _ref$get === void 0 ? true : _ref$get,\n      _ref$request = _ref.request,\n      request = _ref$request === void 0 ? false : _ref$request,\n      permissionOptions = _objectWithoutProperties(_ref, _excluded);\n\n  var getPermission = useCallback(function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(methods.getMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined));\n\n          case 2:\n            response = _context.sent;\n            if (isMounted.current) setStatus(response);\n            return _context.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [methods.getMethod]);\n  var requestPermission = useCallback(function _callee2() {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(methods.requestMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined));\n\n          case 2:\n            response = _context2.sent;\n            if (isMounted.current) setStatus(response);\n            return _context2.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [methods.requestMethod]);\n  useEffect(function runMethods() {\n    if (request) requestPermission();\n    if (!request && get) getPermission();\n  }, [get, request, requestPermission, getPermission]);\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return [status, requestPermission, getPermission];\n}\n\nexport function createPermissionHook(methods) {\n  return function (options) {\n    return usePermission(methods, options);\n  };\n}","map":{"version":3,"sources":["../src/PermissionsHook.ts"],"names":["isMounted","useRef","status","setStatus","useState","get","request","permissionOptions","options","getPermission","useCallback","response","methods","Object","requestPermission","useEffect","usePermission"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { PermissionResponse } from './PermissionsInterface';\n\n// These types are identical, but improves the readability for suggestions in editors\ntype RequestPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\ntype GetPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\n\ninterface PermissionHookMethods<Permission extends PermissionResponse, Options = never> {\n  /** The permission method that requests the user to grant permission. */\n  requestMethod: (options?: Options) => Promise<Permission>;\n  /** The permission method that only fetches the current permission status. */\n  getMethod: (options?: Options) => Promise<Permission>;\n}\n\ninterface PermissionHookBehavior {\n  /** If the hook should automatically fetch the current permission status, without asking the user. */\n  get?: boolean;\n  /** If the hook should automatically request the user to grant permission. */\n  request?: boolean;\n}\n\nexport type PermissionHookOptions<Options extends object> = PermissionHookBehavior & Options;\n\n/**\n * Get or request permission for protected functionality within the app.\n * It uses separate permission requesters to interact with a single permission.\n * By default, the hook will only retrieve the permission status.\n */\nfunction usePermission<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>,\n  options?: PermissionHookOptions<Options>\n): [Permission | null, RequestPermissionMethod<Permission>, GetPermissionMethod<Permission>] {\n  const isMounted = useRef(true);\n  const [status, setStatus] = useState<Permission | null>(null);\n  const { get = true, request = false, ...permissionOptions } = options || {};\n\n  const getPermission = useCallback(async () => {\n    const response = await methods.getMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.getMethod]);\n\n  const requestPermission = useCallback(async () => {\n    const response = await methods.requestMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.requestMethod]);\n\n  useEffect(\n    function runMethods() {\n      if (request) requestPermission();\n      if (!request && get) getPermission();\n    },\n    [get, request, requestPermission, getPermission]\n  );\n\n  // Workaround for unmounting components receiving state updates\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return [status, requestPermission, getPermission];\n}\n\n/**\n * Create a new permission hook with the permission methods built-in.\n * This can be used to quickly create specific permission hooks in every module.\n */\nexport function createPermissionHook<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>\n) {\n  return (options?: PermissionHookOptions<Options>) =>\n    usePermission<Permission, Options>(methods, options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}