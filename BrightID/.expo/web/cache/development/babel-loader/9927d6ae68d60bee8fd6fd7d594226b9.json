{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linkAppId = exports.handleV6App = exports.handleV5App = exports.getSignedTimestamp = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _ramda = require(\"ramda\");\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _apisauce = require(\"apisauce\");\n\nvar _actions = require(\"../../actions\");\n\nvar _store = _interopRequireDefault(require(\"../../store\"));\n\nvar _brightId = require(\"../../api/brightId\");\n\nvar _appsSlice = require(\"../../reducer/appsSlice\");\n\nvar _brightidError = _interopRequireWildcard(require(\"../../api/brightidError\"));\n\nvar _types = require(\"./types.d\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar sponsorTimeout = 1000 * 60;\nvar sponsorPollInterval = 3000;\n\nvar getSignedTimestamp = function getSignedTimestamp(app) {\n  var sigs = (0, _appsSlice.selectAllSigs)(_store.default.getState());\n  var vel = app.verificationExpirationLength;\n  var roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n\n  var _loop = function _loop(verification) {\n    var sigInfo = sigs.find(function (sig) {\n      return sig.app === app.id && sig.verification === verification && sig.roundedTimestamp === roundedTimestamp;\n    });\n\n    if (sigInfo && sigInfo.sig) {\n      return {\n        v: sigInfo.signedTimestamp\n      };\n    }\n  };\n\n  for (var _iterator = _createForOfIteratorHelperLoose(app.verifications), _step; !(_step = _iterator()).done;) {\n    var verification = _step.value;\n\n    var _ret = _loop(verification);\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n\n  return null;\n};\n\nexports.getSignedTimestamp = getSignedTimestamp;\n\nvar handleV5App = function _callee(params, setSponsoringApp, api) {\n  var _store$getState, apps, handler, appInfo, baseUrl, appId, appUserId, _baseUrl, context, contextId;\n\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _store$getState = _store.default.getState(), apps = _store$getState.apps.apps;\n          params.baseUrl = decodeURIComponent(params.baseUrl);\n          appInfo = (0, _ramda.find)((0, _ramda.propEq)('id', params.context))(apps);\n\n          if (appInfo && appInfo.soulbound) {\n            baseUrl = params.baseUrl, appId = params.context, appUserId = params.contextId;\n\n            handler = function handler() {\n              return sponsor(appId, appUserId, setSponsoringApp, api, function () {\n                return linkContextId(baseUrl, appId, appUserId);\n              });\n            };\n          } else {\n            _baseUrl = params.baseUrl, context = params.context, contextId = params.contextId;\n\n            handler = function handler() {\n              return linkContextId(_baseUrl, context, contextId);\n            };\n          }\n\n          _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkApp'), _i18next.default.t('apps.alert.text.linkApp', {\n            context: \"\" + params.context\n          }), [{\n            text: _i18next.default.t('common.alert.yes'),\n            onPress: handler\n          }, {\n            text: _i18next.default.t('common.alert.no'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.handleV5App = handleV5App;\n\nvar handleV6App = function _callee2(params, setSponsoringApp, api) {\n  var appId, appUserId;\n  return _regenerator.default.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          appId = params.context, appUserId = params.contextId;\n\n          _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkApp'), _i18next.default.t('apps.alert.text.linkApp', {\n            context: \"\" + appId\n          }), [{\n            text: _i18next.default.t('common.alert.yes'),\n            onPress: function onPress() {\n              sponsor(appId, appUserId, setSponsoringApp, api, function () {\n                return linkAppId(appId, appUserId);\n              });\n            }\n          }, {\n            text: _i18next.default.t('common.alert.no'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.handleV6App = handleV6App;\n\nvar linkContextId = function _callee3(baseUrl, context, contextId) {\n  var id, secretKey, api, op;\n  return _regenerator.default.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          id = _store.default.getState().user.id;\n          secretKey = _store.default.getState().keypair.secretKey;\n          api = new _brightId.NodeApi({\n            url: baseUrl,\n            id: id,\n            secretKey: secretKey\n          });\n          _context3.prev = 3;\n          _context3.next = 6;\n          return _regenerator.default.awrap(api.linkContextId(context, contextId));\n\n        case 6:\n          op = _context3.sent;\n          op.apiUrl = baseUrl;\n\n          _store.default.dispatch((0, _actions.addOperation)(op));\n\n          _store.default.dispatch((0, _actions.addLinkedContext)({\n            context: context,\n            contextId: contextId,\n            dateAdded: Date.now(),\n            state: 'pending'\n          }));\n\n          _context3.next = 15;\n          break;\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](3);\n\n          _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), \"\" + _context3.t0.message, [{\n            text: _i18next.default.t('common.alert.dismiss'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[3, 12]], Promise);\n};\n\nvar linkAppId = function _callee5(appId, appUserId) {\n  var silent,\n      _store$getState2,\n      apps,\n      id,\n      secretKey,\n      appInfo,\n      vel,\n      roundedTimestamp,\n      network,\n      onSuccess,\n      previousSigs,\n      sigs,\n      previousAppUserIds,\n      _iterator2,\n      _step2,\n      previousSig,\n      allVerificationsLinked,\n      missingVerifications,\n      linkedVerifications,\n      isPrimary,\n      missingSigs,\n      url,\n      api,\n      linkedTimestamp,\n      linkSuccess,\n      _iterator6,\n      _step6,\n      sig,\n      msg,\n      _args5 = arguments;\n\n  return _regenerator.default.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          silent = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : false;\n          _store$getState2 = _store.default.getState(), apps = _store$getState2.apps.apps, id = _store$getState2.user.id, secretKey = _store$getState2.keypair.secretKey;\n          appInfo = (0, _ramda.find)((0, _ramda.propEq)('id', appId))(apps);\n          vel = appInfo.verificationExpirationLength;\n          roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n          network = __DEV__ ? _types.BrightIdNetwork.TEST : _types.BrightIdNetwork.NODE;\n\n          onSuccess = function _callee4() {\n            var _api;\n\n            return _regenerator.default.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!appInfo.callbackUrl) {\n                      _context4.next = 4;\n                      break;\n                    }\n\n                    _api = (0, _apisauce.create)({\n                      baseURL: appInfo.callbackUrl\n                    });\n                    _context4.next = 4;\n                    return _regenerator.default.awrap(_api.post('/', {\n                      network: network,\n                      appUserId: appUserId\n                    }));\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          _context5.next = 9;\n          return _regenerator.default.awrap(_store.default.dispatch((0, _actions.updateBlindSig)(appInfo)));\n\n        case 9:\n          previousSigs = (0, _appsSlice.selectAllSigs)(_store.default.getState()).filter(function (sig) {\n            return sig.app === appId && sig.linked === true && sig.roundedTimestamp === roundedTimestamp;\n          });\n          sigs = (0, _appsSlice.selectAllSigs)(_store.default.getState()).filter(function (sig) {\n            return sig.app === appId && sig.linked === false && sig.roundedTimestamp === roundedTimestamp;\n          });\n\n          if (!previousSigs.length) {\n            _context5.next = 21;\n            break;\n          }\n\n          previousAppUserIds = new Set();\n\n          for (_iterator2 = _createForOfIteratorHelperLoose(previousSigs); !(_step2 = _iterator2()).done;) {\n            previousSig = _step2.value;\n\n            if (previousSig.appUserId !== appUserId) {\n              previousAppUserIds.add(previousSig.appUserId);\n            }\n          }\n\n          if (!previousAppUserIds.size) {\n            _context5.next = 17;\n            break;\n          }\n\n          if (!silent) {\n            _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), _i18next.default.t('apps.alert.text.blindSigAlreadyLinkedDifferent', 'You are trying to link with {{app}} using {{appUserId}}. You are already linked with {{app}} with different id {{previousAppUserIds}}. This may lead to problems using the app.', {\n              app: appId,\n              appUserId: appUserId,\n              previousAppUserIds: Array.from(previousAppUserIds).join(', ')\n            }));\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 17:\n          allVerificationsLinked = appInfo.verifications.every(function (verification) {\n            for (var _iterator3 = _createForOfIteratorHelperLoose(previousSigs), _step3; !(_step3 = _iterator3()).done;) {\n              var prevSig = _step3.value;\n              if (prevSig.verification === verification) return true;\n            }\n\n            return false;\n          });\n\n          if (!allVerificationsLinked) {\n            _context5.next = 21;\n            break;\n          }\n\n          if (!silent) {\n            _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), _i18next.default.t('apps.alert.text.blindSigAlreadyLinked', 'You are already linked with {{app}} with id {{appUserId}}', {\n              app: appId,\n              appUserId: appUserId\n            }));\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 21:\n          missingVerifications = appInfo.verifications.filter(function (verification) {\n            for (var _iterator4 = _createForOfIteratorHelperLoose(previousSigs), _step4; !(_step4 = _iterator4()).done;) {\n              var prevSig = _step4.value;\n\n              if (prevSig.verification === verification) {\n                console.log(\"Verification \" + verification + \" already linked with sig \" + prevSig.uid);\n                return false;\n              }\n            }\n\n            for (var _iterator5 = _createForOfIteratorHelperLoose(sigs), _step5; !(_step5 = _iterator5()).done;) {\n              var sig = _step5.value;\n\n              if (sig.verification === verification) {\n                console.log(\"Verification \" + verification + \" has sig available and ready to link\");\n                return false;\n              }\n            }\n\n            console.log(\"Verification \" + verification + \" is missing\");\n            return true;\n          });\n          linkedVerifications = previousSigs.map(function (sig) {\n            return sig.verification;\n          });\n\n          if (!(sigs.length === 0)) {\n            _context5.next = 26;\n            break;\n          }\n\n          if (!silent) {\n            _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), _i18next.default.t('apps.alert.text.missingBlindSig', 'No blind sig found for app {{appId}}. Verifications missing: {{missingVerifications}}. Verifications already linked: {{linkedVerifications}}', {\n              appId: appId,\n              missingVerifications: missingVerifications.join(),\n              linkedVerifications: linkedVerifications.join()\n            }), [{\n              text: _i18next.default.t('common.alert.dismiss'),\n              style: 'cancel',\n              onPress: function onPress() {\n                return null;\n              }\n            }]);\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 26:\n          isPrimary = (0, _actions.selectIsPrimaryDevice)(_store.default.getState());\n\n          if (isPrimary) {\n            _context5.next = 32;\n            break;\n          }\n\n          missingSigs = sigs.filter(function (sig) {\n            return sig.sig === undefined;\n          });\n\n          if (!missingSigs.length) {\n            _context5.next = 32;\n            break;\n          }\n\n          if (!silent) {\n            _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.notPrimary', 'Linking not possible'), _i18next.default.t('apps.alert.text.notPrimary', 'You are currently using a secondary device. Linking app \"{{app}}\" requires interaction with your primary device. Please sync with your primary device or perform the linking with your primary device.', {\n              app: \"\" + appId\n            }));\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 32:\n          url = appInfo.nodeUrl || \"http://\" + network + \".brightid.org\";\n          api = new _brightId.NodeApi({\n            url: url,\n            id: id,\n            secretKey: secretKey\n          });\n          linkedTimestamp = Date.now();\n          linkSuccess = false;\n          _iterator6 = _createForOfIteratorHelperLoose(sigs);\n\n        case 37:\n          if ((_step6 = _iterator6()).done) {\n            _context5.next = 53;\n            break;\n          }\n\n          sig = _step6.value;\n          _context5.prev = 39;\n          _context5.next = 42;\n          return _regenerator.default.awrap(api.linkAppId(sig, appUserId));\n\n        case 42:\n          _store.default.dispatch((0, _actions.updateSig)({\n            id: sig.uid,\n            changes: {\n              linked: true,\n              linkedTimestamp: linkedTimestamp,\n              appUserId: appUserId\n            }\n          }));\n\n          linkSuccess = true;\n          _context5.next = 51;\n          break;\n\n        case 46:\n          _context5.prev = 46;\n          _context5.t0 = _context5[\"catch\"](39);\n          console.log(_context5.t0);\n          msg = _context5.t0 instanceof Error ? _context5.t0.message : _context5.t0;\n\n          if (!silent) {\n            _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), _i18next.default.t('apps.alert.text.linkSigFailed', 'Error linking verification {{verification}} to app {{appId}}. Error message: {{msg}}', {\n              verification: sig.verification,\n              appId: appId,\n              msg: msg\n            }), [{\n              text: _i18next.default.t('common.alert.dismiss'),\n              style: 'cancel',\n              onPress: function onPress() {\n                return null;\n              }\n            }]);\n          }\n\n        case 51:\n          _context5.next = 37;\n          break;\n\n        case 53:\n          if (!linkSuccess) {\n            _context5.next = 57;\n            break;\n          }\n\n          if (!silent) {\n            _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkSuccess'), _i18next.default.t('apps.alert.text.linkSuccess', {\n              context: appInfo.name\n            }));\n          }\n\n          onSuccess();\n          return _context5.abrupt(\"return\", true);\n\n        case 57:\n          return _context5.abrupt(\"return\", false);\n\n        case 58:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[39, 46]], Promise);\n};\n\nexports.linkAppId = linkAppId;\n\nvar getSponsorship = function _callee6(appUserId, api) {\n  return _regenerator.default.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regenerator.default.awrap(api.getSponsorship(appUserId));\n\n        case 3:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n\n          if (!(_context6.t0 instanceof _brightidError.default && _context6.t0.errorNum === _brightidError.APP_ID_NOT_FOUND)) {\n            _context6.next = 12;\n            break;\n          }\n\n          console.log(\"sponsor request for \" + appUserId + \" not yet existing\");\n          _context6.next = 13;\n          break;\n\n        case 12:\n          throw _context6.t0;\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar sponsor = function _callee8(appId, appUserId, setSponsoringApp, api, onSuccess) {\n  var _store$getState3, apps, _store$getState3$user, isSponsored, isSponsoredv6, sp, appInfo, op, msg;\n\n  return _regenerator.default.async(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _store$getState3 = _store.default.getState(), apps = _store$getState3.apps.apps, _store$getState3$user = _store$getState3.user, isSponsored = _store$getState3$user.isSponsored, isSponsoredv6 = _store$getState3$user.isSponsoredv6;\n\n          if (!(isSponsored || isSponsoredv6)) {\n            _context8.next = 4;\n            break;\n          }\n\n          onSuccess();\n          return _context8.abrupt(\"return\");\n\n        case 4:\n          _context8.next = 6;\n          return _regenerator.default.awrap(getSponsorship(appUserId, api));\n\n        case 6:\n          sp = _context8.sent;\n\n          if (!(sp && sp.appHasAuthorized && sp.spendRequested)) {\n            _context8.next = 11;\n            break;\n          }\n\n          console.log('the appUserId is used by another user to get sponsored before.');\n\n          _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), _i18next.default.t('apps.alert.text.duplicateAppUserId', {\n            appUserId: appUserId\n          }));\n\n          return _context8.abrupt(\"return\");\n\n        case 11:\n          appInfo = (0, _ramda.find)((0, _ramda.propEq)('id', appId))(apps);\n          setSponsoringApp(appInfo);\n          console.log(\"Sending spend sponsorship op...\");\n          _context8.next = 16;\n          return _regenerator.default.awrap(api.spendSponsorship(appId, appUserId));\n\n        case 16:\n          op = _context8.sent;\n          _context8.prev = 17;\n          _context8.next = 20;\n          return _regenerator.default.awrap(new Promise(function (resolve, reject) {\n            var startTime = Date.now();\n            var intervalId = setInterval(function _callee7() {\n              var timeElapsed, _sp;\n\n              return _regenerator.default.async(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      timeElapsed = Date.now() - startTime;\n\n                      if (!(timeElapsed > sponsorTimeout)) {\n                        _context7.next = 6;\n                        break;\n                      }\n\n                      clearInterval(intervalId);\n                      reject(new Error(\"Timeout waiting for sponsorship\"));\n                      _context7.next = 11;\n                      break;\n\n                    case 6:\n                      _context7.next = 8;\n                      return _regenerator.default.awrap(getSponsorship(appUserId, api));\n\n                    case 8:\n                      _sp = _context7.sent;\n                      console.log(\"Got sponsorRes: \" + _sp);\n\n                      if (_sp && _sp.appHasAuthorized && _sp.spendRequested) {\n                        console.log(\"Sponsorship complete!\");\n                        clearInterval(intervalId);\n                        resolve();\n                      }\n\n                    case 11:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, sponsorPollInterval);\n          }));\n\n        case 20:\n          _store.default.dispatch((0, _actions.setIsSponsoredv6)(true));\n\n          setSponsoringApp(undefined);\n          onSuccess();\n          _context8.next = 30;\n          break;\n\n        case 25:\n          _context8.prev = 25;\n          _context8.t0 = _context8[\"catch\"](17);\n          msg = _context8.t0 instanceof Error ? _context8.t0.message : _context8.t0;\n          console.log(\"Error getting sponsored: \" + msg);\n\n          _reactNative.Alert.alert(_i18next.default.t('apps.alert.title.linkingFailed'), \"\" + msg, [{\n            text: _i18next.default.t('common.alert.dismiss'),\n            style: 'cancel',\n            onPress: function onPress() {\n              return null;\n            }\n          }]);\n\n        case 30:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[17, 25]], Promise);\n};","map":{"version":3,"names":["sponsorTimeout","sponsorPollInterval","getSignedTimestamp","app","sigs","selectAllSigs","store","getState","vel","verificationExpirationLength","roundedTimestamp","Math","floor","Date","now","verification","sigInfo","find","sig","id","signedTimestamp","verifications","handleV5App","params","setSponsoringApp","api","apps","baseUrl","decodeURIComponent","appInfo","propEq","context","soulbound","appId","appUserId","contextId","handler","sponsor","linkContextId","Alert","alert","i18next","t","text","onPress","style","handleV6App","linkAppId","user","secretKey","keypair","NodeApi","url","op","apiUrl","dispatch","addOperation","addLinkedContext","dateAdded","state","message","silent","network","__DEV__","BrightIdNetwork","TEST","NODE","onSuccess","callbackUrl","create","baseURL","post","updateBlindSig","previousSigs","filter","linked","length","previousAppUserIds","Set","previousSig","add","size","Array","from","join","allVerificationsLinked","every","prevSig","missingVerifications","console","log","uid","linkedVerifications","map","isPrimary","selectIsPrimaryDevice","missingSigs","undefined","nodeUrl","linkedTimestamp","linkSuccess","updateSig","changes","msg","Error","name","getSponsorship","BrightidError","errorNum","APP_ID_NOT_FOUND","isSponsored","isSponsoredv6","sp","appHasAuthorized","spendRequested","spendSponsorship","Promise","resolve","reject","startTime","intervalId","setInterval","timeElapsed","clearInterval","setIsSponsoredv6"],"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/src/components/Apps/model.ts"],"sourcesContent":["import { Alert } from 'react-native';\nimport { find, propEq } from 'ramda';\nimport i18next from 'i18next';\nimport { create } from 'apisauce';\nimport { Dispatch, SetStateAction } from 'react';\nimport {\n  addLinkedContext,\n  addOperation,\n  selectIsPrimaryDevice,\n  setIsSponsoredv6,\n  updateBlindSig,\n  updateSig,\n} from '@/actions';\nimport store from '@/store';\nimport { NodeApi } from '@/api/brightId';\nimport { selectAllSigs } from '@/reducer/appsSlice';\nimport BrightidError, { APP_ID_NOT_FOUND } from '@/api/brightidError';\nimport { BrightIdNetwork, Params } from '@/components/Apps/types.d';\n\n// max time to wait for app to respond to sponsoring request\nconst sponsorTimeout = 1000 * 60; // 60 seconds\n// Interval to poll for sponsor op\nconst sponsorPollInterval = 3000; // 5 seconds\n\nexport const getSignedTimestamp = (app: AppInfo) => {\n  const sigs = selectAllSigs(store.getState());\n  const vel = app.verificationExpirationLength;\n  const roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n  for (const verification of app.verifications) {\n    const sigInfo = sigs.find(\n      (sig) =>\n        sig.app === app.id &&\n        sig.verification === verification &&\n        sig.roundedTimestamp === roundedTimestamp,\n    );\n    if (sigInfo && sigInfo.sig) {\n      return sigInfo.signedTimestamp;\n    }\n  }\n  return null;\n};\n\nexport const handleV5App = async (\n  params: Params,\n  setSponsoringApp: Dispatch<SetStateAction<AppInfo>>,\n  api: NodeApi,\n) => {\n  const {\n    apps: { apps },\n  } = store.getState();\n  let handler: () => Promise<void>;\n  params.baseUrl = decodeURIComponent(params.baseUrl);\n  const appInfo = find(propEq('id', params.context))(apps) as AppInfo;\n  if (appInfo && appInfo.soulbound) {\n    // soulbound apps link after sponsorship just like v6 apps\n    const { baseUrl, context: appId, contextId: appUserId } = params;\n    handler = () =>\n      sponsor(appId, appUserId, setSponsoringApp, api, () =>\n        linkContextId(baseUrl, appId, appUserId),\n      );\n  } else {\n    const { baseUrl, context, contextId } = params;\n    handler = () => linkContextId(baseUrl, context, contextId);\n  }\n  Alert.alert(\n    i18next.t('apps.alert.title.linkApp'),\n    i18next.t('apps.alert.text.linkApp', { context: `${params.context}` }),\n    [\n      {\n        text: i18next.t('common.alert.yes'),\n        onPress: handler,\n      },\n      {\n        text: i18next.t('common.alert.no'),\n        style: 'cancel',\n        onPress: () => null,\n      },\n    ],\n  );\n};\n\nexport const handleV6App = async (\n  params: Params,\n  setSponsoringApp,\n  api: NodeApi,\n) => {\n  const { context: appId, contextId: appUserId } = params;\n  Alert.alert(\n    i18next.t('apps.alert.title.linkApp'),\n    i18next.t('apps.alert.text.linkApp', { context: `${appId}` }),\n    [\n      {\n        text: i18next.t('common.alert.yes'),\n        onPress: () => {\n          sponsor(appId, appUserId, setSponsoringApp, api, () =>\n            linkAppId(appId, appUserId),\n          );\n        },\n      },\n      {\n        text: i18next.t('common.alert.no'),\n        style: 'cancel',\n        onPress: () => null,\n      },\n    ],\n  );\n};\n\nconst linkContextId = async (\n  baseUrl: string,\n  context: string,\n  contextId: string,\n) => {\n  // Create temporary NodeAPI object, since only the node at the specified baseUrl knows about this context\n  const { id } = store.getState().user;\n  const { secretKey } = store.getState().keypair;\n  const api = new NodeApi({ url: baseUrl, id, secretKey });\n  try {\n    const op = await api.linkContextId(context, contextId);\n    op.apiUrl = baseUrl;\n    store.dispatch(addOperation(op));\n    store.dispatch(\n      addLinkedContext({\n        context,\n        contextId,\n        dateAdded: Date.now(),\n        state: 'pending',\n      }),\n    );\n  } catch (e) {\n    Alert.alert(\n      i18next.t('apps.alert.title.linkingFailed'),\n      `${(e as Error).message}`,\n      [\n        {\n          text: i18next.t('common.alert.dismiss'),\n          style: 'cancel',\n          onPress: () => null,\n        },\n      ],\n    );\n  }\n};\n\nexport const linkAppId = async (\n  appId: string,\n  appUserId: string,\n  silent = false,\n) => {\n  const {\n    apps: { apps },\n    user: { id },\n    keypair: { secretKey },\n  } = store.getState();\n  const appInfo = find(propEq('id', appId))(apps) as AppInfo;\n  const vel = appInfo.verificationExpirationLength;\n  const roundedTimestamp = vel ? Math.floor(Date.now() / vel) * vel : 0;\n  const network = __DEV__ ? BrightIdNetwork.TEST : BrightIdNetwork.NODE;\n\n  const onSuccess = async () => {\n    if (appInfo.callbackUrl) {\n      const api = create({\n        baseURL: appInfo.callbackUrl,\n      });\n      await api.post('/', {\n        network,\n        appUserId,\n      });\n    }\n  };\n\n  // generate blind sig for apps with no verification expiration at linking time\n  // and also ensure blind sig is not missed because of delay in generation for all apps\n  await store.dispatch(updateBlindSig(appInfo));\n  // existing linked verifications\n  const previousSigs = selectAllSigs(store.getState()).filter(\n    (sig) =>\n      sig.app === appId &&\n      sig.linked === true &&\n      sig.roundedTimestamp === roundedTimestamp,\n  );\n  // not yet linked verifications\n  const sigs = selectAllSigs(store.getState()).filter(\n    (sig) =>\n      sig.app === appId &&\n      sig.linked === false &&\n      sig.roundedTimestamp === roundedTimestamp,\n  );\n\n  // make sure that always the same appUserId is used.\n  if (previousSigs.length) {\n    const previousAppUserIds: Set<string> = new Set();\n    for (const previousSig of previousSigs) {\n      if (previousSig.appUserId !== appUserId) {\n        previousAppUserIds.add(previousSig.appUserId);\n      }\n    }\n    if (previousAppUserIds.size) {\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.linkingFailed'),\n          i18next.t(\n            'apps.alert.text.blindSigAlreadyLinkedDifferent',\n            'You are trying to link with {{app}} using {{appUserId}}. You are already linked with {{app}} with different id {{previousAppUserIds}}. This may lead to problems using the app.',\n            {\n              app: appId,\n              appUserId,\n              previousAppUserIds: Array.from(previousAppUserIds).join(', '),\n            },\n          ),\n        );\n      }\n      return false; // don't link app when userId is different\n    }\n\n    // check if all app verifications are already linked\n    const allVerificationsLinked = appInfo.verifications.every(\n      (verification) => {\n        for (const prevSig of previousSigs) {\n          if (prevSig.verification === verification) return true;\n        }\n        return false;\n      },\n    );\n    if (allVerificationsLinked) {\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.linkingFailed'),\n          i18next.t(\n            'apps.alert.text.blindSigAlreadyLinked',\n            'You are already linked with {{app}} with id {{appUserId}}',\n            { app: appId, appUserId },\n          ),\n        );\n      }\n      return false;\n    }\n  }\n\n  // get list of all missing verifications\n  const missingVerifications = appInfo.verifications.filter((verification) => {\n    // exclude verification if it is already linked\n    for (const prevSig of previousSigs) {\n      if (prevSig.verification === verification) {\n        console.log(\n          `Verification ${verification} already linked with sig ${prevSig.uid}`,\n        );\n        return false;\n      }\n    }\n    // exclude verification if not yet linked, but sig is available\n    for (const sig of sigs) {\n      if (sig.verification === verification) {\n        console.log(\n          `Verification ${verification} has sig available and ready to link`,\n        );\n        return false;\n      }\n    }\n    console.log(`Verification ${verification} is missing`);\n    return true;\n  });\n\n  // get list of all already linked verifications\n  const linkedVerifications = previousSigs.map((sig) => sig.verification);\n\n  if (sigs.length === 0) {\n    if (!silent) {\n      Alert.alert(\n        i18next.t('apps.alert.title.linkingFailed'),\n        i18next.t(\n          'apps.alert.text.missingBlindSig',\n          'No blind sig found for app {{appId}}. Verifications missing: {{missingVerifications}}. Verifications already linked: {{linkedVerifications}}',\n          {\n            appId,\n            missingVerifications: missingVerifications.join(),\n            linkedVerifications: linkedVerifications.join(),\n          },\n        ),\n        [\n          {\n            text: i18next.t('common.alert.dismiss'),\n            style: 'cancel',\n            onPress: () => null,\n          },\n        ],\n      );\n    }\n    return false;\n  }\n\n  // check if blind sigs are existing if this is a secondary device\n  const isPrimary = selectIsPrimaryDevice(store.getState());\n  if (!isPrimary) {\n    const missingSigs = sigs.filter((sig) => sig.sig === undefined);\n    if (missingSigs.length) {\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.notPrimary', 'Linking not possible'),\n          i18next.t(\n            'apps.alert.text.notPrimary',\n            'You are currently using a secondary device. Linking app \"{{app}}\" requires interaction with your primary device. Please sync with your primary device or perform the linking with your primary device.',\n            { app: `${appId}` },\n          ),\n        );\n      }\n      return false;\n    }\n  }\n\n  // Create temporary NodeAPI object, since the node at the specified nodeUrl will\n  // be queried for the verification\n  const url = appInfo.nodeUrl || `http://${network}.brightid.org`;\n  const api = new NodeApi({ url, id, secretKey });\n  const linkedTimestamp = Date.now();\n  let linkSuccess = false;\n  for (const sig of sigs) {\n    try {\n      await api.linkAppId(sig, appUserId);\n      // mark sig as linked with app\n      store.dispatch(\n        updateSig({\n          id: sig.uid,\n          changes: { linked: true, linkedTimestamp, appUserId },\n        }),\n      );\n      linkSuccess = true;\n    } catch (err) {\n      console.log(err);\n      const msg = err instanceof Error ? err.message : err;\n      if (!silent) {\n        Alert.alert(\n          i18next.t('apps.alert.title.linkingFailed'),\n          i18next.t(\n            'apps.alert.text.linkSigFailed',\n            'Error linking verification {{verification}} to app {{appId}}. Error message: {{msg}}',\n            { verification: sig.verification, appId, msg },\n          ),\n          [\n            {\n              text: i18next.t('common.alert.dismiss'),\n              style: 'cancel',\n              onPress: () => null,\n            },\n          ],\n        );\n      }\n    }\n  }\n\n  if (linkSuccess) {\n    if (!silent) {\n      Alert.alert(\n        i18next.t('apps.alert.title.linkSuccess'),\n        i18next.t('apps.alert.text.linkSuccess', {\n          context: appInfo.name,\n        }),\n      );\n    }\n    onSuccess();\n    return true;\n  }\n  return false;\n};\n\nconst getSponsorship = async (appUserId: string, api: NodeApi) => {\n  try {\n    return await api.getSponsorship(appUserId);\n  } catch (e) {\n    if (e instanceof BrightidError && e.errorNum === APP_ID_NOT_FOUND) {\n      // node has not yet registered the sponsor request -> Ignore\n      console.log(`sponsor request for ${appUserId} not yet existing`);\n    } else {\n      throw e;\n    }\n  }\n};\n\nconst sponsor = async (\n  appId: string,\n  appUserId: string,\n  setSponsoringApp,\n  api: NodeApi,\n  onSuccess: () => any,\n) => {\n  const {\n    apps: { apps },\n    user: { isSponsored, isSponsoredv6 },\n  } = store.getState();\n  if (isSponsored || isSponsoredv6) {\n    onSuccess();\n    return;\n  }\n  /*\n  1. get appId from deep link\n  2. already Sponsored? yes: go to step 6. no: go to step 3.\n  3. ensure no one else is sponsored using this appId before\n  4. optimistically send Spend Sponsorship operation.\n  5. wait a bit for node to process sponsor operation from app.\n  6. check GET /sponsorships/{appId} to see if it really got sponsored.\n  7. proceed with posting the verification to the node under the appId.\n   */\n  const sp = await getSponsorship(appUserId, api);\n  if (sp && sp.appHasAuthorized && sp.spendRequested) {\n    console.log(\n      'the appUserId is used by another user to get sponsored before.',\n    );\n    Alert.alert(\n      i18next.t('apps.alert.title.linkingFailed'),\n      i18next.t('apps.alert.text.duplicateAppUserId', { appUserId }),\n    );\n    return;\n  }\n  const appInfo = find(propEq('id', appId))(apps) as AppInfo;\n  setSponsoringApp(appInfo);\n  console.log(`Sending spend sponsorship op...`);\n  const op = await api.spendSponsorship(appId, appUserId);\n\n  // TODO wait for op to be applied before starting polling sponsorship status?\n\n  // wait for app to complete the sponsorship\n  try {\n    await new Promise<void>((resolve, reject) => {\n      const startTime = Date.now();\n      const intervalId = setInterval(async () => {\n        const timeElapsed = Date.now() - startTime;\n        if (timeElapsed > sponsorTimeout) {\n          clearInterval(intervalId);\n          reject(new Error(`Timeout waiting for sponsorship`));\n        } else {\n          const sp = await getSponsorship(appUserId, api);\n          console.log(`Got sponsorRes: ${sp}`);\n          if (sp && sp.appHasAuthorized && sp.spendRequested) {\n            console.log(`Sponsorship complete!`);\n            clearInterval(intervalId);\n            resolve();\n          }\n        }\n      }, sponsorPollInterval);\n    });\n    // sponsoring complete\n    store.dispatch(setIsSponsoredv6(true));\n    setSponsoringApp(undefined);\n    onSuccess();\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : err;\n    console.log(`Error getting sponsored: ${msg}`);\n    Alert.alert(i18next.t('apps.alert.title.linkingFailed'), `${msg}`, [\n      {\n        text: i18next.t('common.alert.dismiss'),\n        style: 'cancel',\n        onPress: () => null,\n      },\n    ]);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}