{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\", \"onValueChange\", \"selectedValue\", \"itemStyle\", \"mode\", \"prompt\", \"dropdownIconColor\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport createElement from \"react-native-web/dist/exports/createElement\";\nimport unstable_createElement from \"react-native-web/dist/exports/createElement\";\nimport PickerItem from \"./PickerItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar myCreateElement = createElement || unstable_createElement;\nvar Select = forwardRef(function (props, forwardedRef) {\n  return myCreateElement('select', props);\n});\nvar Picker = forwardRef(function (props, forwardedRef) {\n  var enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      dropdownIconColor = props.dropdownIconColor,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var hostRef = useRef(null);\n  var handleChange = React.useCallback(function (e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }, [onValueChange]);\n  return _jsx(Select, _objectSpread({\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    ref: hostRef,\n    value: selectedValue\n  }, other));\n});\nPicker.Item = PickerItem;\nexport default Picker;","map":{"version":3,"sources":["/home/ali/Desktop/brightid/BrightID/BrightID/node_modules/@react-native-picker/picker/js/Picker.web.js"],"names":["myCreateElement","createElement","Select","forwardRef","Picker","enabled","onValueChange","selectedValue","itemStyle","mode","prompt","dropdownIconColor","other","props","hostRef","useRef","handleChange","React","selectedIndex","value","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,EAAA,MAAA,QAAA,OAAA;;;AAMA,OAAA,UAAA;;AAmBA,IAAMA,eAAe,GAAGC,aAAa,IAArC,sBAAA;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,YAAA,EAAA;EAAA,OACxBH,eAAe,CAAA,QAAA,EADS,KACT,CADS;AAA1B,CAAyB,CAAzB;AAIA,IAAMI,MAAmD,GAAGD,UAAU,CAGpE,UAAA,KAAA,EAAA,YAAA,EAAyB;EACzB,IACEE,OADF,GASIQ,KATJ,CAAA,OAAA;EAAA,IAEEP,aAFF,GASIO,KATJ,CAAA,aAAA;EAAA,IAGEN,aAHF,GASIM,KATJ,CAAA,aAAA;EAAA,IAIEL,SAJF,GASIK,KATJ,CAAA,SAAA;EAAA,IAKEJ,IALF,GASII,KATJ,CAAA,IAAA;EAAA,IAMEH,MANF,GASIG,KATJ,CAAA,MAAA;EAAA,IAOEF,iBAPF,GASIE,KATJ,CAAA,iBAAA;EAAA,IAQKD,KARL,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;EAWA,IAAME,OAAO,GAAGC,MAAM,CAAtB,IAAsB,CAAtB;EAEA,IAAMC,YAAY,GAAGC,KAAK,CAALA,WAAAA,CACnB,UAAA,CAAA,EAAe;IACb,IAAA,SAAA,GAA+BG,CAAC,CAAhC,MAAA;IAAA,IAAOF,aAAP,GAAA,SAAA,CAAA,aAAA;IAAA,IAAsBC,KAAtB,GAAA,SAAA,CAAA,KAAA;;IACA,IAAA,aAAA,EAAmB;MACjBb,aAAa,CAAA,KAAA,EAAbA,aAAa,CAAbA;IAEH;EANkBW,CAAAA,EAOnB,CAPF,aAOE,CAPmBA,CAArB;EAUA,OAEE,IAAA,CAAA,MAAA,EAAA,aAAA,CAAA;IACE,QAAQ,EAAEZ,OAAO,KAAPA,KAAAA,GAAAA,IAAAA,GADZ,SAAA;IAEE,QAAQ,EAFV,YAAA;IAGE,GAAG,EAHL,OAAA;IAIE,KAAK,EAJP;EAAA,CAAA,EAFF,KAEE,CAAA,CAFF;AA3BF,CAAsE,CAAtE;AAwCAD,MAAM,CAANA,IAAAA,GAAAA,UAAAA;AAEA,eAAA,MAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * @flow\n *\n */\n\nimport * as React from 'react';\nimport {forwardRef, useRef} from 'react';\nimport type {ViewProps} from 'react-native-web/src/exports/View/types';\nimport type {GenericStyleProp} from 'react-native-web/src/types';\nimport type {TextStyle} from 'react-native-web/src/exports/Text/types';\n// $FlowFixMe fallback for older react-native-web versions\nimport {createElement, unstable_createElement} from 'react-native';\nimport PickerItem from './PickerItem';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: typeof PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  /**\n   * dropdownIconColor\n   * Not used for Web.\n   */\n  dropdownIconColor?: string,\n  /* compat */\n  itemStyle?: GenericStyleProp<TextStyle>,\n  mode?: string,\n  prompt?: string,\n};\n\nconst myCreateElement = createElement || unstable_createElement;\n\nconst Select = forwardRef((props: any, forwardedRef) =>\n  myCreateElement('select', props),\n);\n\nconst Picker: React$AbstractComponent<PickerProps, empty> = forwardRef<\n  PickerProps,\n  *,\n>((props, forwardedRef) => {\n  const {\n    enabled,\n    onValueChange,\n    selectedValue,\n    itemStyle,\n    mode,\n    prompt,\n    dropdownIconColor,\n    ...other\n  } = props;\n\n  const hostRef = useRef(null);\n\n  const handleChange = React.useCallback<any>(\n    (e: Object) => {\n      const {selectedIndex, value} = e.target;\n      if (onValueChange) {\n        onValueChange(value, selectedIndex);\n      }\n    },\n    [onValueChange],\n  );\n\n  return (\n    // $FlowFixMe\n    <Select\n      disabled={enabled === false ? true : undefined}\n      onChange={handleChange}\n      ref={hostRef}\n      value={selectedValue}\n      {...other}\n    />\n  );\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"module"}